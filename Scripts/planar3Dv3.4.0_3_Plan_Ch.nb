(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    451849,       8376]
NotebookOptionsPosition[    444645,       8225]
NotebookOutlinePosition[    444989,       8240]
CellTagsIndexPosition[    444946,       8237]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Planar3D v3.4.0", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660668673644*^9, 3.7476606793673363`*^9}, {
   3.748934775835075*^9, 3.748934775947117*^9}, 3.748969785632721*^9, {
   3.7503603825095043`*^9, 3.750360384337364*^9}, 3.75103985134317*^9, 
   3.756183760446571*^9, 3.757328984108018*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"5040d5b2-880b-45cc-a231-\
0e6954975e21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "folder", ",", "parameters", ",", "size", ",", "middle", ",", "cellLength",
     ",", "showAllBarriers", ",", "textPadding", ",", "ticks", ",", 
    "barriers", ",", "concentration", ",", "fracture", ",", "opening", ",", 
    "pressure", ",", "openingFilenames", ",", "openingAtCheckStep", ",", 
    "numberOfCheckSteps", ",", "measuredTimes", ",", "totalTime"}], "]"}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.750653482361023*^9, 3.750653486415388*^9}, {
  3.750653571387208*^9, 3.750653605937574*^9}, {3.750653638308257*^9, 
  3.750653669910097*^9}, {3.750660681648044*^9, 3.750660692605433*^9}, {
  3.7579120167949066`*^9, 3.7579120214810743`*^9}, {3.757912589794462*^9, 
  3.757912590809856*^9}, {3.7579216351176195`*^9, 
  3.757921637429574*^9}},ExpressionUUID->"9e617440-68c8-4c7d-87fe-\
cd9d2efca97f"],

Cell["\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0441\
\:0435\:0442\:043e\:0447\:043d\:044b\:0445 \:0433\:0440\:0430\:0444\:0438\
\:043a\:043e\:0432 \:0432 2D", "Subtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660650798229*^9, 3.7476606629055977`*^9}, 
   3.748969785633028*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"e25394e1-9c35-4f6a-8495-\
86623345b352"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:043f\:0443\
\:0442\:044c \:0434\:043e \:043f\:0430\:043f\:043a\:0438 \:0441 \:0432\:0445\
\:043e\:0434\:043d\:044b\:043c\:0438 \:0434\:0430\:043d\:043d\:044b\:043c\
\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.747660720326604*^9}, 
   3.747661032741356*^9, 3.7489697348519917`*^9, 3.748969785633336*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"0fcc0597-25c9-4843-be60-\
e01aeb713b6b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "folder", "=", 
   "\"\<C:\\\\Users\\\\Nikita\\\\Desktop\\\\Planar3D-master \
(2)\\\\Planar3D-master\\\\build\\\\Results\\\\\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747656893552808*^9, 3.747656906633217*^9}, 
   3.747661032741767*^9, {3.747664018501865*^9, 3.747664019128312*^9}, {
   3.747664057817404*^9, 3.7476641073677397`*^9}, 3.747665488148735*^9, 
   3.748933628112026*^9, {3.748933678444969*^9, 3.748933682795598*^9}, {
   3.748967116456512*^9, 3.748967124377589*^9}, {3.748968117085099*^9, 
   3.748968118090468*^9}, 3.748968199603396*^9, {3.748969393672985*^9, 
   3.74896939903098*^9}, 3.74896973485242*^9, 3.748969785633741*^9, {
   3.749002313128289*^9, 3.749002345037242*^9}, {3.749002429317358*^9, 
   3.7490025155955677`*^9}, {3.7490032762745247`*^9, 
   3.7490033047957563`*^9}, {3.749195504804994*^9, 3.749195505707028*^9}, {
   3.7497457636414347`*^9, 3.749745764379126*^9}, {3.7524855357661276`*^9, 
   3.7524855374845*^9}, {3.7546389669086523`*^9, 3.754638975297113*^9}, {
   3.754651973510044*^9, 3.7546519738226357`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}, {3.7607801304205627`*^9, 
   3.760780131826845*^9}},ExpressionUUID->"100d6a29-6bda-47fc-8ee9-\
d0d4d8524fab"],

Cell["\:0421\:0447\:0438\:0442\:044b\:0432\:0430\:0435\:043c \:043f\:0430\
\:0440\:0430\:043c\:0435\:0442\:0440\:044b \:0440\:0430\:0441\:0447\:0451\
\:0442\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, 3.7489697348525867`*^9, 3.7489697856339073`*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"a26e5cb8-621f-473e-9817-\
1af4aa08599c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"parameters", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<parameters.json\>\""}], ",", 
      "\"\<RawJSON\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"height", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"length", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<length\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"middleH", " ", "=", " ", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "height"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"middleL", "=", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "length"}], "]"}], "+", "1"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"size", "=", 
   RowBox[{
    RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"middle", "=", 
   RowBox[{
    RowBox[{"Floor", "[", 
     RowBox[{"0.5", "*", "size"}], "]"}], "+", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cellLength", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<cell\>\"", 
     "]"}], "[", "\"\<length\>\"", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747655287287675*^9, {3.747656648179721*^9, 3.74765664850766*^9}, {
   3.747656733330495*^9, 3.747656752436288*^9}, {3.747656912578596*^9, 
   3.7476569586085052`*^9}, {3.7476569957355824`*^9, 3.747657000350354*^9}, {
   3.747657434800095*^9, 3.747657435013611*^9}, {3.747657489717287*^9, 
   3.747657567951728*^9}, {3.7476576237958593`*^9, 3.747657744332275*^9}, 
   3.7476579502511377`*^9, 3.74765802117413*^9, 3.747659478052923*^9, 
   3.747659922966485*^9, {3.747659991785955*^9, 3.747660041283514*^9}, {
   3.7476600785009727`*^9, 3.747660104489366*^9}, {3.747660507830991*^9, 
   3.747660518100801*^9}, {3.747660570048667*^9, 3.747660584277534*^9}, {
   3.7476606203847427`*^9, 3.747660620713311*^9}, 3.747661032742475*^9, {
   3.7489336188607807`*^9, 3.748933619107676*^9}, {3.7489338681042213`*^9, 
   3.748933945735607*^9}, {3.7489340816532583`*^9, 3.7489340850716543`*^9}, {
   3.748934703289136*^9, 3.748934761141674*^9}, 3.748969734852895*^9, 
   3.74896978563422*^9, 3.7506535748684483`*^9, {3.7524857559405956`*^9, 
   3.752485761689149*^9}, {3.754653259405737*^9, 3.7546532596400566`*^9}, {
   3.756111089452158*^9, 3.75611109843443*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}, {3.75844143024053*^9, 3.758441430842722*^9}, {
   3.760851372604673*^9, 
   3.760851372748702*^9}},ExpressionUUID->"10ceb89e-20df-48f1-a321-\
ff7ea6718edd"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:043f\:0430\:0440\:0430\:043c\
\:0435\:0442\:0440\:044b \:043e\:0442\:043e\:0431\:0440\:0430\:0436\:0435\
\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, {3.748934769874744*^9, 3.7489347748029413`*^9}, 
   3.74896973485305*^9, 3.7489697856343813`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"d7ba3c85-2ecc-4633-b74f-\
86fb15d632b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\:0415\:0441\:043b\:0438", " ", "True"}], ",", " ", 
    RowBox[{
    "\:043d\:0430", " ", "\:0433\:0440\:0430\:0444\:0438\:043a\:0435", " ", 
     "\:0431\:0443\:0434\:0443\:0442", " ", 
     "\:0432\:044b\:0432\:043e\:0434\:0438\:0442\:044c\:0441\:044f", " ", 
     "\:0433\:0440\:0430\:043d\:0438\:0446\:044b", " ", 
     "\:0441\:043b\:043e\:0451\:0432"}], ",", 
    RowBox[{
    "\:0440\:0430\:0441\:043f\:043e\:043b\:043e\:0436\:0435\:043d\:043d\:044b\
\:0445", " ", "\:0437\:0430", " ", 
     "\:043f\:0440\:0435\:0434\:0435\:043b\:0430\:043c\:0438", " ", 
     "\:0440\:0430\:0441\:0447\:0451\:0442\:043d\:043e\:0439", " ", 
     "\:043e\:0431\:043b\:0430\:0441\:0442\:0438"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"showAllBarriers", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"textPadding", "=", "1"}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748936129152269*^9, 3.748936131996414*^9}, {
   3.748936437491951*^9, 3.748936446079194*^9}, {3.748936835688491*^9, 
   3.748936836198721*^9}, {3.7489370016931553`*^9, 3.748937002355495*^9}, 
   3.7489687346210823`*^9, 3.7489697856346483`*^9, {3.748970588914028*^9, 
   3.748970589224121*^9}, {3.750355327100403*^9, 3.750355327233083*^9}, {
   3.75035545494031*^9, 3.750355455090455*^9}, 3.750656912157938*^9, 
   3.7516154744310207`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"2132100d-0f03-4edf-8750-\
0a4cfeec3cf8"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:0440\:0438\
\:0441\:043a\:0438 \:043f\:043e \:043e\:0441\:044f\:043c \:0433\:0440\:0430\
\:0444\:0438\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, 
   3.747661032742928*^9, 3.748969734853208*^9, 3.748969785634802*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"a1f5bcd3-ad1c-4608-8d2e-\
184dd5d3b14f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ticksSetVertical", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"height", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"height", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ticksSetHorizontal", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"length", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"length", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ticks", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ticksSetHorizontal", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ticksSetVertical", ",", "None"}], "}"}]}], "}"}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"createTicks", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cellLength", ",", "middle", ",", "size"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ticksSet", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"-", "cellLength"}], "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"size", "/", "4"}], "]"}]}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"-", "cellLength"}], "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"size", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"3", 
                RowBox[{"size", "/", "4"}]}], "]"}]}], ",", 
             RowBox[{"N", "[", 
              RowBox[{"cellLength", "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"size", ",", 
             RowBox[{"N", "[", 
              RowBox[{"cellLength", "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ticksSet", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ticksSet", ",", "None"}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ticks", "=", 
     RowBox[{"createTicks", "[", 
      RowBox[{"cellLength", ",", "middle", ",", "size"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.74766059129346*^9, 3.74766061456117*^9}, 
   3.747661032743846*^9, {3.748933853433467*^9, 3.748933890369454*^9}, {
   3.7489339519881077`*^9, 3.748934022178279*^9}, {3.748934089035924*^9, 
   3.748934096639612*^9}, 3.74896973485367*^9, 3.748969785635269*^9, {
   3.757672639256096*^9, 3.7576726982404222`*^9}, {3.7576728052825923`*^9, 
   3.757672817092346*^9}, {3.757672891902179*^9, 3.7576729030401917`*^9}, {
   3.7576729381237707`*^9, 3.757672945169193*^9}, {3.757921512969803*^9, 
   3.757921520186861*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"064c7d03-91ae-4e2d-a5a1-\
1e6c1a61dace"],

Cell["\:041f\:043e \:0440\:0438\:0441\:043a\:0430\:043c \:043d\:0430\:043c\
\:0435\:0447\:0430\:0435\:043c \:043b\:0438\:043d\:0438\:0438 \:0441\:0435\
\:0442\:043a\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660845455511*^9}, 3.747661032744216*^9, 
   3.748969734853849*^9, 3.7489697856354237`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"ba1976cb-53a4-4ebe-af03-\
95fcd4651050"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"createLines", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "ticks", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lines", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lines", ",", 
           RowBox[{"{", "}"}]}], "]"}], ";", 
         RowBox[{"leftTicks", "=", 
          RowBox[{
           RowBox[{"ticks", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "leftTicks", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"lines", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"leftTicks", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lines", ",", 
           RowBox[{"{", "}"}]}], "]"}], ";", 
         RowBox[{"rightTicks", "=", 
          RowBox[{
           RowBox[{"ticks", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "rightTicks", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"lines", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"rightTicks", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "lines"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lines", "=", 
   RowBox[{"createLines", "[", "ticks", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747661032744575*^9, 3.748969734854225*^9, 3.7489697856357327`*^9, {
   3.757672495233093*^9, 3.7576726309613447`*^9}, {3.757672685223899*^9, 
   3.7576726858954177`*^9}, {3.7576727860678577`*^9, 
   3.7576728004399943`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"98de9a1d-6124-4724-8226-\
daf84a86a835"],

Cell["\:0421\:043e\:0437\:0434\:0430\:0451\:043c \:043c\:0430\:0441\:0441\
\:0438\:0432 \:043b\:0438\:043d\:0438\:0439\[Dash]\:0433\:0440\:0430\:043d\
\:0438\:0446 \:0441\:043b\:043e\:0451\:0432 \:043f\:043b\:0430\:0441\:0442\
\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660912488222*^9}, 3.747661032744845*^9, 
   3.7489697348543863`*^9, 3.748969785635898*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"36014964-da04-4894-82b2-\
12a8ee0727f9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lineBarriers", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nominalStress", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"0", ">", 
      RowBox[{
       RowBox[{
        RowBox[{"layers", "[", 
         RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", "]"}],
        "*", 
       RowBox[{
        RowBox[{"layers", "[", 
         RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y2\>\"", 
        "]"}]}]}], ",", 
     RowBox[{"nominalStress", "=", 
      RowBox[{
       RowBox[{"layers", "[", 
        RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<stress\>\"", 
       "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"barrierCoordinate", "=", 
     RowBox[{"middle", "+", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"layers", "[", 
           RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
          "]"}], "/", "cellLength"}], "-", "0.5"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"showAllBarriers", "||", 
       RowBox[{
        RowBox[{"1", "\[LessEqual]", "barrierCoordinate"}], " ", "&&", " ", 
        RowBox[{"size", "\[GreaterEqual]", "barrierCoordinate"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "barrierCoordinate"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"size", ",", "barrierCoordinate"}], "}"}]}], "}"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"barrierCoordinate", ">", "middle"}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}], "[", "\"\<stress\>\"", 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<stress\>\"",
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stress", "-=", "nominalStress"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"stress", "/=", 
        SuperscriptBox["10", "6"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"signum", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"stress", " ", ">", " ", "0"}], ",", " ", 
         RowBox[{"signum", "=", "\"\<+\>\""}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"signum", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", "stress", "]"}], "]"}], "<>", 
            "\"\< \:041c\:041f\:0430\>\""}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"2", "+", "textPadding"}], ",", 
             RowBox[{"textPadding", "+", "barrierCoordinate"}]}], "}"}]}], 
          "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"barriers", "=", 
   RowBox[{"Graphics", "[", "lineBarriers", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747661032745192*^9, {3.748934559310659*^9, 3.7489346973352013`*^9}, {
   3.748936028834214*^9, 3.74893640178518*^9}, {3.748936537538189*^9, 
   3.74893659455238*^9}, {3.748936626625805*^9, 3.748936705526024*^9}, 
   3.748936851846299*^9, {3.7489369647365932`*^9, 3.748936969645989*^9}, 
   3.7489697348547573`*^9, 3.7489697856362667`*^9, {3.749746386574204*^9, 
   3.7497463871546*^9}, {3.7497465169733543`*^9, 3.7497465172756653`*^9}, {
   3.749746575601492*^9, 3.749746575932219*^9}, {3.7497467735023746`*^9, 
   3.749746911372019*^9}, {3.750355373538177*^9, 3.7503553959537697`*^9}, {
   3.750360862816245*^9, 3.75036091965701*^9}, {3.75065554275772*^9, 
   3.750655545907774*^9}, {3.750655612889615*^9, 3.750655613558167*^9}, {
   3.750655741547908*^9, 3.750655792393737*^9}, 3.750656931278842*^9, {
   3.7571468034507365`*^9, 3.7571468366775255`*^9}, {3.7571468766358757`*^9, 
   3.7571468862076864`*^9}, {3.7576635407774744`*^9, 
   3.7576635425425215`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"01047cc0-f16a-427d-b7ce-\
0c29435e4e64"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:0438 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:0442\:0440\:0435\:0449\:0438\:043d\:044b \:0438 \:0446\
\:0432\:0435\:0442\:043e\:0432\:0443\:044e \:0433\:0430\:043c\:043c\:0443", \
"Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660953767308*^9}, 3.7476610327454557`*^9, 
   3.748969734854912*^9, 3.7489697856364202`*^9, {3.750660427182559*^9, 
   3.750660432292466*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"21ae29e2-a91d-4224-a123-\
209e3951a365"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "LightBlue", ",", "Green", ",", "LightGreen", ",", "White", ",", 
           "Yellow", ",", "Orange", ",", "\[IndentingNewLine]", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "White", ",", "White", ",", "White", ",", "White", ",", "White", 
           ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0.6", ",", "0.6"}], "]"}], ",", "Yellow", 
           ",", "Orange", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"myRainbow", "=", 
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"0.5", ">", "x"}], ",", "White", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"\"\<Rainbow\>\"", ",", "x"}], "]"}]}], "]"}]}], "]"}]}], 
     ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myRainbow3D", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"ColorData", "[", 
        RowBox[{"\"\<Rainbow\>\"", ",", "z"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GlueMatrix", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "matrix", "}"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"TakeList", "[", 
            RowBox[{
             RowBox[{"Reverse", "[", 
              RowBox[{"Transpose", "[", "matrix", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"matrix", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}], "}"}]}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Transpose", "[", "matrix", "]"}]}], "]"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PlotMatrix", "=", " ", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"matrix", ",", "matrixName"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"GlueMatrix", "[", "matrix", "]"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "matrixName"}], ",", " ", 
           RowBox[{"FrameTicks", "\[Rule]", "ticks"}], ",", 
           RowBox[{"GridLines", "\[Rule]", "lines"}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", "myRainbow"}], ",", 
           RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "barriers"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7476531195786133`*^9, 3.747653120240994*^9}, {
   3.7476534505006332`*^9, 3.747653485458448*^9}, 3.7476535222351294`*^9, {
   3.7476535950633698`*^9, 3.7476536054617443`*^9}, {3.747653655142853*^9, 
   3.747653656807279*^9}, {3.747653688090948*^9, 3.747653739282906*^9}, {
   3.7476538118536386`*^9, 3.747653827707106*^9}, {3.747656704788455*^9, 
   3.747656729694378*^9}, 3.74765701664755*^9, {3.7476584586379547`*^9, 
   3.7476584675487127`*^9}, {3.747658699447795*^9, 3.7476587124774933`*^9}, {
   3.7476587568371267`*^9, 3.747658782431654*^9}, {3.747660465335277*^9, 
   3.747660479701996*^9}, 3.7476610327461433`*^9, {3.7489348068714037`*^9, 
   3.748934817133738*^9}, {3.74893485538281*^9, 3.7489349552592983`*^9}, {
   3.7489349950905046`*^9, 3.748935017743618*^9}, {3.748935079617112*^9, 
   3.748935148106749*^9}, {3.748935208873681*^9, 3.7489353309778967`*^9}, {
   3.74893543472754*^9, 3.7489354449637127`*^9}, {3.748935604513166*^9, 
   3.748935774112791*^9}, {3.7489358857234097`*^9, 3.748935920285569*^9}, {
   3.748937178914475*^9, 3.748937196849533*^9}, {3.748937233907132*^9, 
   3.74893723762293*^9}, {3.7489372857884893`*^9, 3.74893733649858*^9}, {
   3.74893736830401*^9, 3.748937501097311*^9}, {3.748937550591075*^9, 
   3.748937608682899*^9}, {3.748937665178151*^9, 3.748937688168676*^9}, 
   3.748969734855296*^9, 3.7489697856368*^9, {3.750658527075471*^9, 
   3.750658533734511*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"b438da06-2c58-4df8-acea-\
37ef3435337f"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:0433\:0440\:0430\:0444\:0438\:043a\:0430 \:0445\:0430\
\:0440\:0430\:043a\:0442\:0435\:0440\:0438\:0441\:0442\:0438\:043a\:0438 \
\:0442\:0440\:0435\:0449\:0438\:043d\:044b", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.750666372371853*^9, 3.750666386564352*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"f292807d-09b1-495c-8b9c-\
9b6b00df497f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotCharacteristic", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"index", ",", "valueName"}], "}"}], ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"fracture", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"fracture", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "index", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{"Length", "[", "fracture", "]"}], ",", "1"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\:0412\:0440\:0435\:043c\:044f, \:043c\:0438\:043d\>\"", ",", 
          "valueName"}], "}"}]}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7506665343051243`*^9, 3.750666577544717*^9}, {
  3.750666634387631*^9, 3.75066664314911*^9}, {3.7579216351176195`*^9, 
  3.757921637429574*^9}},ExpressionUUID->"72bf3732-c3a2-4f97-80cb-\
c1e43b95ecdf"],

Cell["\<\
\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\:0438\
\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\
\:0438\:044f \:043a\:043e\:043d\:0442\:0443\:0440\:0430 \:0444\:0440\:043e\
\:043d\:0442\:0430 \:0442\:0440\:0435\:0449\:0438\:043d\:044b \:043f\:043e \
\:0433\:0440\:0430\:043d\:0438\:0447\:043d\:044b\:043c \:044d\:043b\:0435\
\:043c\:0435\:043d\:0442\:0430\:043c\
\>", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.751040043497757*^9, 3.7510400775702553`*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"b0004f69-f221-4be9-a8c1-\
e15c829973e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotCircles", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "distances", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"step", "=", "16"}], ";", "\[IndentingNewLine]", 
      RowBox[{"margin", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"color", "=", "Orange"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"color", ",", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Circle", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"i", "*", "step"}], ",", " ", 
                RowBox[{
                 RowBox[{"-", "j"}], "*", "step"}]}], "}"}], ",", 
              RowBox[{"4", "*", 
               RowBox[{
                RowBox[{"distances", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
             "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "margin", ",", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"distances", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "margin", " ", 
               "+", " ", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "margin", ",", 
              RowBox[{
               RowBox[{"Length", "[", "distances", "]"}], "-", "margin", " ", 
               "+", " ", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7510400351290483`*^9, {3.751040082955327*^9, 3.751040201282288*^9}, {
   3.751040352870755*^9, 3.751040354389183*^9}, {3.7510404023651247`*^9, 
   3.751040408893008*^9}, 3.7510404920256357`*^9, {3.7576533191945534`*^9, 
   3.757653335925003*^9}, {3.757653431925517*^9, 3.757653449333905*^9}, {
   3.7576715103027487`*^9, 3.7576715560901613`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"88e4f2ea-e727-4648-a92f-\
4e85f1dbd17f"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:043a\:0430\:0440\:0442\:044b \:0441\:043b\:043e\:0451\
\:0432", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.751040040004345*^9, 3.751040041480859*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"394e299f-9abe-4d8b-a9b5-\
36a2d37636ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotLayersMap", "=", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"stressLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plainModulusLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"carterLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"minY", "=", "100000"}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxY", "=", 
       RowBox[{"-", "100000"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"layers", "=", 
       RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"i", "=", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "<", " ", 
         RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"y1", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y2", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y2\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"plainModulus", "=", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"layers", "[", 
              RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
             "\"\<Young's modulus\>\"", "]"}], "*", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "9"}]], "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Power", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"layers", "[", 
                   RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                  "\"\<Poisson's ratio\>\"", "]"}], ",", "2"}], "]"}]}], 
              ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<stress\>\"", "]"}], "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "y1"}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<stress\>\"", "]"}], "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "y2"}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plainModulusLine", ",", 
           RowBox[{"{", 
            RowBox[{"plainModulus", ",", "y1"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plainModulusLine", ",", 
           RowBox[{"{", 
            RowBox[{"plainModulus", ",", "y2"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"carterLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<Carter's coefficient\>\"", "]"}], "*", 
               SuperscriptBox["10", "6"]}], "]"}], ",", "y1"}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"carterLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<Carter's coefficient\>\"", "]"}], "*", 
               SuperscriptBox["10", "6"]}], "]"}], ",", "y2"}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"minY", "=", 
          RowBox[{"Min", "[", 
           RowBox[{"{", 
            RowBox[{"y1", ",", "y2", ",", "minY"}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"maxY", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"{", 
            RowBox[{"y1", ",", "y2", ",", "maxY"}], "}"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"minY", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.5"}], "*", "cellLength", "*", "size"}], ",", 
          "minY"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxY", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "minY"}], ",", "maxY"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plotStyles", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dotted"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Green", ",", "Dashed"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Purple", ",", "Dotted"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plotLegend", "=", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\:041d\:0430\:043f\:0440\:044f\:0436\:0435\:043d\:0438\:044f\
\>\"", ",", 
             "\"\<\:041f\:043b\:043e\:0441\:043a\:0438\:0439 \:043c\:043e\
\:0434\:0443\:043b\:044c \:042e\:043d\:0433\:0430\>\"", ",", 
             "\"\<\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\
\:0442 \:041a\:0430\:0440\:0442\:0435\:0440\:0430\>\""}], "}"}], ",", 
           RowBox[{
           "LegendLabel", "\[Rule]", 
            "\"\<\:041a\:0430\:0440\:0442\:0430 \
\:0441\:043b\:043e\:0451\:0432\>\""}], ",", " ", 
           RowBox[{"LegendFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Framed", "[", 
               RowBox[{"#", ",", 
                RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], "&"}], 
             ")"}]}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}], ",", "Right"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"commonPlotParameters", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Tiny", ",", "Medium"}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         RowBox[{"AxesStyle", "\[Rule]", "Transparent"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"minY", ",", "maxY"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"False", ",", "True", ",", "False", ",", "False"}], 
           "}"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"stressLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", "None", "}"}], ",", 
           RowBox[{"{", "None", "}"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "plotStyles"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "plotLegend"}], ",", 
         "commonPlotParameters"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plainModulusLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"plainModulusLine", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"plotStyles", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "commonPlotParameters"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"carterLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"carterLine", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"plotStyles", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", "commonPlotParameters"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Overlay", "[", 
       RowBox[{"{", 
        RowBox[{
        "stressLinePlot", ",", "plainModulusLinePlot", ",", 
         "carterLinePlot"}], "}"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.750355499782115*^9, 3.750355793596572*^9}, {
   3.7503558631512537`*^9, 3.75035595668403*^9}, {3.750356028597644*^9, 
   3.7503561318033533`*^9}, {3.750356194818742*^9, 3.750356208887875*^9}, {
   3.7503563618567467`*^9, 3.750356363361658*^9}, {3.750356423863585*^9, 
   3.750356473236062*^9}, {3.750356504013914*^9, 3.750356817174099*^9}, {
   3.7503568624727697`*^9, 3.7503569686281157`*^9}, {3.750357008792891*^9, 
   3.750357226835019*^9}, {3.750357435011059*^9, 3.7503574352471*^9}, {
   3.750357508025413*^9, 3.7503575160456057`*^9}, {3.750357547885824*^9, 
   3.750357583085084*^9}, {3.750357887241557*^9, 3.750357889461896*^9}, {
   3.7503579481465197`*^9, 3.750357984969563*^9}, {3.7503580226450663`*^9, 
   3.750358024481966*^9}, 3.750361185626094*^9, {3.750658720102997*^9, 
   3.750658726408321*^9}, {3.7506587623250723`*^9, 3.750658810269313*^9}, {
   3.750658848101965*^9, 3.750658944354722*^9}, {3.750658984747673*^9, 
   3.750659069691119*^9}, {3.7506592334858294`*^9, 3.750659554818267*^9}, 
   3.7506595987503633`*^9, {3.750660239574378*^9, 3.750660403592054*^9}, 
   3.750660460234714*^9, {3.750660513265897*^9, 3.7506606132287827`*^9}, {
   3.757146186440631*^9, 3.7571462480997224`*^9}, {3.7571463308534384`*^9, 
   3.757146374077917*^9}, {3.7571464264808116`*^9, 3.757146456638303*^9}, {
   3.7571467048801203`*^9, 3.7571467219542065`*^9}, {3.7579216351176195`*^9, 
   3.7579216374451947`*^9}},ExpressionUUID->"de53eaa8-5f9f-4f21-90ff-\
43a6ff9125cd"],

Cell["\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0443\
\:0434\:0432\:043e\:0435\:043d\:043d\:043e\:0433\:043e \:0433\:0440\:0430\
\:0444\:0438\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.7579216318215137`*^9, 
   3.757921647114832*^9}},ExpressionUUID->"1a670f20-a3b6-450a-ad8b-\
342673b49f03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotDoubleMatrix", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "matrixName"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"doubleTicks", "=", 
       RowBox[{"createTicks", "[", 
        RowBox[{
         RowBox[{"0.5", "*", "cellLength"}], ",", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"middle", "-", "1"}], ")"}]}], "+", "1"}], ",", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"size", "-", "1"}], ")"}]}], "+", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"doubleLines", "=", 
       RowBox[{"createLines", "[", "doubleTicks", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"GlueMatrix", "[", "matrix", "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "matrixName"}], ",", " ", 
         RowBox[{"FrameTicks", "\[Rule]", "doubleTicks"}], ",", 
         RowBox[{"GridLines", "\[Rule]", "doubleLines"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", "myRainbow"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7579216318215137`*^9, 
  3.7579216374451947`*^9}},ExpressionUUID->"22d0e063-4a2f-4302-8b76-\
c318fb3d02c1"],

Cell["\:0417\:0430\:0433\:0440\:0443\:0436\:0430\:0435\:043c \:0434\:0430\
\:043d\:043d\:044b\:0435 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\
\:043e\:0435\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 
   3.7489697856369534`*^9},ExpressionUUID->"573585d3-2ab7-4012-9bde-\
ee091976122e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"concentration", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<concentration_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fracture", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<fracture_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opening", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<opening_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressure", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<pressure_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748933665070517*^9, 3.748933667635915*^9}, {
   3.748967897373295*^9, 3.748967952408773*^9}, 3.748968045615181*^9, 
   3.748969785637787*^9, {3.748969873450966*^9, 3.7489698881760197`*^9}, {
   3.748970008078432*^9, 3.748970029339315*^9}, {3.749002589036405*^9, 
   3.749002591800912*^9}, {3.749197428231081*^9, 3.74919743718463*^9}, {
   3.750355267359632*^9, 3.7503553082320023`*^9}, {3.750361141233561*^9, 
   3.75036114372082*^9}, {3.75036139017474*^9, 
   3.7503613910997057`*^9}},ExpressionUUID->"dbe4cd76-4469-4ba0-8820-\
019c7d484c1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"openingFilenames", "=", 
    RowBox[{"FileNames", "[", 
     RowBox[{"\"\<*_m.txt\>\"", ",", 
      RowBox[{"folder", "<>", "\"\<Opening/\>\""}]}], "]"}]}], ";"}], 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"1", " ", "<", 
       RowBox[{"Length", "[", "openingFilenames", "]"}]}], ",", 
      RowBox[{"openingFilenames", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{"openingFilenames", ",", 
         RowBox[{"ToExpression", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringSplit", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<=\>\"", ",", "\"\<_\>\""}], "}"}]}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "]"}]}], "]"}]}]}], "]"}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"openingAtCheckStep", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"openingFilenames", "[", 
        RowBox[{"[", "t", "]"}], "]"}], ",", " ", "\"\<Table\>\""}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numberOfCheckSteps", "=", 
   RowBox[{"Length", "[", "openingFilenames", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7503554730398903`*^9, {3.750657168634218*^9, 3.7506572226324253`*^9}, {
   3.750657269550213*^9, 3.75065727758918*^9}, {3.750657360637339*^9, 
   3.750657373821903*^9}, {3.7506574159365473`*^9, 3.750657416799019*^9}, {
   3.752485685149294*^9, 3.752485723856041*^9}, {3.753164422442254*^9, 
   3.75316447320899*^9}},ExpressionUUID->"a97292b3-e790-4763-b444-\
aa3c9e960ac0"],

Cell["\:0412\:044b\:0432\:043e\:0434\:0438\:043c \:0432\:0440\:0435\:043c\
\:044f \:043f\:043e\:0441\:043b\:0435\:0434\:043d\:0435\:0433\:043e \:0437\
\:0430\:043f\:0443\:0441\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}},ExpressionUUID->"5f65bd77-40eb-4e12-b562-\
42a327fbbec3"],

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
    "\"\<\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\:0434\
\:043d\:0435\:0433\:043e \:0437\:0430\:043f\:0443\:0441\:043a\:0430:\>\"", 
     " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"DateString", "[", "]"}], ",", "Orange"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.749195512564392*^9, 3.749195545569838*^9}, {
  3.749195598370927*^9, 3.749195681354604*^9}, {3.749197676357965*^9, 
  3.749197687499799*^9}, {3.7491981127205763`*^9, 
  3.749198119614801*^9}},ExpressionUUID->"38a1c404-a80a-4f37-b880-\
ecc92f0fda32"],

Cell[BoxData[
 StyleBox[
  RowBox[{"\<\"\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\
\:0434\:043d\:0435\:0433\:043e \
\:0437\:0430\:043f\:0443\:0441\:043a\:0430:\"\>", " ", 
   StyleBox["\<\"Wed 6 Mar 2019 11:56:21\"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0.5, 0],
    FrontFaceColor->RGBColor[1, 0.5, 0],
    BackFaceColor->RGBColor[1, 0.5, 0],
    GraphicsColor->RGBColor[1, 0.5, 0],
    FontColor->RGBColor[1, 0.5, 0]]}],
  StripOnInput->False,
  FontSize->24]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.749195659419508*^9, 3.749195673211211*^9}, 
   3.749195717683158*^9, 3.7491976880563498`*^9, {3.74919811272084*^9, 
   3.749198124508636*^9}, 3.749198547581563*^9, 3.74974577318449*^9, 
   3.7497458945699177`*^9, 3.749746363493379*^9, 3.749746523405265*^9, 
   3.749746676390993*^9, 3.749746717948832*^9, {3.749746796696604*^9, 
   3.749746814039156*^9}, 3.749746914039852*^9, 3.750355233686296*^9, 
   3.7503554477398863`*^9, {3.750360556216104*^9, 3.7503605666632433`*^9}, 
   3.7503607801969137`*^9, 3.7503611476314583`*^9, 3.750361263438398*^9, 
   3.7503613949006863`*^9, 3.7503614744322433`*^9, 3.750655374338236*^9, 
   3.7506554082503853`*^9, {3.750655458531261*^9, 3.750655464638625*^9}, 
   3.7506557512823467`*^9, 3.750655795952038*^9, 3.7506560265283737`*^9, 
   3.750656136604802*^9, 3.7506564375125713`*^9, {3.750656915409037*^9, 
   3.750656934849925*^9}, 3.750658504368836*^9, 3.750658566935512*^9, 
   3.750659695607489*^9, 3.750660462939427*^9, 3.750660582327619*^9, 
   3.750660616680229*^9, 3.7506663258812857`*^9, 3.750666757135747*^9, {
   3.751040182747201*^9, 3.751040192950671*^9}, 3.751040360329432*^9, 
   3.751040412204547*^9, 3.7515227620073433`*^9, 3.7515261687620907`*^9, 
   3.751615377030303*^9, {3.751615463201515*^9, 3.751615477707189*^9}, 
   3.751615682300685*^9, 3.751615917177168*^9, 3.751615995074151*^9, 
   3.751616095693368*^9, 3.7516183414337597`*^9, 3.7524855465523653`*^9, {
   3.7524855804109573`*^9, 3.7524856094127126`*^9}, 3.7524856461426153`*^9, 
   3.7524857590646477`*^9, 3.753164440016218*^9, 3.7538625516409483`*^9, 
   3.7538626010512495`*^9, 3.7538627623884706`*^9, 3.754638725719348*^9, 
   3.754638979218073*^9, 3.7546391083282213`*^9, 3.7546392253821335`*^9, 
   3.7546393299616723`*^9, 3.754639792915779*^9, 3.754640136856781*^9, 
   3.754642428063615*^9, 3.754646200280037*^9, 3.754649657661769*^9, 
   3.7546504264040556`*^9, 3.7546505727445335`*^9, 3.7546519768998513`*^9, 
   3.75465208037519*^9, 3.7546523291861*^9, 3.7546525047837963`*^9, 
   3.7546531259332304`*^9, 3.75465323619244*^9, 3.7561110952789073`*^9, 
   3.756183767554145*^9, 3.7561838191099224`*^9, 3.756188248790681*^9, 
   3.7561882858664894`*^9, 3.7561959488481665`*^9, 3.757146255714679*^9, 
   3.7571465394105883`*^9, {3.757146679426608*^9, 3.7571467254847383`*^9}, {
   3.7571468087151065`*^9, 3.757146839098605*^9}, {3.7571468791351013`*^9, 
   3.7571468881290636`*^9}, 3.757147012508487*^9, 3.757147053309069*^9, 
   3.75714709071288*^9, 3.757147139474738*^9, 3.757147282024349*^9, 
   3.757147439329136*^9, 3.757148048138564*^9, 3.757148390117943*^9, 
   3.757149543401328*^9, 3.7573124901220355`*^9, 3.757312806925419*^9, 
   3.757313095773717*^9, 3.7573132106623006`*^9, 3.75731326216355*^9, 
   3.757313384022509*^9, 3.757313518103788*^9, 3.7573136926188917`*^9, 
   3.7573137480517673`*^9, 3.7573138330349555`*^9, 3.757314482294738*^9, 
   3.7573145228180227`*^9, 3.7573145899272633`*^9, 3.757314712860545*^9, 
   3.7573147663542857`*^9, 3.757315101863775*^9, 3.757315707041792*^9, 
   3.757315973157895*^9, 3.7573165752591634`*^9, 3.757323338833152*^9, 
   3.757323657121977*^9, 3.757327845501257*^9, 3.757328738569846*^9, 
   3.7573298575505896`*^9, 3.757393788709646*^9, 3.7573950029163485`*^9, 
   3.7574076969767027`*^9, 3.7574089268359537`*^9, 3.7574114422623997`*^9, 
   3.757415015625086*^9, 3.7576527927824078`*^9, 3.757652850347029*^9, 
   3.757660420367476*^9, 3.7576630996657834`*^9, 3.757663546775882*^9, 
   3.757671560698409*^9, 3.7576720854083395`*^9, 3.7576727139398627`*^9, 
   3.7576728118433695`*^9, 3.757672846095731*^9, {3.7576728960884647`*^9, 
   3.7576729061173906`*^9}, 3.7576729476683617`*^9, 3.7579120251677094`*^9, 
   3.7579210121227283`*^9, 3.7579212537288756`*^9, 3.757921429520739*^9, 
   3.7579215247170496`*^9, 3.757925447983324*^9, 3.75792739758609*^9, 
   3.7579276460377007`*^9, 3.7584308130387497`*^9, 3.758431088071436*^9, 
   3.7584314333747234`*^9, 3.758431869639453*^9, 3.758431981983164*^9, 
   3.758432020462161*^9, 3.758432081701499*^9, 3.7584323369175463`*^9, 
   3.7584326706889896`*^9, 3.75843284677746*^9, 3.758433888144831*^9, 
   3.7584347756995645`*^9, 3.7584389799787865`*^9, {3.7584414130548944`*^9, 
   3.7584414342552605`*^9}, 3.758441881257159*^9, 3.7590590926429453`*^9, 
   3.7592211796408396`*^9, 3.759221267962756*^9, 3.7592219257789297`*^9, 
   3.759222067464307*^9, 3.7592242962870893`*^9, 3.759224783216329*^9, 
   3.7607801356086664`*^9, 3.7607819373382883`*^9, 3.76078469609286*^9, 
   3.7607864994541593`*^9, 3.7607869462270975`*^9, 3.760788424411932*^9, 
   3.7608491225452085`*^9, {3.7608513580155697`*^9, 
   3.760851381493911*^9}},ExpressionUUID->"8653b3d0-68cb-4622-8a68-\
b998a4fab419"],

Cell["\:0421\:0442\:0440\:043e\:0438\:043c \:0433\:0440\:0430\:0444\:0438\
\:043a\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660984637878*^9}, 3.7476611498754272`*^9, 
   3.747664166427878*^9, 3.7489697348559017`*^9, {3.749746711959444*^9, 
   3.749746715762725*^9}},ExpressionUUID->"c9835767-2b4a-4bf0-9d05-\
9ee1c3d7ac31"],

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
    "\"\<\:0414\:043b\:0438\:043d\:0430, \
\:0432\:044b\:0441\:043e\:0442\:0430, \:0440\:0430\:0441\:043a\:0440\:044b\
\:0442\:0438\:0435 \:0432 \:0438\:0441\:0442\:043e\:0447\:043d\:0438\:043a\
\:0435 {\:043c,\:043c,\:043c\:043c}:\\n\\t\\t\>\"", " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "Orange"}], "]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotMatrix", "[", 
  RowBox[{
  "opening", ",", " ", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotCharacteristic", "[", 
  RowBox[{
  "3", ",", 
   "\"\<\:041f\:0440\:0438\:0437\:0430\:0431\:043e\:0439\:043d\:043e\:0435 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:0435, \:041c\:041f\:0430\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"0", "<", 
    RowBox[{"Max", "[", "concentration", "]"}]}], ",", 
   RowBox[{"PlotMatrix", "[", 
    RowBox[{
    "concentration", ",", " ", 
     "\"\<\:041a\:043e\:043d\:0446\:0435\:043d\:0442\:0440\:0430\:0446\:0438\
\:044f \:043f\:0440\:043e\:043f\:043f\:0430\:043d\:0442\:0430\>\""}], "]"}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotLayersMap", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"opening", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"middle", "-", "i"}], ")"}], "*", "cellLength"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "opening", "]"}], ",", "1"}], "}"}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", "All"}], "}"}]}], 
      ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">=", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              RowBox[{"opening", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"middle", "-", "i"}], ")"}], "*", "cellLength"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "opening", "]"}], ",", "1"}], "}"}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"FileExistsQ", "[", 
    RowBox[{"folder", "<>", "\"\<times_v.txt\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<\:0417\:0430\:043c\:0435\:0440\:044b \
\:0432\:0440\:0435\:043c\:0435\:043d\:0438\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"measuredTimes", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"folder", "<>", "\"\<times_v.txt\>\""}], ",", " ", 
        "\"\<Table\>\""}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"totalTime", "=", 
     RowBox[{"measuredTimes", "[", 
      RowBox[{"[", 
       RowBox[{"Length", "[", "measuredTimes", "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{"Length", "[", "measuredTimes", "]"}]}], ",", 
      RowBox[{"++", "i"}], ",", 
      RowBox[{
       RowBox[{"measuredTimes", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "/=", 
       RowBox[{"0.01", "*", "totalTime"}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Grid", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
            "\"\<\:0420\:0430\:0441\:0447\:0451\:0442 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:044f\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<\:041f\:0440\:0438\:0440\:043e\:0441\:0442 \:0440\:0430\
\:0441\:043a\:0440\:044b\:0442\:0438\:044f\\n(\:0438 \:043a\:043e\:043d\:0446\
\:0435\:043d\:0442\:0440\:0430\:0446\:0438\:0438)\>\"", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\:041f\:0435\:0440\:0435\:0441\:0447\:0451\:0442 \:0440\
\:0430\:0441\:0441\:0442\:043e\:044f\:043d\:0438\:0439\\n\:0434\:043e \:0444\
\:0440\:043e\:043d\:0442\:0430\>\"", ",", 
               RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             "\"\<\:0418\:043d\:0442\:0435\:0433\:0440\:0438\:0440\:043e\:0432\
\:0430\:043d\:0438\:0435\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:041f\:0435\:0440\:0435\:0441\:0442\:0440\:043e\:0435\:043d\
\:0438\:0435 \:0441\:043f\:0438\:0441\:043a\:043e\:0432\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<\:0421\:043e\:0445\:0440\:0430\:043d\:0435\:043d\:0438\:0435\
 \:0448\:0430\:0433\:0430\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:0418\:0437\:043c\:0435\:043d\:0435\:043d\:0438\:0435 \
\:0437\:0430\:043a\:0430\:0447\:043a\:0438\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:041c\:0430\:0441\:0448\:0442\:0430\:0431\:0438\:0440\:043e\
\:0432\:0430\:043d\:0438\:0435\>\""}], "\[IndentingNewLine]", "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"measuredTimes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{
                RowBox[{"Length", "[", "measuredTimes", "]"}], "-", "1"}], 
               ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
         "\[IndentingNewLine]", "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "All"}], ",", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"totalTime", "/", "1000000"}], 
       "\"\<\:0441\:0435\:043a\:0443\:043d\:0434 \:0432\:0441\:0435\:0433\
\:043e\>\""}], ",", "Bottom"}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.749746711959631*^9, {3.7503604496962852`*^9, 3.7503605102226467`*^9}, {
   3.750658187684452*^9, 3.7506581966759377`*^9}, 3.750658599559669*^9, {
   3.750660410623929*^9, 3.7506604108938932`*^9}, {3.750666592966673*^9, 
   3.750666609429427*^9}, {3.750666647089669*^9, 3.750666650063033*^9}, {
   3.7510398594727287`*^9, 3.751039878653421*^9}, {3.757313894301865*^9, 
   3.7573142039637947`*^9}, {3.7579135982458677`*^9, 3.757913608602586*^9}, {
   3.7579142495638924`*^9, 3.7579143338119197`*^9}, 3.75791440434883*^9, {
   3.757914587589645*^9, 3.7579145929167037`*^9}, {3.7579146284265175`*^9, 
   3.7579146349248953`*^9}, {3.7579213280693846`*^9, 
   3.7579213309280586`*^9}, {3.75922430234816*^9, 
   3.7592243128300653`*^9}},ExpressionUUID->"d92d7a12-ebcc-4f18-83e0-\
f681f54b8eec"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"\<\"\:0414\:043b\:0438\:043d\:0430, \:0432\:044b\:0441\:043e\:0442\
\:0430, \:0440\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435 \:0432 \:0438\
\:0441\:0442\:043e\:0447\:043d\:0438\:043a\:0435 \
{\:043c,\:043c,\:043c\:043c}:\\n\\t\\t\"\>", " ", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"286.6`", ",", "93.7898`", ",", "3.46181`"}], "}"}],
    StripOnInput->False,
    LineColor->RGBColor[1, 0.5, 0],
    FrontFaceColor->RGBColor[1, 0.5, 0],
    BackFaceColor->RGBColor[1, 0.5, 0],
    GraphicsColor->RGBColor[1, 0.5, 0],
    FontColor->RGBColor[1, 0.5, 0]]}],
  StripOnInput->False,
  FontSize->24]], "Print",
 CellChangeTimes->{{3.7573140571074085`*^9, 3.7573142043853965`*^9}, 
   3.757314482310359*^9, 3.7573145228180227`*^9, 3.7573145899585056`*^9, 
   3.757314712876047*^9, 3.7573147663857603`*^9, 3.7573151018793845`*^9, 
   3.757315707057434*^9, 3.757315973173514*^9, 3.757316575290423*^9, 
   3.757323338833152*^9, 3.757323657121977*^9, 3.757327845516865*^9, 
   3.7573287385855427`*^9, 3.7573298575609694`*^9, 3.7573937887252316`*^9, 
   3.757395002931969*^9, 3.7574076969767027`*^9, 3.757408926842561*^9, 
   3.757411442278022*^9, 3.757415015640706*^9, 3.757652792813685*^9, 
   3.7576528503626814`*^9, 3.7576604203831*^9, 3.7576630996657834`*^9, 
   3.757663546807126*^9, 3.757671560698409*^9, 3.7576720854241066`*^9, 
   3.7576727139554834`*^9, 3.757672811858959*^9, 3.7576728461113534`*^9, {
   3.757672896104086*^9, 3.7576729061486063`*^9}, 3.757672947699605*^9, 
   3.757912025198925*^9, 3.757913618506505*^9, 3.7579146467513285`*^9, 
   3.75792101213837*^9, 3.7579212537429314`*^9, 3.7579214295362797`*^9, 
   3.757921524732671*^9, 3.7579254479989767`*^9, 3.7579273976017113`*^9, 
   3.757927646053316*^9, 3.758430813069991*^9, 3.758431088071436*^9, 
   3.7584314333903723`*^9, 3.758431869655073*^9, 3.758431981983164*^9, 
   3.7584320204777665`*^9, 3.7584320817171535`*^9, 3.758432336933195*^9, 
   3.758432670704612*^9, 3.758432846793081*^9, 3.7584338881604366`*^9, 
   3.7584347757307854`*^9, 3.758438979994408*^9, {3.758441413070539*^9, 
   3.758441434286497*^9}, 3.7584418812727795`*^9, 3.7590590926740355`*^9, 
   3.759221179656455*^9, 3.759221267978345*^9, 3.7592219257789297`*^9, 
   3.75922206747991*^9, 3.7592242963027105`*^9, 3.7592247832319508`*^9, 
   3.76078013566068*^9, 3.7607819373562927`*^9, 3.760784696106863*^9, 
   3.7607864994661617`*^9, 3.7607869462441015`*^9, 3.760788424428936*^9, 
   3.7608491225662117`*^9, {3.760851358025571*^9, 
   3.7608513815082045`*^9}},ExpressionUUID->"bc821f40-2438-48c8-89f6-\
8bcc3acc4538"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1:eJzs3QtUjV3bKP6QhBA5JEpEjhHlFJkROYWIJKeoSIpIDiE59eQQqSQRURGS
iCRFKSlK53NpdVprtVqHyCERuz3eba5nmF3jefb/v/d+3u/9LmO84/eN63vG
ve57zmte85rjrtbgjduX2XSQkZG51vq/663/+5//97/+NRAURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU/f9i9flt/Iw1EkazztWa
+c/EjKrNoqbFFqzlJ4ZeWN8sYuzgNj/67S3WrDVHjr8/w+qweP5QXWdWi82B
w/pqsTotX9olrj9rbkB2wa4OrKN2r5VcqRT+baHrQJ8L3Sf0XNA4QOMGjTM0
L9A8QvP+T+cjiqIoiqIoiqL/+Zo8HNatZqmYUaXEuLYsRsgYub3F3+9wPaPd
mnxOzB0BY9TO7+POK7IG9dD8PjOkjjFAZ/zjDHPWlBojJZEOq1aOQc9QGVZO
Q9Dbg5l8xkAHEjojgFXHV77l5R5Wo1snXSXmrD6RZW8vzWSN/9R9je9IVp2F
cT969Gf1GrHy1EN5Vs/2ql1+tvv7QteBPhe6T+i5oHGAxg0aZ2heoHmE5h3K
EyivoDyE8hbKc2hdQOvon17fKIqiKIqiKPqfrNPwxsQboSJGS67cq+Mu9YwO
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
ws+Zw6eHVDPuWzPg9vwfNdT5nwrczh3hEO6Z5u66P7lUY1PFXKv2pcTh6KPp
lxv41CfOFfNHj80ngoHFB1SFAqr7srpeS/a8Jeoybp0HXRBSDX7+TJnjnEya
DxaZDl8gppool/Qc4f6QcDPqomJ5EqqMT6jiV52ddDyMp09UMzBj/96OcIWt
s/d1tv88MFg9OFTM9qt7ZX2epViyP2+Z8OKO2EXM9sPKN8+qfXBn++ddjztv
0JjL9tvKK30srHuy77lSDU2+ZrZn+/bIkpHXShva+H3egRuu7/nUxu/Dpr5T
DlOVxpVe7zOZ7Swh2vu000aF/unneEMKozoLxGSeyqWZyvOl55pcX//CzrvF
RHFXS4DycOk5qFtBeMs8hdb+u5+2S7Sa9NxkMooMOXVTRFLrAvNLh0jPWRlz
p0jsrVvPfVEKZor7i2nc61m6p9GU1vNd2aGNkQrSuMmbmPrjqiIy7/uijLdp
RTSecnnk4mpFEWnoZGs45bY07lbx4m6Teus5dOzmBw450nj1vKD4mRNaz4nR
ihYhLdL4ya/7F89ZJCJFkomztWZKPzdFeLaho23r9TM3F3c/Jo2Xa3ivzD8o
ImGrRBbnY6VxdxulOxFHRCTrYOSdhyl/HYeuA30udJ/Qc0HjAI0bNM7QvEDz
CM07lCdQXkF5COXtv/6xef4rDq0LaB1B6w5ap+C6BuoAVDegOgPVJaiO/V73
oDoJ1VWoDkN1G6rz0L4A7SPQvgPtU9C+Bu2Dv8YHRVEURdH/vlo66lZaz6tn
NLTN6SxfwWP0G56/cND3GsbGDi/Ob+BVU5Wa11wVDa0iDkHmmcO+11Jj1T6f
O9P1HbFzufHgcwuPmuSlwB8gV0ROzvd83re6jmqlYZ741CyHlBiOvXc2rZ7K
tRXUXDNKI1HX33OVnURU//XhY/IDnpGM2cFX9+lJqFmn78tfPHadPnfyUvWn
4wex75HDbro+469g378k9Bob9ONIG9/HlK0hei3D9qUK4eerJjqx74MMQvSc
1/Zm+96iNRfGc0LZ/tl3cKnFcps2vvfn5Va1bXPY/nxofOLWCjX2vZj/as0h
7wewfb6XspqW/Mg//by0qcmVTw6t45WV2pXrLT1fBL9e0C6wUEz8m/WOyg+Q
nkdkcmTTCwxb++xuCj/8b0nPNVpBTlE38kTEUfFaQpCP9BwksvPot89SREy6
5seO3SE9N4lUhjibdW6NG+YPNb8gPX8dbTzXmFYsJKkcIWev+p/OcSUT93k+
F5KG63L3Kt8V0niC5axxX+8JCef9sM/ix9K4/l1ZBc9kIVG+3/WKZb00rpn4
fVt0Tet/X7WnT+o06fVVVoc1d1ZoPT9Wh3xQviKN68x6O2rzrNZzX2iH+naa
0vtvntZhSU+X1nNlH485o+9L437K1149DRCRvfG9nPLbS8ch96N/4dQQEVG0
/hHgpfLXceg60OdC9wk9FzQO0LhB4wzNCzSP0LxDeQLlFZSHUN5Cef6vf+y6
+BWH1hG07qB1Cq1rqA5AdQOqM1BdguoYVPd+r5NQXYXqMFS3oToP7QvQPgLt
O9A+Be1r0D74axxQFEVRFP3va4rHjoET3tUxWrlXmE4P4DIq6Fdau2ZXMzre
mzx7VVENtWhveH+Xpxxidm9Ts34Jl/r9/RtFox2lxHRf0IRTb/lUOV8123W+
+USGb/jH0XSBVC/bPIFuJml+tmKc1QEhVdO9pTq8z0vSUrG0tGCSmDrCbWSM
yOERid91T3tApYTqttP2wKXRe+hzD41f4HdsNfseuWmH1cPXAez7F8fCiS3d
OWz/ecCxoMObuez7nYZkh31Ls9t4j2y4XCd1Hfv+SNiwfLZmN7ZPnte7a75v
KttvH4u9XHP3YRvf+9PtzPvgA2w/n7BWc7LTcWn/79Llk5ZOnIRoB9R8OGQm
/fnVlqb344paxGSvuGzPZRfp+UKneuFdj02t4xWjf3+FjPS9nmVNp8pKbut5
LdbngW6i9Pxy4+KjNePXioi6TMrmb7bS8w5Xtx1/1TchMZDtkGy5S3o+8ot0
WOESJyR7p3rnjy+UnrMcr3u9mnuu9bzmV7dTZ6s0rmequmX6ISFRNEmT6zfj
T+e4D+anjM+0nuPWrVvz3EoaD5qXPTk+Ski8Jp7quipRGu8W9bV7RqOQBBHH
ULcN0vuxqN1xOme+iFjGD1x/ZsqfzpunLTVP3RYRg3XvK1aP+tPPUWe4bezd
WUz4MrM+P+grPa91qx9z+LOemAQtbJhl6yONq1eH6L1eIiZZky9773v113Ho
OtDnQvcJPRc0DtC4QeMMzQs0j9C8Q3kC5RWUh1DeQnkOrYt//WPX0a84tO6g
dQqta6gOQHUDqjNQXYLqGFT3fq+TUF2F6jBUt6E6D+0L0D4C7TvQPgXta9A+
+GscUBRFURT9z/e16Qmd6KFCxvjP7z6Ue/EZg24HDArzqWWM6jB9dLsd1VSn
5mHEtaCKGDjfeGzd+v+nBikUZ8+pILt1BlhfCeJRL9tE5A5VKyZGh2eEOR2v
o2odmN0pdHsuOW184MeS1fXUB7p9O6uXvSGfF9Xese0qouqNCWo69TSRdOt9
V/FWnJiapZayXdMkgj63+Z0NV+cGsu+ROZOmWAzIZ9+nXC4fJTdHne0bvfrd
aPmyie0z1asWP335kn2/4zt07qjoLWwfa7std9oAWbbvnbLnxXajR+z7pr0+
QRfj3dv4u0M6F2JmrWP78NT2SxZ5TmH79tPp19R+EGmff/Laq6HzXSWkSKmx
NPqp9P2aUeTLYQ5vxSRyyrZ3irLSc8SkG5xTc8aKicfV++V3naTnMqW5u08k
3xWRyPs3V26dID2naL76OqHbNBHh7HD8GaT0p/ewj7PLlSqFpGHh6dv3J0jP
Qd0uzKjLD2w9r+0b+MrvpPTcJDP9lumCY63z0Xd49pMF0rjllVRDTY/W65xy
vrV+uTS+tvx4eHi4kNjeWnzv3j1p3HRbd9tdX4QkS2mobLCd9HObx/Td/cRO
RBwdJ9/MPCm9TzP+6ruZ30WkKNlmfKcm6XM1bp925IyvmHAu+M6xdpKev1Qu
jp6R3E1CEn7YX7K7Lh03P6dJTkd2SkiTury60ZU/vcdUszjXNaw1LxduqB84
tOIv49B1oM+F7hN6LmgcoHGDxhmaF2geoXmH8gTKKygPobyF8hxaF//6x66j
X3Fo3UHrFFrXUB2A6gZUZ6C6BNUxqO5BdfL3ugrVYahuQ3Ue2hegfQTad6B9
CtrXoH0Q2jd/jQOKoiiKov85lugo3PpcKWD0yxJdTvPkMcpdl6u2uFLDqKM0
2rdx2J+0en6t16tK0lC/fqFgGJeqPZ2jOvNMOdl0SvnMQFU+NX1t9IrbYYUk
K/Lx1OQvdVQvUdGyKOUcYnbWe/Xh9Hpqc7BXyRfdNKJyK/no8Y0ianqv1Jz4
Dc9JgtsqzkcFCVVGfOlLl7Qb9Lmb6hU3rFrEnpftfTf3LD3D9oGzre1/KBWz
P6+4vPrIHYdpbfxdnV7rdPbdYfvSMtmIlYVL2D529pxtF5Ia2PdHHsubhcZ3
2D45SH/8CcNDbfz9rhXWDn03sX24V7PHV9E8tm+PnDyTP2mZtM83rb6V4uIj
ISYxYQ0PGqTnAounC9O+1YiJ5XL9Pc7T//R3lt5ePr1/Yev5q4NHxcM46blD
O/OqOD1bRJqOn13udlp6TtHOMHry3bQ1LjM+88vSP/3esdrJh/fbiYit8SrD
6cf+9PO3MhqRwQVCYnJk5ZSLytJ4xvj4TefShMTte5Fb/RfpeUrL4MMep3dC
4hhUfkd9jPS/VypXHCLRaD03jRiVn18sjWd1uNjfwU9EPE78eK7YJL2fqKyb
oSnjxSThhMYVxwPS5wqwMzvwtFlM3LoUReft/NPvw86wjJkrkhDtSw3GOtns
+0frppVrurZjxz9oyIleGjVs3F5vwsBVhuw8QnHoOr9/LnSf0HNB4wCNGzTO
0LxA8wjNO5QnUF5BeQjlLZTn0Lr4Nc6/r6NfcWjdQesUWtdQHYDqBlRnoLoE
1TGo7kF18ve6CtVhqG5DdR7aF6B9BNp3oH0K2tegfRDaN3+NA4qiKIqi//VM
0JA9deGyhFH9+gz+uBECRq+HMY67iriMBZEFyYO71DA29lAaq3hZqpJtdSyv
TyW5of755YrTXKrCFdWIHxZlxGmwzMN9O/nUG5d+VnuHFZCWW4O1VJcJqJ3b
X9ob1jmbFCgln9/9rZ7a7LH54JQBqYRbKZe7+LCIqrvl7oDFDfEk9/WW8YeG
Sqja33uvU/INoeOh6/LsetFS9rysOGvTzpAgtg90C5gmf6oT+55Fvmh6+6it
bJ8p77ZEdYKI7Uu1x91canee7WONf/a49m06+55Ido/ermctbJ98+e69oj7Z
bF8dpuH1+WsS24cLu8kfr37E9u3z/njQ9UW8tM+/beS5tnuDhIRpV9ZpFEnP
UypVZjMC9SXEYGLxgM4qf/r+368nQq88FhPFhqJAhTfS95U+CTabnSeLieMG
1yOhJ/903ix5Z2VVJSJuQ+7ua3okPb9w9NdtaDndes4K2Oq0j/Onnwc+5/HY
zkJEguzyX3fZ+KdzmVA7OttMRLQXu8xVWCWNu70T8+X+EBGDMSuMzmVL44GP
1BPONoiIfMpSy83F0s8NuJ75vcfJ1nNi305Nw1dJ71+r5O0Xx2US4jj4+FaV
xez5yNrQjJ90gT0fCe+Y7X5mwY6/9ZDYsEkL2HmMjFoYWabUxs/htxgGij/+
/Th0Hehzwfv87bmgcYDGDRpnaF6geYTmHcoTKK+gPITyFspzaF38Grff1xEd
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
L8kvV60mGUUyNkFBfzLW1bbH2SoSFdC+XVjXGmpjvwM/jooryYlc+1mFu2qo
91+sGRhvUklECwtWrm/t03+pembGd8cMDmmJ1VZMG1lLPc6L3rxsJoc4OPao
TXGupT6JyDa5c6UC/P07l6GOdbHqXKqP9z3DzMBykhvzx7RNjlyqe77tooyI
MrJ79pmBmSlc6uUJK2573yklzf0WGtkO5lGVYtS0Xl0qIZMUbijI7udR15R2
K2k8U0zUVyidWZnIowbJpKz4+rSINHQ+tnF8Zz5Vu8qpaGtNITm5Pogvt4JP
tapUM6qXKSRRCpfyW3z5VG7x2ENyMwuIQMFoE6+KTzUs1sqYvzKfGF3cm/JV
s46qpesX3utUHnGQDBlq5VhHfTL+gk9BRC6R2zM2ZVBAHVUUsOtu0Phcskj3
UcyT13XU/lac/JyrOSSp3ZSXMyR11OjmlZGGE3JIwuJjBS49BVKVnA6cfZNN
ZAhfxmysQKrh3JaWXdkkocPwym6TBFI/nlxTsDabVK/NaRk1XkA143rIHbLP
JtH2j/vY9xdQy58UP3salU2izjk/IV0FVO6Cq7kG77LJQbVHJu++1VFPhHC6
2SjkEFMbU8+cj3VUuayO5h6D4Th0HehzofuEngsaB3DcgHGG5gWaR2jeoTyB
8grKQyhvoTyH1gW0jqB1B61TaF1DdQCqG1CdgeoSVMegugfVSaiuQnUYqttQ
nYf2BWgfgfYdaJ+C9jVoH4T2TWifhfZlaB+H9n2oT4D6CqgPgfoWqM+B+iKo
j4L6LqhPg/o6qA+E+kaoz4T6UqiPhfpeqE+G+mqoD4f6dqjP/6fPHyj6/8Lo
s51He3wSM56U3eU2IlHIqLd/9kiN6nrGav0OUY/7sKbIXJ5ROUPA+Lr59vmW
43WMWrfCDvX6zmfkrA5s9vFgjWzc3PmSJmtu0eKHl1N5jPb9ThfHu7Mqnbrp
VaTPWv1a2X/FTy6j5p769T9ftWF2+NMVJ1l9XsrI51uw2lvxJ7zrz2r60TzR
gVvLqBh56fqZSNbYQ9t3HHdhLZgWfyp6BqtBT+8c8rOG0enTuRWOEazpZV2U
HG1YOfz7XMkQ1oQ+k5eX51czeq1p6llvy6r0Pss830KqlV9K8/MvVSThk8FU
tbhqquVZtds5NlXE/eCOBY2TaqjRSSsUfe5Wksg/psT0Da2h7tW9U79WvpKo
B+7w6NqnlmriuyJqmyWHRE/qsH3Gvlpq2erPD2b7VpAU1dQ3R1rH+5fhN25e
3mP8jpiF1a3WW8GlfpczFJrIlJOS8Y0Vj2K4VCc7Tct3+aWkuvfwfku0eVSz
xJOxvbaXkC4dRb2Xt/Yjv6xumJLYQamYLDDes0qlPZ+qMSCgMfJrIbF7fvF8
qC2fmpQ4gfRIKSB6Z1vm5MbzqabLOo11T8knPk93HnKZUkc1yrh52Mssj1jW
BrrN966jcpZoumrMzyV9bzf1eCmoo8a365sVSXKIlt1MRb9NAuq+xGmZ+ulZ
RCctY2ZVnICaPk/L+YF3Jjna2y57gEo9VXjsaL9VVhnE9Mhg0mN9PVXhw6Tj
IS/fkFzjt+2antdTFXRGfRrnlkbsRq7YVtpNSHXv1M6uNPwV4R7aVtBsIaQG
yGz5qvbuJbHw8NQLvi+kcjMigsYUJBHtOw+/XPkipHK+J403mvCCuOkelJ0w
W0SVealYm7spgZjssbxRdE5ENbB10SkaGU9UgkOm9OeLqFkW88yz1Z4QncTS
8xOHi6n+7x98PTAymvQtih6daSumNrxzaJzfN4q0lOervfcVU0f4f/V8IHuf
uN1Tv3fhhZgqc1ri+yrxLnGapu89USimajvMWtBccotEpTTrXZWVULXXH9zb
69xN4rS7uM5cTULVrr2sdHt4KGkenevQWUtCDeLoPFR9FUw0f1zvcmm8hGo5
JkZmz6pg4n54vSdPV0K1LO36fEGXYCIY9uR6yGQJVX1nyDOv1OtgHLoO9LnQ
fULPBY4DMG7QOEPzAs0jNO9QnkB5BeUhlLdQnkPrAlpH0LqD1im0rqE6ANUN
qM5AdQmqY1Ddg+okVFehOgzVbajOQ/sCtI9A+w60T0H7GrQPQvsmtM9C+zK0
j0P7PtQnQH0F1IdAfQvU50B9EdRHQX0X1KdBfR3UB0J9I9RnQn0p1MdCfS/U
J0N9NdSHQ3071OdD5wLoHAGdO/7p8xD638u7VwIqNpuKGAOOHOLPNRAyNt9M
HejjXM+ot1Dh8OADAkZuh0j3i+fqGDf5He3Q8oTPGD76fL8JTTxGxTR1zcFL
WHOtl/RfHstlvOHn82XDRFajkduqPRNqGYOezP+quJ51VGKnie6iGkbTpUZL
Bp9k1Zzw9NT8qaxjxnTV+SCpZvS6scgj8C5rB+WbL9JXsqoXzJ8pXig1a0bP
Kyrdq4mpN3/GSFepR4cGD37xooo8CfDXe/y8mlrXb8AIB8sqEu3dqb27XA1V
HPzx+6TPlSRjy9IZjXNqqIsqjw9RulBJ/CLUoha611DVmpc6nZlUSaJOW6SJ
M2uojWOasvuncsh8+3N3Hw+opZ4rD91vb8YhUXGrhN9ax/WX3LQPegqcCuK3
ZZbLrbha6vSkKec6vH5HOH/ELo7oxaVa2mYpfXpVTqLvfNrV7MSlln1Xu6YY
UkZuRDn56wi4VIXakEk2M0tJyYotR4KteVSnH0l7++QUE869W1rOJTyqZUP7
PUGORcThm4Hi+Hl8amw3/Uz74YVE59suE88HfOqm7te6m/PziWKv6DXTp9VR
s9LK6xYsziOfp29xPRtcR1Wdn3xsaZ9csmDGiZTBqgKqxhzr8ICwbLIp3/ls
RYCAmnHoytIN47JIgkWXIbq96qluFYk6r7wziN4utYph2+qpN4zmvxy49Q1x
H+lnd6y8nloit9+t9m0qiXT8/Mx2hpDKWT3V/dSJFOLueVvjWaiQWhIhM+qU
ajLROORqnvxDSB3TsbPIptMLInq0cvnRdSIqf29116Jzz8mNDfttJekiqq79
ZJVX1rFE3yIwTEVbTB3x8qpywrNHJKFzt9S1nmKqzCmrqwHr7xOzJfPW6UnE
VM7ZKSP/8L5FZDq132BhLpEaeSWz2/arxNDa922vcAk1YZOFx4e9Z2mdSx5Z
olXb2Mb3TS/MHjHLp42/133r+qgOWmzc0a10uep99u8AT3ecny27gY1HPvlj
Q0RHNv7RWKuX4WX27wwHPTp9NXcOG4/Mkd8jac/GZ9tucZ0Uz/4d49mPFy0d
dYSNm0+M6122mI1zvB88Th/IxovGO9iKm9r4fu0+jlu3lbHxokrD4Xsz2Li6
JGn94dS/H4euA34udJ/Ac0HjAI0bNM7QvEDzCM07lCdQXkF5COUtlOe/rwtw
HQHrDlqn0LqG6gBUN6A6A9UlqI6BdQ+ok1BdheowVLehOg/tC9A+Au070D4F
7WvQPgjtm9A+C+3L0D4O7ftgnwD0FVAfAvUtUJ8D9UVQHwX1XVCfBvV1UB8I
9Y1Qnwn1pVAfC/W9UJ8M9dVQHw717VCfD50LoHMEdO6AzinQueZX3UP/e1kS
LxP8oHW/+d1mv3ZanY8KGX0CbjgnXa9n7LB3rKpLlIDR4bXDor3P6xhPdvjM
1S7kM06ysY324PEYs9Zt8NLuzdphyAOxxjouY0m3fk7+gbWMijI2iz+U1DBG
cctkRuqwWo22sSh5XM3o2Lt8xNyJUs03PJzVR7uaNN6ZeeneRalKrqoX9l6s
InLz67VXtKuh7u51dZLMj0qifvTc3Jsba6gmT0N7d7SvJGl+Sw6b3K+hZgfK
z+j0mUPcxo1ddKpLLTUhRk9hnCOHyMhZe/ksqZX6ZcvN6/IcYtA9Qnzveq3U
/E86Df0qiBy5vfeVsJYqnNXO79bUd63jurnKcBqX6lWdZq67uJzoLz3nnu/K
pS5QMLY/dLSM2M0cmrYkk0tNmuYTouhdSgxT3baRYTzqpJsHH870KiGb1CPf
7nblUdOvSHwuHSsmRlVNnkPSeNQxq/qY+YcUEbPTmQtllPnU7xbnBv58XEjc
1+cGn9vLp9pXHu+90K+AmAWKple+4VNbhk+ev+ZyPkn5Utj4el4d9a7y3qFX
h+URgc1+scmdOqrhW0/dbj9yiMU4Q0uPoQJq445JFZu8s4no/OLZlrcE1Kkz
eutUdMgiThEjUhYMraca13VdTTQzSOxOs/STZ+upN5Z8nfj8+mtiWOeRnCgr
pNp7vLZ2rn5FFJwt5d9sE1IfzIzP0N/8krgt55Ze5wmpMh0DisZ6vyB3H/XS
u7dSROXvHzQ3rfo5ybhXEPssV0S1fSHR76EUS+KtHqYsWSqmjjA9dW+W9kPS
/GrB3tIYMTXIoCXG/k4EURJ89XObIaFqd/cueq9xnWhGv+m344qEmlCUceLN
Am9aV2wrVfYWSti+OuyAakjBQTZ+2X6x1/qvbN9+WT3/Au9IG/38qXaW7fux
cX/ZbWsm+rPniPCbDVx3LTbuMSLL8swT9vxiIAnc1MmIje8dNX7mtUfseUp7
UdLLtUZs3DJt3tXEQvZ7edZ0c5CbZsnGPSJW22V/Zr/3x7zhs4WhBxs/UNDH
TW5IG98rbSFK0bjJfr/tQwflvktXtRHfPvDmxq5sfN4yP9nVyez36vrn/dAQ
uLDxvF5xU14QNt5gbtxjojobPzbm1oCWb+z3+aYPblo8j8PG/etn+S4o+ftx
6DrQ50L3CT0XNA7QuEHjDM0LNI/QvEN5AuUVlIdQ3kJ5Dq0LaB1B6w5ap9C6
huoAVDegOgPVpd/rGFT3oDoJ1VWoDkN1G6rz0L4A7SPQvgPtU9C+Bu2D0L4J
7bPQvgzt4+C+D/QJUF8B9SFQ3wL1OVBfBPVRUN8F9WlQXwf1gVDfCPWZUF8K
9bFQ3wv1yVBfDfXhUN8O9fnQuQA6R0DnDuicAp1roHMQdG6Czlm/6gz6f1fD
Uv2G6EESRhn9da4fkoSMht+Mmh+/qmfUexzx9h1XwOh3btRPx1d1jKLYMqX3
cXxGld6Ry1TieIx6C3Xj4qq4jOkuIVPay7BqCItXbFatZYyUjXy2ZFINo6ne
qW3J26sZtSybVjz0lRq/veuh90FVZKpB56L702qotwZ9mOZ8o5Lkxk8NiEyr
oRpa3VLek80hjRuSjN8Z1VKVRCWnH/ThkKRLkrMr3tRSo8eMN/kZ+I44FZ5Y
7DuHS72xb2Nvw3HlRC9nxqL6O1yq6QlD5RnfS0mwwbqEpyN41L4zap+lHy8h
J7MeW7md51GtzhTluZJikpXTk9e/gUf1+uP1ggfjiohbsfB52SK+VKepCVv6
FhI5g7yI/tf5VBE52vigfwEJmh2dUfKdT1WfUO63vXM+ScoWl1TY1lGjT+ps
t3yZS0RTzpzzflxHnbpixcJ5xTnEfdvWRxf7CKj/o707j+qx/+JGn6lIKTJU
ikxJQhSS4RORUERJMkUkGkQkQ0SkKCJDSoSkECmSFCWSFN9GlUpz37lIyXy+
9/k9rsu6P+1132c953l+6zxn++e11l7Wt7qu67P3eze63Et9P+FJHrFr/2S1
wIfPWNV/SKdBHhyScaJl75I6PqPz5fl9eke9JgmDYl71miJgzJnbw/B6TA5J
qFpS2ue0gDHnUS/u8SPZRHOL09EF7QJG1Q170g3HZhHpN4ZP51oLGctGXNq2
+OtzUtBjqMPx50JGued6YTGrM0jw98nn4jVFjAF947ZzBqQTJedRH22iRYzK
Tb2iCgemEOlS83NdhokZ4wqWcwtXJJJY63iHdyFiRm7T1XEPiuKIkThp0ReN
JkapGzG+EdxIohcSUrL/bBOjnYe9vUxWMHO+lb2vP6topPNb3y6HwvId6Lpn
5dvIjSl0DozgDa8ynkvXjVxLjXel0Plz77plTSMn0fXCWIVlSnfpfBuxblrI
bT26rrH3KHevL52flflzrnkOpOumcnZW08/R+dxNT22ZoSpd51wfkr8gks7/
Gi4PJ/sN6uDvCJ/ImnT+FL13uJUNVZYeQtdnx6ZO/RxP7zty5S931+rTdbvD
o99wouj9K+1t6opv4+h6yshzix49rKfqZmP7d+21kK5nfY7x2VJcR9W7nl/V
r2klXVfO7Gbhw62l6gEKs6t0Aun6oe5PT/cZS9edne8055bU0Nfhlp/1piN0
vXl0/a452nQ9K0RGXqetmt5nRU3R3Bd03aCnzJS6GLre3fX26/xL/74OvQ70
dqH3E/q4oOsAXTfoOkP3BbqP0H2HnhPouYKeQ+i5hZ5z6FxA5wg6d9A5hc41
1AegvgH1GagvQX0M6ntQn4T6KtSHob4N9XloLvx9jkBzB5pT0FyD5iA0N6E5
C81laI5Dcx/KCVCugHIIlFugnAPlIihHQbkLymlQroNyIJQboZwJ5VIox0K5
F8rJUK6GcjiU26GcD+0F0B4B7R3QngLtNdAeBO1N0J4F7WXgHgftff/jvP+f
pmbY7fOrnZsoPYTrDrcpiihrdz/pXVcvoCw72W5bXMGnTDD3VLlyjEeZ22nm
p+q1XEqjGdWuqfMbKY/2W6buMb2B0mH1HRO1ifWUCcW3241G1lFqzg9e4TCt
ljIiaZ106SdWRYGTR7JiDTmvHL7P+Ekdo8qKvk9Vq6uI1KDTxzT31rNGGa8K
OPae2GZefWSo18DYcqtv7iKHCqLpLlbr09jAGBClH/Ny/jsS+2PHsPcXGhm/
Sl88s25UKXFZ/DVp/nQuY3LP3kWDTd+ShLK1H5+lcRkbtpRp3U0tImVrjoUc
d+IxuletmmSVWkDSygOOmlTxWDctt9NZk0/M78zSt/fiM6p8nGxffIRDAjes
7pvdVcAYf/HlYePaXGJyu1Yzcb2A0ZYf0//R1Vck7ecb2zOlAkZvGY33+xuy
iCKvQLF+ppAxwr972OXtmcTuS0vojVghY9pI09VS4gzy9UjzgDXdRYyanJVu
z3PTifTET29+uooY7/kEGvXKeUykzey37KkTMcZtsXkxaf5D4jVh+/WJkrn+
W60rgZp7Y+6RsyGehX6RYsbmEhvZs/PiiOVAzoXzvZsYdd28zM4vjyK+z2fI
mBxqYkxrM4ysnHCOZAoL4k7wmxilnHqtndrXjTlPQa9s2iOv0jnh1mNu4s0B
HXwfrLrH801H6byRtmWvwW4Fuh4wxG73gV10nulacUop9gudiz5tGrEyYV0H
e+XKzu4379K5qzxmYaclo+m627H55e0n6VxnNmBW2KUedL1Eb8M6lR0dfL3J
dkZYZDadPyOP5g1+vZCuty8RhLjk0vk2aJX+EUNjuu78LrvT7UQ6P0e7dR6Y
OJKuF75W6fMshs7n0+at3OyiQ9fdLn+7m3ONzv8pqhbqr4fS9Qinxnf5MfR+
YWr8cPVBbbrO8Zj8xvgmvdfolp2SPq5M17l3Rz3Q9Kf3qYDIFU23Fel611HO
88MOVNHP2/jtO1rl2Lpm2qWnheGS/Gp3oiFY9j1Tdx8m7Fo3vIlE2CyUMyyv
YOrWHx9qcjPFpKSCYzf7QzlTjx2zZFTJMjHR3Wa+8cK7d0zddoAft/WLiNgZ
Wj1vaC5j6i37qrO+BknqqXpt2/ilTN1QveJV9zEiovgy+seZ5hL27ba3ylYU
CEmJ0CEsujdbN77+qdL2mFBy/u3H2K98y9TT+up/v7NaSKr0DrY9EBazr9N3
0P6psyWvM+FV6ukbbH3Vh2+87/pC4viu1dTzEFsXhQ+1Sx4lJJyj1s2LHf+5
Dr0O9Hah9xP6uKDrAF036DpD9wW6j9B9h54T6Ln6zz/6Ofxdh55b6DmHzgV0
jqBzB51T6FxDfQDqG1CfgfoS1Megvgf1SaivQn0Y6ttQn4fmAjRHoLkDzSlo
rkFzEJqb0JyF5jI0x/8+96GcAOUKKIdAuQXKOVAugnIUlLugnAblOigHQrkR
yplQLoVyLJR7oZwM5Wooh0O5Hcr50F4A7RHQ3gHtKdBeA+1B0N4E7VnQXgbt
cdDeB+2J0F4J7aG/z9f/bjMa9wSPLRRRepkc+DDChk8ZfnKuwphhXEppnpH8
ol0NlFWPrtrubKyj9P56Y/H0Q7WULlMKrlUr1DFWjDI+MoZbTby35Ni/1axn
TLMx56fMqSIJjV8GJ+g0MDaY9olo2FVBCt4cvCie0sjoG7RzuP6SMiJfnlOZ
MJnLWOZ03r7O5i1xkW8WzhjPY3z4dtwUY+dC4tFt94TaIXzG8KaTjtaheST2
ne30ikECxo+llSc4Jrkk4Zf7nfAPAsacTqa15tZZ5HsrZ8ewFCFjn2mq00ef
yyCBb99v+rRHxOhYf6DHMd3HJKrT6ZxqczGjrlBh0+bl94hhKifhuFQTY8Qs
1+GXPl4nttw7x4LTmhi9K7tfvJl1hLnP3tzenYeep/u5kX/71/6vO5gLgxM2
z9ei62o3Ewau8qHnS/m4h8ODufQ8yim876tpRdejrTPevjrdwc/fRd99eKMf
XdcpXHTEcl8H3483bmtNv+/0XC5PrzkwcStdd+68+poVh57vzoP1+1bY0XWp
kxrxqWV0fvDcFOLqbUXXhcteB9Tm0vkkzlxO//IUuq7lvyL6/l06/zgfNCo6
PJSut2vojCvyo/NV2sIwTdVWOqcZqczon76ZrtvJR+rOqKJzYJWV6vcpE+m6
wd2wXnNO0zkzKeXKC2sZuu7IG5bf4sLmWOm9+ctlapuI4qTjdqcesHlYfb+z
utvKJpI1/cQ85Y2VTD1hc7Zek0hM0mR3dypewubqzALHGCcvMXHr7TsycAqb
wx0GWjgP6CIm3rOzjifLsLldVav9oNxOETFa7zz3Ugyb/28MX70irllIolc4
1SUtZ/eFGxmHKzbuluwdm17HdJnA7h3z30emjhgrJAZj1WxXu7N7irpV0ne1
GgExzc/ZaXq/iH1/HkuPjoyQPMflQU6hvdn61xl97k5ZIyBu4bGGiq6FTN1D
Xn9LtrqARA/p3H93dgFTD1S6I29azidVcROH3tNk62XPz1nsOcMnEa575t3b
kc/Um4s/DH5pySc258vfeOTlsfuOydUVeXKS1xmnvKGnBlu3fmnn4pbFIzaf
t/ZW2cFhX8czZKzOIR6JW/mVW376DVOf9OT8klVzeEQxRSo83/Y1uzdZxkV+
luYRuytbJxcPzWXqV2cmL5jykkt0Ta/uHiR+xdQbJrjbvfbnEu+fpEbmbjb7
/w0mjpktyeW6A2VrrI68ZPdEh577LqlwSVqnKR7q3llM3ffrHR3txkYSUbfl
fb7PC/b6P9nFKb8nOZ+pdn0s/DKZeoDoyURvn0aSdvWJ3IGTz5m6hadsYve1
jSRouf7x0fXPmLpsxT7fAzMbie7i3RFH5rJ1W1Wfkep6ktfxOfH85K8M9vrU
n7ldMKqRKO4WOQ7N++c69DrQ24XeT+jjgq4DdN2g6wzdF/A+Avcdek6g5wp6
DqHnFnrOoXMBnSPo3EHnFDrXUB+A+gbUZ6C+BPUxqO9BfRLqq1Afhvo21Of/
x12g5sLvOjRHoLkDzSlorkFzEJqb0JyF5jI0x6G5D+UEKFdAOQTKLVDOgXIR
lKOg3AXlNCjXQTkQyo1QzoRyKZRj/557oZwM5Wooh0O5Hcr50F4A7RHQ3gHt
KdBeA+1B0N4E7VngXgbscdDeB+2J0F4J7aHQ3vr7vv+v0pff19WwiE+ppiVt
Jy5qpPT4Zjju4Pl6yjg/I158eC3lmLGLR+db1zGmGko/eeZVTeJ2ty72vFnP
2HxisOy5H5XERP95qmtbA6OOfVxmgto7YnExPu3qaC6j4ghual+vt2Tzz6EO
Z9fxGDO6nsudVlJAvCuUpX6e4LNuvP+rmwWHmJw88nlZiIDRNiR/QrNLNpH1
uxyreFrImPlmkjjsyDMSdbA9Ou6YiFG/annfJPdUolekPrX5kJgxpFOoYeqz
u0TJeq5OiFcTo135pfid7iHM9Y4WyqvNvU7vrXEJBUcuXuxgb/XVUBuSQPcN
g4xBgfqFHfSfqiOqez7R/ap5h+HCQA26HjcrXDbDiu6HQW+nOAki6P4ZnT9H
7n4B3YcDbjws3aBP14c/SjgWd5Hu89ut733Z2L2D7xcdN7nUzraD7xftetkx
6hU9j+RiI+Z2MaDr+nlKC5yv0PPuVlvkqipVui7FXz9j/rkO5uY9nYgIebpu
YT3+rcYhei4/m3GhJqCKnu9pHrPzjlvSdY3uWT7SGXR+cPQ826d8LFv3djSP
3J/YRIwOp6sSUzaH9P9g7c0Z10SSbEuN/D+zeUZqo1/m/EeSXNRpabNhIZt/
ahXHjt6tLyYG2i1O433YvGS5rt1kRpKIcFqd74aZsV8/km3pG906SkRC1ugP
b+CyeUx0+pil4WUhsfhUzukdzOY3F6c1pqVzhSQoQKx/KeGPvDfol2nzN0nO
zPFKLGn9Ix/aGf4YliAgSc29v5QStq6aM71os4uAGO1T7XfsJJs/vRf++DpG
S1KfvatlWx2bV3+Yhu39Vc8nnpMOPfg5g63rWe3S+nlRcv6XjNuwJ5DNw3Zy
lce9V/FJ86DRG9J5bH5e5fpT/o4Kn3CVvl+ZaMTW5e8c7PqriEci7psc+3GW
zedGm8/VOJziESOlVufO5WyeT/wZq9/JikeCvmyQkY5k8/+PJTM6cfvwSPPF
ydJ+q9l9QbvcQ2d2IZdwzJZUWo3IYepH228P5ZzikriyzbGKlew+EtGjx0f1
xVyioTsm+cwZdn/xSXddN0GBS4JejBJ+W8DuO3oaVe7yf33d6LKdsXEndj+S
mqa6L/WopK7j45Fwn92z9s48p7vGtJG4zf308d0mdi/bW/+h0LWLpL7noZZ2
b3a/222rMcMmvYHYPbs86WFmOlNPdp1zx+tIA4kYtcJ5+7U0Np9/VM21WdhA
0vbId/FUeMLuTd2n9Z/Uv4FoLLGpVKtMYerCpwnWqjX1xCi8m71MUTL78U6Z
UX4gvp5oENfQPl+SmHpVkYJuwUHJvLe9WEXUHrCvc2ZHyjZryeu8O7dyj919
pt6l0eWK3HjJ60gvsNnHT2Dq7qcu1P5QkuSHJPU6/ot4pv6dY20gkKonVaPW
6+n2YOvuv2bYv2n76/PBO6pUIu/+Yx18HeDtQu8n9HFB1wG6btB1hu4LdB+h
+w49J9BzBT2H0HMLPefQuYDOEXTuoHMKnWuoD0B9A+ozUF+C+hjU96A+CfVV
qA9DfRvq89BcgOYINHegOQXNNWgOQnMTmrP/+UfP5d91aI5Dcx/KCVCugHII
lFugnAPlIihHQbkLymlQroNyIJQboZwJ5VIox0K5F8rJUK6GcjiU2/+e86G9
ANojoL0D2lOgvQbag6C9CdqzoL0M2uPAvQ/YE6G9EtpDob319/X/n1UjadP3
D4YiyrhFx+5nzeFRepcZns+xaKC8pVF8ZNb7WsrlwQ0pw7bVMX4ZGrU+26qa
qCauWvO4UwNjQkVD9bOvFST3VPgcN/9GxtC5I8fdsS8lCa4bNzfWcxkbEl6m
zVtYRIzGeK3tPYfP6un37pVuHmmJ6TF7gaeA0axr5sZpY18RzXUNI1sihIyq
CecVzQ2fESN+r7jmVBGjVDfzJw+UH5FVSlNdzmeJGS3GeTwNHx9LquqU75S8
a2KUsrGK3au+h7mupjaPBpl27eDrtr/GGB77Qp8vLYX1cx60dvD7S9NMe/lX
0+eXq2TzQKaxg5+LHGxxpaAbXf909tahdE26n/QdMue+cFYHXz9NEOx6ebSD
72tVUHhb9JLuh32H1Rd9VKDrfvrzm6bY031Vt8BX7P+Q7s+czXH3XvWj636m
7Vo1u+n+L+cUfEm2iZ4jfobzY4/OpesWft7vXt6l59HpWz3d1mvQ9e9yW3va
+9PzjvNoRPiiLmw9TdukaX6g5HnYPM56ajX7eXXVVE9T1Z5//V6VMffTw9j5
22Yjd8QtQkwcKy8uVjnJzmtbra8ZA1XEpGr9h03PZ7DzvSr18+OnFyXn0tap
okGOzQNRdk5miweISMRWObIgmc0P85uFw2LOCUmSDadUcw+bN+xePO46nAiJ
28fynmXhbD7Rc8k1Xdsmec5OdprU0sjmmYKro3KexQpIkIrjT6cJbL34nPkM
pw0CEvItfWCAF5uXUn17XQ0aKiAlFpHnNhWz+co3dmSlYhWfcMbbj9bWZevF
3rEJ90L4RPnp+PQMLza/JY/Rb2m35hOLbZ3tXEvZvMf/Ka3XSYlPTL1O/jo4
jq1PClpSm5HDI36OC5N4+9k8eda7V3+FAElePWjquiCFzZ+rxp6aHL6ARziN
Zf367GbzasFZncw2eR7R+FhZmTeHzbdVo2d2deFwid27Of2G9GHzcKrBxGif
M5L8PFB23ikBm5/PbvKwbl7GJc0KFnF3H7B5207XcXHXflxS9aH7uX6b2Hxu
PWrxqP5vG0nc6zOvXfXYPN9lakwdOdtIFEcu3Ema2PwvtWvvcuWlkvO5yvXJ
rhh2X5gvo3yqVVGyRwz3LHtlxe4XijwT3Tt5DcQicN0HJ+Wn7H2JGvU68rRk
fzHiSBs0svuLw6ytIvNlkvMc4mzScxO779wK4fhYqUn2oLYRmuYDU5l6yu2Y
09cr64ldQcTrY/HsPnVh2rqeYVcl+9fq4q291rP7161hCtUvHCX72vpz2a8H
JP7j3pegYt8c1STpC53e2x9eye6VGkNag15L+oj3WU3LYYduM3XnYtnXGUcl
9bQSZbO3N5h66C6FLqYrJK/jPXF6xJDrTF1TbaWb9XhJXW/Ci7Syq+weF/B5
eG53yet8sa6Vjotg83nmntbtf/1c7g/rFSZLLrCvH3z0jW++pK543UWxPoR9
fnydElNeSupKud57D5/7xzr0OtDbhd5P6OOCrgN03aDrDN0X6D5C9x16TqDn
CnoOoecWes6hcwGdI+jcQecUOtdQH4D6BtRnoL4E9TGo70F9EuqrUB+G+jbU
56G5AM0RaO5Acwqaa9AchOYmNGehuQzNcWjuQzkByhX/+UfnkN91KLdAOQfK
RVCOAnMXkNOgXAflQCg3QjkTyqVQjoVyL5SToVwN5XAot0M5H9oL/r5HQHsH
tKdAew20B0F7E7RnQXsZtMdBex+0J0J7JbSHQnsrtOcyz8m/NDaJM01ti4Cy
LGzY5KTeXMq9Ateoqtn1lG3V21QafWoZe8UWLB+RXENSh7gdvL+xnvFl6B3P
91nviXTsz7jnqo2MwvYuott3yoj5N65M+jUuo0qvOdyUXsUk/JqL2qbRfMZR
Cg9uPPPKI2ZGqkVJPgLGCfvWdbrJyyZyfMMjW9KFjPE+FwvX7cwgDv7PHvm0
iRh1T7ycULA1iZi/kn7TuV8TI6d55bkUmSjmOqk5vx77pZjef6V+Ck5anOzg
99yubl+gvZV+/h0rrsimOtLnxXTXMlXOPPp8yZ3OMveZSZ9HuREcua2L6HPt
eX/tvdvOdB+QG+Qezwnp4OePenun3Ezp4Pf53K5xc2+n+1X3idX+R6bS9aRN
48vG7aD73vqJae2Tcuj+aTOyOG7PJLpeckUYZXmW7sM5w/v4a7+j+7lU1jIf
9Wkd9Hkj8rLsJj0vdAvtfY71Z+vFW97+fBPRRELOqf6Q6cN+3jhUYC47bJDk
fuc+Pb/sFTu/YrXcUlbfFpO4DcpvhQnsvEu9kNh1oraYlBzJOnZoEzsfN5cV
XzF7JCLdh6qcI1bsPB2jO75s1EQRcWvffZnblf2+uND354Mi/vq9q3e8N/Xm
sPNaWumTUuJSIQkaVzN+bjE734t3ed743FNIQnTHaAvU2frVkHU6gS8kucKr
TVy1jc0JhqahIlPJOQm612nJpCw2b0T4DRZrE0m9aKGlQJ2tNzQeF1T/4JM0
4/qce7vZ3JIb0LB1arLkubRLu3A6j80/VQ71Zp67+ET3wPS0W+P++D7Gdfuj
Ok3hEzuPGRqHjrM5ytA5OtqojUeCel27drmRzWOcPI9junclOU0uZuUXQ7Zu
V/dKK3Irj1Tt+PZK34DNdQX9emYI9SV90WXym0vd2RxoL7b6tKldkj+vRz/v
XfbHnrtMuF4+RZI/E8PbZ91ivy80rveCE8O8uMTNZmfO3a1sLrU+eWlZkZHk
/xerJ2rPZnPsWVNzqe1dJa+/+WCn2f3Z3FssW1Za86KR6E6aNdO1kf1+V7ui
0+tuBDaSKm2u0PIZm6vTjrdG1Jk3krSXr4bvPMzmcMsG/XeDejaSiP3dTUMn
s7m9of/OYPVcyZzYZlkd3InN+QFtH8OmnpTsEZzHPbWL2b3g+/yLp/raNpAq
0djk3EPsHqGZcS68aLDkdS6JRtrMYPcOvl80f1i9ZH9ZfkZ7Ywu7p3y/eOCb
x/V6UjVRseDaUXavsU31ezTUuZ54b1hmuWIKuwcZHja7KDe2nhjp/xi7L+eP
r3uOaC/M4tcRoz13F5eMZvesKjMdw6nxkr2sk8exCGEs+zqdvy/J3iup68Tt
ef0khqkbbU4YbGgq6TvmXXcfjbzGvk7KDY/6vpL/n249R3T5MlPXvbPnXGKV
ZN6usbx5RC2Mqet8n1rfcFvSjzauyVOyCmbqvr2m/LpxWFI/Wpi+5bk/e053
u/rx7SX1CLk5Z7btY6+bhmGKrZmkPjzG1GnrFqau1i/fbvsMST1LX/7j0JX/
WIdeB3q70PsJfVzQdYCuG3SdofsC3UfovkPPCfRcQc8h9NxCzzl0LqBzBJ07
6JxC5xrqA1DfgPoM1JegPgb1PahPQn0V6sNQ34b6PDQXoDkCzR1oTkFzDZqD
0NyE5iw0l6E5Ds19KCdAuQLKIVBugXLOf/7Rueh3HcpRUO6CchqU66AcCOVG
KGdCuRTKsVDuhXIymKuBHA7ldijnQ3sBtEdAe8ff9xRor4H2IGhvgvYsaC+D
9jho74P2RGivhPZQaG+F9lzmev5LVeNKRzo94VM278z3u7qlkbLLw4EH+p6u
o9Q4H1sS35fVIvRbcktVNbH4+jjPtbmeUbF3xtGEsZXEN3bf090JjYzOn32S
TtSXkDLBzG4DFvIY3acZNif3KyRfPSo093L4jJqT3vQfoP6G7J18zH/RUCFj
n4SUzKETXpCCY124VxeKGOUe8k9oaaURpZO63u7+YkZlvYc/zhy/S4xaxrj2
jGtilMp6djvxWyBznUo8Lhef0aL3ZQ3xl9AP3zv4fox1yr/2ldLPv+PUiY/f
xtDnZbh7/GqLm/T5qjPUeNo5jT6PJYUy544l0udXa3X62zwefd5LduUpbh9I
17UeeMsvnkn3DSNLeYcre+g+41jxpN4krYPPB3Z5vnhYN7quuLf+5h27Dj7f
GJCi1u8J3T9LeK/edlLqoP7UwVRnUwf7su/tBbolHezFh2ocm6ey9fDuR+Kd
MpuI35nFM+Td2HlhH+50bvbMJuLZI3D36GHs52/lS96lehSKicaFa2VaSuzc
aXnTHv1llZhUybhqNvPZ+eVydnKumUhEFNtlOxnlsfNuVd6WYx4uIuJ47NzK
6JPsfEyoqei9SSAkaYk3bvmasZ+v7v8xQSfeQ0gMKtK3pGr98XXhZT4q+uOF
xM02i3Tew87lin5zNzQJBCQ6cbxXcS4739339DN9HyUgEfcm6o8dwtYtjj20
f7dJQEzLF+2K9Pvj52Sjpkb1GyMgWhpnBic2s3lDY2lKjEjEJ5xCa638JWxd
N73rhe53+KS9pqfvmftsbrnK7+vl4MYnIfPvGUip/JFzen6+7TSOT7zDN00M
9Pjj+5njzros+vDX5//aT5q8Y3OUxlCyaOJtHrEoUjc5rMfW5Ze8JI938IhR
qHjGAzM2p+n+On2+2JBHmr9xf+lq/vH1Ys0PZdJSktd/et9kqBT7dZa09bLb
5zznkrTPerNXlLG5UberycD+gZLc2He1n2s6mzOldsooZVtJzpvliDUfr7O5
tPjT9akL1bhEN2uu9pFANsdm77y51bJS0jetlxtcXsZ+XcnXz2zL+SuSXH1j
n84vHTYPfw0Re2x1kOTn79FLJkux+dldhvfpzPBGYjQiMEuU+MfXubhr3//g
Sc6tH29l60k2t6dtDWmbeEuS8w2+cuRXsd/XGnoy9JCMu+T/l3Q9N4Kw+d/I
1aGf0RRJ/l8oVew97TG7dzi9MeD9lOwdk1UN1FofsTk24pRJ72f1JM00Of1W
9EP2vh8x0uT41RM7s8P7htiw39/rnL5xQU9TyR50XP6jG+ce+/7bSv2wk5P0
l0Ndal7uYb+v+Ow4q1OnXtWRtAfBru6Nd9jXb+rS4HNGUk9a2G5++yb7/nzk
Tepl99fXVU3mqx1gv07qc9MxtVlLspc5jMl5PYH9uqrtnsteo1sk/chk6uVX
P8OZunGC7chLKZL9sbOOZqXnGXYPWnPs87Igyf/PDlzhNTCQqd+Y7HVtxF8/
97hhyIOM0QfYvcw4sLP6XEm9OVjXuM6Rqev93//+3gfhOvQ60NuF3k/o44Ku
A3TdoOsM3RfoPkL3HXpOoOcKeg6h5xZ6zqFzAZ0j6NxB5xQ611AfgPoG1Geg
vgT1MajvQX0S6qtQHwb7NtDnobkAzRFo7kBzCppr0ByE5iY0Z6G5DM1xaO5D
OQHKFVAOgXILlHOgXPSff3SO+l2HcheU06BcB+VAKDdCORPKpVCOhXIvmJOh
XA3kcCi3Qzkf2gugPQLaO/6+p0B7DbQHQXsTtGdBexm0x0F7H7QnQnsltIdC
eyu05/6+bv9Wo+9toYpn+ZQZcSu/LpzbSNmwrdfpWKc6yvC1v5LX6LKeEXlv
dHtQTcq2pPaK6tHA6B73okC+toKYb//uHfqskVH1qqyXbnwJMXk5UWS2nMc4
JnK1gcqnAiK9KulEnxI+Y1le7OWgptdk0in9U6aDhIzJp56dMpv/gvjYZPfy
myliFApnXn/jkUa8537Srt0hZpSKCvi+fFc8CYyqWjL9eBNjxPOqHd5WZ5jr
lGXoYvDctoO/x3ruyvxRY+jP89Q9cnrhPIh+np0PTNpwUYl+/i08vI3LutPn
pfuzg+OHD6LPV7tCj6N1Bh38PmHV3ePcl9LnNyQ7xTA9iD7v+mEFq45kdvBz
wabl3WVk6boB73R4lS3df0ImvibxF+l+dUEt+5PCF7rv3dPTbLu8soPfI2r6
xVvnJd0/p7mlRa0ZTtfvHfbKO3iA7s/RV6Qqnv6g+7n3ry/Pnm/94/f6rjjb
r6mliVTVfr5fVM3Oi5aQ0P0H9zQRu32dSeY9dr4UGzyp9ZFuIsq9Vj+cF8TO
o2FmuxK3RYqJzYxxWYPC2M/3VjyRHjNTU0yi3wc1X1nDzrWMrPfJU5+LCHfH
OMt+LuwcDH5nqmA1R0Sah0/SXDKGnZuK06vvTuQISbRywjTf7uyclS9LFMa4
CInGkJdvtPqwczlwcXrevhFCUrXAXi51FTvHvd9u37+pXkDSVCMfH0ll5761
zfPBBTcEpGSlyxuF0WzdtldqXw13Aam6WqLHufTHz6nNvv7JfZKAJGlfqR3S
na37Ht7yrdtXSW7JPfup11Y2n0TVD/nlnMYnGo8LvRSr2ZwzvzQ/Y+shPjEY
fGKT2gK2zlF4dOKyKZ/4XbdsDL7P5qgIA6UYfwU+CZKP0yzRZOuplu8UtEt5
xGZx5EjeRTaPZao/vfA5lEfc5tfLOHVh63GFie7H10vqI0/Nympjc6D5+ak/
nEfziPfPUR81StncKHK89GDgRy6JkFM/ezSZ/fqL/MvFjw4mcYmRKCQ6MJTN
n18TL/tqH+CSqlNalwsPs3m1ofJ7apYJl3jbNt8XrGXzrWxA1oDqnpI8nML3
2DCVzcMZLtPLpAoaCWe4nnHXwWx+Vo2OVth3vpF4my5Y6PGLzeEeCxYIB9g2
EotdnuE7n7Jfz7J+OHef3YBGEnfRYWfNdjbPc2btv6Rd2kAUF+5VL5rO5n87
3zcz6y40kKpL8vN2KLL7gmVoa0rYugZiJBOytl8Z+/U4+wNXTmWNlPx/+eXJ
RYHs1++MVA0NA4T1xFt6jsnu6ez+Iq3bd+nW25L9qOrlEhcO+/VBVePp4spt
kv5yaf3C+3vZryd+bUjI3DZZsh91k8nYo83uU+7P9T6XfJHscYndonc9Zb9e
yXlufuFLimTv2640yTuD/f7hAAUVGzdfSZ+a3Fqd6c1+v3Haul5hny0l9QeD
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
NAUw1zuttqRuoG8H+/WrSNOzkfS5mM2LFj6s72C/Nr7V48MQus59766/3Jk+
j7rerlvdgjr4vNZSfevNX+jzvteVdzNiAV2PzlVQ+pTcwe/Hflp12kWFrlv1
Lgr84E33Jd1eu/K6faP7WPR+88p7bnQ9ZKxqpwIx3SfNXLVTW9d38PvHEj6t
OthA91uhjE3fee4d9Gd/ncoLnzv4OxHdTngM9Org+3z81we4ytP16BHVj8dd
o+eFWUHMkJTpdH3ltsJp+rkdfD9S5cjoLGu6vtKz6qRTIz3vOOvH1/XZ1sHf
FVU+5/hDia7rZ022yb5Cz9lpD7ZuIBPZetCTdK3oiibCXV23YfgNdo5/lV2j
qOPfRNzCRFriYnbuN7ta3C0a2URs+s2beraWzQkWxiPnHXknJqZaNZPyh7P1
0H0HPz4MEBPvaSaVnDV/fB7gWL+AO4Mk565iYmWi2R9/hzdKnGNfJiJVl6y8
v1xm80xx2fk+R7aKiPJV79t5YWz+kVUvkv3YTURCsvoOrDjO5qXdj8PuvI0R
Et2V3SaHRf+Rr7709vm+Xkg4zbfm7vz+x9/DHfkl1mmokDjWiCfIW7N1Xw2X
Zw8+CIhFnqLTgnI274Vf7ry/NVVAup/2Ta23/ePvxeiOapM7IiCm7Q4bI/LY
PKm+YaWy1yIByfrekJJk8sfvT+tf8CCir4CUJJ14dTKBzavGs8qXSJXySfQ1
zTfeg9h65sqo3GeX+aS5cXBn59NsHjacEm6zdT2fKCr4rxr4jc3VY17sf2Ki
Kfn/W59Uxq354+/pHHe9EFknyfMb+h4Je/TnzyGq1etf+evnEF9MO9SPrZtP
nXbi8loe8dYakzOSy+4FFQEDyxSH8YhFmv8sqzvsHtG8S+tS9zouiVubPXD0
dnbvENXufDvkimSvcV82MUab3VMc7vDUc9dJ+ohL0JlOYvbrccELq268HMYl
VX5rrZvj2T0orf76vnc1jSRt79xd81zZvWnSmGu7n0nyk2LNlA3F09g9y0jP
YXr05kZiJPVrwrx+7F52a4e22sdxkv3LrDAguemPPe7c2YOXvjeQuE/NAepN
7N4XPLrnUYNKyTwrnRyvuoyt662001ySLelTudVPQlvS/7EOvQ70dqH3E/q4
oOsAXTfoOkP3BbqP0H2HnhPouYKeQ+i5hZ5z6FxA5wg6d9A5hc411AegvgH1
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
v01aptBjRShd7/tm+Jbxi+m6spL9iOGd6brGtszHJTF0/xdue5anuISudx0V
/kW557//fEWIrf6Mwu103c/urv0a5Q7+rpnKj8syD+l5d2Gb8m03O7ru92aO
vsMIup5lnN56vYCes4c4r2ZpHqbrt3bf65mnQ9cv3L1yU13Qwe+Hb3/srH2B
rntrcxpGGtP1nDsbE/N4dN5ofntEGHWWrlt80FEzN6HrfguWWxv/6uDzG8dj
Bh+/Qddnn6lTWL2gg++vME0ROLTTuSvr5bLLgiC6fmjGeN7N0R38fBY/4nNw
UQefD3FcfeWnC133tnHtye9E1zmXZ15XOU7nT5scy6NamnQ9KNik8+IEOvem
LM1vXzaPruunrlerLKTztsbppcH2Zh3k9jMKCSG5dM43jWjarLeIrqdwNEOj
39F7RKG3S4afPVuv2nZ6jf/3JqI7uMV12Wd2fxFdth0eGt9EOKdrbA/M+OP7
K6S2t323byJunYc6tu9i9yAXy5TTfQybSBCn2H1sb7auPmmm+jmdJmIqM+zl
rqaKf6xDrwO9Xej9hD4u6Dr803WDrjN0X6D7CN136DmBnivoOYSeW+g5h84F
dI6gcwedU+hcQ30A6htQn4H6EtTHoL4H9Umor0J9GOrbUJ+H5gI0R6C5A80p
aK5BcxCam9CcheYyNMehuQ/lBChXQDkEyi1Qzvl7LoJyFJS7oJwG5TooB0K5
EcqZUC6FciyUe6GcDOVqKIdDuR3K+dBeAO0R4N4B7CnQXgPtQdDeBO1Z0F4G
7XHQ3gftidBeCe2h0N76+zn/X6XetQKvW3eaKNvujjF5ncinzE7V1TumxKNM
/HhNxrInlzJ4z/1rTrMbKftrv3jOi26g9F2ytFBVibZM/O2kzcF6yi4pD4Kq
iuoo9YQq4y/NpLVb+CimOqOWMu7amC4yRrS+c45X7/ZnTTx3I/bF3RpStXSQ
t197LaPu/nyi17OGVBxUdpddU8d4f+oKS7et1SRqdoH6oKQ6RmkV44J8QRVx
H7d96wfFesaCpLyiMw5VROS/fthQ23rGKevyz5z/8J7IB30TXImrZyxdJD9t
gLiSpE1YkdSzvZ51o7i4fEAlMTrX5WXVrAZWw9bIVZMriH1W0nCpIw2MxVFF
J39tLie+A1aE3chpYHR+KB4jFfqOuDX0HF/Vv5Exzqzcec2jMuJbOvzbKsdG
Rmf3k70aMkuJnXdaZ7VbjYxV+x5/vvmthLQdun80idfIqLb1/ZriWSXEY8Km
eQ+GcRkvOD4bVnb6LSnu4msStJ7LuPeTi86i/GIi30Pv7JULXMbSOofpytrF
JG11RsHNd1zW2vuHvjsXkeaZH2uOqPEYdQ1HLXO8UUhEWXsHzlnDY5xyzT9W
t6aAhB5fEatygseoZyX6HL+kgFhnJt0cn8lj/HGr6Pvm2HxStm1OSNfOfEb3
6+Mmf/ySR+RDvc5Wz+Uzlo4/Mm2FVh4Zk2Eu5ejNZ9yV2P/Xi30cUhzxMPX7
fT7jV8OoQKWUNySo/lli1xY+Y8TFdQ9qzV8TjekZW4pGChiNTjqv/aWYSwK6
pxZHmAkY43NOfjbUzyHJ5T/lRuwTMEYVSMcP6fmK7D7l5qD/QMCoeXLl+ef3
XhLjey8r53AFjM6Zc16sPJ5FvjoVXP2pJGTU9Ow5qrvfC9LyvbKcN1vIaNYn
M//QukyyO5DTut1JyKh5R236rD3PidSVhHcXY4Ss+tmlJtLPiH399fzvZULG
W5cUFZUqnxLVMwcrs7uKGB0ONGfNqE0nZbOe72uaKmJscLWTsQ9JI9kj7rh/
3iFiDDDMDnbwfExCu0xase++iDGncOdDpX2PiEvTAkHyRxEjN9OtfdqlJBJb
VGfef7SYkfttzvJPX+8TE/nV3vFOYsY4u3PfLrfEk6tvAiP1wsWMNrNt552+
HEfcRkXMbK8UM3qrfy95qHyTONh2SrUc1cRo5/t+rqZGJJFfd66tfmsTY0R4
eEZ1ZCipylbhj4hpYpRqGzWwzjSISHd5q9P1QxOjlMee1JRdDky/D+lfVV/z
gs5RcvOOJu1wouunCz4Q9x8d5LSEgiMXL9J1Mwvv8qczOvg8v4Xa7s3VdJ6c
pvP5c4ozXT99YcIUq3503ejW98+PbnTweZ6MKfrt8+l6nFnYdLUCOlebWUb1
9Hei6569pih/G0fXI6bruSsIOvj+FucB36ZkdvD7JVbJHa++8+/r0OtAbxd6
P6GPC7oO0HWDrjN0X6D7CN136DmBnivoOYSe278/59C5gM4RdO6gcwqda6gP
QH0D6jNQX4L6GNT3oD4J9VWoD0N9G+rz0FyA5gg0d6A5Bc01aA5CcxOas9Bc
huY4NPehnADlCiiHQLkFyjlQLoJyFJS7oJwG5TooB0K5EcyZQC6FciyUe6Gc
DOVqKIdDuR3K+dBeAO0R0N4B7SnQXgPtQdDeBO1Z0F4G7XHQ3gftidBeCe2h
0N76u////137X7387l1qotzdvPOJmSxtl8hRF+/vFlO6b9MgZCRtkPGKpVcr
RZQOBT8ump6lvdFn9FkfC1rp9ofeeX1pN6cMCB9YIqSc7hm653oIbdugXe/E
W2h1Nyt8Czemtdzi37dBkTbz3Rk1F6GA0nzLyQCXx7QRc8y++4fQ6iY7+e90
pjWyTum3YTZtxab3n5+q0HqVBO0ZJuJTTnfRmtU7hdZwyV7/tcdpu4yKKDdY
SduQti4zazJt8uVZWYPlaBvGF4knNPAoPYLj3154RJudvHN21XHar5+/82qd
afsvuzLC3ZS2eLjjV+chtIH3Mq8++silLLj89eDkHFrt10EhfldpbV0fTu3n
Q6sZfyHlySraNHW1z7On0sYWD55l3Z82wHLr650fGim1B/b6kPKMNngyL3Hg
Ddq4MRkK3/xpW9xCj8qsoa0q87p5VY+25crCBbEKtG7pbjWGLQ2UQbPttTRy
aDOP9jllcIV2fsG3/Qu8aM1sTi+4YE6rM2LVDLMRtHvVFXNzv9RTes+ve7Uh
i9bnUuubsAhauxuJh8s301rKuHrtG087ye2ytNunOkrn/jGZCndpM25UmU7e
Qnu0uO9l6Wm0k6LUtDM707q1jnhalVVLmbDReoblXlphwp3VfrNp7bo+e3d+
Navbl+WTVD7WEH//N2WDg2oZ797Nmsy5XkOMvMKzNjyvZdR4pmTZuKyGqAiG
D977o5Zx+SXTvOddakipj0Fkqk4d4xTDm/61KdVEt7H+nfKiOkaDESMTbf2r
ScWJOlVDxzrGiVoxb6Ptq0lb1wU9ZCTX6bfHPRW27VgO16HXgd4u9H5CHxd0
HaDrBl1n6L5A9xG679BzAj1X0HMIPbfQcw6dC+gcQecOOqfQuYb6ANQ3oD4D
9SWoj0F9D+qTYF8F+jDUt6E+D80FaI5AcweaU9Bcg+YgNDehOQvNZWiOQ3Mf
yglQroByCJRbwJwD5CIoR0G5C8ppUK6DciCUG6GcCeVSKMdCuRfKyVCuhnI4
lNuhnA/tBdAeAe0d0J4C7TXQHgTtTdCe9d/e/1D0/0t6Xfmcfry5ibLZt/vj
iBe0st/WOvmfprXNTp5svp1WNXyK2cKJtBb9d23idKHdnL7y5KFcMeWkJ2Nl
DK/TWiZ9FnfxpzVcqGL+cyNtVCLZMm8+baYgL+G2Pq2SlqvNcTVaF52zSzS7
0krPVahaIxJRnk1N2DIwj9YrMrTg2wPaYKevpUcu0c7vGh8feoTW0rPPktKd
tD4Frt3er6J1G+2n8NOYNlvzYw/xeNqgwuzaIeq0EZ/T4y78EFIqPh7gd4NP
q94QeFb7TQdu3D9ubhxthWzigzXBtC47pMd89KLdrWm9uWgDrfS5UNlMc1q3
yRe6JE+kXTWL/9pKmTYwNPvZ9B8CSs3wfWpK72lTZ0fm1z+lDSqt6XkqmjZ3
iZTSED9ajeHdj2xZS9uWx7XcPJPWxSDXI3sorff+mUl+7XxKDd/ES20vaDNT
T1kMOE8rWvfLd9l62h+RKXud9Wkt+CkDHbvSHl14/YHBWx5lxPPmtzMiaL1N
L3ax2Ea7inM2MXwBrdSFmNZvI2mNkx61u3WhNby+o85MyKUdaLh0fMP/A4HX
gd4u9H5CHxd0HaDrBl1n6L5A9xG679BzAj1X0HMIPbfQcw6dC+gcQecOOqfQ
uYb6ANQ3oD4D9SWoj0F9D+qTUF+F+jDUt6E+D80FaI5AcweaU9Bcg+YgNDeh
OQvNZWiOQ3MfyglQroByCJRboJwD5SIoR0G5C8ppUK6DciCUG6Gc+d/OvyiK
ouh/Rx/+q6bIT02UssHxfUrqaBvC7CMOv6VdFaDYre0VbbDu0Qf8DNpiFVXn
ise0Z8WBysKHtBoVCycujadN3rzfKewGbUW+yZqIK7Q+1i4uW87RtihYqqw7
TjtpDFda9QBthsed7LU7aVe9fqQ50JbW9oSX/pvxtA1ywX2/DaQNvJs8XfxT
TKm0KqLTh7e0wY9tl/x6Tiu9fWqZ5V3aVdFKsw5fpo0qsQ4Zc5JW13ip7P0d
tHYNlc9f2tN+JZu/DV1Ia9g9t+HFFFqH3dObrYfQep8/47Vehta8dbq+O09E
OWmObMnGbFqX/t6Ns2JpRWWfjgYfpdXwv1VctJHW8GHP3WVzaVu8p18z0qLl
xD63fyVN22Y3q98usZDSyzTWV7qANljXY4NhKm1LZ7NB7jdpr2YacudH/Xuh
14HeLvR+Qh8XdB2g6wZdZ+i+QPcRuu/QcwI9V9BzCD230HMOnQvoHEHnDjqn
0LmG+gDUN6A+A/UlqI9BfQ/qk1Bfhfow1LehPg/NBWiOQHMHmlPQXIPmIDQ3
oTkLzWVojv+38wWKoiiKov/ny7ndPX60qIkydu4jxYf5tAW9sr9ciqI1ae2h
IPah1e70cPTtLbS7TVLtd66hTY1S3RFuRTumqdvhVnPa5qHLhn6aRWsRF7xq
hhGtT8G18PA5tP03uZ46aEpbnG8w9oIFrfzkLT+1FtBKr/VKnz2d1iVEmpNg
QKs5QnFSp9G0FdP2zXs8jNb9UKnPpl60R78Vm6W2iylVR2pf93lHm2Y3Z/9P
Dm3qNN7o4+m0oXbBvV/fo03bWj/4yg3azDuqQ+rDaTV171+5fZa2asW0aWGB
tF6FPz5nHaY19IwINDr474VeB3q70PsJfVzQdYCuG3SdofsC3UfovkPPCfRc
Qc8h9NxCzzl0LqBzBJ076JxC5xrqA1DfgPoM1JegPgb1PahPQn0V6sP/7fmA
oiiKoiiKov9vqh631nDN5ybKhOEpZPR72sw7P7eZJ9IGDsjKE/rRJsZfzzyx
nvaG5iOl62M78HoZ31yFNlvB/+UgGdq22KWpC76LKb05Xj1zP9IGqRzlLmyi
zXyhYGgspLUclD96B48299R9q+cNtGe5IXeG1tG2HZ294XD1vxd6HejtQu8n
9HFB1wG6btB1hu4LdB+h+w49J9BzBT2H0HMLPef/7fOHoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoij6v9v/CwVSd2k=
      "], {{0, 0}, {162, 161}}, {0, 1}], {
      LineBox[{{1, 86}, {161, 86}}], 
      InsetBox[
       FormBox["\"+2.53 \:041c\:041f\:0430\"", TraditionalForm], {3, 87}], 
      LineBox[{{1, 75}, {161, 75}}], 
      InsetBox[
       FormBox["\"+1.01 \:041c\:041f\:0430\"", TraditionalForm], {3, 76}], 
      LineBox[{{1, 69}, {161, 69}}], 
      InsetBox[
       FormBox["\"+2.84 \:041c\:041f\:0430\"", TraditionalForm], {3, 70}], 
      LineBox[{{1, 67}, {161, 67}}], 
      InsetBox[
       FormBox["\"-1.01 \:041c\:041f\:0430\"", TraditionalForm], {3, 68}], 
      LineBox[{{1, 42}, {161, 42}}], 
      InsetBox[
       FormBox["\"-0.71 \:041c\:041f\:0430\"", TraditionalForm], {3, 43}]}}, {
    Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
     Automatic, FrameTicks -> {{{{160.5, 
          FormBox[
           RowBox[{"-", "144.9`"}], TraditionalForm]}, {120.5, 
          FormBox[
           RowBox[{"-", "72.45`"}], TraditionalForm]}, {80.5, 
          FormBox["0", TraditionalForm]}, {40.5, 
          FormBox["72.45`", TraditionalForm]}, {0.5, 
          FormBox["144.9`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "144.9`"}], TraditionalForm]}, {40.5, 
          FormBox[
           RowBox[{"-", "72.45`"}], TraditionalForm]}, {80.5, 
          FormBox["0", TraditionalForm]}, {120.5, 
          FormBox["72.45`", TraditionalForm]}, {160.5, 
          FormBox["144.9`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 40.5, 80.5, 120.5, 160.5}, {0.5, 40.5, 80.5, 120.5, 
      160.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
       TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -140.0309115156972}, 
                    Offset[{4., 0}, {7.5, -140.0309115156972}]}, {{7.5, 
                    7.4381769686054895`}, 
                    Offset[{4., 0}, {7.5, 7.4381769686054895`}]}, {{7.5, 
                    138.52181117687462`}, 
                    Offset[{4., 0}, {7.5, 138.52181117687462`}]}, {{7.5, 
                    285.9908996611773}, 
                    Offset[{4., 0}, {7.5, 285.9908996611773}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -140.0309115156972}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.8\"", 1.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 7.4381769686054895`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 138.52181117687462`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"3.5\"", 3.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 285.9908996611773}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6282339899863503`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.7564679799727004`", ",", "1.8`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8704537488494561`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9986877388358063`", ",", "3.5`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7607864997662287`*^9, 3.7607869467132072`*^9, 3.760788424563975*^9, 
   3.760849122695242*^9, {3.7608513584256754`*^9, 
   3.7608513817412577`*^9}},ExpressionUUID->"1b0d19a7-0b38-44bc-9828-\
785b57884a83"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxEXXVAVF3zXnp3gWVREezu7nbG7u7G7k4Uxe7GwO5uxC5URMUERAEVkUZR
eu/uvcQ355zr+73/+JsP2L1xzszzPPPM+VUYN7v/RGuNRtPfXqNh/25rUmTI
2n7n4NW7OTZtfWzRa2zw7IkJ5+BHw3Nvxo2zxX4F3b6cW3wezv4ZM2xqf1sM
h7DMOMMFuHajx8DZvWxx+82Oz/rfvQAB2y9W3djSFkMaDPvmM+Ei1M5c6V/D
3RarDQ3DOOdLENG2zI4SKTbY40C9zV43LkG16Z86NL5vg4+Hvt+ztf9lGL1y
+YJfm21QJzu2GZdzGdKKRIywGWGDjTwqFVm37wq83r4NH9a1wZp+yYv7wlXo
OXdQ1GI7G+wYMfDBm19X4bXv6elVf1hj7dt/t2QcugbOA4OffLhrjSGZA0On
VrsOa+R9LUbts0Y3+8DwJz7XYfy9MxE7l1hjY5seEyI+XwfN1QkvO3taY+kd
j/+WqHsDngXOT//Z3xqXDC7tsXndDRi3NmNKfFdr3H4nw93w4waER72Ord7C
Gn9HuIZaWvpDw/LLHimVrNH15xjbbQf8wcn3wup+OmtcuKv9MLPsDz5PZ0Xe
TrHCyZW899wedRMatF8SMDfICossmFbGMfAmzIxLWLHhpBU2Kef9zr18ANST
9WFb11nh5bhtbyv5BID9qr0dtsywQumS5sfMmAD4MJ09ISvc2KDjBY/2t6BJ
u0/LNf2tMLjkplrPzt+Cb1M0s1d1tMIdLyc7t3C9DU3Sm3fq0tAK38+q4/tz
yW3wzznh+KuUFe4rCEmP+nEbikHwt1u2Vrg0oliRpV3uwK6P++bX+KvB2d67
Y/2v3YGssF7jjJEatG/yJWiUx11wi8/rVT1Ig37+ZY7YrrwL5+Mb2Oy9ocGF
ob8vHkq6CwmT7lodO6bB9ydLz53Z6x6EzNjZrfN2DW590C5gcMA9aPF3j+Gz
jwYbr2/R7lDp++C2YFm38Qs0ePbIwTfO6+8DRQHbp2nw4PKyp1pn34dzC64X
fBirwU5RI0Is4x7Ag7vb7DMGa7Cg00e/bp8eQMa54B7NumnQWGltl1JdHkLn
9iPen2lO13tvS/1O9x5Cbp3592tX1eCiYOnFmZqPoG9Ct7AmRTVYxJV9wiOY
FZi8wdWafj9zVZlCu8cQPa/ui0GJhZBUec9j47zH4HVt+IGMN4XQqbND5bE/
HkPXza+ub75TCGvW+Tb26fkEqncMrDDwQiEMXlP/zrJ7T6DameNfexwshIT7
NRJvFQmE8Yef6NZtLIRPn/xvPe4aCLXvBJQssrgQIg9eeZjgEwjV7w7tt2Zq
IViv2Fa53d1AqNZAe7n08EKQrnze9CYzECbO2fOwZZdCeHkor/iR2k9hzo2T
9uH1C+H+dJ3l+OSncP/444m93QvBK+XBiGEnn8LNsNPFFigFMNhpiAN+ewqJ
+vR5rj8KoEfr4zNC3J7BKfpr76AC6HVydMbU3s8Ai459Hn6pAKxmFa9XfP0z
6O5kXWvDvgLwpNXc8dEzmJhQO23qhgIoOd1n8rKcZ/ChW3qpMcsKYHnrnO9X
aj+HBHr9mbMLoHVMwp2UCc+h78vx9jXHF4DsE7Gr0pHn0DP28/fWgwrgmVRg
/yfiufocCiD+x+SRzY1B8KbOlfVBbQrgSsMBw316BIFH2vqZWxoWwIIq1hGw
MQh6XKowd0eVAjhBt7n/RZC4vuIFsMYcuL3Q+gWc6P6u7BS7Aqih2xSwDV7A
Mxk2WLLyoeUInNLG+wXE7Y7vnRqbD9rUGvM23n0B8/iCyofULs9rzM9+ARdM
qUveBubDtuWvg9fUCYZpT7c8Xh2QD21TO66+MCkYPK3v/E26kA/dq7Q+8eVY
MAwq2vG7w/F8uLRvwZ41UcHQLafh5sR9+eDZ5u+IK0Vfwu6KDWnr5sOcgPj1
P3q9hEDdOm3ztfnwVRnoVnLjS9i/xdz77dJ8CLX3tKkY9BK2DPQYoZ2XD/e/
5oYVs3oFTsO+/2oxNR92/PiaMxlewSXbLc8PjMmHex42v5uveAW9jAvLrRyY
DweyKpwv+egVfC5d3u9Ul3w40W1ct3vKK0i//H3RiRb0ea7F3ea2fA3tatWf
sLBWPiR0b+PY3us1pJh2B08pkw+a+XWGr7z9GuJf+j3YZ8wH0/LmXTdmvQbT
/u++G+zyodSJYxe+1AkBjLk0uGpeHgz5GBAUMiUEGj85aGObnQen57TRfzkV
AmH9vVo9S82DTfqIdy9+hMC2USeXTo/Ng2dRVyY2LP0GaPM1LfclD/ac3Lts
1bA3YDOiytDS7/MgaWjMIBe/NzCZ0kW54Dy4l7ch5+uXNxCSb+i06nEezLJ0
7b7U4y2sPq9oTt/OgxXB62wqDHsL5Z1aS2Wv5oFmTlrU/ANv4RQee+V7Og9y
c73fzYt6C6FDdk6qfTAP2t7ovTe9xDuYzxdQHqwKTXz3c/g7qH+0XYfCtXnw
Nb9m4OJD7+D3+Wmrzy/Lg2/36odtiX4HDRfXqVBuQR68fh10ZbXHe7BtUX3s
2Zl58C7RvkOZwe/VfZcHG06yL34PTa8PWv1iLF2v+8HfjcPew769Vc8cH5EH
TfnG+wASe9yD8uBIlxeFZfp9gAUONxqt650Ho0o+yei++wN0eX1pvlPXPOh6
JjK0+acP0H/sjAqv2uVB5b83KFN/hA+PNvTY3ioPUnp1qrm1zkfo1XBecVPj
PHh+b32Jkn0+gu2VwJ0RdfKgYULk0vVzPsLx2HGdnKvSzzNcG1TZ/RFSYp5X
eVkmD/yeeuyqHvARcj8HDtYVz4OzKwMKrT5/hNevhkWGG/KgTfXqnWpJH8Ew
eUUTBy29j43pQZfdQ2HrVyooVnlw/kXs2OhmofBx7OOHGkWB/MjKEDckFNhy
mJ+jQDHfZoFvF4fC7gXvEg79UWC8YztDd79Q6M7SRZICr8YM/1TtXigkZpUL
m/1DgWabLzfZEx0KPqZKnSZEKrDmpJdmS14onC9TcPByqALz+cIJg5uULaa8
UWBdQPDxou3DoH4RlqEV+Hg4t8bLCWEwpEJitYjHClzr0KTKsA1hELH3Q1br
uwqsTjjSocTFMPjZaUy7gzcUsGPb6F0YtO9QaOt+SYEObZbbFmSEQbE/NU/n
nVbAd2fXr+ai4ZC4gr1ZBehi5ApNw2F5xT67rx5QoEvzOktCh4SDW3Dx1aX3
KDByt82iJl7hkASnfzzersDu94Gv3hwMh4Ptk5ss2kT3U7xI/fsPw2HawwW+
HmsVqDeNVfBwaNXUOvP+CgWCbtSddcrqE7DyPM+LPn/owKDUyp8g0J8ncCjb
+MHfK10/wWvrqnN+z1Kge6fxf9JnfAK+LKbR/XY8Ljvs+gQ9m21q5zlRgaUl
63eVAz5Bs9js59qxCizpUNKtedQnsC9CFX6kAhPeZC0sUfAJDg06dunKUAUe
7rk/oXSlCDg5at2eYwMV+Dr7T8duXSMgfoBm6+S+ioo7ImAJS1g9FThm88a1
4c4IOFz8YUqtrgrMYNvgZgRM7/ptfGoHBRqd3hw36HOEmrcU2JFfe19FS4SK
DxWYueB9n7mlP0O9U0NnTW2iwNzm2Zda4Gd4Wbffoyb16fpG2B8+M+Ez6Ga2
2B9XUwH33G5/r2+i32/8ZerpKgo8z+5/o8G1z9B8bc0my8orcCS6xNnbnz7D
0osdZq0vpYB+ZaZTSfmzyMfFFfihlAoYUu4LnB1r3uhXRAH/LudL9O/0BZKG
zF/paVAg6X3P+oenf4EOV6bGzNXT+tof+8lh9xdwfXmfEIYCaSeWX4698wWU
IYMP7rGm61mzYeqPb19gQeX9hTsLZNCdPTish1UkVP0xY/54WYZ+dbeNWVIl
EnKN2/6WN8nwrBHLyJGQX58AX6YMtY8uPf10ZiSMuP3ZXfdHBuWqtuDO7kio
qQluNCVFhiy6+mp3I2G6wfg2NF6G8jUqPq8ZEwkthxYm1/8hw3rKfoG2UTAm
vWDJtWgZMrs+bH2kVhQ8HBm0eNxnGdY5etk26x8FMwtDuvuGyfA7cfHBt0ui
IPHQzFk9P8iwZ23H6OBjUUC7c+astzLEVZQWLHwZBek2O6ODXsvA4VV6FNx/
dLrB8JcyLKv3eMoO92iQWhWzk4NkOLHyj2dQ22jo1+D9j7VUZJOW2J2sNjEa
Woyr09YuUIZefANHw2LzdP/Oj2To8PPmwjnXo8GvXr3AtvdlqPG+X5eXEdHA
7k66LUNnr6TE60o0bFzZ4Xz/mzJEfGQF8SuUuVw43++aDDMLxixM6PpVxScy
9BlRafXcOV8h69bkfbbnZWi1vVzNbX5fwa3M60Q4LcMDn9odNwR+hbiyPcrd
P07X22Xr0REpX8F2sKGO/xEZLA8Wf/IzfoP2aT1PZB+U4dJHrH2oxTc1T8lg
v7LmrG/jvkGR3o6jc/bKUOj7ZFmXbd+geExixce+MtQZ8XvL2tvf4EX56/Om
7JJhytCt9z/HfINW2wIGxmyXofutPoR8voPDGL+ebltl+PIttHBene/QyZmt
QBmMH4pMsB34XdTXdTK4hD++92Tpd+BpaZUMPmtMv+JPfIdFAxmil0HWTb6z
7/V3cPQLvPLAS4bx6S/c/2R+hyLHz+67slCGYrY7ZqeXjBHra64MXZsOeTe/
YwzYsmUyi97flHK1zDNj4M+qwZ6vptH7IDYyfH8M3BtAK2qyDCGBVnVGPY0B
ejstF06k51l61JkHv2OAwZ/G42WYtKYnVZofsLUOq4D0vsst9z3b7odYj2Nk
qFx9xdZ703/A4sfHStYbRZ/XdI7Drz0/YPSXepHOI2TQH7uyZs2jH+ATM/D0
s6EyvE79bTmY+ANyuw9b33ywDMu1Fztfs4+F4tN6ZW8fIMOT2yvkDyVjgXbP
orN9ZbHf68VCm7GbHPb0kmHumy79wzrEgrfL/tKLu8tQdsvM/qFDY8V67SLD
6MxPlZxnxQp+1VGGjeNHfeu8JhZKzP9SJKudDB/YdveLBWKPnTJAhgZ7VxBE
iYXy4/8Ob99WhgpWp94ceh4LezasGx7eWobFtXos2BcVC/6d23Q81UqGFfN9
cu+mx4L+2/1D51rKMLnj1NkZdj/hNitPLWQo+imjzuVSP2Hcic+N05vLMK1u
M49f9X/C5ytHfWOaybCjSaU13zr9BNeE42sPNKXnc/Kvzc7hP+Gx6e1uTRMZ
zmnnLHWf/RMa8f9kuFhn4c4va35CwaclqVUbyPDqRq7TT7+fsKDG1ZpKXRna
/63Ys9/Vn5C6PH76h9r0/ntXneUW9BMCyrHEIcPRJe+LG6N/QsZM+Wa5GjKk
l3MMrZBB1zM4rd6DajLMazj3Unn7OIg8OqzI8aqymp/j4IS5QdLVKjKMbRRo
F9UwDtbdWFfegWLNtrAzPt3iBN6qTJ//3u3MWs84sf8o/jtqzeOcRXEMfFun
VZJhe3Kj4zFb46B4r8nV1lD86W6zJ2NPxsHMEDfaUTIUMPh1Jw5KXDl1UUfx
s5ignYffxkEpnkBluCKV+nP3ZxzMZwWqHL1/334TPaQ4sGkLW41lZXjaf1Tg
G6d4YNHM0nQ/vVa9fV8xHpZF/7z2uqQMa9c82lShRTywdDm8hAwOKwY+X9En
Hlau3uLWxEOGxrW+bng4MR6O1lgwery7DE7zVzdt4R0Pk6Yv3/WxuAy37x8u
YvSNh9zHmbcmUzw943FN94vxEDVmUZ+yFG+d/PEjPI2HtUUmRRe4yTDEy3rs
uch4OL7p+s9Uij1uKYNWpservIuu58HNRV/tEuDECR+6AhmiE0eU+1wqAern
Zp+tSPHJtDqJ3g0SoNjVLj+XFpOhdI0Rlf90ToA+b5c22FNUhneteofuGpkA
/YqlFPUqQvmtfvXwKfMSYGv3X7aNXWXoeT42Y/XGBHi5Mi33r4sM/rXqVMo9
mqDiOxl6WDPmlQC2yVur/3Gm9WvoVmfP2wRY/HVdUkuK33oFP54QnwAVz3Ys
8shJhuAt6yrMkxNg7+pZ9aZSXOz3QMtR10T4lUxAlOIVF441c6uRKPIdxQMv
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
8Dy3+sgdVOQynuxNi9TmE6jfXLLncxkmtPrRZ5t7PjQc3mVQ0SBZ5WX5UL/m
haIfKWa74nPjfIELXtDzYDJlh3yoywxxwTKwtn1i33yBbynexbbL6Hzo+nNp
sasvid980k2pOCMfOt/4FjbtlYr3vPKh06q2u6rRvnDx6UWQLx869jveJ4Fi
1hY/vjcfGMq6FCKr/px8qMIW9hvCC6+ub27mn6/WtX/PJx+4/P6O+JVVr7XO
H/IhWbmQGUYxkdmN47/nw1Bmp3lP/OMZLbTf+fCqcqXJYz9QPWmbEnVZzhd1
+yPxEYf2lIoKBM6muPMek/0YjwJgrPFOKOGvFkvzYqoWgIf/fbpjwqcPqrk4
NikAdw7M/j2fAmDo9w/Fca0aENUsgGIVWWWQIeR5+ytTRxdA0ax2HyZFyOA1
6olnsxkFUOTZqW2VPqvva2kBrCb49ItiZivqvLEAsn6VJuQoAy3aSof3FcB4
n6g2XpEyUNLeW/VMAXSKzMjpHqXy/5sFwn8XLUMTbmwqAAYP4ykOZv98LBD4
9qssfFk/CgS+/SZD0i4GuArgreP1Hb2//+ODBcDspeVjKN9kDySIUAisrZBM
sTYpJXNZqULYsQ0fXv0hqzy8UN23sto3LISCzNG3Gv4k/MQIZadCyH/KDKr0
fs9kLVo7oBCUXUwQk+H8Vp9jc8cWwgxmSIiXYUce/eLsQuDtSsqT19qH9Lm4
vBAIDcdZJf7THwqh3vnZB8IprrottOXFg4XgarWh75kkGQ5qSx0dfaFQrdsy
MBuj9m4hRDD7XooMk5jQG1wIdxzfLSyZSuvv6LuLHyIKgbH/NIrXt6HCnlAo
eNUvlY/mFAIv37/petn2ttKg4DW0Xg44N3yt1SDHLX+o/vKCosGr4V0pw8uq
r0ODvLz8JX54qiwxLw2WaT6549R0GQgVmp9V1iBTr6tmyPCht32X17U0uO3w
OroSqodzqZA11OA/PwaXpVpqkMMjqhsD6G1PbafBp3FzkoZkq9fTVYPiuv/h
Uw3y9k4u4eViQ/YuH6LBqBuuG79QbM0W+GgNCl2K6uHNRV/XTdIgk5vXSZTv
LzDBRoPMHj3ETM9rglXRuws12Olo5VGNLDKkdq1bWGG5Bull75cpXl8qwzJ2
rQar8nRE93OcNQ41yOGYQvilJWXU3Rp0YPQyT4blV2+P8zmgQbvAJfbO+bLQ
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
00Q9xX3zPOZ/6W+H1nyBK6oub4c27P+gWOhddtiGWHA03V+A79N+WdPs0K6f
ZNWVYma7vjjPDpd0IqZLz4u3n5baIRtXeE/Pl6romUer7LA9L2jq/txkhxzv
0/vjfG2nHR663M8llN439/X72WHXc1e999F64Lr9cTvkfSBaP12YUfycHRbz
ojdA63FHQla5sGt2KPynCtx79mBk0B073OpGyITWO1P/Lj+xw4RoAqK0Xzj/
fWmHw5ihhfYTx2Ef7P7bj1w2+GKHem4QVSChd6pn/g87ZNOFVWj/cz0jha4n
vystcVqvnLjaYSArz5RvVqXl/t0h2eHzCRc9B1J+4vN4hXYY/O3WWm/Kbzl9
2CSWPXJ+TPmRz7UY7JHjLsqnJvrri2722J4La1SvZ31/N6CMPR5ibQnK3ycP
TxlSoYo9MpjrRfm+IiPkdeyR6wNUD7j+3tgeha6iwIgDGT3yW9tjcSacU71h
9p70jvZoHhB/5hDVl7c4MU/paY+iT0j1j1CIxyB7nM0aPJR/2ZhE21H2qFQ8
USeZ7kf0Neyx2VzWeVeAwe71M+1xUTNCCpT/HzN7wEJ7PPieiBTVl8VcWLZH
rjvR97F27/W19pjE5Aaqr3sNnwtbbKXfX3z4ZCWq55ZJh0qF+9oj71sTvmjH
GmqH7NGOJSbCN7wvfsoe2TjTJ8JfNx2Y4GiP8U2ZEquAO7Eaj5v2mJ7EiBPl
L9e82VUe2COfzyT8PIMZA57bo/AT0ucvf3O47ht75DyF+MaMD7V1fcPtkfPe
fFWv/WqPkavmd95D/Gw6GyxKsMcWxBZciR9yXJZmj36NCekRX+X5OcceWRvo
GPFjAvPRpfLs8R8/p907/ZONA1ZJPfi62VdZ6CyODsjL52cZ3A2M4TlgkLeX
lSlUBmIj+0aUdMDWTNZ4T3yT37ADivkWGe5es0neWt0B/+k7LSsxpdMBmb3i
wEvik/t2uixt6oDHmNwXLIv81MYBmVxYn34ucIYDsrIQ/kqGSmwMracDhm3t
FB5Fn7ehgArJQAcMHckKhQx7osr7bh3pgPnT2MCBDGIfOiBvE0TLsJilq5kO
uJDQW/cYGRg86LjQAa9QmftOMbHQZbWXO+Bw1ob6Los5gbX/fx5C53dA3l/8
IgMV8Sbt9jjgxrpMcJCB84hDDmjTYfCdpfQ8ij8tHOx/ygGdn3cJ2kPXv28J
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
WNT6p8OiDKDcssBCbgTQocC5FmBy24BdOtzKjou4YYH6HBjr0IobwC1wN+Hu
gJZ+OsGnrliEv/mQDvn89EWL8A8e0+Gh5vd+nDhvUf1POnwIMZcGn7VAkQZV
dqec0SHnQactsII10i7okOOWExawZwLrZR0O6RBXtscxi5jTvq7D680JmR62
wMYpCxxu3NShd9b1vtMPWuDL99YRFe7okLkvNH4WMfd9n+6PC+y0P77/apH6
SIf8/BVfCxQwe+FTHW4bxxKsReiPQTrkNvTt9Ly+FicookN/1l7bYoFRfdnJ
RLQ/iVbv3WSBsnQ7FT/okKfPDRb48Zw17nXI7J0hay1qX1iHfN5mtUX1b+nw
kn/65lgfi/Brfqfnd/7CxOnLLcKfEKvD0dxwZgF2ucvjdch9N14WWLsqOeZ5
orr/F1uAuUmLpdB65f41C/Ax3V86/MZk+wUWaPsmO/Zvmg49mNFuHl0vKyvp
OrxAT7vpXAuw8rkyk65nRJtqj2bT992iC8zW4VVm85plgePN3C7UN+lU/Yre
t/3t7tfNdH1141o1mG6B0VwgoPXFbElTLcKXVqDu78kW4Wuw0iM/zmGSRe2H
6NHCxjsn0PtisMVBjx4VWkc3H2cR/QC9HpmrtbanBThPNehR7EtaPzFnQXHV
o/B3WoTP1E2PY5vNGLFnGK0fNijloUfRF6X1UzP+x+TSeuT9+kEWuJT2oKK5
nB65TXIArR9X9oL0KPpkFuC4s5pe1ZctUDVhzdF3NfUIu6pRpbAA193q6lU9
xSL89Q31GJG2arBnVwt0Zy+uKd0vb/xbgC3bci3pflm7vQPdz6TjDQva6HFL
H6v6R9tZgMlSye30Kh6ziLm7Tnq1n0Dr5cS4w0+66VHHxvNaWeDN4bpbNvXS
4z+fmdC19bianpZ1M4vwXw3So/A1WCDj5LXy74bqVf3DIvSPEXrkOnhDWn9l
GKLQq/0aizjHaoweB/avdnxTfQtceFjmZ4CnHhkb/1nPAoROPdqO04v9TzGj
92/H63FoSMOgG3UtsI7JORP1yMdHKeZjGpP1yF9vHQvc2d+48+8pemQu2Gu1
LeKchWl6ZLQyppZF6E8z9Soesaj8Qo98PLKmBQTv1Kv9LwuIda5Hbv+oRu+P
GT0W69V+mgWWf7w5LNdLj48ZfKtiAeZiTvHWI/elVLKI+QofveDnFS1Cz1mj
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
rrhiCFMITP8bZH0pEh8A5wXkvA==
        "]]}}}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\:0412\:0440\:0435\:043c\:044f, \:043c\:0438\:043d\"", 
     TraditionalForm], 
    FormBox[
    "\"\:041f\:0440\:0438\:0437\:0430\:0431\:043e\:0439\:043d\:043e\:0435 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:0435, \:041c\:041f\:0430\"", 
     TraditionalForm]},
  AxesOrigin->{0, 1.3672615000000004`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4.46401}, {1.42416, 2.56213}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7607864997662287`*^9, 3.7607869467132072`*^9, 3.760788424563975*^9, 
   3.760849122695242*^9, {3.7608513584256754`*^9, 
   3.760851381846281*^9}},ExpressionUUID->"22be9e00-5e1c-4924-aec8-\
c4783828a2c9"],

Cell[BoxData[
 OverlayBox[{
  TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{0, Small}]], 
         LineBox[{{31.91, 144.9}, {31.91, 10.}, {29.38, 10.}, {29.38, -10.}, {
          30.389999999999997`, -10.}, {30.389999999999997`, -20.}, {
          32.22, -20.}, {32.22, -25.}, {28.37, -25.}, {28.37, -70.}, {
          28.669999999999998`, -70.}, {
          28.669999999999998`, -144.9}}]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {28.309843750000002`, 0}, 
      PlotRange -> {{28.37, 32.22}, {-144.9, 144.9}}, PlotRangeClipping -> 
      True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      Full, Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {28.309843750000002`, 0}, AxesStyle -> GrayLevel[0, 0], 
      DisplayFunction :> Identity, Frame -> {{True, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {Tiny, Medium}, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{28.37, 32.22}, {-144.9, 144.9}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{
       "\"\:041d\:0430\:043f\:0440\:044f\:0436\:0435\:043d\:0438\:044f\"", 
        "\"\:041f\:043b\:043e\:0441\:043a\:0438\:0439 \
\:043c\:043e\:0434\:0443\:043b\:044c \:042e\:043d\:0433\:0430\"", 
        "\"\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\:0442 \
\:041a\:0430\:0440\:0442\:0435\:0440\:0430\""}, "LineLegend", 
       DisplayFunction -> (FormBox[
         FrameBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"\:041a\:0430\:0440\:0442\:0430 \:0441\:043b\:043e\:0451\
\:0432\"", {FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                  False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], RoundingRadius -> 5, StripOnInput -> False], 
         TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
              "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendFunction", "\[Rule]", 
              RowBox[{"(", 
                RowBox[{
                  FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False], 
                  "&"}], ")"}]}], ",", 
            
            RowBox[{"LegendLabel", "\[Rule]", 
              "\"\:041a\:0430\:0440\:0442\:0430 \
\:0441\:043b\:043e\:0451\:0432\""}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
       True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  GraphicsBox[{{}, {{{}, {}, {
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], Dashing[{Small, Small}], 
        LineBox[{{23.535001583782073`, 144.9}, {23.535001583782073`, 10.}, {
         23.535001583782073`, 10.}, {23.535001583782073`, -10.}, {
         23.535001583782073`, -10.}, {23.535001583782073`, -20.}, {
         23.535001583782073`, -20.}, {23.535001583782073`, -25.}, {
         23.535001583782073`, -25.}, {23.535001583782073`, -70.}, {
         23.535001583782073`, -70.}, {
         23.535001583782073`, -144.9}}]}}}}, {}, {}, {{}, {}}, {{}, {}}},
   AspectRatio->Full,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   AxesStyle->GrayLevel[0, 0],
   DisplayFunction->Identity,
   Frame->{{True, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{Tiny, Medium},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 47.070003167564145`}, {-144.9, 144.9}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}], 
  GraphicsBox[{{}, {{{}, {}, {
       {RGBColor[0.5, 0, 0.5], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], Dashing[{0, Small}], 
        LineBox[{{0., 144.9}, {0., 10.}, {0., 10.}, {0., -10.}, {0., -10.}, {
         0., -20.}, {0., -20.}, {0., -25.}, {0., -25.}, {0., -70.}, {
         0., -70.}, {0., -144.9}}]}}}}, {}, {}, {{}, {}}, {{}, {}}},
   AspectRatio->Full,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   AxesStyle->GrayLevel[0, 0],
   DisplayFunction->Identity,
   Frame->{{True, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{Tiny, Medium},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-1., 1.}, {-144.9, 144.9}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}]}]], "Output",
 CellChangeTimes->{
  3.7607864997662287`*^9, 3.7607869467132072`*^9, 3.760788424563975*^9, 
   3.760849122695242*^9, {3.7608513584256754`*^9, 
   3.7608513819593067`*^9}},ExpressionUUID->"12890457-c244-42f3-91f7-\
6cc0a1f1c228"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBGIQvX2LlND3iFX2DGBg5LBnh3Pl1Z2b7I3BwMDhm9ta
g9r1p+3PngEBHYeDcsKaZ9MeQOU1HZLn7Ods5fhgP2smCKg6iG+/yHCPicEB
Yp6Sw57wtT4/VFkcIPplHEQ2x/E8ZWF3gKgXdThlfvvODDlOqDyPg/6K/JmX
l3JB+X/sH+z8XnByIzfUPAaGzji3jXeEeGDy+7ftNLRN5ITxeQ70TQp/LjGB
G2b+gaV7D4qrTYaZJ3PAVufKrGd3OWDuOxDYnClhl8QKVa96IM+kYbuDE7MD
1H8HVLY8jenKZoTq1znAv4XJOcz8Pyx8DkQ1Kq6Otv0NC78DEy9MK9bU+wYN
L+MD7UvEvNSWv4CGj+mBKbkP+K6sfGyfngYC5geUzA/z/vjzBWqe5YFJrD4P
rt39BDXP+sCmue+XHzv9G6Jf0vHA4d0xR8qTGKHudzqgWiV5tIib2QFs3jOn
A1wNH3mkfjFD3et84NjP2QEdDSwQ/2x2OZB/Y5vG5oMsUP+6HrCKFROefZ4F
Yl6D2wGRF8KVk7awQMxLcz+g6yzz+lEZNP58PA7UfNoQkC0FNc/Y80DwZvao
xoXMEPMkvQ5MPpYhG8rLDHWf9wEFTaXDWnFMUPd5H7g3ub01ajIsPH0OqDr4
6kavZoC6z/dA0/+1Kcfd/kPDy++AwozFx9+//QMJjwb/A+u2JdXftP0FDa+A
AyxhfLqbZL9DwnNZwIHqNM+GWVGfoeEVeMDGe4JgQOIbSHz0BB6wWr/ROyT/
ETR8gw4oMi4+PfvwSYh5xUEHAP9tU10=
         
         "]]}}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.01388888888888889], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxdln9MU1cUxwutUaBqJk6FoBGyEllgc+sM8Qd6pVrBFi0UwZYfg7p1Luow
kmxxm/GpMf6IWRwsi8D2B8GfM8xBCUh0eYew1Tgw2zK3SKamcfFHsi1uasQp
CcN3z+vJuSch5dP33ued+72v797MUEPZ24kWi6V94u/5J6+QMP97JzxR0fo4
XxmeqCPEzuflJ25tmag0YqNiddx3ktjwbSU2fE6FH77JfRqxcb2d2Lh/Sy2/
Xzax4YvUcJ8gNnzD1dwXIDZ8d6q4r5FYFrHMK8h9acQyj4AyfmKjYCP3eYkN
30gl94WJZX4V3KcRy/yIZX4buC+bWOZXzn2CWObn574AscyvjPsaiWURy/xK
uS+NWObn4z4nsRzvemV865TxlCj9e5V+PUp/xLKftcr9i7nPW8R94TVKf26l
v9VKf6uU/lxKf4VKf8Syv5VKf0K533LFv0zxLVWuX6yMJ1/xLVJ8TtHXkz5j
dONXuvz2dXHxvGvnr/3duvQtFI/dnQt3nRvS5fm5YmBeas6VcAyP54hNX+hJ
+6f8o0u/Q8zu+9lyM9EC0pclLlZ2ep84bCCvzxAzI7X227bJIM9/UfyQ//v1
Y/OS8LhdvHq6oeWXE8nIYyti/aPbL3elgNn3oVp31/UZdvO43tv/WkF9ksl2
+KSp8u6coymmH058OzA7u9n0ZUBB7tXWOzemmP1B6b535ywPTcLzHfDeG1qf
KLQCjg9e6rldfXhLAl6fC9N7El0V+eNmPhDck3m2quCZmR98+tPnjTmvPMa8
nHDg+Ky12afuYT6L4LNtsWlXz/yh4/xAVv7g1Cdjj9C3GJomeWO/3XiAvqXx
ceP8xxmfjzjj8wPdX94/FR16puPzBYMXqr/7IJSA5xWC48O073ekWAGfT0jW
/rWnP7Xi+FwQ/a/Nd1CzAT7f0HCtd0FkwIb5rIYlNbNS2360SZ/mhpn3Unc2
9dgAfz+Q58r489b7ON/eIvj4wTe+LenocxaDPzI5uKfdCvj7hObo5rkbplqx
Pw/Mz8kafLk2EfvzwM3mA/uDzWb+XnCIkryqsxbsrwT2jne+dck9jvmug/nH
Oi7d/3tM5qeth697Q7tHCp5ivj6wVUzL6547quP7CT4KF2utwYeYVyks8xx9
wVf/l47vN1hyrstT3nAL56MMMhM6htoGL+v4foznj+9PPj8BvzJ/xEaJcj5/
EWJ8vyvzTYzrA/dpxLi+cF+4kvtGiHH94j4gxvWP+04S4/rJfUeIZVVxXyMx
rt/cF6jmvmFio0QN90WIcX/BfS3EuD/hPo0Y9zfK+Ov49VuJcf/EfTFi3H9x
n58Y92/cFyWWFYL/AcMq1fQ=
         "]]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
    TraditionalForm],
  PlotRange->{{-100, 100}, {-73.8, 18.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7607864997662287`*^9, 3.7607869467132072`*^9, 3.760788424563975*^9, 
   3.760849122695242*^9, {3.7608513584256754`*^9, 
   3.7608513820093174`*^9}},ExpressionUUID->"e1f7e4df-22af-472a-94cf-\
a43222ac3100"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"",FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
          "", Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], StripOnInput -> False, LineIndent -> 0], 
         StripOnInput -> False, FontFamily -> "Arial", Background -> 
         Automatic], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
       InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6297544181379376`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.7450916787049933`", ",", "1.7000000000000002`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8748460968429308`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9901833574099865`", ",", "3.4000000000000004`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.7607864895849547`*^9, 
  3.7607864906261826`*^9}},ExpressionUUID->"a7769b9f-372c-4fea-9038-\
cf2a26ffc08b"],

Cell[BoxData[
 TemplateBox[{"Null",FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          GraphicsBox[{{}, {}, 
            RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
             "], {{
               Rational[-15, 2], 
               Rational[-575, 2]}, {
               Rational[15, 2], 
               Rational[575, 2]}}], {Antialiasing -> False, 
             AbsoluteThickness[0.1], 
             Directive[
              Opacity[0.3], 
              GrayLevel[0]], 
             LineBox[
              NCache[{{
                 Rational[15, 2], 
                 Rational[-575, 2]}, {
                 Rational[-15, 2], 
                 Rational[-575, 2]}, {
                 Rational[-15, 2], 
                 Rational[575, 2]}, {
                 Rational[15, 2], 
                 Rational[575, 2]}, {
                 Rational[15, 2], 
                 Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
               287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
             CapForm[None], {}}, {Antialiasing -> False, 
             StyleBox[
              LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
              Directive[
               AbsoluteThickness[0.2], 
               Opacity[0.3], 
               GrayLevel[0]], StripOnInput -> False], 
             StyleBox[
              StyleBox[{{
                 StyleBox[
                  LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -138.28241914137175`}, 
                    Offset[{4., 0}, {7.5, -138.28241914137175`}]}, {{
                    7.5, -5.644569489257719}, 
                    Offset[{4., 0}, {7.5, -5.644569489257719}]}, {{7.5, 
                    143.57301136937042`}, 
                    Offset[{4., 0}, {7.5, 143.57301136937042`}]}, {{7.5, 
                    276.21086102148456`}, 
                    Offset[{4., 0}, {7.5, 276.21086102148456`}]}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], StripOnInput -> False]}, 
                StyleBox[
                 StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -138.28241914137175`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.7\"", 1.7000000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -5.644569489257719}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 143.57301136937042`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.4\"", 3.4000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 276.21086102148456`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                   Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                 StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
               False], 
              Directive[
               AbsoluteThickness[0.2], 
               Opacity[0.3], 
               GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
           Scaled[0.02], PlotRange -> All, Frame -> True, 
           FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
           Opacity[0], FrameTicksStyle -> Opacity[0], 
           ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> Left,
           AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
          ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
         False], {FontFamily -> "Arial"}, Background -> Automatic, 
        StripOnInput -> False], TraditionalForm]}, "BarLegend", 
     DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Function", "[", 
                RowBox[{"x", ",", 
                  RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
                RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"0.6297544181379376`", ",", "0.9`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.7450916787049933`", ",", "1.7000000000000002`"}],
                   "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.8748460968429308`", ",", "2.6`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.9901833574099865`", ",", "3.4000000000000004`"}],
                   "}"}]}], "}"}]}], ",", 
          RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
          RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
          RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7607846962979064`*^9, 3.760786500171319*^9, 3.7607869469912696`*^9, 
   3.760788424819032*^9, 3.760849122935295*^9, {3.7608513589367857`*^9, 
   3.7608513820603285`*^9}},ExpressionUUID->"4e6c1b3b-6ee4-4063-b1fe-\
b7cdb13f0597"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:0421\:043e\:0437\:0434\:0430\:0451\:043c GIF-\:0430\:043d\:0438\:043c\
\:0430\:0446\:0438\:044e", "Subsubtitle",
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, 
   3.750659590603606*^9, 
   3.750659634100629*^9},ExpressionUUID->"feb92d43-f673-4dd7-9b42-\
b50ab362b68f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"iterationStep", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "plotName", "=", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotDataList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"openingAtCheckStep", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "i", ",", "1", ",", "numberOfCheckSteps", ",", "iterationStep"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotList", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PlotMatrix", "[", 
      RowBox[{
       RowBox[{"plotDataList", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
       "plotName", "<>", 
        "\"\< \:043d\:0430 \:0448\:0430\:0433\:0435 \:043f\:0440\:043e\:0432\
\:0435\:0440\:043a\:0438 \:2116\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "iterationStep"}]}], 
         "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "plotDataList", "]"}], ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"folder", "<>", "\"\</opening.gif\>\""}], ",", "plotList"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.750657229716831*^9, 3.750657323541009*^9}, {
   3.750657442512285*^9, 3.7506577065181427`*^9}, 3.750657806502049*^9, {
   3.750657865720697*^9, 3.7506578660603857`*^9}, {3.750658171413033*^9, 
   3.750658171660262*^9}, 3.750659590604125*^9, 3.7506596341012383`*^9, {
   3.7592248138310814`*^9, 3.7592248170522895`*^9}, {3.7592248487311068`*^9, 
   3.7592248766307635`*^9}, {3.7592249197998433`*^9, 
   3.7592249455084496`*^9}},ExpressionUUID->"b0245563-8792-413f-a4c1-\
ff322b233949"],

Cell[BoxData[
 TemplateBox[{
  "Export","errelem",
   "\"The Export element \\!\\(\\*RowBox[{\\\"\\\\\\\"ImageList\\\\\\\"\\\"}]\
\\) contains a malformed data structure and could not be exported to \
\\!\\(\\*RowBox[{\\\"\\\\\\\"GIF\\\\\\\"\\\"}]\\) format.\"",2,48,1,
   23215630871294489872,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7607801366809754`*^9, 3.7607819378934135`*^9, 3.760784696636993*^9, 
   3.760786500282345*^9, 3.7607869470262766`*^9, 3.7607884248510313`*^9, 
   3.7608491229683037`*^9, {3.7608513590568156`*^9, 
   3.7608513823183875`*^9}},ExpressionUUID->"8c410ea2-09aa-41a0-85c9-\
54c62e993aa4"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.750659652156084*^9, 3.750666699563397*^9, 3.750666774903749*^9, {
   3.759224797990833*^9, 3.7592248186298594`*^9}, 3.759224850386752*^9, {
   3.7592249324687567`*^9, 3.7592249472268243`*^9}, 3.7607801367149954`*^9, 
   3.760781937914418*^9, 3.760784696658987*^9, 3.7607865003113513`*^9, 
   3.760786947044281*^9, 3.7607884248710346`*^9, 3.760849122990307*^9, {
   3.7608513590728197`*^9, 
   3.7608513823413925`*^9}},ExpressionUUID->"40c49073-d708-46a6-a954-\
e770c0ab8f9d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:042d\:043a\:0441\:043f\:0435\:0440\:0438\:043c\:0435\:043d\:0442\:0430\
\:043b\:044c\:043d\:0430\:044f \:0441\:0435\:043a\:0446\:0438\:044f!", \
"Subsubtitle",
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.750659590603606*^9, 
   3.750659634101563*^9}},ExpressionUUID->"190e1697-5378-40fd-b7b7-\
68e948097639"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"openingDouble", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", "\[IndentingNewLine]", 
   RowBox[{"i", "<", 
    RowBox[{"Length", "[", "opening", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"openingDouble", ",", 
        RowBox[{"{", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"j", "<", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}]}],
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{
        RowBox[{"openingDouble", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], ",", 
        
        RowBox[{
         RowBox[{"opening", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", 
           RowBox[{"opening", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"openingDouble", ",", 
        RowBox[{"{", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"j", "<", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}]}],
        "\[IndentingNewLine]", "]"}], ";"}], ".", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"openingDouble", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"opening", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
    ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDoubleMatrix", "[", 
  RowBox[{
  "openingDouble", ",", " ", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.750358232133493*^9, 3.750358247083275*^9}, {
   3.750358316158638*^9, 3.750358512340169*^9}, {3.7503585544026327`*^9, 
   3.750358555974053*^9}, {3.750358591934741*^9, 3.750358599614847*^9}, {
   3.750358635248437*^9, 3.750358637785039*^9}, {3.750358703052411*^9, 
   3.7503588070893993`*^9}, {3.75035885757069*^9, 3.75035888174489*^9}, {
   3.750358931136982*^9, 3.7503589382940197`*^9}, {3.750359001423706*^9, 
   3.750359052574259*^9}, {3.75035919521389*^9, 3.7503592947409153`*^9}, {
   3.7503595831699047`*^9, 3.750359627071444*^9}, {3.750359720953223*^9, 
   3.7503598303588943`*^9}, 3.750360044553823*^9, {3.7503602219784393`*^9, 
   3.750360333147932*^9}, 3.750360417313128*^9, {3.7576716605038176`*^9, 
   3.7576716619096375`*^9}, {3.757672101273732*^9, 3.757672128470461*^9}, 
   3.75844198944094*^9},ExpressionUUID->"af6ea415-d276-4505-81d8-\
a9c6f689f1a0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    RasterBox[CompressedData["
1:eJzs3QlUzWv7P/4cc0JkzJQpU9EpQ8Y7IiREZD4ikiFFxkyZiRxzRIpIEjIU
lYgSIppLiV3t9tTeZQyhfs93/X/Pba3n7vqvrPX7fp/v9/d7n7We9TrPtc7a
+7Pv+7qv62rfKzrOd528sKaWlpZFDS2tEf/433/8+//3zzsGIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgj/cw0YuSFi+s3Samv87OreiNXV
9+BOg749+1dfz7CZ983lJdU2YIjjsuxL1Tdxoeuz9cerr/YHvWTf3dXXpZbl
icT51TfN+u7AljOqr1lW90aHJlTfuCbB8eOH/Of5u8/zu5/3d9fzd/frd/Ph
d/Ptd/P5d8/L757H3z3v/+76BCGEEEIIIYQQQgghhBBCCP9zpe6JdvVa2jRn
tqj185gmJ9qK3oztZvpXTomggafd+sgAUSs/7TZqN1Hjx4/3GowQ1X2/4+sU
PdEl7Xf2tlRrBB19CxSTYkSTCh7rDr4iatbrinkXP1ELP9MmRQdFP85/qX11
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
c50eHFlTMu4xCy3cu6q+iZr74VL8yMdvE9js/MVXRlmpuam3d5TOmZnAXjtK
Hn+3V3NTg2NsW5c9YlG6Z6/fdlZzg04NzLy+7xHLuRc54aq7mivbdaGbauwj
ltbkyrmHW9RcnWPv+7jVeMSsUiJiL+9Vc2e2ur3h26N4Zrd54azsg2qujrZ/
rsY3nuX49Ix9dUzNlblpbSnaGM8knnpnl/mpubHlXgNXTYxnH3vNmrbTX821
+fr649sR/4h3iRx18qyaa9Pp0hzn/v8/ceJ1qPelnpP6XNQ6UOtGrTO1L9Q+
UvtO5QmVV1QeUnlL5Tl1LqhzRJ076pxS55qsA0TdoOoMWZeIOkbVPapOUnWV
qsNU3abqPNUXqD5C9R2qT1F9jeqDVN+k+izVl6k+TvV9ak6g5gpqDqHmFmrO
oeYiao6i5i5qTvvdee9358l/9/wLIYQQQgghhBBCCCH8JfU9Xpx0VUOLbI2g
9TybWZeaqAW1POYdWz9LJVh26HYT55lKQfvZxoa6wxWC2hlfY0LGyQV3mV3o
UTRdJqjdqMbTXu5Fgl6K2c4rvaWC5flNQ5wlhYK2t1Qb24/45Z73/iNT2xYy
z7DOb+0Lf2mx1vr6z54FzKl278rNe6Rc2ZdBW4eb5bPODSwWdTUo4o4r7VD0
eKKEBb5fV2fHrSJui17H1O4Fb1gLwxqD+gySce96/5i0clIei10VfHJQjOyX
Z+uY2T7JZWYTF7p4mMq5Tk2Tbx90zmEGzumpY6/KuQGPt+3u9Dmb2U+/77xO
X8H9Ufbg0fGwLGZ2+kGHazsUXKde0QEfVmSynz+a1l6dr+DWr//4XcCsDNZw
25eJS0Yrua/Wt9Z90COdWW3pNccxUMk13rZJkdE8jWkNu5L9/Kvyl1ZfV59s
nsrM7iSczJii4jplXTbdUiOF2XVf1rHxBRW3zu7oU6m6yWxou+jaP0pV3MO2
fnktHV6wj19UMXuGFnNtTDbvf3bgOfNYeddgyPpiruGkY4N9uj9jel9qxNyL
Lebu7/fp0O4NT9nNp25f9L8Vc5+PmmX2V48nLGTME11XMzW3js2EUwufJbDT
iT4+tZaouZMtVqyUbn/EJB+POYScVnNjx2y8W2NKPLsZ1q/X65dq7vPcmB+Z
BnHM8K6pR+/vaq6+z8tOyrYPmar1sY2hrTXcXQu2Nvu88AHzLT1bez7TcJ3m
931zc3ssi+sxTr/LXA03W9sjfoLXfZaU0nPjBA8N17lnhfHkkfeYVmSLAYuO
an45pXRJjwYxLNZJ+2fWFQ1Xq8/2zpJX0cyjW0fzNfEaro3hyr9WJ0YxXfvl
sRszNVyLL2nlhh8iWZ2meS9z5BpuWLfA4fc6RjKXuiPTJd80XEXQS501Y++w
m6MNu7jWL+GeCOw7IfHAbWbVZ0BEw+Yl3LAni1fPqvmPePiYtxPal3DDPH32
jD8awTymru/7rksJ17ZiolfMyAjmHtz/wMmeJdwT+m5Tk7QiWOzF1wmDTEu4
Wp2Drwy7EM6cWhvtuWxWwjV5WeL3+Ug42xTvPiy+Xwm3e+LhpkkedJx6Hep9
qeekPhe1DtS6UetM7Qu1j9S+U3lC5RWVh1TeUnlOnQvqHFHnjjqn1Lmm6gBV
N6g6Q9Ulqo5RdY+qk1RdpeowVbepOk/1BaqPUH2H6lNUX6P6INU3qT5L9WWq
j1N9n5oTqLmCmkOouYWac8i5iJijqLmLmtOouY6aA6m5EffFEEIIIYQQQggh
hBD+15uX2XxKorWm2kadl2+OHKsW9G5Zu03r9cWC2junJZSvUwlqDe5WX+em
QrDn5tTUR0/lgrJPJgkLb8gEddZL+iQmFgkW1pgW9TlBKii71GmQnY6ooTwu
eXr/QsF278zXfsn4ZYZPzyQdVsC8ZVkj3A5JucaGd09ldc1nLsZHCrabFXHz
Bnc2ijKVsJq5y2NPvS7ili2/ec9oyRtWtsVl9p/OMm5bz9uqpY9fM5X/mXcD
fsq4lgZdek+vl8sk5Tdd7+2Qcx0aS8PiV7xig84ZeUc2UHDtWntMT3udxTyy
r8vebFZwj6xRjXPcnsk81q95tOajgnvkyOlrp7pmMAOD1RWPnZTcAP+AWsHP
0pj++13Prr5Ucm8aLfX7eDCVlV+4nT2mr4qr1+jV6q6OKUzjt7/hgVMq7kDD
mVlTjZOZX4+afWp9UnEn19EUyUa/YAE6rXT9JhdzLW65+k/Sfc5sp1oVqfyL
uQZaMwM2WySyI9PCO9z9VMzd/+H+cB/LJ2xjv9uqZAs1t+n9W1v0NyQwM135
uTkH1NznZ471fnEpniV2mS6f8ErNtepcesRQ8ZAdufeHnnUrDXf/nlJvy+UP
mEPdxsd0p2q4sWkXtp6uEcvGbw1tsmmvhuv8Ttmr84EYdvN8y7bdYzXcE6Ol
V9tXRLGoq0Pa7irVcG1fdrsS8egOM7SMqzHLoIRrkpOtit4QwRruuTNqqk0J
19l/RrTWslvsyJmBLfxXl3BbHbL57LXxBjMo2Ki+e7yE6+nUVdWlNIzNXBu5
yv12CTfg5elGxklXWZlq5ua8rBKu5Ov6bkPiLjM7t35z35eUcE3W/Ww69+Ql
5pLYpNZM7VJucu2pZ/6ue5HFjjTok9WxlKt14NvRtLTzzPCvet0XDinlOhgN
YDvszzH9Ftu9t08u5QZowqNDLAOY4dwaNw/NL+XGdr/nenWHH8tbOMPcy72U
GyAb4trc3peFLbM84ratlKvlP8tR6uXDArfWlLfdV8p1uD7t2lHVMfbxquXk
5QdLuQ6mE4/YFh9lut5vs9ofL+VqeTffNeA/fmW19TFDt9OlXIuBDeK/hhxm
AX4pFvvOlHK1Vt7ILhx1mFk27vjHD/9SrkPnpJP3teg49TrU+1LPSX0uah2o
daPWmdoXch+JfafyhMorKg+pvKXynDoX1Dmizh11TqlzTdUBqm5QdYaqS1Qd
o+oeVSepukrVYapuU3We6gtUH6H6DtWnqL5G9UGqb1J9lurLVB+n+j41J1Bz
BTWHUHMLNedQcxE1R1FzFzWnUXMdNQdScyM1Z/7uvPrvnq8hhBBCCCGEEEII
IfyfJPU9W9IT3Ur31sWC/eeo+ka3VAlKdP3MrFsrBSOCI3+2racQdL+ZcJ19
lQm+PmK0Y1BlkaDsYWnO1Aqp4Jqf32dv7SKqO/ThhqO2hYIt5leeNUr65Ru1
VsOhNgWs3X3NvQhvKXfqvFP5Lr3ymaf7uxctLYq4sZN9xr7uIGEuJeXK5PdF
3Ki+jUd493zDPK3btJ6zT/ZLg6u3FHNes+OXP0uTe8q5Q362n+S9JYd5Jk0/
vzNO/kufz01dw7NZzYFzx7lPUHDLphS0C2qWxaJWnapxI1XBTTtr/F25O4Md
H3F2yZ5ZSu5Q87axTpo0FvRX3RPjU5TchlLlgJb7U9muhfX6+05UcV1eyub8
2SSFyeTu9e9Gqri+B8c89rnwko13Pbn+UY9irumCRYZzaycxww66qrV7irn6
o/y3myQlsueRHZ9dLy3mml7oNzRj3hNmdGZxSEsbNfeD9a4aKwckMPfPZ92T
Lqm5NqyvdZ/a8Uw/uu+yQbU0XCe/uDVnZQ/YEaVl8+5TNNz9u5w9G9eNZTfz
F+j4+Wm4J5aOWhp4+i7TOB1r/bBIw1UYVT6XDYpkjsohl9sYlXCnN+767WZJ
OPv49ePkritKuCemHGxrceMGW3KsZdnHyyVcg4qnGoP8ayyw6fxkj8ISbpjF
izUbQ0OYh+ujl0n6pdyA/Zt23tp4ga3568PWO/al3NixB84tivFnYdkzBht7
lXK15nZ7u6PlcWb2uZ9v4s1SbqxOfK86R/czh7kv9rXNLeVqrTPv6hOygcUV
7rz0orKUqxV7PNHF8w9+7hesG+j0M7v0f///f/7zjnmOn2kQc12MO0wMclt+
WIy71b/7YvxKMR7fOK7jwOliPPnv/HcP+4txk7B3qzd3EuMHkyvLBzYS40+m
3TO/WF4iPk9Eh/FeyiriUwZ+kOSJcYtBe/fWTxPjP9JbV4xJFOOfDmwfnBwv
xqc3bb7jzn0xbuIyNrBFTPXj1OtQ70s9J/W5qHWg1o1aZ2pfqH2k9p3KEyqv
qDyk8vZf85w6F9Q5os4ddU6pc03VAapuUHWGqktUHaPqHlUnqbpK1WGqblN1
nuoLVB+h+g7Vp6i+RvVBqm9SfZbqy1QfJ/s+MSeQcwUxh1BzCzXnUHMRNUdR
cxc1p1FzHTUHUnMjNWdScynuiyGEEEIIIYQQQgjh/wtKFlaMzDxaWm09925r
6lCmrraWca8PNH9QLOg9L7bV7UNKQS/D/luOHVAIWs4f9kW9Ry5oY5c+sfSs
THBZg9GVhe5FgjY9yhas2i8VHDT+yUKZf6Fg2gQjm0abfxm3N8Zb9bCAJWS4
mNtNknLt2axeNXflM03t7MkttIu47b5Eb3/jJmGxYy5aWiQV/bKrdj924g0b
P87Ou6+7jKvfvs70+UGvWWHr1U8/d5Jz7W8EBLb3yWEG8vXS+rFyboD14ckF
97OZLKDrchdHBdem3d/htzMymSyCFRkpFdzxuRa260dmMMump07u3abk9n/a
28xxXRorf37o57kKJVfvpHXdlrVSWZ7/pJrzvFXcxQYNyl5PS2Y9Nw2Vnqhb
zK3T5O+gJalJrHx94pgWHsVcwy7Dx3l0fsZM0te266Ys5krq/Dmx+d4nTOfY
sW3ZM9TcG1s3v1NLH7Ggqx+/90tQc/UVY1vdnRnHAt6ZdfDsoeFazH4ysrLO
A+bSr7++fIuGq9i8+lHPGvdY2P7lhafzNNzYRSn2F05HMlWr2BUxJiVc3YyK
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
js6Z/Sx8qxg3WDjtSXo/MW4zeNyi53LxHup5s6G5m4PEuKJWwRY9ZzH+Ndzk
RUhvMW4zdtNu24/iPd2dkym2ydFi/HVvszcr91VxrzfF784QBzF+q/mYtXcH
ivEuAUaNajcT43tGZZ2d/14lrvOqxOKkDDF+otajqW+ixPj0z+f0ap4V42Ou
+YTK9onxgAVhm45uFONfb3Y4tmqpGDdPGW9gMFeM17NqnhQyWYzHH/Fon2Jd
xecqS/AbPlyMf+p/6kHm0Co+V5SR9n3z6sep16Hel3pO6nNR60CtG7XO1L5Q
+0jtO5UnVF5ReUjlLZXn1LmgzhF17qhzSp1rqg5QdYOqM1RdouoYVfeoOknV
VaoO/2vdpuo81ReoPkL1HbJPEX2N6oNU36T6LNWXqT5O9X1qTqDmCmoOoeYW
as6h5iJqjqLmLmpOo+Y6ag6k5kZqzqTmUmqOpeZeak6m5mpqDv/deZ6fRwgh
hBBCCCGEEEIItej74qRpJWEmvUQjPI/Hh/dUC35M3ZczaaBK0L7VEsmeNwpB
fe/nZ0+skwvGFv20eTVTJmjkN8D1mWGRoOpm7XO1ekgFT482/zrbvFCwxftr
Jr1rSbl/tfgaEfUtn+m1rXl9xBspt3DqhrJTNyRMtqvm7qDQIq7N0s9LdMrf
sDonTf3118q46r7OncJ8XzP3M1cDR5jIuUFdPjUzd81hH6+cyR/4Wc41LOs8
a7JBNvOYqrl+PkDBPVI5QNWkfSbT/qOs/ZdJSm7ht3aB+trpTPI9pPDwZyXX
QadyyugOqUz/4h9dGp1VcW9qfz2S0TaZ2ew69aPlkGKuac7MZm4+z9npD5bF
KRnF3Mm2zhub/XzC9Ht9qWk8X811+tlX8f7GI9a/r+G8a9/U3KgE/cjCrg+Z
ienXpntXabixF+a0PbL3HmsRvGqcb5mG+679njXxbneYme3tx+ErS7gnhjoH
evjfYEd8lyu/SUu4JtvOtju8J4RJkkbP2TS3lKvltHfb5lZn2KC9a6yfppZy
Pb326+345Mnzuu2Vk9cc74n3CD/OGzzyGi3GpX0rSjoli/cRtrt67O41WYwv
OOoXVPudeA/y5PIxw057xPiCy8MLQruK8dCzi4d+fiLey2RvMK23fkX1fy/y
R9+TQYeSxfujMe2ic5y3ivFaLXa1dLSs4vc3k888TKqo4t5tq0Z34aMq7vVm
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
rhEWq8W4m4d5l2aLxHhYjzPf+s0W4weVYxzXT6jifesenNbfqorXTzw419hC
jJ//XmNK+FAxXs/Uef2OgdWPU69DvS/1nNTnotaBWjdqnal9IfeR2HcqT6i8
ovKQylsqz6lzQZ0j6txR55Q611QdoOoGVWeoukTVMaruUXWSqqtUHabqNlXn
qb5A9RGq71B9iuprVB+k+ua/9lmqL1N9nOr71JxAzRXUHELNLdScQ81F1BxF
zV3UnEbNddQcSM2N1JxJzaXUHEvNvdScTM3V1BxOze3UnE/9XED9HPG7P4/8
M28hhBBCCCGEEEII4f8Zqe9hXCYOz9M5ViIYonV0RYWdWtC9XCdlQleVoPeF
Ps6L7ygEtT0zo2ZbyAVrPp/fZFVNmWDsmi9vhoRJBfW3v99f92yhoF2dStmy
p7/cvmbrhdeTCpjBu+tLXaOk3OSWq99MV0jY+H11l026WcRt/ZcyuoHsDQsY
ZJ7/9ICMa2A7bfY5u9dMMk8vb/0KOdch55Hz4cuvWJR2k8icIQpu2tvn6a5j
s9jMk6XOudpK7kezPx+5vE1nxg9rvFc8U3LXR5YbjTqdyjTz71UaH1VxB2bF
a62xTGY1o71vxVoXc9V+V+I3sOesf8CyLTW11NyoYatqFlc+Zg53t9/velXN
jT2m3NauOI6ZGd0wsJ2p4Z7QXFg7LP4+S/rczrH5Jw3X2ePEzMoDd1iCm1HH
qH/s/z8Ni1CtsPoexjyeD/MpMi7lBqS3TV1/I5C520hXWrws5cZOcVSlj97G
8y5ZMf2D6Wnx/vf569Ee+cXi99jBq+dsrRgpxocsqyj4cFH8nnz6oxUn/HSq
iPcdFDHeo4rf8/XbcDnss/h9vmfrR/NOLKzi+/+6DrkXFFX8/Z5D/xy9c1kV
f6+uiffDsI/ifYTb933NJm8S43fWuLfS0avi7z+dXzKg00XxfqTt1rYHH0yq
4vdwW89fUPlJvJfZU+jsm+YvxgMqenS+O0qMZxcvvO9aLt4fna9RueNKqBh3
83vqf32ZGP/ROvq9Sw8x7jy83aO9n8T7sic13PL2RYvxIT2Xt+7lJcYNejY2
spglxu+6L6i411uMf7IxDM+vWcU95q1LpQcLpELctq1xT4sHYrzekVcLSy9U
8d+bFiZ23yPGnyyStM5eLcZH+uU573YU40Z/hG5caCfG+97pWzhtmBh3W+R7
Z71ZFa/P5tzuaijGZ2/ctKpnRzF+fsUiNqeNGM8+l21W1KqKeBtPfdbyN+LE
61DvSz0n9bmodaDWjVpnal+ofaT2ncwTIq+oPKTylspz6lxQ54g6d9Q5pc41
VQeoukHVGaouUXWMqntUnaTqKlWHqbpN1XmqL1B9hOo7VJ+i+hrVB6m+SfVZ
qi//ax+n+j41J1BzBTWHUHMLNedQcxE1R1FzFzWnUXMdNQdScyM1Z1JzKTXH
UnMvNSdTczU1h1NzOzXnUz8XUD9HUD934L4YQgghhBBCCCGE8L/GFucOjF2p
UAt6dJ8d8cNVVE+vhklJi2LBqK+H2gYkKwTtXOf51D4tF/Q0iJbnN5MJeqW9
VR4qlArqytzH1QgqFNQqrN93SegvPXu9v+6wqYAdmRClk/VQyu3spVgWkyth
x0dpXesaUsQd0qfyw4Eab1l5+arcRQEyrl7jsy5P2r9mH0e1W3Z7rZxr2Ds4
+tWJVyzWTMv9/gzFLxdUBj34kMkKZ5zc/q29kmv/wWy1XmA6C/IYLjv0Xslt
eHDweOteqcx9/Ei/btdVXJs+TrZNX71kpzuxWsarirmTTXbK3ls9YzZ9k6+a
dVVzTRPay58aPGaGpdKZO4vVXP2F59689XjIJKdcd6zcqeF6Xo9PPHsvhkXp
Tt+2Y0AJ13bA28KnC8OZ2c7rGW1SSrgm22d9cVwYynwj2obu9izlWsT5Rf0t
8+F5dOvlwZ/SEvH+t8vI+guf9BXj9bx/hnp6id8/n9ed0TotV/we+8S76S3H
D6ni96rMbz2b6it+T74sQzH2qk4Vv7e1pcVkl2Xi9+3m6RVjI4qq+PNLD5Qf
Mp4txsPW+g/t/Vq8F3B+O8ksZ1oVf57qV8UoL5l4H6Fzymv52ZVi/IfFlaVF
2mJ8z4hNH7WCxXsQN0nErNiRVfy5tTM6L4qQivcvQ6a/eXTibzF+9PC6lk/N
q7jHObR+4oPPVfy+5Jbw4lUhYrzV8lY9vJeIcXO9RefTulRxPzWle+aH4iru
xWZflyTcFOPrhrnM1vUU4yfmyAe4TBHjrQYET0rsIsb397FM6fu/2Hv3qJra
tv87mxKKiCRJtCcJlUTOKKkUEamUEpKIkCQhSpKiRNq3KpI2RCQpsktSivZp
v9+suVa0kYh33eO+zdm4znWM63re8Y7f+/yeZ/rnM8b37p5rrjnP8zi+x3Fc
c67hZvx8Zt/9eqYO172YWh16L3BdeuWJHwsScZ1/P1tn/GVcvynYev+6O67r
XIswMd+D6yoqv3YIWeB68guFCNd1uG4md/1RNMJ1e4nFp4JUcd2pznN2nSKu
b9lVXfBQHtcHVz6ItpLF9Z4NBu8jJf+5Dh0H+lzoPKHvBV0H6LpB1xm6L9B9
hO47tE6gdQWtQ2jdQusc2hfQPoL2HbRPoX0NxQEobkBxBopLUByD4h4UJ6G4
CsVhKG5DcR7KC1AegfIOlKegvAblQShvQnkWystQHofy/l99AuQrIB8C+RbI
50C+CPJRkO+CfBrk6yAfCPlGyGdCvhTysZDvhXwy5KshHw75dsjnQ3UBVEdA
dQdUp/xZVzRp0qRJkyZNmjRp0qRJkyZNmjT/vyHUh+l9XHI7zawLY3PBGq1g
VgdGRQH3b/uOtmNsuzqw20a5DaPl0efJkh9bMDqlZE18ntGMserE1x1zcygu
17/2pdC6CemijYdan7aQFJk7vkqurQENyaPWypxWksLn1xgfy65D3m1+V8/c
biN5wNBc7+z4GsQnfj7X6no7SWaSU3IbqkLxmTqujxw6SAoUL75R/7wcGe94
ltu3tpOkUOvrpLlKpShfWStdVrCLZJwjqr1U+REtPXlAMeBzF8kC8WP9UdUf
kGF/pIzajW6SS7QMJZ4656PUIFuviZZMkg0XU1szK94gu8SU99+nEiTDRrGW
y1x+gYaUFtkYvyFIGha8O7UiJxNJXhWJHevIIukh+8Uur/kBKnnKyxaaxiap
vNvlxj6JeBRmnqzzPItN0sNuB9JVv0iul8rr4SEXg/E+8DTm609aNXjfeLdi
6M2vorh+7ccxJwEXLr8L/HC4RDIf72NH1Cx9fWABl/c/b5UeV3iBy/NWB5xG
vf6K99VDLKw/Kdvgeo28ta7oJy7P84qoe65bh+ulh5wMbr7B5wKMdIax+0Zc
b5hxcOuvOnwe0WBuG6i+H9evNSS9UeHBddc5z8dZX8PnIAek+Reoq3LRA2zG
L6jG5y8MCR/D+964rjJbOyloMZf3/fKx3bxb8TnRlreac9nhuP5zraB2khWu
i8+ZJfpsGq7r9egpna3F51+SGV+bRyXjunHA/N/8p3G9pbJf9cAGXBe4s4Tt
LY3rDOOpZ2YMN2F6snfaVZV6XN9i+MK3/yWu94V/j6xMwnX7pfZx/tdx3Ub3
ywKXc7iuGJMar+yE6w1zl3dG78T1gNgXCyab4DpPp4k7ax2urzwu/jxak8v3
ijotNnY5rkecSvQMXorrAtEZelOW4LpWDKGjs/Cf69BxoM+FzhP6XtB1gK4b
dJ2h+wLdR+i+Q+sEWlfQOoTWLbTOoX0B7SNo30H7FNrXUByA4gYUZ6C4BMUx
KO5BcRKKq1AchuI2FOehvADlESjvQHkKymtQHoTyJpRnobwM5XEo70M+4a++
AvIhkG+BfA7kiyAfBfkuyKdBvg7ygZBvhHwm5EshHwv5XsgnQ74a8uGQb4d8
PlQXQHUEVHfQ82KaNGnSpEmTJk2aNGnSpEmTJs3/dxSqrWlBMsQ/ZlDOWo3Q
tG6MueeOHv8k04kxrjxn5dn6dox+u7e5HrNsw5iu+KvJRaYVIyOvtr61qhnj
k49Ll0j6U9y39sHDjclNiEdnzoMTt1soin10fje2Eflr7FmSGtJK0ty42J6t
Wo+OrnIuHRPeRjJeJ+5cn1INqt5+5mvpmXaSR5ln5c96VKF49Xj7V/s6SAqY
CuY+elmO+J49kH2h0UmSeNN+KWtjKeKbNH3L4IwukkRZzpgZGR9R85vUTWNq
u0gmW36ezvz4AcVlvYnfndJNUvGa1Yyb7HcobNv0ylwHJkm7r2fYpmfeoHj9
L9tuLiRIiuma9ciwctD8MzP2xlUQJAUmtM3f1vIENVy3vRt4mUXS47tNyYJN
91HJtG88z9XZJJUFyjtm3I1FbWyfd4ntbJI8woZVHegIuY4YDqcfxO7B58LG
K14t+hDOZf5bEKiU24b3jXuOHnsaKIfrQvzNCrEeXN6f+cLBP72Uy+882tYq
q6nges0DJwOBILwf/vPn7PKvPLjet1ta6pcd3m/XaXda41HDZc4ba9/fZI7r
hqd9VpfX43OBniu+IjutuPyOZ8Aj69ed+DzC5tOd8F/HuDwHFxIaxCeE67tX
ZQUYJOBzkNKSPfna+rg+GOD6w6ATn7+sdNRWjrqB69cMZXLVEZfncx2m+S3q
4/Kc49z6j1tTuTxPKplcLX0U17N6VDf2L8L1DNOKdRO/4/OvnsvTZna84TIf
ZNx4szeCi57DW6J1iMtcT0ZjYps+rmekaH1SmsNl7ubzfmcVL66rT5bLm9Dc
iOu7u46VfsB1y2NO3+Tu43rO6ueDCjdx3V31UEa+P66vlB9Mu+SJ6z0JHgND
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
D8J8E+azMF+G+TjM92E+EfOVmA/FfCtzXsyQIUOGDBkyZMiQIUOGDBn+P0DM
XyPMulKxz/Yr76/pKKduHzLk78mXnLlun1/LXzNi0LhtI8b/PSu+ucioFjb/
Ne3PHT9/7dDf01JeffiK6ZCqdu+fDlWF7HF1tuLJyiZAfcfxA3uehvQ9/0VJ
dxKk1oaXRidzGwFDdGomJGyFXCxdlFEjCSlzX+XGo3Au4PDsIu4KQ8jx0Ykz
v9dzAB3WTRNmnIQMluR0TfoHUvHZWsUhqQ2AenzPjcvXQhZ962H0uDekUaL3
4LshbEBbzrJFg1ZCjo8atV+lB6Sp2o1LM5LrAe3NMu71toVUHuZasnOuiGal
i+aUjagn5akrz4w6I+Lj9e538u7UkSI3jnrP1/WUGQsi0r+Y/Ixfm2Gw/X/N
Gf+LGeduD99QVkuylM+UT/v5eX+x5PWdGZMO1pI2KY9eKdfYlPLvn+1jD6gl
nPHfeAqVbMoIvRNXrB+yiLXjihrz0Q2UrZWHpxw1ZZHFT5rsFq9qoBz62iBz
cPs7ovxoVaF1YANlSOmn09XkHYm36Gcy4nUDJafb21GRgTXkq/dK3W2yHEr5
LV8sn5dWEzee6x3JWRxK/5mBEpwl1YQTmbxp3i4OpWmvnNIp0VXENnrgZa1g
DmXu1xcTd0yuItrDpAY753AobWPZSaEhlaRLIXxVn08cSuk0uc9NypUk6fn2
9o3KXMqie8lDK65VEA+7wEDneVwRswi5OaWCtDq33PC341Jq3ZitND+rnMi6
7/zR5cOlrDh9r1vv1eXEY9DzqvwwrojP4rf5DSgneQnn185+xqUMrl3QvCC9
jNQr3RIaFHEpLe9KT57uVUayTlfPevmOSxm9dqtpmHUZyUsb5OjK41IGJz19
FDSzjFQP1OG/beVS2r9Yp3toQhkJnjskJq6FS6k962EHX6+MeC5fvvVGLZfS
RVIqZ9iaMiIRGlzaJ5cr4mCt/Y2Xf75veJ6+2QMuZXC/C7P7V5eRmIElC1VP
cSm/vjg42ndjOek98b2GyRouJW/v+KOjBD/jPnrKb/tzKXlrTK57FFSQHtMH
VHWUcSg/W+VuH7S3kvgPWiKTvJlDafRsUOWr4iryVe2kuYMah1Le26bXk5PV
RDnvymD2gQbKkIsaj8193hHZ8C2OfgsbKB29uWtuDWCRB/qDQ8wvsikFI6vP
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
gpS/ZZw2ZCdk3Ha12h7zIRUVucVnRkBa+9e7ywpbAJsnPeYXZUAWrc4xsAyC
HPNoaOvFzZBZiryw2imQJbc77zV3NgOGbhSu7ZUF2fWuaaDrGUhFodzLI1aQ
LEup2Qc0ITnLeK2TO5sA4yd8rgzJgWTtiZ7/8AqkZ5tV2N6dkCUR2t7n9SDl
8jpX/JCGNJrEF1wsbwQMHsm/WhcBKbEut37YIUg5YbrJOnPIHPbulA4NyKBN
rrfXfuECZiVtnNP9NWTE9uHnLkRAZjyep2i0H9J87ha/K6aQ8g+/KzaNgdQs
93Cf0MUB7MzbrXKsBNL6pEPplLuQrHGfTR54QY5PsD5fbg3p0OdGfsBMSMWz
/2yR6w+ZMz/xDmloABy/Ynjs+meQIS6Xj88JhXR7cW1I+wHIiAdxw3qshwz2
alrxQg/S0Ot6+LtRkP7lDooSvSCtI3PbZzeyAf3U8y3WFEFaS5d1Sjz7v9i7
82isv/d/9KQUUUoJTYo0EaUUxSZSUVKGIqJIKkrJkCilRKVEhFKiJFFCylQy
j2Wehxv37HZTpBI6/f54b2d9t2utOmeddc7vrD7/PNbner+X4TXsfV3PvW5v
0vQk5svRZ6SiwxsNAu6T2m+51bfoFmkT5aeHhy+proedQP1F0vS+tpTpV8Zx
pcXxyKukfEZOrK47pC2bb5++8IiU46IbtS+FtCSA+qSymFSDt1iNt4VUUtpg
t8ggqeH9nVw5IRoh3y4tr8+LSU2+mLcdXk2qZH5+6xpEKtqZoJW6hfR+xoDV
Zt0/F/o60PeFfk7o94KuA3TdoOsM3RfoPkL3HXpOoOcKeg6h5xZ6zqH3AnqP
oPcOek/B9xpYB6B1A1pnoHUJWsegdQ9aJ6F1FVqHoXUbWuehfQHaR6B9B9qn
oH0N2gehfRPaZ6F9GdrHoX0f6hOgvgLqQ6C+BepzoL4I6qOgvgvq06C+DuoD
ob4R6jOhvhTqY6G+F+qTob4a6sOhvh3q86G5AJojoLkDmlOguQaag6C5CZqz
oLkMmuOguQ+aE6G5EppDobkVmnOhuRiao6G5+9958T//+c9//vOf//znP/+f
kO/BptLBS9w/9tgGu8BJP3r+2BUnOidSIv5caztB4+NH/lwL6/NJhzX/XHbt
OalgqT9XepInr/PEPzeyXlDYpofzxxYUNrUz6v5c6WFb3aicP/faB80lVi/+
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
PLsLRb9Oe2LpOeb1k0ev9uV2Ikr6AouMpC5sImP3AN2pEzmlpRzk+dyFrWY5
OlwQ60SGlmdjjVdSsXyft3v/eteBKNXbPi84SsUq5swM2X2oA9V5mATGPqJi
32mfl/EW7kDVR861zfp9f/5Ti6qTZJVCQd7PTzEd59GwGeeNo02MKUjkc9bt
LmMatkKuQNd4tB2dfazh++4aDRs0U/1InmU7Gqrw2JdTRMOK+vsNvn3ShpLn
BX4W/v0e/Cf92faVdR2tyJ0xaZvJJjo2aDt36YhuK9J9o7TR5wwdK91ko+8Q
1YIiDu+7sjeOjl3xafDkD54WpJN9+IVUJx0r9/7jQIRpM7I9tnzVGkkGtizb
2/noqyYkbzfxk54BA+te+CVw3vQmlM5TEFHkz8BWjyTIxpg0onKz2qbXv+fp
/wzvvXCy7VUD0rksvz3qBwMr5+QqIyHagHxuxnN1VjKx9kZDSivP1yM2t/yc
yUEmVksp5MZwcx3S0l1nf/42E6u8yCrjsl4dSh05uSo9j4lt5U88U/mqFlVP
zJkx+pWJ9fmcVjJpQS0yNC6xn76cheXneZRWebkGye/JiBE/wMKeFfg4NZVW
jZTuuqUfv8nC2qqGVGQaVaOhTPNJrhksrGgxqze8vApJSm+/uIzFwiaHyHj4
aFch99hpBYsk2dgg/pqE8FeVyPOZ0xaZnWysH98ThSDxStTTJjaf4c7Gqlhn
xOreqvi9bs1jez1lYy2Kn2t6ClQg2bANDYur2FjJo/HcVaKfkGL8gvCOCd1Y
yuBW61RuOaoTPkTJXtmNHYpPznL/UYY8buhPr9zXjZ35etljie5SJMl/8dGP
C91Y2+YfyrI8pYjOoxhv/rwbGz7UPlj9sxgJxRYGv2noxiZN3+OZ1F2EnJT2
vs/m5WB3lA54n/taiEQbJ81esYyDvcFqucg3vRDxO0hRRUw42KZTak/Df+Yj
ublm7XsvcrBfzLty+77lIWuD6Bk18Rxs/Hy5kMn9uahvde3ibU0crFUNj8Ku
zhyUap80fzdvDzbdqXKnxPcPSPpnjMoh2R6s3HyxmCSJD0jnzrmAWt0erJmP
ZMSoejZSEl2dwTzVgw2VSFaZ8+wdctJ4o/I9sAcbOmSnZzEvCwlLyt799boH
a1eozJ7oloEc1z0/IdTSg80+/+PTsZdpqK8VmRfzcLHZobwJtwbfIMlvem2S
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
UE4F5VpQDgblZlDOBuVyUI4H5X5QTgjlilAOCeWWUM4J5aJQjgrlrlBOC+W6
UA4M5cZQzgzl0lCODeXeUE4O5epQDg/l9lDOD50LQOcI0LkDdE4BnWtA5yDQ
uQl0zgKdy/w7L/7nP///Z/Zmdulc8d4/1umFou7tqdw/NvqVPWfqzZ4/tuL0
z7v1IqQmMy503h3pJvR/2dCa5U8afW9ApXQSacXPXVxuEJvQqqP7zezl4+j2
PBDlsgjL1z1pDtckHfxmLviymknYM6fgTJIVqXXZYUN5HlKhPdIO4eEMQm+F
incvVEmtdvIoH2mnExawX7IvXyflsbqcc0WBdOjwwXaJOhqhVN3yqEt+pDpS
G6mrNUmzg0PPc35QCZXUd0i/eE266Y7x7PMupDfS08XctpAqPdic6i9GGnRb
prazq4swu6XxZsMLUp8LR2s/uJP2xWdrx5mQ2uakBaWp/Z80Pxp1VLoLyX+T
OjTp4Jhq/h85rtxOtHPrLg+xW11Y4dl+Ww4860Q6m/WLe152YUPuC+6Z69aJ
nC63iuhTurCGacn0awqdSORu1N76iVSs3fwbw5nfOxBFYK9373IqVvHUSLr4
hw7U2FrhVfG7r/xPleQC9a03f/fzerya7b+v63+KTju/4NXODsTvp7D/ZhgV
65K0wTVOogMVi11Uvf+eiq20UI8NplBQz5qI1xGdVGyE0p2TovEU5LO1SWqS
MA2beuetvps9BZkKrTtEk6dhzzokcpZupKCzDwcPPDakYYtFbp7ym0BB/S2b
nTqcaFjZo+tj9j9uR177jfZa3qeN2TNhqGNFO9pZUd88L5uGlbjlZv/sfRuS
nGaQG8qiYZNrp6eu02pDPKbceNEZ9DG/rv2RV9aKIgWndl9WpmOlKG3qp8xb
kfCqFyIepnRsk/PX8uv9LUgj4pdF4kX6mMt46Vz3FuSkYzY56jkdGyP3mSUx
0oz62j7M9aynYxWt0+N9zzYjQVOrvCBeBrZroC1J+2cTSraY/VRjNQNLp78X
VLf/PS9vVVcTPsjAii7bsq2hpRFl6zc9vBrKGFP0lNRR5Ubkn7pKsL2EgTVr
ceo49LAB8Ze7nK+fwMRyQu9dPvutHrlrDXk8W83EBq2b4cd3vB5ld/UsaDnO
HNNIOfp4Zh1K3t54oiuaiaUvPpNsPKsO6aTPlLFsZWLlKwuDOo/UoiGt9SPN
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
fDVdaQsDO+xgV2Gj2IRkJXiiXp5gYG+k/JL4nNyIsjeZWpT+7uOw2wcYEQqN
yLpfYYNMAQNbt8Rxb1BCA9LIW4JauYwxk29utlNqQGoS+6xeSTCxuinf2rqT
6pHJz7C767SY2GHhNSqWyvUo4mznhcRTTOyKoH1e3Lg65K+32U/pARNrOl/F
5vCSOiSZyzBW/MTEJqduGz0RWItUeYPlr/xiYg2HNVwdeWsRxflI65E1LKzV
g+IjRXY1iGc5Z0HTcdaYVzZGn8qsRmpS+0uuRbKw2x9yIy0XVKMeg5xjXbUs
rIpw2nvj81VI2JJjen4qG9vYqfrlcmslKlcL9NfYwcaG6Wzfqz63EiWbpSxK
ucrG0ns7w7vsKlDF7a8dV7PZWKlg9ZQKj08onc67WHuIjY25O6B0ZPFHRDFj
rNi2vhub3RY0qp9ShjLrRvknnOrGBn7jr+s3LUVe+fzlU+O7sTyW9avTvhUj
nktLKhr/V976nwMLFtJCitCg66aiXYs5WFXFYP1FawqRluIQzwFLDta+bfFQ
aW4+knr5XjvvHgerQbtobWuah5S3yPvqt3Gw6VZ9H5eV5CCzA8qxaaI9WHpx
2rQYvw/IRW7LYubOHqzqV6s1t+SyEY9C4EDdpZ4xy5b4cVqzkNQmeTnVtB6s
16qOni27M5CwwrP1al96sHalM2wWPXmLqnlDhQ3luVhxdrv5XMprZPE6QXLR
YS429kLz+9Obk5HGjJOMCRFcLM/qUtnW6ERkdnUXRbuKi43cdf37te3xiC48
Y+TrxF6sVZKtTp/vU6T8bc4M2629WEpV9uET+o9QOLIoP3yhF6shevk8a14o
iqz7JezzshfLc3l6drr8TeS+c7ZEWkcvloc2SVH+tQvuXwKulVSJM8icVo7n
s/lILFmfGNz3cvkJsk6ZQKuWWUXW9/HotOT2jvN5q/CigCMvx/l7qucurm89
SdYD1Ph2rlIi62/rlqp8/U7m5A0bH4buzRnn82vXP9xKuTRODt/Iu3hEm6xL
hdZ+ejRpnPrg9FDzCjL/fzw79OPVO2Q9Tz/o2LMDZN1ue8uZjYvJeubOV+IX
mOS5Rl5pxIaDT8f5/KObnW/GCbK+wf5oCUN5nM9F9ghyFw6T5zVMnV3M8lyy
vuNNamyUL1l/e1Ne5vbucc59FJ466c0e59xzr8DWIxTyPCugtX7Tsxdk3egd
laZ5epzztS9+r7jryLpvjv3RCYJkvUWIfV+2jknU7xQOdcdEknVFityviLNk
XWpC1+n6HWRd6ILzJpfFZN2uOq7l2hCDqEeWz+2/8oms57V2nPJJGOffN1aZ
tvMaWTeaXXifdoSsZ653TlmrO87XZ91KXLqKrCf6FzCOSZB1q5kyJra8ZP3t
J4e+9b108v3yf3NNoJWsB5zglz5SRdYds5l1UgVkfdbZGbqfc8n629WqWR8+
/Hkd+jrQ94V+Tuj3gq4DdN2g6wzdF+g+Qvcdek7A5wp4DqHnFnrOofcCeo+g
9w56T6H3GloHoHUDWmegdQlax6B1D1onoXUVWoehdRta56F9AdpHoH0H2qeg
fQ3aB6F9E9pnoX0Z2sehfR/qE6C+AupDoL4F6nOgvgjqo/5n3wX1aVBfB/WB
UN8I9ZlQXwr1sVDfC/XJUF8N9eFQ3w71+dBcAM0R0NwBzSnQXAPNQdDcBM1Z
0FwGzXHQ3AfNidBcCc2h0NwKzbnQXAzN0dDcDc3p0FwP5QBQbgDlDFAuAeUY
UO4B5SRQrgLlMFBuA+U8UC4E5UhQ7gTlVFCuBeVgUG4G5WxQLgfleFDuB+WE
UK4I5ZBQbgnlnFAuCuWoUO4K5bRQrgvlwFBuDOXMUC4N5dhQ7g3l5FCuDuXw
UG4P5fzQuQB0jgCdO0DnFNC5BnQOAp2bQOcs0LkMdI4DnfuA50TAuRJ0DgWd
W/07L/7n/47yLa6bwwrr/WOt2oyGZq3i/rHSS84+pDzq+WPTxddWqcuTetGV
zplc5hCqvhW4nDzaTdj/4nC7zGpS906rTRbJbEKnUs8k1w2kKzLmCaYUsQil
Dt3wW6hPWrB6T7pxLZPQ4pfCKSMz0iANyrG2Hgah7cAeDUF30rre08Vbp5EG
HXqovvkhndDRxemB1HpSuUsfUxwyaIQhFw3mKO4lFUu7XnWdRSU02HN8x0Mf
0jqVG/WX1pDKVpwyHaJ1EVrVRbwLvUpasMutdJomqeOZ6tvmJ8bcV7l5iXNT
J1KmiGsLv+rCvnjZJGHv0olazzFrR352YdfpSCM+/k5ktTt2/3lVKrbvirfL
5tgOpGYg/aPMnYp9MlnvWtnWDqRl6ZU37y0VO/cUaqzppiCpigczo/qp2IrC
GdQbgRT0bELzBylFGpbXY33rx/UUlLbt810naxq2eonchie17cg2LXNxazgN
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
S6w1qeDPIlOXXjqhk0noBSsv0mRJqnEpP6nSA9N9lUE0Qg1m3WEFKVLdGSLG
Pi+phLbaWZ7xuqSGV59Po3/pIpTOOF5s50daIBi7X2stqeMWd4e+q2M23C3a
PyelEw2GKZjztHZhp4W9db6wthOVB4v6S62iYnc+PCT3Kb0DqUyu6VvtScUu
//pBbJ12B1JE9y3vlVKxGx4F94V8pKDEKQ720uI07PfT5q0l+ykoOeg6Y+4B
GpaubbE9ntaOkp+OjK6MpmHpUybzeYi1o8SMk2KbmDRsX1lipt7WNuSVmPB6
5TL6mNzBNo+rrSircXlC8yE6tuT0pe/29S3IS/aKb/p9+pg3HG0rlrcgDSeK
dVgdfcyYAzVKHs3IYv7jrrjf++p/sp+KGv+qbkLVTgabU7YxsD6Pp6l0LWlC
5dOnfLrjxcCGVzACNc83op0OwiW0Vwys5Nv6R/rsBpSdkF/WRWOMOfgizEi/
AdlOifipOYeJLaMvE1ZNr0dx8fo7t+swsXxDouIy8vUoXbnjdJ8rE1u93/zp
qtA65K8RtufjYybWVH3tlOAZdSh9UGXG42omtnrunjLRK7Wo6Ub7SfcJLKyT
6cHEgO+/5wW++EkCq1hjDvzkUp1rULnzIbPIgyxs2IOGvgXN1Sg898r2KTdY
WKXXJ6QZ+6uRxkS5EZfXrDH7z025116FpG2en5XvZGFDqkcCXU2rkLwZc0/G
NDb27GedyR+rK5HLydGBAHU2NuLVxEU7tSsRv2dnbuIpNrbHd19KT1wFKni4
cvH2+2xsgpRnmMzKCiR6PsLsaAEbe2PqLspV00+/n6OGLYu+srE8R9nmGzQ/
IutL+nkUmW5s/OdlthmLy5GWWN7mSKNurL37kZPqE8tQ/3c+W54L3dgdK5j3
RiaVIn5/+kSNV93YplehnRcaitHw9xcpAR3d2Jkr6Ln3UovQjhlWWo2iHOya
0PfHmb6Fv5+bnZxN2zhYrx55l0D9ArSjXve5wTkOds2A+vDcefmozm7tCZcU
DnboWv4xlfxc1J/f3tD8hYPdYf6B3aCfg7QoL+qCpHuw9u/o33xXfECyBcjj
umkPdm3qBHmX8veoZ67oY9mbPVhmouQuRZMslO0SafesqAfLc9JdfHpoOtJZ
o5iCJnKxiY+z/PnK36CCnve/ahEXm9jEw/ed9zWiqzn4DbpzsYoSHTdPbUpC
BSc0dT8lcbFWEa0Ctze9RMlugifj2Fys4suJdyfxxCETygGuuVwvlvJN8un2
+mhEYZurXnbsxfIMBk1bxwhHGgfqleXierE8Rg/evJ4TgOQ3BlNudvVivR6I
BtQbOeP9PPGo/qTHLWQe1bAmSbTi7jif10hpV1ixh6xvOLbihDwfWZf5lG46
L22cPC1K8q76qXE+b+LiXmO1nKxHlguMnGWROd4dOj2IL3qcv+urveN1ktk4
n0uNelV3cCZZN9f0e5dSTeaQHBaVX/cWWZ8S07LA3Yis1zR3J22bSdY3iO7U
dCwa5zxUvHxLqc84f7eTpZLprDNOHsvbKvOFf5z/LqeBx7zWwnH+rumFzXpe
V8j6lD0CX79sIesVP087N08h6/YLZgrrF5D5tpu40Tlln3HOT4e3pftuIeux
PHNyFk8h6zzeEzs+FZD5/JRhh4eq18l6QxAa6DQcJ88vv8JNnknWlz19YWtd
T547GEgUSf+4S9YnXnd8cdmUrH+f+4V33wKyfubjMCX2/2DvzaOpbNv/f2VI
SkhJSilSCgkh0anIbUgUqZSSpElRSlJEGkWUUmnShAxFJJmlTBm2ROa2aduT
TZFK03c/6/ne12nd5z7W83zW+q31+/6G/nmv9V57XXt3DedxHK+367oayNyk
JWrzvD83ST8l6+t8ZxfSZ65WtZyiLOA+yseakjwGmQf9bG6MM0wWkCt9rZF5
5EX68cHO1/Zqk/63/cUHXIfI/OvcUfHJ93JJ38v4S9hmfwE5WrWQv/VKAfnd
5rM0/bGkL99+vqj9XaeA82S7SPsj0neQ6Glp8iR9+RUfJvsvI33axMxI0bGk
X3FEu3RpWwd5nabb1vY8J/3jba6dweGk/1rcZ2DmbtI/J2rRGLqC9JmXzjy4
rUj6gZMGDy0SErCd/SKKS7vbyXVD+ewpyxrSF5r/eplHJum//mAiS0sk/Uzj
s1+23SH9n2JfftrfIH0zmquI+ZX/3oe2A30v9Duh/xe0H6D9Bu1n6LhAxxE6
7tB5Ap1X0HkInbfQeQ5dF9B1BF130HUKXdfQOgCtG9A6A61L0DoGrXvQOgmt
q9A6DK3b0DoP1QWojkB1B6pTUF2D6iBUN6E6C9VlqI5DdR/qE6C+AupDoL4F
6nOgvgjqo6C+C+rToL4O6gOhvhHqM6G+FOpjob4X6pOhvhrqw6G+HerzobkA
miP+OXdAcwo010BzEDQ3QXMWNJeBcxww90FzIjRXQnMoNLdCcy40F0NzNDR3
g3M6MNdDHADiBhBngLgExDEg7gFxEoirQBwG4jYQ54G4EMSRIO4EcSqIa0Ec
DOJmIGcDuBzE8SDuB3FCiCtCHBLilhDnhLgoxFFB7gpwWojrQhwY4sYQZ4a4
NMSxIe4NcXKIq0McHuL2EOeHcgEoR4ByByingHINKAeBchMwZwFyGSjHgXIf
KCeCciUoh4JyKyjngnIxKEeDcjcop4Nyvf8/L/4/U33OfvJTy+77r1VDa63e
hnW8/1qFpnWI3kvr/a9Vwtvf130uqbmephPMG7iEKr899ubdElKLFqtW2epx
CI09d7gKxbIJFbq5aZr1TFJVbRlmSY9YhEYmKs67oEqqd3dAmMEtJqFicy50
/pIh1WXHwMqvkT2EDiiZTf82gdRI2eqk5CgGoQ80DJSbJ5OaMfAuY9H1bkLp
pxjrGuRJFYs5eKPyTheh5XHz7zxdRGrONPe9VVWdhPZ/TVrweiup9jnvF45y
xxrcbWLwm9GB9M7PHdNc3kmp5jOzwy9s+XXnr3jH6PldlDpeEQ6QL2hHka4r
lQxCuyhV5l6rTtRoRzE2vrbZPV2URlx4K77zIR3drnoxStyim9LJVh6/BmTp
SFqcJ7XjRjeltJ7FNJrORyR7c12EyJduSos1/6z+rNSGbKb8qNNZwaBUIWtC
gNuSVmRqW2R2O4JBqd7EjEXzVrcg+xsq8pnNDErFdC+/+ODRzO8jJ62JmdND
Kffcq/Ezw5tQwXJjbaZHD1ZDi91/vWxEIUsjFK+n91C63cY2Tr+jAeVetw79
8q2H0vLFiptmTm5A+37k+9roMinNkiy4OmX7B6QllBPtephJqdeftwsb7tYj
q+9/HJakMilVniQ0yoFbhxy7NzwWYTMp/WX7Rfjz8jpkcvjXz+cqLKwxY8a2
XXqPbCR4r4y2syid2r74hWV9LVKd1HLrdBSL0rCivWqeRrXI6tZ8Z6syFqXK
CwKZSg/fofrdnw9/+8Gi1P/VvDty498hxcW1yrp6bEofu5y5st25Bum8nsl4
tY9NqXtajM2LDBoa+uTvGXWHTani/DOpRio0pBw/Q9Ojkk2pupQFx2dhNTL+
djV31mgOpZc1j19cPFCJIuOdLDZocigNHU+34bEqkBHd53D9Ng6ll/P00Pf0
t0gp+7EfL4RDqcltUaXdeeVINeKyXkoeh1KFuxGZbWfLUFTG1Lw8NodSv8wd
F86eKEXehaunxUzjUrrqyNzNyKkE1W8/VDvHikvpcPzKcYqm8H2pOnpLvarj
uZRWZN3aojzuNYrlrbBS7+BSqrBr/4qhZ6+Q1dHb28wm9FJqPs82Y0dCIZq/
EM1PMuqlVKz71OivkQWo8kHzR+XdvZTuWpsetGZiPjLkflA9Ed1L6apeuobE
qxwUGN34aUZ5L6VCryoeh57JQmHhuZL0X72U7lqpuOnE1ExUpLD1jO8iHqUN
eSFpG588RzE7vlXuceNRGmi0acNvqzR0ZmnbXp8bPEpTFl/9dLAqBQnfHD3F
qIpHacqRwg/OCUmotVZh+kHhPkrtlI872yTHoT2Nqy75m/dRqnTnrYuh2z2k
lOAb9/NUH6VCCi43YqSvoWGpW3MTM/soDRztN6cmPwQ5LVr09fTnPkqFhhfr
Seq7UXWYOXOTeNVbknv0rwoRKg0m/SscixNjlwu4j2DeeonGAQHP67OdOTrn
MennPLr+cqIT6R+6knh+urSA5wO/ej0zuorkRV0vj3JqAgXcT/HbqOWnroDP
v3jLse4luZaQghLa8pD0vYTm+je6CnifYHKvU/RU0u/XmdXQWklyOXGttmUh
waQff80+avYKAe9JbAxz1Psu4LmUujaW8RmkH7h73fJKLwH34zTZbO5QIf1T
90/uy+8k+Se9O1931yMB7+W8yjCr20T6gYXHxjtNIX0X/XB1mfcCeG/vyxVt
V0g/UEXv0P0NAp7Ha6l48LCcgO3YnTlysZ7kz0oZFotjrpD+KtrKmq51Au7n
6vy810FWwHNWNfvU11QJ4O01oRa3LpF+uurkB1a2pJ8zjXFcebKAz2uYBB6q
E5AXbNybev0q6acrz4iQdCT9gtVblZ9ICchJ55676fxewP2MSgN1fZdJ/1Dq
IbWi9aQ/KbPn1Xsp0jfatn95ZzWZy5j81i15F0X6DaO/CrHWC8g95277rTGZ
9MUHfra6fCDzJvmLx3713SZ99SC5ZbTtpO9w4nv8NCXSj9/jGjyxi8zd1Bdq
/46LJX3pgRlHtruTPn1c7+SNC0i/5cOcH++/0Mnz4elMn8V5pM/0+5RzN4j0
43+8nxxpSfoWHRI/lRSxL6F7zfpRbx+SHz1spPjuI+WnfL4a/q64D2W2DblP
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
ZLFyHjJJXqo0JrEr/CHp018lRWRuI32P4i7NtJkCnuc5WSjEvYXkvZOW5mWH
3xTw3NEJHPfVW0jfrs5cwmqigO1on945tZ7k1a8LHq5+fon0k7bnVZbakT5T
anPyDAnSH7RmS9qVkbzdt3i+kEw46esulnU8Z0P6dCNuf/cY0r9ukvXtRDmZ
F4Ru31a2LUJA7lDpwLtkR/oR1QYb4seTPj2+vOxzCZl3lMqUzWw/RfoGLgcT
XxsLuL/ypqyP8mgB90U++3QktZDMa+RbPhi+Pkz6SrvWDMzWx37rfZXF33/0
oXnXmkX6vuC8SXVM+rs5xX2ILvPq4hZP7NMfLt0xHNGHtKZP/nWAjXOuphZb
S99N/LoQ/9eLJDfs99/zNo1V6UMNk+7F323G+Vr0VjeX0E/8dbZvuL9tE/a9
tbPGc57z61NAzd23xTgHtNkau9X2PA+Z8GZ6mq8fkQ8OTtiuu5aHvNwefT1Z
2Uz59i2xExVn8RBN9d6T0rXY936443sulz+3TAvoa6puovxfmYfN7ub0It/V
qgsursd+Rgd7xvfgXlSqZ13JK2ukfPNPd6KDVvcirU1ho83MsK+gwji2ZHYv
MnHKfx5e10D57EYnlWlDXFSq1NlkuhP7GmUlhQ/Luajfx7vr5vAHyqeFXm7p
fchF4i7749bewr7yY83nqsFc1BA7+Jr+F/b32aqvyfPgz1vFvPJmKewHNksU
ftnA76NUbrq6t9Xj/SYZLSRsw//e2UFBZwuwbzjL7kipMRdJ21vMPxyN/azj
nePrdLmI9sIgZtIp7EvkrfcJ0uQi+U3NcaaHsH/79sm6IDX+7w8pvvp6J/bP
qEXJ+qnyt7Pzq9Yil//sQ9uBvhf6ndD/C9oP0H6D9jN0XKDjCB136DyBzivo
PITOW+g8h64L6DqCrjvoOoWua2gdgNYNaJ2B1iVoHYPWvf/97cQ6+bcPravQ
Ogyt29A6D9UFqI5AdQeqU1Bdg+ogVDehOgvVZaiOQ3Uf6hOgvgLqQ6C+Bepz
oL4I6qOgvgvq06C+DuoDob4R6jOhvhTqY6G+F+qTob4a6sOhvh3q86G5AJoj
oLkDmlOguQaag6C5CZqzoLkMnOOAuQ+aE6G5EppDobkVmnOhuRiao6G5G5rT
obn+nxwA4gYQZ4C4BMQxIO4BcRKIq0AcBuI2EOeBuBDEkSDuBHEqiGtBHAzi
ZhBng7gcxPEg7gdxQogrQhwS4pYQ54S4KMRRIe4KcVqI60IcGOLGEGeGuDTE
sSHuDXFyiKtDHB7i9hDnh3IBKEeAcgcop4ByDSgHgXITKGeBchkox4FyHygn
gnIlKIeCciso54JyMShHg3I3KKeDcj0oB4RyQyhnhHJJKMeEcs//t+bFseZX
OBmFvP9aZXOK723s4hIqeVbFejiRVPq1oXMogUOoYcwcxp10NqkqR2k+fSxC
Y5rK//qzllSFDyvWsCOZhIZtnz7dazSpZxxZxkVOPYR6e3tuL3jOIDRHsfqG
5ARS3atVZZ7u7CZ0OPX9D+fKLkI7X++85WVMqvmVnTohzzsJjUAVUkgfa3yM
za5ZGp2o7NlphdpUrDXe+htMD3cgF3bJMhn9Lkq9lN7Pck9uR9/9dfZ6p3RR
OrZI++Par3RUvFx04BR/XflbHRV9Iw006SjBes+K94ndlAorFhoE/2xDDPXf
/WFzGJSuOiqq4RjeisxVTHpLIhmUqkcig3izFhRTPkredEwPpUoxwy/02E3I
cHQle79vD6X236+jtKhGlGzGWzyF1UPp8KLFW7LMGpCL4WVLk1VMSul2lspo
2gd0JnXYJCOLSek+jpRxa3Udik1Ke/ViGotSyeGuFw1J75HV4Xhr87MsSpVj
xBQ19tSi6Bvutp/oLEp1dCpk1J3fodppilUD5mxKzyTFX1VZUIP6j885fO4+
m1Kt8+Ex7vI0xPhekrpZiENptIpdXe2vSjTgIr5L1pFD6aqsyvALP94i+uIT
e7XjOJQW5Igcq5lUjpx2Gh2v+M6hlBF5VW7xnFJU7GrytngVl1Knp/5G63WK
UXE2bXf1DS6lTjemnVbe8RqZdi5bUd/PpdQj6czBYadXSMzja8eqRb2UNh3R
eaLdUICUjB4sHfbppTRQc6PuSo88lPup56duZi+l8xKV5pxyzkZCi6NSGv/0
Yj31JfPtqEwUmXdATXIFj1J5mcQJrj3pKGz2YRHpkzxKd207WY56UlHlYVu7
S7k8SmmDob4uhk/QwDVb9dJhHqVahecblvrHo4I838YQ1Eep0Iwnt35I3Ec6
XpNuuQf1UeoyND/nVc41ZFjAaBp80UdpIPsIS0PkAlL92PbYoL+PUiHz1EWj
EndS62LMtopFSTQB92OeN/61KUKAPzu+O81OwPuerpnqv5Ag/cEF0RlyxeTc
VOBYPnXyKdJ3sxo7c/syAZ+vvtzg8Iec4xoCE/PTX5O+yg6JqztPkL5JZsIF
RRPSD/RP1y34Qc6hu95uHdbMI/0N288dk/AX8Dy04LVTn60gfebu8fmfR5N+
YOryp4teCMgZ+3yadxwm/VX5e4M3a5P+BuPZRmP6yXn/G22OisUT0s80mp/Y
vIv0dVNzizwVSD8mSCzGqpHkEvITizNQBOmbbHRvemhG+mbtwV/2/hFw38HV
M5UTUgTcd9CvMyC/j/QtzB0DjOaS/k+50H4WneQ88QYM6/GXSD/i4/uhRHPS
/9lTNOev7ySPijEflyTxVMD7BHt7zq9wE8DB1mU/fjFdwHsMPSyX6b8jeVpF
kb2G/XnS33DG/XbXUgFc7pOIsvogyf201ii3rkwk/fTeJQN5bgLeX+n/iWYm
S/pCp6pvH38r4L7LBxOETc8L8JvdXJJWkL6ZSXyayzDJV1PQmtkuOaSvpa9d
WH+E9AtaPu2fu4j0XV49aP7GJPnwraur2CfiSJ+WGGr5ZyPpN+zfNrRfgfTl
bViLixtIvv0+YEhD5DLpOxhVeeVak/7x6SmdLRLY3/64f/No/vrrG7eRKXoO
c/gzp2313t/qQ7TK4rMTxbF/u9pH+6drHxIfoxbgcwRz/tZFw9G9an0o/vgB
4XdMnBeo2gYbKQ7yEH2lxRRL1xE5wo2tT4+n81CMkGeGfhHOIxx3eJltDeKh
Db/kF+w3xX7YQ6vuhyt5yOWmofH0JzjvKLe8Nv+pBA/5Gvixnytg39/f83vT
u16U+TLKUzkc5ylCUt1/vYjg191HOTrlLJzL8OtB65u/ehG94WjCfh3su9/t
jLg4jv/5CUv2dN3CuU+TNRIXreGiGOM7V0IlsO8+x4DWfpmLAp1Dz+l64lzJ
3mjcxEo3LqLJTU8W+onzLFWVjRdt+Ou1S1NbZ+Ej7BeMDn2gOp3f14u1XXcx
xz59l6GYMr9f0RK7HP6BV0f5bO3c0dl1HGTxp+GMfRT2h39b6158zkFev3JP
dq7EPmNd1s3hK/x+qH7N6YOD7ynfMKduxpFD/HnPUa5S7QH2nb4/n/PRgYNc
+szbNByw73Mw96v3Yg6ad2cj554o9jXunYgWnsxB/RPR6PPptZTfmVswXD/E
RplN7Qen7sa+k8nhsaMa2Yiu9OjayRnYj54+fbtJDhsF/lX8Nab+HeXH+g0m
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
x6B1D1onoXUVWoehdRta56G6ANURqO5AdQqqa1AdhOomVGehugzVcajuQ30C
1FdAfQjUt0B9DtQXQX0U1HdBfRrU10F9INQ3Qn0m1JdCfSzU90J9MtRXQ304
1Lf/+x/Z5//tQ3MBNEdAcwc4pwBzDTQHQXMTNGdBcxk0x0FzHzQnQnMlNIdC
cys050JzMTRHQ3M3NKdDcz3EASBuAHEGiEtAHAPiHhAngbgKxGEgbgNxHogL
QRwJ4k4Qp4K4FsTBIG4GcTaIy0EcD+J+ECeEuCLEISFuCXFOiItCHBXirhCn
hbjuPzkwxI0hzgxxaYhjQ9wb4uQQV4c4PMTtIc4P5QJQjgDlDlBOAeUaYA4C
5CZQzgLlMlCOA+U+UE4E5UpQDgXlVlDOBeViUI4G5W5QTgflelAOCOWGUM4I
5ZJQjgnlnlBOCuWq/0/Ji13Ga7m+ntVL6L7Il6pudlxCIw3dz3cNswnVWVW/
gKfBIjSrNX7vJUkmoerZL/f19zMI1RO/zD78tZtQ77ggxXNSpBqtL32buqyL
0OhirXxuYCehYdryjP4IrBrpzbFRsR2ItkUlrHtpF6WlByyT5sa2oxsi7jOC
u7oonfrdfe3Sx3R01HPvkSfB3ZRGpubeGDz0EWXwfgWYqTEobdERC9Y+1Yp0
rjyS3JLDoNTdVOpDd3kzMn+gmalp20OputyhD94Tm5D7lJu2oZ09lFa81JTZ
tK4BZRWHJdr+6/7+/621iY6/pJ/XI5f+B1UJQ0xK6ZqTrvyZVocMjcbNCw9g
UWpv3XZ27alapBc0lUb7w6LU+XhaeJjQO+RefLXx2jk2pZVJy7wN3GmoUnbn
+i0SHEq1z18dKCusRFllJ65W+HEojV056oTuzLco+MiMhMohDqVcbUthTf1S
FDVhyb3v+7iU+sU/NlD1eIOifrqEcrlcSv0mZT0/dPAVOjMplDbWsZfS9LGe
S0K+5iN/zSJL11e9lM571xji1pmFtm/O37NxAY/SDYlj/lR9fY46xaftMrzC
o3TD1ewZppKpKOv76WzD7zxKY6K89gbcj0fztdW1T+3po9TkesY1vTG3UGve
LvP7lX2UmuzLvD6n8yR1PT2ce3fpzCqyjh/Kqo3R2k76G9IUXv7reTX/9EW+
HrvcdJL0TbYbXr0ykfSlayaMlXkm4P7Q5k95blakvznhAmcsi+yXDp00OeF4
gfTTz0yV5CwS8Hyk34WrM+vI/q1Br3XxBV/SN1m6ZVhVhfQNrLaG9NPIPnP8
Fc/DmwJI/7XlRfpMVdKnBbS8r2si+96CmzFu9hcEvO/pgucbucWkP+8g/cZn
Htmfi0j6rpxwn/Td4m8W07aRvu+CVHPlqaS/aupgQGCNgOeAuU8aPyGU9B3q
417dWiHgfZ0yilk5vwTMTQ/e1HhmkL7817Vbvh0g/YYFP/v9NARsZ2vRDBZb
wHs2PxbEaD4kfZM7f4K+uwm43zNypm2UPOln3r5yyqCOnDfPfS8a3xcq4O/J
16/eoWNF+hYr3Bc7/iHn35YyFY5ftoDn3b0d7ZjsS/o/I3pKsjRJP0LvavyD
HgHPj7VjS7Y/EPB3+wtXdHdtFcABmFvmuE0i/Vs1ieHpZQLu30wfs+XdUdL3
sIv+ILuQ9APNDFaIMEnucag9P+RsDOnTXv/KfblawH0TIt5TPopgP4S1zju3
pA81lDjGbPQe8bzZr6yw8pA+RGeVug43jXiurPGtzScs+1BM9JmdefrYryzZ
6r1Vsg8FenvG7L+HOZLPb99Dm4t5aN5xTeWePsyj9M7J010u8tA5B2Otz9tH
PH9yYeVitdX8dfBroNjOIsy72PsSBlVkeKh0YsL2lvkj7nOxlh8fRutFG3KM
7ricx9zMXNr4x6fz/+Jp8oMtDSP4G+fZgiMm/HnGGvWqzcI+2/DyzTG/ucgi
sldE9hjmeBL7lcem5XGRfGRDVH4L5oEmVdFGu09yUYxw8JQx5tjf09baKrWe
i8STEhLiGjFvHEhc1Hlbm4voGj9fhARgvzI7T/iYJBcF1m0+nzZrRK5aLq96
gc1BKd+NP24qx/xTSX/PQ9E3HEQ7P3baRQ/s76mXETO6z0Hi19WloiZjX6tK
UbQjkIN8g8vHL341gtNukdPv2sLfPvfFecN92Fe9rWY01ZiD6OK75PLlsW9f
liOuoshBdl8/TG4qHcGNryvanPjBRoG/ykzyDmE/sjRQntfERl5flhvbK2Nf
Ud5bY/8LNrLIuXsgshzz6qjFrLvaUWz0TbQkPOAI9rMi3ZeM82EjuwOBUtPn
Yn/Ae1JmkQMb0WfprGLVYn5erOx77ocO/3s3qtcNBo3IVUsv/rKTYaOCL11H
rRZgP0pdMlCvj4V8+5RMxOsxzz9jFpte9pY/HybeNfX1x37TtV2lyXEsFHNM
9LC2MvajOkPayk6xUP+BjA2fruF8odXNdLLRDv52vtntUR/GeYSj1nsnHTMW
SvmkUiy0Dvv75n20/UuZhZTKN4W7peC8Q8eQUX1AmF/PlE9ILZHBvpiCcHBV
JxMpnZQKF/fGuQnDzidkaRETBV6xTVej4fwlef2dxqsP+P1kxhST3kXYl15v
VS8cxER2ad4LZU/jfMd4FIqc7sJEWmJL6RfpOA/KevZ+fbgxE8X4z31RoTMi
P5owa0z+DP73Wj1Szr6B86baRLG0/t89SGnTrBNpwzi3enB4h0jyxx6kterH
5G1bsJ/wct1fsgU9yC4myc2lAOdiKbtVDd7e60Fe0gXy3+Zhf/zMnea6wT3I
5Kawi2gEzt0idCRyt+/oQbRROqmfh3Gul7NM6OuvlT0oZcmo2i/OI/yzOdKB
c/l+7BP7wDcj8sfD9u0zJfh1etU997va2HdS/9VT0MdABa2fzr5+8gpfd+Ky
Pg/fM1D/vK2r9eZinx6Qtlwyi4Fc/IIsVtwvxOtJRunG2vsMZBLOKVDSxL7S
xQ+vjEMZKKZ4cZVubgHle7mZS246zEBaQ1tXlFhhv9x+QuwFFwairww/fuhN
Pt6Oka4GzYa//Y0Sr2dJYF8n3ZvTbMzvDyROa1/bk0f5LYwla37z+4YYEVP1
vre5lF+geV6MpsRAgbWblitZYF8sW+LS58n87a/em3C0OQfvB+m7a+Qm8H/P
PT2tj6HY1/OTn+YgwUBKxYMTLHdi/+e3J4r2YvzPv6ybh9B/9qHtQN8L/U7o
/wXtB2i/QfsZOi7QcYSOO3SeQOcVdB5C5y10nkPXBXQdQdcddJ1C1zW0DkDr
BrTOQOsStI5B6x60TkLrKrQOQ+s2tM5DdQGqI1DdgeoUVNegOgjVTajOQnUZ
quNQ3Yf6BKivgPoQqG+B+hyoL4L6KKjvgvo0qK+D+kCob4T6TKgvhfpYqO8F
+2Sgr4b6cKhvh/p8aC6A5gho7oDmFGiugeYgaG769z9yzvrbh+YyaI6D5j5o
ToTmSmgOheZWaM6F5mJojobmbmhOh+Z6iANA3ADiDBCXgDgGxD0gTgJxFYjD
QNwG4jwQF4I4EsSdIE4FcS2Ig0HcDOJsEJeDOB7E/SBOCHFFiENC3BLinBAX
hTgqxF0hTgtxXYgDQ9wY4swQl4Y49j+5N8TJIa4OcXiI20OcH8oFoBwByh2g
nALKNaAcBMpNoJwFymWgHAfKfaCcCMqVoBwKyq2gnAvKxaAcDcrdoJwOyvWg
HBDKDaGcEcoloRwTyj2hnBTKVaEc9u/r6/8UhX5nbuxi0cxSNqFDdfrtQh4s
QiOe3c2c9qmH0AcSfsJTaAxC2cMOWXtvdBNqyL7XMjWqi9BIl5JNGYmdhH63
7pr94gTWsRcfW+8r6EDOqaNFxCy6KP3y5cf3och2pGcvO1VXtJtSTeHtTYt8
6eh29oIlWYXdlKpVHneoyWpDTdE78v/sYVDqvbC6UCi/BQ1zwxdendxDqewS
uwMm+U1oz5nl2y9k9lBa5LG03rm+AfXGWUhbOTApNRRXrZ4l/AEx1F493MNk
Umpz8qVMgXkdih5bEul6hkWpTmeCWYNHLfI7UTjsL82mNDIoW+pMVQ0afqMf
W/CITanskw2SeRNoaHtDrMQvdQ6lSb1yBTKfK5CJygS39nQOpYGqiXEvXpUh
1ZVfxxzV5VKqsE2XpvamGCl7OXR/zOdSqr5VNKYgsAg5Wgmd91/SS+nw8t9l
E+IKUO6ytxuOpfRSOk/qaL1+VjZyvtXr9EeVR2l8YkvOGPUM5Bj7bemxuzxK
+3U2aC05k4KG5L4YnxvfRym9QXSRYW0sihwrLXQrtI9SF93fP/PvX0WRr6fp
mw72USqkvNFR4+Y26nxP3yAvYhlK1rtzTvKWgxNJX8RTyVblIlk3u+7+4A5N
IP1+UdEcuVsCngOTuLwjaQ7pt9gFiJs+FdAPyJiJXl4t4P7Z2K2L6pvJPsQl
I97q2AEB/Ul3ufouCQHv2WktPHktluyLNk/vK79uSvoRLzNvyzIEvD9I/3Gc
+WkB97F6vb44dZ6AHLY0c5luFdkfhj7Z/MjbX8DfW4pemfuv+xj+6Tssvym3
uInsY5mP/mh2nyF9A531TXmLST/T1zeyuJPsq08p6ddPvEb6D2uOHr1nRvq6
c3aKXxYm/RbXP5r+LwXMF0fvRrh5kr5B5q1p9bNJP+LPu/imZnJ+ef/xu9+b
CNLXtVy5m2ct4D7W7EmZG0eRvq/BoNGTXAFz1vPawtF+Aua43ug1Ptqkf+55
1ZswLjkPiov79Y5KIH2H+5vGWOwScB9rW2pxxnTS31BuoyNTL2DOfb5DWPcC
6SsVON66YyrA1y6drfGHnK/tNgu/YL0k/V1Fv0VNPUjf4Nzpp97zsG8o1OCZ
yuhDEUK3rmUXYD7QJOkRkve4D8XMnuC0eR729z0PExrjwf/8StcgmYuYM8Sm
FF9br87//EuvH008zCvsSsS/X+D38Rafr/KcN454j6d6fBs9iYcCPR+qa6dg
7jHk026d4s1Dux6n5RrMwr7k7bP2dov4fbl4Lc3iGOYqRQnJptafexFzvrZa
TivmM5VbR/s4Pu1FgX2iczfoYV/4xRLfW2696JxlhPrZY5jzmMgumFL+r/d/
pHCWHK3GvMhqjlncwRYuMnCef3/GXOwnd66Uk73JRVovn7x4Goy5U8SfJ7pP
d3IRM+C5sJ4w9oPnhIYqmHBRqfOWrStiRrx3coPvF48pXERrTdoRYYh92Rma
MusHOEjLeiBhIx3zNLuLea8aqziodHuLu9Jp7If9Xn1ocwIHuRx/M7tHDftW
BfdSXc9zUKbLpByfDyN4YN046QPu/O1HKcYrBGKftnBVyA4zDjp3JK/x13zs
B9pdkXo2i19/yz6rGr/HvNHcuLD1rBB/O1O3J9gHYX/+i1+Fkm1sxLQcdpu9
YMT9qgdNiibn8tdrxVm7MhpG8E/JhB9119mof5baF7mAEc8Rvay9KMmXjWL2
//Z7ooF987ZXB5rWs1HKgp3T7zdjHluwP/tBy2I2ol9xuBF3BvspBknlZyax
UWbYk2E7HewPfVqdvHyAhZibVy5SoWM+zPgtnipCYyET/6isceewL2t5Ib42
iYVS9DbPkdHCPm3j5MThcywkXbhnfXcS5tVa7GNjpHazUP/lvXOsJbEvlN60
4a0lv96cWpnzzQtz75TKwIoFaizkJXLqd1Ml5ueVSjMX647lf/7hzbGimtg/
kygXoMZiopiNB3yqwzCfT/MUyykuY6JATaWk9n7M8+3pXk8sE/if36a7y8se
+/xjlXH8PBOZOEZd9nyK84JIKV6MwW7+XGcTqzJtAvZjx3y/usqC/3nV1t6A
3Th3UK4932w6l4lSZqZa2r/G+UWwzLhxF8YwUcR6ff0Xc7C/PWXWvR2MHtR/
IH7OzxM4B7n1Q0nOoKQHSbMf7pfvGnEf4t7QiTZxPahgWt7mIDPsm7d8neB6
tge52HywYj8ccf9p4amPnjt7kEnJNeeFoiPui9w3NbvOvAfRZ52IU3fFuU/C
jKcnLFR6kN2NvQF7nuP8qH6e3OhE0R6kVbFfYv107Ov9Gbh/isFA0j+LNK8F
4nxK+Vbj6oxiBkoZbxIS3o5zrsDQZ16THjNQYN5xHXcb7HuYRt4uD2EgpTV0
2S/PcY6Wsvf11eB9DOSlUM+9pIz9YKdf16/Y8j9/vvt75TSc04lNbElV1WYg
k/Trn09+wTlgSFlWeeYkBnL5aM3Rr8Z5YlO/ZYTQt24UuKvzvmhKNuUff12o
a9LajehJl6ROPsyi/PLG6hdvX/H9oBmaX26+xL//ZvFU24RuZDLx1agpcZmU
73Sj02jfZf72f3W6mGW+wOse7ZuDzjH+5+dmrhlFy8D7h771yrd/ccw3eW+f
f3pO+ePr4+Kc1/C3s/liaLwG9rfnVWreX8b/PZ5j3687mI6PL52TcFG9GxUU
6iVfzk2j/Jhvl7vsZvK/NyO3d94S7K9asNHKmz+XC6Ue6wmMfobrxad3Zcb8
uUtpj3HHbl3sa/WbLUv50YXo21L3d7xPxeeDU94Y3tcupHTG02bVU+wbvdav
WTDYhVwSNNQzzv9nH9oO9L3Q74T+X9B+gPYbtJ+h4wIdR+i4Q+cJdF5B5yF0
3kLnOXRdQNcRdN1B1yl0XUPrALRuQOsMtC5B6xi07kHrJLSuQuswtG5D6zxU
F6A6AtUdqE5BdQ2qg1DdhOosVJehOg7VfahPgPoKqA+B+haoz4H6IqiPgvou
qE+D+jqoD4T6RqjPhPpSqI+F+l6oT4b6aqgPh/p2qM+H5gJojoDmDmhOgeYa
aA6C5iZozoLmMmiOg+Y+aE6E5kpoDoXmVmjO/fc/ci7+24fmaGjuhuZ0aK6H
OADEDSDOAHEJiGNA3APiJCBXATgMxG0gzgNxIYgjQdwJ4lQQ14I4GMTNIM4G
cTmI40HcD+KEEFeEOCTELSHOCXFRiKNC3BXitBDXhTgwxI0hzgxxaYhjQ9wb
4uQQV4c4/D+5PcT5oVwAyhGg3AHKKaBcA8pBoNwEylmgXAbKcaDcB8qJoFwJ
yqGg3ArKuaBcDMrRoNwNyumgXA/KAaHcEMoZoVwSyjGh3BPKSaFc9f+uvNj5
TOgTtz28/1rrp/pmjnHhErqv1lHFVIJNqNi06REvbzMJtbdbN+e1ag+hOh3W
P3o+dxNqlGbDGszsIlRsTJzFnzedhB6dfTny4AWslhUPZ79/0oHU2CuUIrZ3
UVoYc7M6bk87fw6pM3yi301pxPf8OD91OnJa+V65+mc3pQMLg69cHtuGMuK1
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
WT++ANkIOwTlNfZSuqtBql/m7Uvk9OkOp2MLj1La09DBzWFpSLVAOiyfzqPU
5ee+YgleApIM35Kl49FHaYzGygk2GTdRrO7W7ghmH6VCwde/2UceoM7TQYvn
75eGket5Q1ezwvJv5Pr/7a7MpTc7BeS8a4pix7SS9eUKPc3Zwp70H170b6VV
kPXr24Lc3R72pN916MuPg+UC3mO7vj1J2I70Q6W9dCUaBNyfKy2WGulG+pnb
HAMXcQX0A5xZljf9SD8lsrhp1XjSbzhn+bXlDtlvMCNnHT9oSPrSYyLXG7eS
fU7g9KMNWj4C/k4vvaxVXY70uerLFdqfkX1XDqeA2bpBwPtiEkxeNP0m+71D
zjK5TnGk7yLd8arJlvS7zt9Z+vE72X/eylZ5JfOA9Kf7J0edXSugjxU61bjv
h4C++qHKzLJU0t+l7fVzxlbSP8Tx89STJf3pup+LP5WS/bySX1Gf5ynSN0hA
KUw90p++8/f5CC45d9D2DqyTeCDg72Zfek14upb0DR4uSMuaSPrXJ8fvGfOW
nI+kD1S/XO0n4PlXUibCEbrYN7H6VqI19K+/W+YOHO3Bc1wsV265RTbft315
X9cB+9Lhi7O2Bvah+O7Ta/oK8JyY3NB/94ZpH0pRbJISUsN+TNUVt7fifShC
5NCxn1fxvJlm5Zw5vZSHCgxZFX8N4rl1wPnxpt5LPETfM3dHjQf2YwPmZQc6
8lCMUXft8oYRzzHe8XSOhwIPlQbobZmwAvvGLT4RKc296Lqq2u4lj/B8va/g
kIXz9V4k3a68mPUTz+myuz5tULbhz+mnNm1pMMF++dSO+5mSvcjXZPE1m/t4
3t8zlaViWcVF5/LNWzKEsa8c+yfnfBgXbZh5YkPDNswTvB0WnVqwlYuU7I+V
c3sxl1BNFy1JMuAilxUXPz0NG+HPv7bNaCLfZ30fiNLAvnv+qDeyfRwUuOWU
R2od5iGqCbO3POGvdy6PHTlpfti3r1rK7Y/lIFrw1dVOs7BvWJP5ySGY36+O
W73ZoRTzGeG/VNvFt3HQudSP2lEHsa+wdDDDYBkHFUS6loVNw/6DXVlB0tM5
6LroWjO14hHPJX6W9GLyMBtZ5C601jsw4jmBP+70KvxrnT0sudZ0OvZT0t8/
XZfORplFkfr1r0bcl2HPWakVyUb9dhVPvnliX8FlUsC1A2xk0q+dPTwN+zEe
xhm/bdkoIvxGyc+SEc8r1g0v7dVgowJh98PvDmK//Ce9qWUcG307oq0cr1gz
Yr8d+LOaxeLvt1sBK0tGPK/47miVwmIWigkXa+rwwn7ypCq68CMWStERfnZ+
OvYl7e7F3znJQiYRqtZTwzBvdDmfmnJ/OwvRnxzx1viMuWWlbU2Voym/ToTL
STyzw7608Z40hTksZLdINuj0yxHPsXwx8clFUX6fd9XZvWwa9sOCvL5kMpio
4Kz221tBmK8mWFcZdZYwkZ3fGC2vHsxj63lKTKnHTKSV8PCcrQ32hS57RxqF
8OtQ0/J2zbQR99t69Slm7WEiunby1fuTsa9suzde35qJUi7IW8n5jnhv7Fuz
MIf5/O/9vv5VbC3mz2I7vxq+HM+fT4TrVO8g7Ife0jfbyOtBBRPk1uXFjbjf
9vqJDWuqe5D0D/+sqPHYtzc+OPttSg+K0V6a9NUb8/O0xcclbSJ6UOD4faZB
NW9G/H513TsHevi/v01kigH2hQ527fhrLb9eGvr8cruJef6wWXCtvDb/8xsi
Zh0fxvw/sE1t1QoZ/vY31By3dsQ+fflpjbbPDORiGd3pmDfiObHa/Srzaxmo
4EdK5ruZ2M+Kma8flc5AMcp1sn1ncE4RYuG8LCGKgVL2vNO3/4TzjumqVjL9
RxgoIu+gY8r6Ec+zLV/WF8av34EM7w0XDuM8Rf1+zpP0JfzvXbeldsJy/Hzd
WJMVR3UU+J8/E5UzWgznMh67xmz6/b0bmUyyuthXhPMdBeFc1anN/Lo+0zX4
x0WcB5mnbLVuy+lGBR05n5644PzIifZ548DdbhSofDw4COG8SUxRSH5OMH/7
s0f1H5yJ8ykjrcntT3Z0I5eO2vL33/D9mDrnhIpnWPK/d61ojk7zf75/VuuH
5GUX6W5Er76Q/uYBzteGhhxT2P1dKObRjs75u3EeN9zfLLKqrgsV7L6m9c0B
53d05zWmv7K6UOC6TSvKbuIcUKxl4rOj9/i+1lFW0O0kvP5EVky+c47vn/uR
tjEJ54/Ttc81nfXsQibsBxNvZ4zIW53tn89ax+9v1gbPvx8bi9eHN0qxfoi/
nb3hw1e+PKT88Rq8qFo1/udP3yw/a/YA15c2Zz9NOb6/bV34vex7lJ8zOu+v
RmH+/0uvIfr7qhhcvzqkyoYGO1Ggy7E94eZ38H6zPeDyuovvb02XeZp3E+/n
6tPjDzTx+6StzMHHs6Lx7598v+hwNd93s7/kvuc65Vv9mX5rwlv+djrPullk
XcPX6eyI3bYl/M87nw7YpfKffWg70PdCvxP6f0H7Adpv0H6Gjgt0HKHjDp0n
0HkFnYfQeQud59B1AV1H0HUHXafQdQ2tA9C6Aa0z0LoErWPQugetk9C6Cq3D
0LoNrfNQXYDqCFR3oDoF1TWoDkJ1E6qzUF2G6jhU96E+AeoroD4E6lugPgfq
i6A+Cuq7oD4N6uugPhDqG6E+E+pLoT4W6nuhPhnqq6E+HOrboT4fmgugOQKa
O6A5BZproDkImpugOQucy4A5Dpr7oDkRmiuhORSaW6E5F5qLoTkamruhOR2a
6yEOAHEDiDNAXALiGBD3+Pc/kpP87UNcBeIwELeBOA/EhSCOBHEniFNBXAvi
YBA3gzgbxOUgjgdxP4gTQlwR4pAQt4Q4J8RFIY4KcVeI00JcF+LAEDeGODPE
pSGODXFviJNDXB3i8BC3hzg/lAtAOQKUO/wzp4ByDSgHgXITKGeBchkox4Fy
HygngnIlKIeCciso54JyMShHg3I3KKeDcj0oB4RyQyhnhHJJKMeEck8oJ4Vy
VSiHhXLb/6vy4v5IjxsLD/YSOhQQdCZpLZfQfpnDSSsK2IRKfj/yoTeNSeh4
15nlj+x7CI1UXGtkXtpNqLd9rexwSBehIUFj6k/t7CT0e5VRnOIg1vNlKqdr
ZTqQ88Sd1y5/6qL0sFv39IdX6chbevDm4PtuSmOrlNVnB7Wh3tzTP1OfMig1
LN4vwe5vRkpLEzft9OuhNGb1b25ZRCMaSnvpZLCMSen0rnd9jis/oKjyLdLD
n5iUGsd0VsnMr0Pus3eUnX/CorTyOu2B6+A7pGP5YoDhzKbUXaVJxZpBQ84O
kTp0MQ6l70RDy/PqK1Ft+3qp/NscSsc/739w2qYcrTpWOEEOcSnVnn4k7tjp
YmR/YOks/2YupeM33DSQaX6F+tfXtGz36KW0gL4wdg0nD4mtPZLu2N9Lacrc
XSF9/4u1d4+G6m3/x5GkIqIknRRJpJQcEt1TJCQpkqSMSIpKSBIlihIlOkiq
KZJUKCUlTESIcoxETQ5zdkpFB/Xd/Z7fe+5Z7z3Xep4/Pv651nqtvfaMmb2v
63WY+975eSj2/GDJmqM9guo17FHj3HcfSY1u+vlSvFdQqXOa3CmNt5BUQOTJ
sed6BZW+rNLgrek5wXXncN2qobaXnP+KVUj+VnEm48nJ0pfbCkX07eU5y2er
k3GjtyHlNjRy/29eL3Zv+WgR+z8PL78UFE2eL9mVnZ8sR5HxZ/sN3FyOkOdX
zUCyerYEGefr3Px2Noo8H6Xlz96aJUvGfS9E75FPFPF8jWupq1unk3FqFGuH
1j3y3Ff+nbFXbhUZT7QVs5XpJPMKl/peW0oQGS+f4EFtlSfjXu2KvcPpZJ5D
1952JdqSjMtLbF+s1EvmUfLZU+qeJJBx2tripj0GZFzZfM8VnY8ini+TFzN+
+lEROe+kiFhZTRH8MEv5zaZGMs9cPOPo2r1RZDxMk6L02JCM0/ITTh9li9h3
6NaussxrZJxikTp2wJ6M+9jtrJ0+QsR5JA8Hzn0o4nenIbpzA3aQ8Wy9k9cq
Z5Bx6XLuWnYTWV9MtTfzLIsh44yLJoWaK4Rwg9Br5X+I+3PUk9P7/2C9Y7bs
erJ6CaGbpiREvd+B8TjL2tf5J3uRl/7Y4xuahfLcPfTVYraELpvgViBmhnEL
I45jhCKhy2RWbSrPxnpNRc5Cc3M9oe9mZ3W6y2M87M8GdbErBP77rXPYCaz7
SpI1tVds/fu7vS7vmzysH0fcK/P0nN2DTmT3iYVtwbji3DNPH3cS/Y65ff2r
fKxP9eRG1d1PI/pF2vjYZ6pC63MTJdpLqd2oJlTqUc8+rHOdG3QXRMzsRgyF
H19f1mO9vFt7Ru2RjwRP41dHF83HeEGb7Kh+GqHHM26cdY7HepymEU4b6UMc
T105ftw4jF+Z1bvT25LQ6W8bT8g8wrq++1fXzs8z+MhuqFD6w1qMr3n+fb33
Lx6iuPuulRnEfoJzdW5AZxMPUcUr1PIvYzxYytnFK5eHdOU/MSUthfZzu/yi
CCXwkN1xb9cZfdjf8Bdvd2Ts4yHaCP132ckYV3IdeFdJ8Je83QzVn+YYD6w8
cixah4c0g9Hqln7st1RLfT184e9+SWc9TIOSMB7c90mujs1Fuu8ezpG1wHjg
RtqbdS+5KL1FPsrmM/Z/3pq/OjniFhcpzwtpPnEd4wyH0krqMeI8Dt0/+q0x
Tv9jZWW2jYuof4wM079iP0pnuxd3P4XgN78kKzWuC+37FzklZPpMLqLVmBtU
rRd6Lt4mm6K23xxkx1i2VWsY+2Nprh73H7YRPK83ON8sA+N9yxt7RzzhoGb1
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
MdYXGiVeziGUXsRgjWw3mIlxWdNWZauRRF9I1Cg0iMU6pfv+eeP5L3pQjUlg
vD9X6Pe0KiMXrzhD6KASmfDZnhg3yHtwXGlDDzpRtcw2r0FIT3F5KGpqD1Kt
qJ6xfhXG7ezc1+d96EbllkPVVXexXmM8zzs1h+Bn2Z1r2toVMN6yw2baxq0E
zxmBKt55C/1++PnbR07Tu5FqZ2JZ2yusH7UCFslYt/OR16zD05/oY3zE4Y67
T27ykXS+ka7dVaxDs/0WFGbv46O8q4Hvl0zFeNmX0TEttnzU16G8dVap0L7Q
2a22d+cR/TpvTmnmXoz/2Lqw6vNoPvLdfej3B2WMp8lGWi1h8ZDqrDeGcsVY
d/9I3qtpXcJDvtKTti/xEtLpx7VKrVMInW7D5RsrY1yxfqOU/DEeyj7zXk6z
EvsA2ayY9ToePGRkRrXdF4zxloCZyU9WEq+bai9lN1/od+lTG8enqfNQXNm5
edfeC+2f5j6g+keSh/IOUOtCY4Ty39vjdZ26uIihOS/IxRTjkW8ScutKuagm
cl/56R7snyh9nWi6Jo2L8jpzlZ9fw7jz95/GnEguovbuV1y1DuPyhi06Ol5c
lH7y+mdfSYyr3tJ7krSKOP9M8TcSOdjnSbE7viR7DhclWlWfMXLH+BoFPY0z
0lxEv3fk4/aJGN8l+26UEpeDTly/qmhYgX0n42LprJ2VHBTXdV5fOhjjF0wp
bhMzOGjokqq//lyMex7pttQ+RfT90BSf5sfYB4vbHSG3ZA8H1aidXTNtDsZz
S555PLQjzl+XNXg8AftsuxjDL6IWcZD8tq/Nab+EfDn/P7JyEzlI1Wx45eqd
GL9H+b562RAbUc0+HDJ8h32/e4m1jwLeE/jPSbGrrITwvtsz7hQSeM66qxuf
CO0vfSHxeet1Nurr+/Fy7VyMh5pEuY87zka+81P7V13CvmVKPD3v5A420m0r
vpw9EuPV7O+yI62JeRbzaeVkP+x/MoeTfOV12Cjsq5Te+k/YRxVTNKmfIk8c
7zpP9ZQdxrkGMds3f2ahOIWCn+X5Qut6zjXwVxBzkdqlQbPVwvjdxj7p4ccE
Pu/hvP6L2O+NtBup4nqZhWjxKuHvpTFeOX7W0vZQFupzypjjvR/7yTL1y1y2
U1mIMsO4+scn7EvHrT3uJrGChWpik1hjrTE+b9P7kLWzWIhRYOkbewf73krv
qI++SLKQr2ln9EtljPvHf2hfzmYiSqvTHquTQvtLO1YrralgEnpNwu9oD/bh
n75MnWt3l8CZhjVxW4TWHR/otL17honoDoHRW15jn1/+oV503j4msjsmkZNk
hHGaNGOpqgPxuo50xxVWOC+w4V4eYaRP8IA5k9R1J+B8gX/+6uhsJeL49wup
jHacU+idz9PV/UbM+wZ91qcrONcIdmHf2dHUhejJio9lduH1cWkXpMf3PulC
Ye0bMhzNcD7ydO70j8uTCZ12XedxvIrQuuNv2jdMjhDHX328YesQzmUihwZ0
d7oRxz+K4kx5jXOcqh/5RefNiPdTtTH0XQrOfYxVi3ibNYjjVxzQv3hEaN2x
TOWs4L98Jbhzc6kDXm8olV00JoPdiSiMEO9UJaH1iWJXa2v/rhOQdKJ6NOPc
SlUna7YfwW/CIrP6ubR7eM460w8qxHciuvSoiH078XrJuHQfmz/7ifNrhw71
G+L1lU+tdSlfNhLneVs6YuJH/JxZE/nkfglT4jzmCxnGL/BzafXkxBKfzPq7
P7A440gu3mdYz36J3YvRBB4WbO5YgvcltlEPn36kl+BJdze8aPW+gvt/XezS
kL/79H3WtN25Ge973PL07JqZzwh8Uen0xdvP4/dJrfAYvEng0w4U3erB+y1r
VUtHzT7zF6cvepofI8AZfB0r+WACl3L+oDQ7UoCHHDH7av13XUfmAut3PUdw
3ztavzDPkcDbddVn6AXi+0Xe/1jjSgKPazjTZb1DgFPZLZ6tSwm8z1xN/NYG
/Dn8f3//5oUwDp0Hel3ofUL/F/Q5QJ8b9DlD3wv0PULfO3SdQNcVdB1C1y10
nUP3BXQfQfcdeJ8C9zXUB6C+AfUZqC9BfQzqe1CfhPoq1Iehvg31eWguQHME
mjvQnILmGjQHobkJzVloLkNzHJr7EE+AeAXEQyDeAvEciBdBPAriXRBPg3gd
yAMB3gjxTIiXQjwW4r0QT4Z4NcTDId4O8XxIF0A6AtIdkE6BdA2kgyDdBOks
SJdBOg7SfZBOhHQlpENB3QroXEgXQzoa0t2QTod0PeQDQL4B5DNAvgTkY0C+
B+STQL4K5MNAvg3k80C+EOQj/eeP7Dv9g0M+FeRrQT4Y5JtBPhvky0E+HuT7
QT4h5CtCPiTkW0I+J+SLQj4q5LtCPi3k64I+MOAbQz4z5EtDPjbke0M+OeSr
Qz485NtDPj+UC0A5ApQ7QDkFlGtAOQiUm/w7Z4FyGSjHgXIfKCeCciUoh4Jy
KyjngnIxKEeDcjcop4NyPSgHhHJDKGeEckkox4RyTygnhXJVKIeFctv/q7y4
bJ+aZ7lYN6kqem7a+CGRS6qec6rWuMlzSNV4k6f++50sUpXfZuhxQYZJqvwv
hT0fznSS6i6r7HG9vh2kerB4mUzXhE5BtWq9vjud8QmV+VVeiVXqEtS39nYJ
2lsZqIzXXJk3lSmod032X2u83YYo2Y/Nbb8xce1tXjhx2ntEjVg5wv8DS1AZ
+xd8S/NoRs47zUZE3WQL6kCJ/rddcm/Rj9UacRWBHEFVnBq7NuVyPdq96Wpq
ljZXUJ8MqCv0h9SiewE+2sNMrqB+Ntv/U/7CayTl2v47KYYnqC2l96W2PqxE
kd7GD0Ya8wW1Jfh6XVtKGcrwt7DR+MgXVCnrTQYqpcWomypf/Xp/t6CyA5a6
2wYXoi2b3zl7juwR1PTHbwr0ih6jSMPrNvEXewQ1e/s+L/WubGRft91tzLRe
QdW1DPggteomocPvUE7e7xVUMfapoiifWHw9rU8+J/GS3N8CJlLFkTYZDzHZ
E9eVQO6Tmu0Hkt8Mkvtq9mhLL4c9ZDyMz2xktpL7dtC1yoLVziL6+XiZA09e
iVhf/L75m+EaMh5ybENIWDV57lgWjHlstkHE84jfjXaKbiDPNU3dlji7bWR8
8eprI6LZIuZmgsrKC4fJ+Im4OWelx5Fx8zJjOc275HnN8DaTOr+UjFfF9ucp
vSXzAXZH4csqXzI+lcob1aRIxh+OWZMa80jE79/eHjXmbiTjee8G5u4eJPMi
ivq2todXyTiDpsZNXE7GE1e7q8dyyHwsvfn2tRfJZPzZUqt1kZYieN3euWOP
fibzw8RRo/MHM0TsL31lzOU9W8m4zdbG1GvyZPxZvir9QBGZ31L8PatofmSc
7S156YIGGQ/Sl1su2U7m2xStacuXnCfjX261xbZak/HO+bcCikZgXD7wysVf
r3qR5q3RhwZDsS5o0//2gpbQi9Ijd/DH92N94R8/RsXfmeAne1Sez9iG8e66
4x0Xp/ciuzOv8w5VCT1f2D3O2J/dg+hDXgqqKzGeuyfgXdbtHlQ+IeWaYTrW
QY6pZaPmHuhBzUm+Ccy5QvtR903v+b60Bw05ranvO491llrnkY3vxXuQ09Mi
51RJjNezrpq1l3ejODPZ2/qBQvtHpWuv8DvRjYbUd9+c1oj14K6pjVINK7uR
9MsJ4+PnC+XLa+ebN48hdOVL/4ypl7GuTOGlX/xYx0fKazR+zpfDuA5Lacbo
JELnLn9SrXQU61ZrfkyF4i5C59oyDiwcjXHKtWkud634SHWcNXN+HtbFal5n
R9qr85HTMV7sG2eMM+/sbRovSfAznYtJ88ZgXGqmcXRxOw/FrT+7iZmLdfqY
Mcc+/HjOQ8qTrecNeGDcoIuu73udh6RNt0UmKmJ8mrKOssdxHrJ85msSXI19
A+qi2gO07TzUNxytPf4wxhM6rlDkrQg8L/p6uoGQz9Bf4vxck4fCWjjbOrqw
jyFbPN09ezQPqXZVDRolYpzGonG0uFwkb6Zg6W2F8bLBbT8Yr7jI13tw34Nh
7KuE6i/vVr/HRXkj1da1ZmM8+87+G9fOcJGRjoaS3A6MDxunf3Pw46KghFSv
hmkYp0xaa3eO6OOqT0vLPzdiX8hZ4evCKYZcxLjX+avkJMY1pq2arTqZwMsX
bqlZhvEftYFV/t85qE9m7pHrvdinkh84PinqPQelf3z9tDYV45EnrFVvPuUg
uw1Pa5LXY7y7SKmkLJmDaj7msfpGCfldunvNb4RwUFi/tqP2XqH9+tZMzXd3
4yDfiNhbn5nYl6u0H9djvJJ4PzdWpWk4Y5xRWJs8OJeDqE+V5d/WYn/Pt+3+
+EgZDtK1P+h0dRnGy4aK/GP62IjxvmhF4QPsH2ZfzZxYWM9GvpN3+uTOwngk
mhd39zEb0UzbarZewP6k6pstLW+SCHxso5mcFMaN88IPJhFzTvVSrKvkQex/
2lertd50I46XyLExZWMf9cKceRoDhP7sK20tLLLHeNjqkLxFGmwUdnB30nAh
9mMHanczKWPYiD55dpi5HsarbMIHb3QTczHsVOP8VOz3tky8a7CnloUou13G
z5mEcZWm8o39OSwUpsfPzY3AfrLWdIeoygssVHMhNfVLv9BzFZOSYnYEEXxy
5Miikc4YHzPu+v5eZxbStZhtc69MyPeeYvDC3IR43ahxjRt1MG7h0lV0eCpx
nurgooOnsX+uWP2s7ugfJqKKZ087OYx9eL1nX16JtRNz+t7LnyN2YTywaLXC
9hImsisI3vy9Bvv5qtlqWgvTmIjm+6Du6zKMU141MfuiCH48ZBD+8BbOC1QN
lvd57iKOH2dxX2ICxm3SV4sbriZeN+GLjEYfzinkP87Ty51HHJ9L/zOtCK93
6/DxeLJSlokYFL7pk2M47yirj0tp6u5C9JXp7j7WQs87HngU1fK6C4VFTVlz
cgLOUyIv5WU23e9ClD/69T6fcS5TdTnMVPIcwT+UpHZoleP1fcZz5wwZBhLH
J0fdX3AV5zsptlrqv526EFXh1s7ugzgPaj0wbKu5tAvRMpkTE9bi/ChEvGHM
0LQuxBhn6ZOtjfOmEovtgaa/OxGt5Ms1zx6cWzFjz38z/fucs1NN173z8PrH
OL8/syVKOhFl4MuglgnOvxSf3xnqSfv7nFnv3XfG4LxMo895Y97f9QklKvWe
XLwe02b0h7lv9hD4U6eVC9Lx+k0p71GTdNcT53E5V/XcG+d3qiZ2XVxDAn9g
zt20Fed9Pz7w5Wxn/H3O7NFlk/1wPugjxlG6LEXg0osrpx3DeWLNokVOK3s6
UFhf08tGY5w/Vm0/ePzVW4JvsQdbqs7gvJK2K62TVUjgt8WeLm3A+WZVScnl
4Iy/+z9fcNRMicdzROaccvb5v+t/zTJHvcTPBdbQNDsaGkHgMb88jCbhfZsp
bX2xtvsIXH3l5hgvvM9zhNvytWt2EvjBPS802WH/FYfOA70u9D6h/wv8HIDP
Dfqcoe8F+h6h7x26TqDrCroOoesWus6h+wK6j6D7DrpPofsa6gNQ34D6DNSX
oD4G9T2oT0J9FerDYN8G+jw0F6A5As0daE5Bcw2ag9DchOYsNJehOQ7NfYgn
QLwC4iEQb4F4DsSLIB4F8S6Ip0G8DuKBEG+EeCbESyEeC/FeiCdDvBri4RBv
h3g+pAsgHQHpDkinQLoG0kGQboJ0FqTLIB0H6T5IJ0K6EtKhkG6FdC6kiyEd
DeluSKdDuh7yASDfAPIZIF8C8jEg3wPySSBfBfJhIN8G8nn+80f2hf7BIR8J
8p0gnwrytSAfDPLNIJ8N8uUgHw/y/SCfEPIVIR8S8i0hnxP0RQEfFfJdIZ8W
8nUhHxjyjSGfGfKlIR8b8r0hnxzy1SEfHvLtIZ8fygWgHAHKHaCcAso1oBwE
yk3+nbNAuQyU40C5D5QTQbkSlENBuRWUc0G5GJSjQbkblNNBuR6UA0K5IZQz
QrkklGNCuSeUk0K5KpTDQrktlPMKrqv/sULn2d0pMyh3gkuqFjuqN4/4zibV
Ee9duciJRap878j4koEuUqV3H/aIC+0kVX7S8hVx2zpIlcFR65mo3imoujMr
VT5WfEI6SVlHCmd3CWpBYhBl2yoGGjHebGqRBlNQv1UZ3Ck+1Ybqj47ZbyPB
EtTIYAZN5XsLou016B/isgRV9b7LvImIuK5ur1aYmM3GVXJaBb23ETnPVCyl
H+II6sDlsuyCmHpk6hXx2nYhV1CtXu4/p+hTi7rPNdwJ4XAF1S9c8rti1GtE
OWJ9ROUMT1DDJJdLut2sRO5rr2s4GfIF9a6akXJvThn6EXfzkWobX1A1kqYX
Lq0tRv4lh/Ys2tctqIlvF9XduF+IYse7TKv73S2oXjpZ1zTG5aEUV5OqfTE9
gup0THt3xq776Addmr98fK+g0tg6H2vd0lBB80L1dym9gkpzuWVgteqs4DpK
/SF71PO9iH34f6mFVq4g415qi2T23RHxXHj/Ky+ujxexb8MTi017TpH7ra7i
UGbRd3Lf/iWrcPLbATKe+nif/OSf5LkwNWeGikeACNzhjK/TEHnu5DUEX+kO
E7Hu+EryM4cxIn7XFLvFWPyciHkXOj3v3jQyTo1i7dC6J+I5xVePzti1moxT
f/WXKbLIc1zSg/n6TwgZ172527pChYy33lqxeMQDEc8ptqm6cnE9GZ/Ark3j
DInIi838Z/KSReBM69OFy8n4EDt87WI2mS895D2VzzgtYl+XR/WKzCVkvMYw
V92uk8zfvCiT1PKTyHhISm5DiIUIHrj7wDj6NzKfrBm5sdAgS8S644IrO2bv
EMFjQ732OU4m4wEOURYv35D5cNxirZDgMDIuf3H2zteGZLxG+cf0XZ9FPF9m
pdjk73fJeFiSu4nCdjJe8/rezs8zMW76K8muurMXJQZGWIk/w/qCtizuIMrs
RXHJ7KyrekLrlxuSS57s70XZitI77dKwTlGtb9sxbNyLas5kRBxUxHhN32DD
iRG9SLrFe8LbE0I5cnlhutZLQk99bb3J7cd6qsxwdNXq8z3Id+ykw6b7Mb77
qvOMUJceJB+z7bURC+s1+pZQ3atzehB115KDY90xnrDiyrktfd3IV+PkAKcZ
60HFQw2TZz/uRtl6CfRWK4xb3PZ/ujywG+nOmbk+9RbWlU+/8dTSjLpRDbt6
0zVZjAfLHGxaMMxHutcykwaDsG51fvjGdF0ZHzFWRKm86sX6lxbju37gNB/F
uU62pW7HeImDZ4CkJx+x6//MGvsH6+vIRHOLkpV8ZBd6Z4FXJsbDvi03b5/F
RxR2aob+Rox/Uz4WWyzBR17LKt2YUkK/32ZlPkrq5CFfM/2y8HzsA0SfWNf1
rYSHnBpXm3J2YlxJrpH9+SYP5d2cYPFxOsat6dfvbztJ4NQJzwKbsC+hVnr8
cssuHmr2eX1s1imh5x2Pro2dTPB1+oXo9iIKxsMiJ+wX0yXmoF2OuviQ0HO7
al4Hb1UgcOmRevx7GKcw4k5N+MJFNF2ui942jDPPFOgbNnERnbVJaoyKkA9z
sL1BPJ+LwuYbnDtWj/0cZjptrVUyF1HSxq96HCn03LHVax8yDhO4aVnxQlOM
hzlev9VFJXAnRbVln7HvRE/inYk34yKGRPWOnnSh9ctfP79Zo0Ecv/1jVLGr
0PHF3O9OxJxgMCt9P0zGeJJe1tlZ3cQ8EDfweVuD/THHSR6KJrUc5GQcrKt0
Smj98o1VTdvvE8cr6SUdXopxpqdanGE8B4VJ3K+Z+B77eCqu3xxS9xP4+zfp
+jYY1618MsLNmYP6PtMUukqwHxjd9XL7jmUclH2I9UvSCOO7X7bVlc7kINUu
h+lt6dhv1Hm/2lByFAcxVh2aMFEN49yeJ5dX8NkoLuP6mDVXsJ8Zd5W5cvsb
NtHHjm75IYPxkglTfn68T+A7oliuB7Ffyv2kuCD0PHGene68fTzsu8pnybir
HGQjO2/UG7FFCP81MjnMhcD502QiXmP/VuvtON6FZcT551tf/GyE8bLtFP2n
M9mI8Wv5mJR07A9Tv+470iZJ4JVLQu2VMW6f1Z0oxSF4o0/qL9VY7D+7fwsq
//iKhfreuHC3/sQ+tm7KgTS5LAJf4Eix9ca4mF3gMRRPzOO4tRdM32M/fKqk
0q4KfxaKm7BHoXcFxo3zHq2130Dw1Esxp2kZ2G8X+ym5q0WfOA9LWcFcFuMl
pg7H3JRYqGbxzfOsvdjPj8xf+qBtkIlot7UOOTQJ7QvqN6VRvIWJ6KYn545e
gfGnu859mZNPHD+RWfbyFs4X1JJHjv6WzETZMlN1Xstj3EXm44JpR5ioxnRz
79lDOL9ICMlzNHcjzt+22P1OldDzlKe26R9ewUSqM1NUehJxPmJSID4xT42J
qB7j63S34zwlo8b45DQJ4v1o2LjMmYjzl0qTlfl+nV2I4frQ7hAf5zj2G3+e
ciztQpSdtQfcHuH1fc86r1tE3+pC1N71xZ6ncB60a9VuT5foLqRaaS6WvAPn
R0oZRpHzdxPnTzVYVmuG86bcyw9qvNcSx0/8oWGggvMpx9h5U24vJM5/vEDu
ch/Ouab+uUmdNoE4fvBQ2ewKoecpD89/tvwroXd4jZvOnsN5GWXVsIV3UycK
K+8s1d2F8zX7wLs3Fz8j8GUH+6c+xM91DR7/OsqURuBbJie/Pob39Y2ewbC/
cJzQXYHhsYV7cd53ofVyxqZdBL5Ux0F8Lc4H0y5tFJ+2luBb4s0q5vNxnngh
Pn3NDAPieH/t8X7GOH/0+c2J2DedeF3GKtsPVJxXJmf9eX5cuhNR8r7P8c/A
+abjnGljP/d3oLDZp5/VVuM8VMXga/yRVoKfBdh96/EXes5yYufSiaUE3vh4
87pX+Pm8tDXxlswHBD6z1fHnAH6er0XFKqocjcD9DcfukDj7X3HoPNDrQu8T
+r+gzwH63KDPGfxegO8R+t6h6wS6rqDrELpuoescui+g+wi676D7FLqvoT4A
9Q2oz0B9CepjUN+D+iTUV6E+DPVtqM9DcwGaI9DcgeYUNNegOQjNTWjOQnMZ
muPQ3Id4AsQrIB4C8RaI50C8COJREO+CeBrE6yAeCPFGiGdCvBTisRDvBXky
wKshHg7xdojng7oA0BGQ7oB0CqhrAB0E6SZIZ0G6DNJxkO6DdCKkKyEdCulW
SOdCuhjS0ZDuhnQ6pOshHwDyDSCfAfIlIB8D8j0gnwTyVSAfBvJt/vNH9nn+
wSFfCPKRIN8J8qkgXwvywSDfDPLZIF8O8vEg3w/yCSFfEfIhId8S8jkhXxTy
USHfFfJpIV8X8oEh3xjymUFfGvCxId8b8skhXx3y4SHfHvL5oVwAyhGg3AHK
KaBcA8pBoNzk3zkLlMtAOQ6U+0A5EZQrQTkUlFtBOReUi0E5GpS7QTkdlOtB
OSCUG0I5I5RLQjkmmHsCOSmUq0I5LJTb/l/lxRmTNi2zWtRNqvLeO6Wscrmk
mmSxoOPLHA6pprn15SyPYJFq1fZJIWtmMkmVf3pZnNatTlJNObDJjnqsg1QP
PjSe5fgbV6v+W1WHJdqRxoPcCmlCn/5Ty77srvWLYyBqC/8Te7hLUBm+S5xX
Sn1AOamaquOqmYLKHB95rTHxPcq+61+uksMS1L7vqWlZzGakkc88MS6ALagx
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
MxOHPZ/6UEnUNztBHZIe8G7dS+muTi7rD69mo7D+gBw5dUqX2Z+xarUGGyUE
mj1Q+0r5hxeVN31eLsVG9eVGMRG3Kd0y8pznNb6g3/25Rou3ldL9nSdG36tl
IVPfl2cnTRrmW7rpRh3KYiGVG+fPXKmg/E+nx1LOS+6wkOcjZR/Jy/85B6ft
ZlZy97CQ9kmTi1sGKT/WoPSOYYsxC0WdvTJj9gtKF9/4YsKoOf/r+XSv5kvu
p3TX7vJEJC3Qt5/XuqNK6XIzY/ZafWMibesRQ1UtlJ9s6Rq4k1vFRBaylYc3
X6H0Sf0HtB6nMJH+oUs98Sspvbd6iTEjjIlyVRV2XqihfO/YByP8T3swkcwS
iSv7V1G6nMGxXiNrJnJcaPTO4Qnln3vRdW67LhHovqIKsyZSeuNXr4RqRSYy
POxsNvMM5c87v9fZovtbUL+bRt6UZFA+/zO1TX16zQzkmHOpYsIGStdR+clu
yxG8/m71zf3Jw/bnNM3OCo5loMoD9+MS5Shdm75AI+AMA3Wf5edfP0zlEQMf
vAsu2DEQretYXXIxlWuIrLVJ1V8meH+rLN8pqsNykJGNXaZKDKQydnXQIf9h
z61e+LTL7regP/hlH/iRMez+uMViqzuaupCjuJLZ8fWUTl9/ulZL0Pf7nnaZ
2/mUynFKRCzKEmK6ULdo2EhzMUqf6twcxfXqQmFDGwbvO1M50Rmt28wJgn7F
vX1S2I48Kld6MnjIxndZF7Lgq2Sfm0XpvmWurzQnC36vqNrjj95UbtW3OOpq
5AAdVUr8+tzdQeVf3Uu620Ka6ChZ4cX+3HWUrl6+6KjhGzrKFR9atjpj2P2P
Swbt98fRkcVEbqX0TEq32H5hwYRAOgp7k8S1vU3ldMaL7zUl7qcjR7G5ZnYy
lK7+ee6lWgs68t2X7rZNk8r74u045cv0BPr15RPNp1P5oMXYTR5FynSkcmTS
uRoDKk+so215cUFM8P5FK7iOS6j8kTV6xcDf751IZZNN4d+rVF6pNN17u+FX
Qf+k1X7Wv466/zRsZnbMisZOFLfdaOyOQEqXHHx3M6yyEznWh0+MV/vPOvQ+
0O+F/k7o/4I+B+hzgz5n6HuBvkfoe4eOE+i4go5D6LiFjnPovIDOI+i8g85T
6LyG1gFo3YDWGWhdgtYxaN2D1kloXYXWYWjdhtZ5qC5AdQSqO1CdguoaVAeh
ugnVWaguQ3UcqvtQnwD1FVAfAvUtUJ8D9UVQHwX1XVCfBvV1UB8I9Y1Qnwn1
pVAfC/W9UJ8M9dVQHw717VCfD80F0BwBzR3QnALNNdAcBM1N0JwFzWXQHAfN
fdCcCM2V0BwKza3QnPs/P+Rc/I8OzdHQ3A3N6dBcD/kAkG8A+QyQLwH5GJDv
AfkkkK8C+TCQbwP5PJAvBPlIkO8E+VSQrwX5YJBvBvlskC8H+XiQ7wf5hJCv
CPmQkG8J+ZyQLwr5qJDvCvm0kK8L+cCQbwz5zJAvDfnYkO8N+eSQrw758JBv
D/n8UC4A5QhQ7vDvnALKNaAcBMpNoJwFymWgHAfKfaCcCMqVoBwKyq2gnAvK
xaAcDcrdoJwOyvWgHBDKDaGcEcoloRwTyj2hnBTKVaEcFsptoZz3n+P2vyX0
Pn8yvrhOq2cTfBZgb7ZZm0UwnNlwrfUog2BqSnGD3dgugmt0wq29rnYSZGVu
+jjdsYNg6RfRElmjdoLFP0pdEsd0YG6+Uvr1bE8bcpjUmNz2qwPzeGvmCa0L
NHRfN3DUpvedmJN2un6bkNyKHC7P2bDnKh2TZeWrWL2+GYm+PSctbtiF2Zfn
VcNFjUhLx2houmDe/Ideztpi96Xrkc6pbOO1EQxM5+uVc3UM65BhAXPuZl0m
xdTVZ6Qca5Dz0UlPPhQwMcsSckY8flGF4uZk7BrnyMJU8W1s/PylEi2731ay
7QsLM35e+sqe/HIUL/7owex9bEyl+omzxCM+IpXG5/PWtbMxDdtpvaZPi5C5
+MWjNk4czEWN+RbcxPdIZ+WlE7tpHMzSizn6L17nIfVfGts2WHAxlWbL/Fgw
PRc1hnla303jYpbqbh9yC36FAh9qnZRX52EmGzTvl1ySjtrHB/m8usTDtFmV
KKbn8QKlptafkfzGw9TWeL5+1KbHSDLJPWG7HR/TcMeXA9pfbiPxQeUfyYJ1
+R/6eo+Qf/AnEB/XzXGbtXNo5Ho+9dntpIUeQnJn3ozMXSKkHpweatR7nawX
3XPkTrurC9l34uPqc/3FZD0yfNTdGOdE6rTE3w7VA2QdtMjf+nLuPVL/fu20
UoopqXc4KbxQ55L1N2pi41nLy6TuGBVasGA5qZ+Z9f7Axq9kP+Du2tv94KqQ
PFp7aW/0UiH7b8fvfnSZR/Yh8kMp15bHkbq7esOW35tIvfmldHmNKKlHtb/V
PJ1O9ku3bmwf7e9O6vP0AwK/zyd1Tpin3HUO2b+57xlknX9I6t1LfPNO7iB1
zt0qc7NppH7r/ArLVzVk/+lZFd5hFEHqazObstM3k3p9e4LqkAKp5yoOcILq
yT65xmwG+1YMqV/3KAh2203qt3ZemrtGhdQtVpe71rSTfb7MwADX/QmpX7+2
8eF7V1K3ut5PK9cm9Uy18SPO/CDnFMfGWSqf8oToUW/uuFwk9Vs81s0xwq5f
bRndEjZZyD5Ff696X2oXcj1t8NyGOy+EzGV1j8de8RayP9IbRf89RqQ+z3Wr
W5QsqduoKeZI15NzZbf90Uuy90idM8rxhPsBIXNuxVoNCR1Sl5oxwX6EKKlb
0cMem5QL2bcqcfzP0GhS77cuMnm7i9TDlG136WtRetn6chpjULD+vhZdZNxP
+QDeDcsnTqzgo8w7E1+mnad0Z4e09O+PBK9n5hW1q1K6XJ7llRBvPtLeu9n5
SxblP9jOD9/L2cxHtF7+n3LzYdeHx1QtN1fnozC/yxFvvgzbT8wq8ljWIA/l
Vp+8X3Fy2H7jqm9X3CnhIVpDi8LlAcpXiY/TfDrhPg/FXd2blHSD0r2e3F2o
5yWoQ3PkzwQtpPQWjyXLZ5jzUMJdSXnLN5Sfw424PXJwhqC/PxEi3mc17H7w
DtlNbT+4KPfVU6NUOuUXqQbdyin/wEX1m4M+B3hQupaPm65rJBd1v44Uk+2n
/CjXq7saD+7mojB2791xJ4bl48qOjb2LuKhoY/fdXX8pv+vElAiNjiEOSij4
vnuZN6UbxLzbyqvmoKgRHfXVspQ+ILeYKXOfg7oXjjR5coPy2dSd6S5DJznI
8a+g1M4d9tzttk7WSHsOkklbuX40nfL3KrOe1OghDgqufCI35jalh9qcLM6b
IXgfhyc/na0onXvur6mUBAdVFpxNny4/7LnbQ7eZDhw2cvEeV8Qqp3xIW+Zm
vfIKNnL8UBrkH0Tp2uP+nKSnslF/XP/c3FWULl7Tbrcrio1krmXt7R2k/FKL
mrzFAd5sVDShy78ki9IbNTSdLHezUZxTx8nK45Rel3Y+sMSEjRTXbrTw0hl2
P4veDZueOWwUJeHlYMce5vdmJsxRlBb83rKHB1bcH3Z/d/JpfkAPC4Utfbm1
1I7SvQb31v6qYiHtn2cj3McP0+NVD/15KdBVtl/+VUj51dwLDT8Tolmosv7O
QXVfSleZkYiunxboVXPvfFtM6e1nA659tmchfYP1PCUG5Z87v7S0fG7AQr5G
my30YijdQW3KmAXKLOTSkh/5YwOlhwv+yai/TNS9p1R2aGjY87Knf0xLaRX0
tWW/8988pXStgei2iTlM5N4jkqa3ddjrpXeJzogRvP7h0eAtIyg98Gmd+9RT
TBS3Y+Hiyw5UHjHu9YqifdsFr3+xgCn+lso1DnT+jZBexkQyp/9yTWdS+taa
ksPjlJgoWa1v9ho/KjcRvfo0oPIXA8nU7rgxoY3KWZI3XI4Jb2Ag94APo76i
YTn4XKmlulkMQT1aMU3yNpXj5EZGcwNvCObVnr/37/2g8qC4PK0C1ZMMpFLW
UZNiSenjXhY/VNzKQIYXulecTqJyJUvZhDl6ugwUt9W0Vlpy2P3dk90ur58k
eP9zc4tOuVG51aFz0XuyfnYhlaC/fbfrqJzL4/lHI5/6LmToOmB/Zhml60hN
aruYLehLDA7vTX8wbB/yezZHVsYK3mfeKz39CZQu/lDq9B0fgb4U7Zt2lsrp
5NoyTyXs7kKOe285mnGpXE9OdgvyMxXo1jErLh2g9DnlA0pSWl2oUpweuKKN
yg29Ph2j3ZUXvF7BdPfsfZQemV1x6vMQHXU/kN6lO0Dlj/FtmXkbeHRk6HKr
LOARpc9bHSNyqJWOaGaiolNtKF3Ot0JP5jMdOfqOm7BZZ9jzWwOkPKUq6Cgu
cqXNyrH/WYfeB/q90N8J/V/Q5wB9btDnDH0v0PcIfe/QcQIdV9BxCB230HEO
nRfQeQSdd9B5Cp3X0DoArRvQOgOtS9A6Bq174DoJrKvQOgyt29A6D9UFqI5A
dQeqU1Bdg+ogVDehOgvVZaiOQ3Uf6hOgvgLqQ6C+BepzoL4I6qOgvgvq06C+
DuoDob4R6jOhvhTqY6G+F+qTob4a6sOhvh3q86G5AJojoLkDmlOguQaag6C5
CZqz/ueHnMv+0aE5Dpr7oDkRmiuhORSaW6E5F5qLoTkamruhOR2a6yEfAPIN
IJ8B8iUgHwPyPSCfBPJVIB8G8m0gnwfyhSAfCfKdIJ8K8rUgHwzyzSCfDfLl
IB8P8v0gnxDyFSEfEvItIZ8T8kUhHxXyXSGfFvJ1IR8Y8o0hnxnypSEfG/K9
IZ8c8tUhHx7y7SGfH8oF/p0jQLkDlFNAuQaUg0C5CZSzQLkMlONAuQ+UE0G5
EpRDQbkVlHNBuRiUo0G5G5TTQbkemAMCuSGUM0K5JJRjQrknlJNCuSqUw0K5
7f+uvLgs/s3Pk7p8gjEuV/zUZ3EJ/glVDDj+jkUwxmKGRuM4JsGtsT5NG252
ERzQeB22XItOUFyv7Yff3w6C7duatl1ubSf4+GDV44U7KZ7bsfacbs9XFJ87
zUzTrANTfGd1WH5YG9pQlGe+YlQnZmh1U8jDUzTBfG66v6eqEzOMrVEwN6gV
iW+Pyr59mI7J+a5XqZrWjMIHv+wNm96FaSzpWL7xQSOS882fHv60C7PQ5+V9
44F6RE+cvNxmHQPTfDBl40/Vz8hQrt/j8wcGxUKFB6cSatGfEHp0qD0Tc8x2
80XbWNXIcEz7Es9KJsWOrTY3LlehsqEjBW2Cue8fRos+SbFlViK5sVNuzv3A
wgx57eAwYFWBbAtG/WQZsTHpe9t1z9qXIoumbdLzHrMxVZq7H/+UKEFmN5Mu
DU3nYBrbM7IkjD+gwprNFXp+HExb0YmzMr4VoGUVXQXr+jiY8bOu7jZalodi
1969/GIjF9Nqj35CnUYucm7X5ysKjt9/uHibdXFNySu0tbMnQUWSh9mNHst7
BmagmNqJN+P28TArB39le85KRa4KMwdeZfEwK8vKQhwjk1Cg7+HOZxP4mI69
971TUDxyb6FJTHPjY4qcrrO+POcmCjWYNST9no9pyHZJcVSi8miRr6sXDPaQ
9eX77wsvZl4mdfkS5vNsHVI3PJbuE1lL1rXMKWrWNWeF3AdtFOz6QklIfu2w
/GBQDVlPZbrixs/xJPXkog7ZQU1S91wfta2+lqzjIlstL4wNFaKLXy05bUjq
CUp2EVW/hDw/wn6rotc9UudIjgu/t4PUi450dvTIk7rFhJkLP1YLya8ffTW+
dFGILr41LnQdqUehI3s6RUm9+/PUzkV5ZJ+2trcuqe80qa/I1bPZsozUTa9G
xa78Q/aTIXs/mrS9IfUHn37fTfUj9coro3uUNpK6oi6nVmQcqY+6mOo6pYHs
h22aUhd73iZ1zb1TL3nsFXI95JWIt3WzSX2t4Y3jOt/Ifn5xcqjoUAap0/we
KPn4kXpcwMatwUZC3kfyk4W1Eql/T7g6+mErOaeMoskmjkwVoivsbbU7ReqH
nr4v119L6lF9T6NejxWyP3ncpdfrWsn5q6ZCW6MnntTPfFvrNFrIc3Dk/R4H
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
D5qV2kv6WJi+0spNacvKUR3P76KyDRtzwJmXu5r/EcmN2SAmk8nGDCleSLvz
vBjZ9/RlfpDlYFZt03uyOeIDslx0dI6bGwdTqmrLiL1O75G/5ahnb8o4mBxJ
ek+QVj6Se6DEpqtwMUM0HL0jl71Dzwo3nMt242Iyntt2r8p/g9YwfRUuv+Fi
1sv86Nwq+wo9GRkkFSjNw5ShJe7P2JyBuBfyN9K38zAZwbUbFxenInWnfv0N
D3mY2rZ2VrsMk5HIpYuPahg8iv0j18vMe4K8z5b679PjY1rMqnmwnn4P6V3t
0lwdxMfMfX/dKup+JPL+MjdqQhEf03BhCF/8F/Xc54Tjv9orfpF1M+Ft6MGj
iaSu2FZQfHEnqRfNVgw6IS9EP81/8CCfrOO0pNEiuz1JfbBN2U5Zi9TPPFxQ
vYstZN+P7F+xmQ+E7OM9w0t9vCOpK85g965XIPU0zSW/VzaS/Y/7OQNr4yhS
N73SZ7fYXsh1bt510Y1TSf0pd1ZPbIuQ/Nr5Z8L9KFJfcXRMx2UHIfurvN8s
a65K6nGmJS6NTLLPvC53KmXZC1IPSEnUtz1F6pm9W/bcWyLk/u7nszPqRpO6
1VmJj1dKyf7ZUcOMVRVJ6reCrRXWOgrptx+zGIPqpC4zZpG50Xch93GHTzjy
/TWpyzxsmix2Rch1m/kbt2fuFLIPj6Ry3g8tUk9uvPJk6ZCQvHtNz2enElKf
arjL3zZayL5ApQZyP/aTupVPXFS+npA5q830o7cEqatYK9gmVArZ5/zwI90z
90ndyuYivfsYqZvPU1zgaEDqmvFuf7oUhcyJiypCvgvbL12m51FAjpAcvGLp
QGmIkOf4sFLqduwidY7eOIPXWqRu7jZqwhgRIdcb73z/3e8TOb/3b5r48Nt9
Ic8BVwkJUfIQch/60tcjzU1InWN3tOHtRFIPkbjjFNZF+hUPer19ut+Sujt3
e7FsBKlf787yOL5HSJ7+YnPRB31S7+CIRGeKCbnO3NSj8lizkP3H7neOXpgq
xC8KLzgfGUjq9RNkGHfsSJ0xp+jbNk1Sl3hyJXP2L9Kn6r9T7DKzjNQPbdsc
dCmG1KcWSbw8vJ/U43z7alSXkrqh9yAzS4rU3e/t1GxsIX28GmfpVo9EUs/h
SI48e5TUn06Oiw8yIvXKoSGbtwqU7n+62kmNxUdFaWGnHIop31I8xeaw5Vs+
knndEm6xg9INj9vn117nC/q9fS6TvlO+aOR7t/kS+/mo31Xh2PVASlcxdtRY
vkxQ15+7fw2XpXR652zmS2lBXX/DKCx8QPm0zmfHzF/UKqiXOQoe3nMpveRC
g/1QEg951iszTr+kfGBarlv5qvOCPmO3QsCsDZSuMu5gxZ8tgnk17lKgVwXl
P2en7vfrmMlDFqskjJdvo3S55VcO+fO5KFnO+UpRHeVvh/5pRWKvuIh26ply
qCWla9eG3/vrzUX9149M+ptN+efPvu/Y4bVa8D5OXPZCdUqXCVIaZSTBRQmb
V198en1Yzj7HO1e9joMs2PptjgqU3rJVt6/yFgdpbj+/TzKY8v9p3kYTI105
KDlbS/enLKU3zsje5rWeg+KsNje9yBmWL0yhN6RqcFDYmrdxq5woXSlopLGB
GAflbhZfMHncsFwjweRZdTsbJavpLLyaReUg9GkPdI/mslGumVLgtF2ULjf+
Di/ojuD1D0NrqqUpXd3j4lWuDxvRlBvZn95SuUzshDtyD3ayUXDSuIVKbsNy
85TUCFvERvoGq07snk7pB15JvlqqLHh9TYylTDmVE2kNba/N/ctC7r8dJ+72
oXSRUbSexzRBXZdMbk5YSOmsyOOz1uSykOkvtaZHtGH3mz9NsF9xl4Uskh52
TQqn9K3vmq7r+rGQjZPa9/NGw/ZlPRItmebEQp43fZRW/xp2H6LtpuONRiyk
72Ssdi+J0i2+HHBR1BL83vljxV67U3pc3Qmj+ImCuULx8TNlPUq/r31fMeMP
E0X9uvF63QCVA96/WMH+0CnQGwPLPN5QulnE1meh9Uykf9xm4e5YSk/2HRU/
toiJMleNVZ52bNjzysdt6Pv+jonc7+bu69hD6X1SgdrzXzORi8qmU702/1mH
3gf6vdDfCf1f0OcAfW7Q5wx9L9D3CH3v0HECHVfQcQgdt9BxDp0X0HkEnXfQ
eQqd19A6AK0b0DoDrUvQOgate9A6Ca2r0DoMrdvQOg/VBaiOQHUHqlNQXYPq
IFQ3oToL1WWojkN1H+oT/ueH7Cv+0aE+BOpboD4H6ougPgrqu6A+DerroD4Q
6huhPhPqS6E+Fup7oT4Z6quhPhzq26E+H5oLoDkCmjugOQWaa6A5CJqboDkL
msugOQ6a+6A5EZoroTkUmluhOReai6E5Gpq7oTkdmushHwDyDSCfAfIlIB8D
8j1AnwTwVSAfBvJtIJ8H8oUgHwnynSCfCvK1IB8M8s0gnw3y5SAfD/L9IJ8Q
8hUhHxLyLSGfE/JFIR8V8l0hnxbydSEfGPKNIZ/537405GODvjfgk0O+OuTD
Q7495PNDuQCUI0C5A5RTQLkGlINAuQmUs0C5DJTjQLkPlBNBuRKUQ0G5FZRz
QbkYlKNBuRuU00G5HpQDQrkhlDNCuSSUY0K5J5STQrkqlMNCue3/rrwYIvT+
A3XfeWNTOQR9L5vc/2bFImlXfTx+gEFQ8vKEoayLXQR9p0rZrAmhE3SPVXnU
uLOToHqRxgnZax0EI/Xu+f0U9H//ZsMLBb+pyyguPd68olazHVnOXKr7gknR
33yO9okZX5FcQffTjYc6MNsbIgcvOLQh9YCT6/eIdmIWZpVeZnrRkLiJ3InJ
Hp2YnDmFsanxX5BKZGadnTgdM86g7jSH04L6vvGnuO2jY07V0H6aUtyMBp51
Hu9rp2PK9W28PdVKcL5sy0gXN+7C7O5vaGJrNaINvrd0mK+6MJV85uxdW1qP
xt28sElVkYHZON9JNjLjM8qnzZky0Z+Bme7gk5R7og7FLFtnlNjAwNSxmKU9
dLQW2S7x1g5BTMze7cGH7VbVoD7H4Kr0a0zMaS3OwU0m1UiOGRwznsfELFy7
V/uTbhUa927L1pGGLMyGnNF/+tEnFF5UWzUiloVpHH82aECzEuXzC0YFtrEw
D+3a3d6UXo7sjSK+RCxjY1bt9M07E1eK4qIXt2SdZmMaOhdUPpgsWFffzZA5
XsnG9PXUvbNqWjEayHFj75bhYKpf23U6KfYDUsm4pSDnwME0fGl5NPTTeyTq
/yIx4jYHk8Ot++VtWoCMd8Ut6uBzMG0zDSrjHfNQjJp/q7UaF9N5OrdoUPkd
OmG67sS7fVzMYzFhx3gz3yLjsV7FL+5yMdM8TS4/OZiDlj2r3X6RxsW0aPtd
7H8qC9GPSaYZKPAwtc/7XZnCTEceOrocY2seZlTkOe5TkTRkuy3/xvJgHmZl
1+evi2NfIFcLpbL1BTzMyuPB7zuinqFIu40qN3/wMGn7H/Uf+5WAQtm0pYqC
9eAfVrKY17LF7iOlQ2EGSof5mIav2Mfk7W4iyTOHch4/4GMavklInKdyFbXI
vwt5U8vH9LXVdpv0wgevQ54pFg8/DQjZJyRnsNX9Nal7FpjSnXxJvWN8X+qt
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
6SOTXSZ1YOY//P1zd2sbSn/we1qDZgcmL1jcMjtP0N9O0ajINOzAnLTNqJh1
uw1ZSm/imQv6wX/of+BCTEhAG+Jel3PtcOvAjI3bbT/bpg2lXgyam3S2A7P3
edqbgVVtqNdl2/HQiA7M8K+DFYnKbcgxsNhJI6ED0z19M6tAtA3RnhpWfX3T
gZk8eLsgsY2Glg64tspUdWA+lrBLoRfQkNa3panirA7M1/Kze3/E0dDkWUWP
AwY7MBuKLUcsPU9D0XeqnmZN7KQoU3Bm/04aCuxbZh0yuxNT77KG77NVNLTB
0EevYmUnZqjyqvnFM2ioWmtx6d7NnZhrXr3Y0CUmeH3xjo7Rzp2Ykx+0b2GU
fUHOskkJR092YpZ+/CGWEP0FqTPcSk6GdmKGmCTHRW37ggpXBFk+eNiJ+XTd
ATG58V+QzuTM4KJXnZjOaZ/3xpe2IvUk2k7dqk7MkB8OtJ0XWlHMxB3so6xO
TJ23nQaPDFtR2YW2NSmidMyY3XaLmd9bUPXuaqNyRTpm4Ofz8yNetiBaBMf7
4Vw6puPKZYHjvVvQQJXyspbVdEy5oLjNLktakKVp545P1nRMcQ2L9ktDzcjV
3uztMXc6ZjZLJe9uUjOKfGT9vM2XjrlizN8eW+9mdFHtT8qzm3RMpysS/197
dh7Vc/7/fTzLYCJbxjaDiJBlkJ18GvnGIOvYNcwYW3aRkV3WbJEJJWQJkS2y
DCMiRESEiJLSIluEbNf112fOuZ7zPNfnc851rrl+1+/+1+0cf1Te79fr+Xw8
n+8nefXvG7ake3tVPJxu1KbrFN+I1HuG/FEHcudcTDdqff5Zzbkh9wwWF2YE
jk1O/9s9yxuc+PmeYdugSWe3vk83Wj5nz7EK1vcM4dNWtJxU9onR9PX9+u69
mGjwyOsb/7ruE6Mh331YWH1+osFq55qzJ394YjTRstOxS60TDQcM54vdHvzE
6AunA2lemXcNw2qcu7lq+hOjCevD5/Xwu2vIf1Gl6GD/J0atG4RkZbe9aygU
vX/CH2FPjOaFvThgeHvH4Hfxyzb32CdGXUIsykWuu2Pw+il+V6W0J0b9Ci76
KrzHHYPFm5x+JYtk/G315u9u5tw2WEy9/LRd1Yy/DQ5q5bzjtmFLzvN+Nq0y
jNq0aPRu00+3DYlLr7482y/DqMeva+2Pvksw9Jjf9naZ6RlGS0/v7BWzNsEw
NyXzfc+1GX87qH1ZS+cEQ8CzR+2nHM0w6tC0X4ttd28ZPPcOc1x5M8NoUP7N
jn3m3zIEFbRr3+F1htG671a0crC9ZbBO+/V1zW8yjUb3uF1jdeRNQ+X6kZ2S
2mQaDZ9xutaorjcN4YNnV4wZkmk0PXNBRHByvCH8RoUb27wzjaYvPra03NR4
w5a43xr5hWQatVl5fbxLiXhDfqfIzZMuZBq1rnXaZs/uGwaveVWGrc3KNOo3
Y2dCe6cbhqD3P9VeVyrLaF3rAj6tr183HDjT5/GIZllGX5z43OvykOsGj0JV
R1j8kmU05M2O2M/34wwhzbybD/fOMmo1xHNw3NQ4g82uLk867coyuqVolc61
isYZmuf07HvofJbRExPL5V93u2YYuMdiiFd2ltH0Dx/OV59x1eCy6KsV/cpk
Gx2Y+ODgq3WxhiLBmw6dbJxtNLFVpzi/W1cM0Ts7XbPrmW10YJmuNStUumJo
27ZoXMfx2UbX+N+s1tP9ssG6ksPCDwuzjS4fHZtc+X6MoWvki+7jt2cbbTJ7
kI17rRhDVOk21VqezDY6NjCow37/SwavVRWavYnPNmq3bfIZp2KXDAlrl67p
lJRtNH9+tG/XuIuGmYPu3C/2LNto2Xs5N2LGXDQsH/J+WKVX2UYPna29a2Tv
i4bB7sHjb77JNnpjXotRXznq/679HO33an+n9v/SnoP23LTnrL0X7T1q7107
J9q50s6hdm61c67dC+0eafdOu6favdbqgFY3tDqj1SWtjml1T6uTWl3V6rBW
t7U6r/UFrY9ofUfrU1pf0/qg1je1Pqv1Za2Pa31fywlartByiJZbtJyj5SIt
R2m5S8tpWq7TcqCWG7WcqeVSLcdquVfLyVqu1nK4ltvVnK/MBdococ0d2pyi
zTXaHKTNTdqcpc1l2hynzX3anKjNldocqs2t2pyrzcXaHK3N3dqcrs312h5A
2xtoewZtL6HtMbS9h7Yn0fYq2h5G29toex5tL6TtkbS9k7an0vZa2h5M25tp
ezZtL6ft8bS9n7Yn1PaK2h5S21tqe05tL6rtUbW9q7an1fa62h5Y2xtre2Zt
L63tsbW9t7Yn1/bq2h5e29tre37tu4D2HUH77qB9p9C+a2jfQbTvJtp3Fu27
jPYdR/vuo30n0r4rad+htO9W2ncu7buYud/XzP1+Z+73QXO/P5r7fdPc76f/
9vde/He0dNu8oE3Cc2GhAzHXdm6RVrH8vdK3v0otY4OtS1WS2s9Z/bjf1WfC
WbF/BRddKy2fcq/kw1FSv5GZw4sYpMkuu3wOlpf2ONbo19evcoTxAzY9t7oi
jWlaePK1HVJLh5eTv10kDbhTImLar1K3AieiUp2lfTss+rS/hrT1lrb2WwpI
fZtld2mZ8lRY/tX8yL3npC4Fm/StGyJ1yJt0feZKaXLMHe8lHtJhoQU2hQ+U
TuzRJKr5D1LHwKqBR+tJPSr/ePldaWnv2fsbfZefLVyx8vOUFmlSpwUtD1eN
k1oVnf91xHFpbrDfieMh0hGFwjy/8ZO2dvJ0d50tdVr3s0/aCKnN1piH83pK
V3i0c/JsI3U6Gvbn77bSxHFW1S+XkGadaXfyuzdZwi2jF//ueU+afK1Spxvn
pLbN91ZouE+a/CFygesf0sTkfScOz5GOW+BVboa7NGSG26ofe0tbuw970re9
1HPv3KFjv5d6fHfu68WVpHZpdyauLio9ceiH5g3fZgqtfrnexDtVOm61X/fa
V6U5vatVG3ZKand/w5y7e6Wx63u1LL1OOnDeqAMjvaV+Z7un7/OQxpf55dHo
X6QuM1ZbLuwqHdjyP85dWkrd37ybUaamNL1h4tQ2ZaSOCS9Pxr7PECYuOXV1
SoY0rM+uEjNvSj8dvBoz5rTUp8HVntvCpEUK7HMcGShNnutZzHaZNKSnZZ+D
M6SL9ocdfe4u9b3s8Nen/tJcv63bCv0oTRzebWiVVv/gua8dntSW5qyZ0Xb0
N9LQw4VH5lpIP86cunjUiydC9xtvTq14IO1dtVWVzVekNkljR1iclD4tWnJ5
2h7pi65Xk+w3SK80H52+YrHUvUA9u92TpeHL7lVYMEQamXfIqcKP0iJnUqaP
bC51+GwRVLSWNKBw8oA7ZaWV11+tP+BLutBhcIFPJXKkXW2axkYmSifO7Fft
t2ipV5cxg/qFSzt/ujmr7UZp+tpqU84slrZNbbvnyiRpVlL7M9fcpA7jS9m/
d5E6Pz454mwTabLrlm0DK0ptiwcW+PAhTeh3YnjG3VRp6KmOLyIvSa1r7Jv5
fbj0xI6c62mbpenBE1y+zJUuv7+t665R0kjPtNTbrtKup0oN/NJUumhg3SOF
K0h9kmwf7/7wWHjfcO77xLtSr+i3ya3O/IOeYQ5LNksHb+g90W6OdNibi91v
/SaN+mRXcmZX6cn19ulXG0gjW2YM/Pob6YgibtsHvE0VOj17UcnyttTh+bIu
qw5LbV/YzSq3RmqxJc5lpof0Y4pz1IwBUr8/TkdHtJL2DW19qGaXv51tset1
p1KphgZxI/u7DP/bUx1/m1E+45HB6kO3wO4LU42OW/z1umLHHhni28VND9uS
ajQquOOlDysfGWI3Tlww5njq35brd/zB6EeG9/fL+s+6m2p06eHUTVGtHhnC
HhQsb5GbavTTwQ8P5lg/MuS9toscVPyx0ZW+54fkPUsxeNRy969Q/bHR+AtD
Nw2+mmJInph/8X2Tx0YP9F3Sa2l4imH0jwFlljs/Npqyen1aWECKwbdpTvs5
3R8brdN447dnlqQY5n5VvVPZnx8bjZx21e/x5BSDhXPrczG/PjY6N3DX3Wtj
Ugy5x7s0qzfqsVHr0SUbnR6m/7v2c7Tfq/2d2v9Lew7ac9Oes/ZetPeovXft
nGjnSjuH2rnVzrl2L7R7pN077Z5q91qrA1rd0OqMVpe0OqbVPa1OanVVq8Na
3dbqvNYXtD6i9R2tT2l9TeuDWt/U+qzWl7U+rvV9LSdouULLIVpu0XKOlou0
HKXlLi2nablOy4FabtRyppZLtRyr5V4tJ2u5WsvhWm7Xcr42F2hzhDZ3aHOK
Ntdoc5A2N2lzljaXaXOcNvdpc6I2V2pzqDa3anOuNhdrc7Q2d2tzujbXa3sA
bW+g7Rm0vYS2x9D2HtqeRNuraHsYbW+j7Xm0vZC2R9L2TtqeSttraXswdW+m
7Nm0vZy2x9P2ftqeUNsrantIbW+p7Tm1vai2R9X2rtqeVtvrantgbW+s7Zm1
vbS2x9b23tqeXNura3t4bW+v7fm17wLadwTtu4P2nUL7rqF9B9G+m2jfWbTv
Mtp3HO27j/adSPuupH2H0r5bad+5/u3vb4j/P6jdL83Q3wPaVlttuuV/ul1q
Th/TdT/Tvp9NSdPtO87JKS3mmcnm+BfqeGGj6dr6Nt9Tb5rp+pb4cHdzX9ON
KReQtriF6Y77+YeJeyuZbnrFpXn9CpjuiHcHS3tn5Jhs6YM3m429arrDujn4
tjhmuiOyA8t8v9l0vbdcebZmqTTgzJPP8fOki5ZFFjs5Rpp0LOPPSYOlnX0G
fzfC5R88V2JAegup6/7Q8u+/lVZ+YdXDs4Q0YFaL5Alvngrj6vw+c2maNK/A
h2bN4qQu1c7/0vq01Klw+Lrg3VKL9B2tZwRKC0WNXpq5SDq07qA7GV7SgDG/
9/w8UhoybuY0z0HST0t3fVnSUZpTOrvH85ZSqx2Dqj+uLW20ftHdDt9JfS92
yssoIrWOjHQ7/z9z6/9qXmCvh84Z0oHhZ1vH35c6djqzusZlqYPllxrpf0lj
v3r/af0+ae6jmx7fb5M6nf5lquMaaenSP/ocWCSdeLLyePup0gPPWzRdM0oa
ee9D65R+0spz+tzY1EWaWqlhjaqOUv+xfzaY1kg67qn3uyY20oADbgMOfCO1
+bViUl5BqfOOe4VWvcsSup75xTIoXWoRtLXY1rvS9PHdzv95Sdr3xNW7FU5K
HcZXP9pqrzT8TW+fhZukOY2OrO28Shpt3+XjKG+p7YFFPWpMlqZHu9UOGyHN
Kl51+qveUq9m42MvdPoHD95YcraNNLSMj0OH+tKEkvVKTagsdfIctMW3pDT5
6eRjdz5lCiP6dHxQ66U0tEbDkG4PpLH1vqv36qrUcWOLxKC/pJ4Hlzw3HJRa
ddzefFmQ1L2kR81VK6RxyzY9C58hdUru5d9uovRFYv+9PwyWHmi6u1j5ztKk
FiMGrWoq9fx+5rILNaUO9erOeFvyH8zddnb9hwzhxCXdZ1VIl4ZW+WnvlxvS
oE5nnaP/lG5bsvGXZbuljZqf6blgjfSE65N1v82XlvZ6lVJvrDTk89m6S/tJ
ByauLF/VSepyuW/NRvWlIU0OluhUWurncm9n3NsnQvuzvbb+fE/qOX7Y+tAo
6YtC18cWCJV61N9aqPFq6ccVYen3Jkktnbq+HtFPeiUgrvfIltK8eZYFj1eT
vlg8JK5WIamDvcPFstnpwrnWtxbViJWm77JvteCwNCDzSK8JflKvJ441602X
lsjrlnBpgLT+uSWhk36Q2v/SsNCVGtKuRVrsTigmbd17e9iUJ2nCYXu9u26O
l4YMHhkWeELqPdPKMmmv1Md96pWtgdLI1YvaFPGVRjg420TNlzbffrRT8TlS
+y3+Z/K9TFf7Odrv1f5O7f+lPQftuWnPWXsv2nvU3rt2TrRzpZ1D7dxq51y7
F9o90u6ddk+1e63VAa1uaHVGq0taHdPqnlYntbqq1WGtbmt1XusLWh/R+o7W
p7S+pvVBrW9qfVbry1of1/q+lhO0XKHlEC23aDlHy0VajtJyl5bTtFyn5UAt
N2o5U8ulWo7Vcq+Wk7VcreVwLbdrOV+bC7Q5Qps7tDlFm2u0OUibm7Q5S5vL
tDlOm/u0OVGbK7U5VJtbtTlXm4u1OVqbu7U5XZvrtT2AtjfQ9gzaXkLbY2h7
D21Pou1VtD2MtrfR9jzaXkjbI2l7J21Ppe21tD2YtjfT9mzaXk7b42l7P21P
qO0VtT2ktrfU9pzaXtTc/aq5+1tz98Pm7p/N3W+buz83dz9v7v7f3O8L5n6/
MPf7iLnfX8z9vmPu9yNzv0/929/TEBHxv7YTYws9b5n/XJhfu8Lr6rnSBlFT
XxseSu0MH+qVvyiNulAsJ+Kg1K6xY1qp9dJQV6vjbnOkvt/OLbZsvHTRzif3
Bg+ShnY63G6nQXrKZUfwb/WkhYYcaTS/nDS9R+/op2+fCedumRnRME1q+V38
2pA4aZHr1UdFn5S65HQ4sSlMah03ocK1IOmKKic8VqyUvkh6fTxwrnTbutqz
fpoi9Rkzfey44dLcWymnNgyUVqk+yWV2V6l3y5Rgqx+kFklDrV2bSt3v+G84
Vkc6q/Zjp/rfSk+tvnZlcklp313bWhwsJI3tunVc/bwcYYT9hvXdM6XeNf8a
Xeq+NH9S/qDbV6QhZ9reWH72HzwW5tPrsHRFrYFni++Q2mXfPnp4g7T3/oMV
m6ySBlgErhriLR22burtL57SPOvGuYZx0ip13dOfDpXaH/SLyuwjPbUyySep
qzTIuu/aFIM0NndArSrNpZ/i3SL615fGXWw1b1VladjZaxlhJaWfNu+L8S0o
jYpYGPzt26fCRt1KOA94Io2cNnhdw/vS+M6F61tclfpNikq5e0q6rX7xtYUO
SJ32Dey5MFhavsL3026sldoE1Lg0Z6HUaunL6lG/S/OnRXoVGSt1rVw9pL+b
1DpvenSv7tLUPKfdnw3SWUkZQzo7SP0XHq6TVEua3nFzlbhvpH3zI1usLSqd
aJE/eejbbOHQ7e/m+WZKk0t+Cax4T+qxtc2y91ek4UtXBT46KQ2aNnzJiTBp
UpmaP/lskUafezZo8yrpLLeAFj/Nkzquerh77Xhp73FWH664Se3KHC0+uavU
e8ao2hNaSz3GNmo2z0564uuU6svKSQvF5AYW/5wlbPQp78u9DOmLR1+yrl2X
9v3O5u3lY1LX2Znzt22RBi0PzJnsI/U9aJ/mOknq/mNo9O8DpPHdTzmW7SDt
m/owZlADqf/C8LOdvpFusxq18taXTGHns/5fz8mSHuj39M/k69LYKa59H5+Q
ul0OSVu1XTp3Q/LxFsulPSKzu1ybJo0vv27c8eHSyt1GRw/qIc3JH7JoZWtp
aiub9/3rSgMufNxasIK00L5Qy43FpAdKHh6/81OG0OlR2MmCr6UOyysnvnoh
dYryt/J7arrqz1F+r/Z3av8v7Tloz017ztp70d6j9t61c6KdK+0caudWO+fa
vdDukXbvtHuq3WutDmh1Q6szWl3S6phW97Q6qdVVrQ5rdVur81pf0PqI1ne0
PqX1Na0Pan1T67NaX9b6uNb3tZyg5Qoth2i5Rcs5Wi7ScpSWu7ScpuU6LQdq
uVHLmVou1XKslnu1nKzlai2Ha7ldy/naXKDNEdrcoc0p2lyjzUHa3KTNWdpc
ps1x2tynzYnaXKnNodrcqs252lyszdHa3K3N6dpcr+0BtL2BtmfQ9hLaHkPb
e2h7Em2vou1htL2NtufR9kLaHknbO2l7Km2vpe3BtL2ZtmfT9nLaHk/b+6l7
QmWvqO0htb2ltuf8t/eviIiIiP9V1fKVps+9XndDnphuQFD/Vc+vm27Qu8TX
V06brkP85q6nt5tuTs1dcQtWmu6WAikJnl6m6zD/Zc+EMaYbcswhruRA07X+
+HXup3amu83Wo1C1hqbbfJvT46jKpvsps+mHeoVNNzX4cy+bp8+E4TGlIzwf
S/28B0QnXZNOLGbdbvc5aVTlTmeWH5Im3LQpPmvfP5jxW7GgTVKvaY9e262X
Zu3ssnWtj9S5yKLt85dI3dcU3+E9UzqxUd+7W72kzp06DqozXmp533tZn7HS
+Mk/x78ZIu3tedKy6s/SnHM5ryb3klrXso5t1V0auWpsaFIHaek419j49lKP
mIk+E5pLvYot33yxiTS6TeWPK2tLExpXLrPXVmpf6v2rlRWki4bGz29aVlre
x/b210WlcZvKbKpXUDpwz8HaO17nCH1/CBn/+zPpiaWfmvd6KLXJuVDH57bU
fuKfXi0uSrNmxe/1iZTalbve8cF+6Yrt7v4JO6XjrOKvzF0vzb+zudCBNVLb
Rd3P914o9cuMHrN1lrR1/wDDignSFwXWn58ySprjdSbLd4C08+oj9QN7S6M/
/Oli+x9p6ypvvtngKHXKqptfvZE0cbHzYRc7qXWVTqkNraX2a5zLtCkmzT/6
ueCWd0+FXusefFvuubR3X4fthe9JR6yzfjj3mtR6d27blcelucG3+riGSVPX
BA0bskF6IHBM+FcrpElXx1dImCZNvPMwJsZd+sL9+tqIPtKE+5bLFzlL567b
ccv1e2m6weflIRup1ZyW3zwrLE3Nrb7/7utsoWt+UzuPh1Kf0I6b91+Vpt+1
D+t6RPoi8onT8l3SIvtLHkzyk5b/GN903wKpa0iHtF/GSkNnbBnz6Gep5ejw
Yjd+lKZ3WbqwcztpA+9BD57WkRaJb/DcporU586bsc7FpfH/mZn20ULqWN/e
1f9VltDiz81lOj+Vhn27e2qfFGmW3bamIx9Ke1gW6/jlvulqP0f7vdrfqf2/
tOegPTftOWvvRXuP2nvXzol2rrRzqJ1b7Zxr90K7R9q90+6pdq+1OqDVDa3O
aHVJq2Na3dPqpFZXtTqs1W2tzmt9QesjWt/R+pTW17Q+qPVNrc9qfVnr41rf
13KCliu0HKLlFi3naLlIy1Fa7tJympbrtByo5UYtZ2q5VMuxWu7VcrKWq7Uc
ruV2Ledrc4E2R2hzhzanaHONNgdpc5M2Z2lzmTbHaXOfNidqc6U2h2pzqzbn
anOxNkdrc7c2p2tzvbn7AXP3D+buN8zdn5i7nzF3/2Pufsnc/ZW5+zFz92/m
7vfM3R+au5/8t/epiIiIiIj4f16rTtn1Nn14LnSokj7u6Rtp0uK5x/vlSL1f
Vf4q6rE0vXeN1VH3pSeeVS879pY0vO6SpJw46YHfnu2acEVq06PlGatLUr82
8+/uOS+123Kzom2UtFG7aq7tz0hLDxnjV+0vqaXVhed7j0tDgpo6LoyQRowM
mPPVYan7ygu/1TwgjSpWYkyXUGnnYSVOBO+Qhjf69KrjVunQs9/X3b1ROsyi
S7uCG6SVO/86pbafdOjAeUe2L5cGVFqz5tB8ab772Br9Z0nd4idZzveUnmoz
7dWeCVL7pz7DH46Qtn5x5H3lwVL/btHdxnSTxla2emnbVtp8ZtsOc5pIG233
2NqkjtRjq3M7v2+l9onFrwWWkkbWmfJoz8dnwoDACYOyX0ntludVyMqUerht
Lx6cJHVee3Bny1vShD1pXksuSa0albb88Jd0y1Db34dHSCNueYxK3fsPnjrc
/uB2ad6+tCoP1ks9Tj8/08tX+mlc6uMii6S9Cx67N3C2NGf8Tss5HlLrrZs6
fBgp9f9u2pRqbtJQt377A3tKP61qfKqgizR5iXXCmVbS6Kov21SsL+1dLP2s
53fSvOHj13lYSXMnPOw8ykJaucAry7kvc4QDq5VL6ZginburWtPh16S+27+d
dOMvaYBDzRZV90pXNKvy5HiA1LFanT6bfKRF/NvfbTJdGudmt91+tDTiUKWF
N/pJm7e6/anzj9L4rtuXe7SSnsooWrVrPWnQnINlHStI0/3PP5laRJpUZI/X
pvdPhTkTNx5tki1NdZ39oPwDaYM/C/eLi5f6HglIa3VR2rtD6dCcM1KHoX8s
6HlCatFkXbc/j0odHVdbxR4xXe3naL9X+zu1/5f2HLTnpj1n7b1o71F779o5
0c6Vdg61c6udc+1eaPdIu3faPdXutVYHtLqh1RmtLml1TKt7Wp3U6qpWh7W6
rdV5rS9ofUTrO1qf0vqa1ge1vqn1Wa0va31c6/taTtByhZZDtNyi5RwtF2k5
SstdWk7Tcp2WA7XcqOVMLZdqOVbLvVpO1nK1lsO13K7lfG0u0OYIbe7Q5hRt
rtHmIG1u0uYsbS7T5jht7tPmRG2u1OZQbW7V5lxtLtbmaG3u1ub0f3t/gIiI
iIiIiP+91OZTzYBanr8MeG26vR1GXOn5zHSTmt7cWi/TdCMHlD8wKd10+/41
6nlGqumGVgyzH59ius67K//u8sB08651dBueaLrDglr6F79turnBgyJO3jBd
35+HJTS+Ku3ddkO3CuekMZW9X489JbXdO3Vv8E6py5vgy95B0s51NlYYulia
9epqRO4Mad6CwEPXx0kLtZ11vsxv0hG3vln6sp+0/N3j86Z2kE5smBAY7Ch9
0WWOReemUreF/wmb/b00+q9OjcvXkjo+b/PoiK10RWTmrbEVpFmTV3jGfyON
bx5a59sS0iy7LjYjiksj399weP/umbDKnAf2R95Le8xr1zj1mTS8xpbr+59L
rYKTzy5/JE0YEVuxf6rUcvSdweVuS4fVfjmuW4I0d6WdxbLz0qH1wyvOPitd
kb91dOgRqUORV7eGhEsbLE8tfG2H1K9xdrlmW6WOu54fdF4tPTDt4g+7lklj
Sv5Y3HWWNLHKtH23pkkdLu0KcB0h9apr49XrF6n1U9uzFXpIw/5o9+u6ztJc
Z5uX9m2krRd3btK2mdSzhdue32tK5xY+9OBLNWnCmqDD3UtJvUfOd2plKfWs
3XLfgI85wmE/jp/y5K00t2Wm3cUnUruby5oNSpVGr1uSueym1LPkqACXOGmP
n1vv8TonzXcptLftGWmc1+rvu0VIfZNWPjp2UJrapMShc6FS+4bJfUN2S3O/
pNiU3mm62s/Rfq/2d2r/L+05aM9Ne87ae9Heo/betXOinSvtHGrnVjvn2r3Q
7pF277R7qt1rrQ5odUOrM1pd0uqYVve0OqnVVa0Oa3Vbq/NaX9D6iNZ3tD6l
9TWtD2p9U+uzWl/W+rja95WcoOUKLYdouUXLOVou0nKUlru0nKblOi0HarlR
y5laLtVyrJZ7tZys5Wpz87m5+d/c+cLc+cXc+cjc+cvc+c7c+dHc+dTc+dfc
+frf3gcgIiIiIiIiIprsp5I/NHj/XOgTWWvFoZdSN9+YBM9H0lwn/36516Qr
DL26lDotjVo+JqpLiDSm0uwa7ddIY0N857WcLfV5WqZm6SnSiDHL/lzlLg1a
vD/Zepg0qfvJx6vcpJ2Xzl99rr/U/qOTQ/BP0ga5bZ6v7yVtlNV8j28PaVTE
+2n9ukpb5+1tOP5HqbuHW9vRHaVzh312OOwijRyUXy6yk9S38meLmp2lI970
81/fReoYd7Celas0p9iqMXW6S4N+GLvHuafUO3r5hVvdpXlljjw77Sr1vzTU
wbqT1GNLmtO+/0hDJrc99md7aeRR70qVfpCG2/o1vd1WGrJqa/c/Wkp913vc
DHaQ2rwZ5BVRX3oqZnWddXZS3xPpBe9UkTp139g6yFqa0Lf94EOWUrv7l/wL
fnwmHHb3Qz+f19Ko3c32d8mRzrLrn1Y4Q3rC6kqHp8nSpJGNVtrekzbyrd/m
m5vSoP+0/BxxWera6Y8PH6Okvd8m3m79l3TRmlnpscel8Se+L17msNS7camT
l/dLI8fnTXsQKs2rcsH7XYi0Qey6VWW3SeO3Lqwfu1laxDDj5sNAqWvr7tPP
BEh9m9lW3bbBdLWfo/1e7e/U/l/ac9Cem/actfeivUftvWvnRDtX2jnUzq12
zrV7od0j7d5p91S711od0OqGVme0uqTVMa3uaXVSq6taHdbqtlbntb6g9RGt
72h9SutrWh/U+qbWZ7W+rPVxre9rOUHLFVoO0XKLlnO0XKTlKC13aTlNy3Va
DtRyo5YztVyq5Vgt92o5+V/P74iIiIiIiIiIiP831PZjivbTN47OzDZd98sT
ZlvdNd3owmNOfog23dJlXo+ud9J08+pXXLX/sOm+qJ/u0na/6ebaphRsGma6
+XU3ntu623RLV3Y8mbPLdHuUbRX0PtR0I8IDHKP3mO6wp9NmpYSZbudJ6zd4
7JXGeVX3WR0stVm2afnNzdKcWyGGUb5Sm12fIqaukPov+nJ0w3Rp6qa3B7tP
k8bk+CZfGC6N9Z40Y8EQqZPH7qhxztJFG/PW9G0j3XZjWdiQBtIqrjWOn6sl
9Yx5E36qkjTupxbL3pSWBh076xFfVJrn3b5hWP4zYd/BTl3T3kiH1v1jztiX
/+CnY6fzcqRWN4K6JGdIrRs0t5+WLg3Z6l3GKlkakdmj2sIHUs8uH1pOvCu1
tXlYfP8dqVfWraRJN6RVunW+cvq6NDmqRmrjWKl9xXXui65I3Q4vL7vhojS3
4fCOLy5Im9u3eno92nS1n6P9Xu3v1P5f2nPQnpv2nLX3or1H7b1r50Q7V9o5
1M6tds61e6HdI+3eafdUu9daHdDqhlZntLqk1TGt7ml1Uqurah1W6rZW57W+
YG5/Mbd/mdsfze2/5vZ3c/ODufnE3Pxjbr4yN7+Zmw/NzZ/m5tt/PY8jIiIi
IiIiIiIi/jfXY57DtD4fnwtX9J1dKjxP6h85ZNnKLGlCh6EOMfekIdc6W6df
knoObJZb4JjUoWyXG/mBUhfPH32z50kdd+cU6TpZ2mN0sN/gX6TjNjffN7y3
NKtwjwUdW0vnBn/suKSxtNHlY9Wn15Z6jGr75XNVafhXkfcXlJcuqhDx/Ley
0thft799WlIasftY9QslpC4dHo/dXUwaeWeKU0YRaVjIp2LXvpI2qh1V/Hlh
qeN430ojC0mz2k95uqOg1L9C/9OPC0ibz7gS1uQfTHzgtHGuhdTW4YjtrS/P
hOMW191T9x8sVLBg8tzPUv+ZieXufDJd7edov1f7O7X/l/YctOemPWftvWjv
UXvv2jnRzpV2DrVzq51z7V5o90i7d9o91e61Vge0uqHVGa0uaXVMq3tandTq
qlaHtbqt1fl/u/8gIiIiIiIiIiIiIuL/u2rfFzRf1LTKuPPCdENqZBzskGy6
SRUP1IiNMV3b3Pn3HI+abvOaPw8Yss10fYMb/9R/nek6/x5mt2iV6Zb32dZq
xDLTtbh+dJjTUtPN2eRUv/YS081Ps2q9eZHphpx4WeLBQtPtXHXEh3pm6Dc5
cf7cBaZrn3Po6G1v0zX355v795v7fMx9/ua+X3PPj7nn09zzb+79Mvf+mlsf
zK0/5tY3c+unufX53+4niIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIj4v/d/AE2k8Fg=
     "], {{0, 0}, {
     322, 320}}, {0, 1}], {
    Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
     Automatic, FrameTicks -> {{{{319.5, 
          FormBox[
           RowBox[{"-", "144.45000000000002`"}], TraditionalForm]}, {239.5, 
          FormBox[
           RowBox[{"-", "72.22500000000001`"}], TraditionalForm]}, {159.5, 
          FormBox["0", TraditionalForm]}, {79.5, 
          FormBox["72.22500000000001`", TraditionalForm]}, {-0.5, 
          FormBox["144.45000000000002`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "144.45000000000002`"}], TraditionalForm]}, {80.5, 
          FormBox[
           RowBox[{"-", "72.22500000000001`"}], TraditionalForm]}, {160.5, 
          FormBox["0", TraditionalForm]}, {240.5, 
          FormBox["72.22500000000001`", TraditionalForm]}, {320.5, 
          FormBox["144.45000000000002`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 80.5, 160.5, 240.5, 320.5}, {0.5, 80.5, 160.5, 240.5,
       320.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
       TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -140.0309115156972}, 
                    Offset[{4., 0}, {7.5, -140.0309115156972}]}, {{7.5, 
                    7.4381769686054895`}, 
                    Offset[{4., 0}, {7.5, 7.4381769686054895`}]}, {{7.5, 
                    138.52181117687462`}, 
                    Offset[{4., 0}, {7.5, 138.52181117687462`}]}, {{7.5, 
                    285.9908996611773}, 
                    Offset[{4., 0}, {7.5, 285.9908996611773}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -140.0309115156972}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.8\"", 1.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 7.4381769686054895`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 138.52181117687462`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"3.5\"", 3.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 285.9908996611773}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6282339899863503`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.7564679799727004`", ",", "1.8`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8704537488494561`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9986877388358063`", ",", "3.5`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7576720557274957`*^9, 3.7576721292201605`*^9, {3.7576723141476855`*^9, 
   3.7576723329134703`*^9}, 3.7576724505142345`*^9, 3.7576727564265985`*^9, {
   3.757672861560854*^9, 3.7576728788581305`*^9}, {3.757672915316574*^9, 
   3.757672918643919*^9}, 3.7576729659824295`*^9, {3.757912154515978*^9, 
   3.75791218511029*^9}, {3.757921480602399*^9, 3.757921493958638*^9}, 
   3.75792154140067*^9, 3.7579215938773108`*^9, 3.7584308403021417`*^9, 
   3.7584389878143835`*^9, 3.7584419896438413`*^9, 3.7607801371630836`*^9, 
   3.7607865007714543`*^9, 3.7607869511232123`*^9, 3.760788425323146*^9, 
   3.7608491235034227`*^9, {3.7608513596830235`*^9, 
   3.760851382932526*^9}},ExpressionUUID->"bad1ecc8-04e7-4005-b490-\
a3801e27ecbc"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 457, 7, 101, "Title", "ExpressionUUID" -> \
"5040d5b2-880b-45cc-a231-0e6954975e21",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1040, 31, 932, 17, 47, "Input", "ExpressionUUID" -> \
"9e617440-68c8-4c7d-87fe-cd9d2efca97f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1975, 50, 450, 7, 56, "Subtitle", "ExpressionUUID" -> \
"e25394e1-9c35-4f6a-8495-86623345b352",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2428, 59, 557, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"0fcc0597-25c9-4843-be60-e01aeb713b6b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2988, 70, 1773, 36, 66, "Input", "ExpressionUUID" -> \
"100d6a29-6bda-47fc-8ee9-d0d4d8524fab",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4764, 108, 491, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"a26e5cb8-621f-473e-9817-1af4aa08599c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[5258, 118, 2931, 66, 200, "Input", "ExpressionUUID" -> \
"10ceb89e-20df-48f1-a321-ff7ea6718edd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8192, 186, 542, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"d7ba3c85-2ecc-4633-b74f-86fb15d632b7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8737, 196, 1586, 32, 87, "Input", "ExpressionUUID" -> \
"2132100d-0f03-4edf-8750-0a4cfeec3cf8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10326, 230, 499, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"a1f5bcd3-ad1c-4608-8d2e-184dd5d3b14f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10828, 240, 6861, 183, 632, "Input", "ExpressionUUID" -> \
"064c7d03-91ae-4e2d-a5a1-1e6c1a61dace",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[17692, 425, 541, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"ba1976cb-53a4-4ebe-af03-95fcd4651050",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[18236, 435, 3041, 74, 497, "Input", "ExpressionUUID" -> \
"98de9a1d-6124-4724-8226-daf84a86a835",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21280, 511, 604, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"36014964-da04-4894-82b2-12a8ee0727f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21887, 522, 5582, 133, 794, "Input", "ExpressionUUID" -> \
"01047cc0-f16a-427d-b7ce-0c29435e4e64",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[27472, 657, 726, 11, 33, "Subsubtitle", "ExpressionUUID" -> \
"21ae29e2-a91d-4224-a123-209e3951a365",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[28201, 670, 5232, 118, 366, "Input", "ExpressionUUID" -> \
"b438da06-2c58-4df8-acea-37ef3435337f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[33436, 790, 965, 14, 33, "Subsubtitle", "ExpressionUUID" -> \
"f292807d-09b1-495c-8b9c-9b6b00df497f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[34404, 806, 1367, 35, 47, "Input", "ExpressionUUID" -> \
"72bf3732-c3a2-4f97-80cb-c1e43b95ecdf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[35774, 843, 1052, 17, 33, "Subsubtitle", "ExpressionUUID" -> \
"b0004f69-f221-4be9-a8c1-e15c829973e9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[36829, 862, 2409, 52, 385, "Input", "ExpressionUUID" -> \
"88e4f2ea-e727-4648-a92f-4e85f1dbd17f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[39241, 916, 854, 13, 33, "Subsubtitle", "ExpressionUUID" -> \
"394e299f-9abe-4d8b-a9b5-36a2d37636ef",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[40098, 931, 10499, 241, 1075, "Input", "ExpressionUUID" -> \
"de53eaa8-5f9f-4f21-90ff-43a6ff9125cd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[50600, 1174, 547, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"1a670f20-a3b6-450a-ad8b-342673b49f03",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[51150, 1184, 1737, 41, 236, "Input", "ExpressionUUID" -> \
"22d0e063-4a2f-4302-8b76-c318fb3d02c1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[52890, 1227, 506, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"573585d3-2ab7-4012-9bde-ee091976122e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[53399, 1237, 1470, 34, 158, "Input", "ExpressionUUID" -> \
"dbe4cd76-4469-4ba0-8820-019c7d484c1a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[54872, 1273, 1773, 44, 140, "Input", "ExpressionUUID" -> \
"a97292b3-e790-4763-b444-aa3c9e960ac0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[56648, 1319, 558, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"5f65bd77-40eb-4e12-b562-42a327fbbec3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[57209, 1329, 1256, 31, 84, "Input", "ExpressionUUID" -> \
"38a1c404-a80a-4f37-b880-ecc92f0fda32",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[58468, 1362, 5290, 80, 36, "Print", "ExpressionUUID" -> \
"8653b3d0-68cb-4622-8a68-b998a4fab419",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[63761, 1444, 458, 7, 33, "Subsubtitle", "ExpressionUUID" -> \
"c9835767-2b4a-4bf0-9d05-9ee1c3d7ac31",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[64222, 1453, 9440, 225, 1150, "Input", "ExpressionUUID" -> \
"d92d7a12-ebcc-4f18-83e0-f681f54b8eec",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[73677, 1681, 2601, 44, 72, "Print", "ExpressionUUID" -> \
"bc821f40-2438-48c8-89f6-8bcc3acc4538"],
Cell[76281, 1727, 67414, 1170, 602, "Output", "ExpressionUUID" -> \
"1b0d19a7-0b38-44bc-9828-785b57884a83"],
Cell[143698, 2899, 27963, 478, 327, "Output", "ExpressionUUID" -> \
"22be9e00-5e1c-4924-aec8-c4783828a2c9"],
Cell[171664, 3379, 19679, 420, 449, "Output", "ExpressionUUID" -> \
"12890457-c244-42f3-91f7-6cc0a1f1c228"],
Cell[191346, 3801, 3905, 83, 374, "Output", "ExpressionUUID" -> \
"e1f7e4df-22af-472a-94cf-a43222ac3100"],
Cell[CellGroupData[{
Cell[195276, 3888, 7175, 147, 43, InheritFromParent, "ExpressionUUID" -> \
"a7769b9f-372c-4fea-9038-cf2a26ffc08b"],
Cell[202454, 4037, 13577, 278, 602, "Output", "ExpressionUUID" -> \
"4e6c1b3b-6ee4-4063-b1fe-b7cdb13f0597"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216068, 4320, 519, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"feb92d43-f673-4dd7-9b42-b50ab362b68f"],
Cell[CellGroupData[{
Cell[216612, 4332, 2002, 50, 252, "Input", "ExpressionUUID" -> \
"b0245563-8792-413f-a4c1-ff322b233949"],
Cell[218617, 4384, 650, 13, 21, "Message", "ExpressionUUID" -> \
"8c410ea2-09aa-41a0-85c9-54c62e993aa4"],
Cell[219270, 4399, 534, 9, 30, "Output", "ExpressionUUID" -> \
"40c49073-d708-46a6-a954-e770c0ab8f9d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[219853, 4414, 568, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"190e1697-5378-40fd-b7b7-68e948097639"],
Cell[CellGroupData[{
Cell[220446, 4427, 6756, 170, 758, "Input", "ExpressionUUID" -> \
"af6ea415-d276-4505-81d8-a9c6f689f1a0"],
Cell[227205, 4599, 217412, 3622, 602, "Output", "ExpressionUUID" -> \
"bad1ecc8-04e7-4005-b490-a3801e27ecbc"]
}, Open  ]]
}, Open  ]]
}
]
*)

