(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    478665,       9129]
NotebookOptionsPosition[    471220,       8974]
NotebookOutlinePosition[    471564,       8989]
CellTagsIndexPosition[    471521,       8986]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Planar3D v3.4.0", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660668673644*^9, 3.7476606793673363`*^9}, {
   3.748934775835075*^9, 3.748934775947117*^9}, 3.748969785632721*^9, {
   3.7503603825095043`*^9, 3.750360384337364*^9}, 3.75103985134317*^9, 
   3.756183760446571*^9, 3.757328984108018*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"5040d5b2-880b-45cc-a231-\
0e6954975e21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "folder", ",", "parameters", ",", "size", ",", "middle", ",", "cellLength",
     ",", "showAllBarriers", ",", "textPadding", ",", "ticks", ",", 
    "barriers", ",", "concentration", ",", "fracture", ",", "opening", ",", 
    "pressure", ",", "openingFilenames", ",", "openingAtCheckStep", ",", 
    "numberOfCheckSteps", ",", "measuredTimes", ",", "totalTime"}], "]"}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.750653482361023*^9, 3.750653486415388*^9}, {
  3.750653571387208*^9, 3.750653605937574*^9}, {3.750653638308257*^9, 
  3.750653669910097*^9}, {3.750660681648044*^9, 3.750660692605433*^9}, {
  3.7579120167949066`*^9, 3.7579120214810743`*^9}, {3.757912589794462*^9, 
  3.757912590809856*^9}, {3.7579216351176195`*^9, 
  3.757921637429574*^9}},ExpressionUUID->"9e617440-68c8-4c7d-87fe-\
cd9d2efca97f"],

Cell["\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0441\
\:0435\:0442\:043e\:0447\:043d\:044b\:0445 \:0433\:0440\:0430\:0444\:0438\
\:043a\:043e\:0432 \:0432 2D", "Subtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660650798229*^9, 3.7476606629055977`*^9}, 
   3.748969785633028*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"e25394e1-9c35-4f6a-8495-\
86623345b352"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:043f\:0443\
\:0442\:044c \:0434\:043e \:043f\:0430\:043f\:043a\:0438 \:0441 \:0432\:0445\
\:043e\:0434\:043d\:044b\:043c\:0438 \:0434\:0430\:043d\:043d\:044b\:043c\
\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.747660720326604*^9}, 
   3.747661032741356*^9, 3.7489697348519917`*^9, 3.748969785633336*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"0fcc0597-25c9-4843-be60-\
e01aeb713b6b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "folder", "=", 
   "\"\<C:\\\\Users\\\\Nikita\\\\Desktop\\\\Planar3D-master \
(2)\\\\Planar3D-master\\\\build\\\\Results\\\\\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747656893552808*^9, 3.747656906633217*^9}, 
   3.747661032741767*^9, {3.747664018501865*^9, 3.747664019128312*^9}, {
   3.747664057817404*^9, 3.7476641073677397`*^9}, 3.747665488148735*^9, 
   3.748933628112026*^9, {3.748933678444969*^9, 3.748933682795598*^9}, {
   3.748967116456512*^9, 3.748967124377589*^9}, {3.748968117085099*^9, 
   3.748968118090468*^9}, 3.748968199603396*^9, {3.748969393672985*^9, 
   3.74896939903098*^9}, 3.74896973485242*^9, 3.748969785633741*^9, {
   3.749002313128289*^9, 3.749002345037242*^9}, {3.749002429317358*^9, 
   3.7490025155955677`*^9}, {3.7490032762745247`*^9, 
   3.7490033047957563`*^9}, {3.749195504804994*^9, 3.749195505707028*^9}, {
   3.7497457636414347`*^9, 3.749745764379126*^9}, {3.7524855357661276`*^9, 
   3.7524855374845*^9}, {3.7546389669086523`*^9, 3.754638975297113*^9}, {
   3.754651973510044*^9, 3.7546519738226357`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}, {3.7607801304205627`*^9, 
   3.760780131826845*^9}},ExpressionUUID->"100d6a29-6bda-47fc-8ee9-\
d0d4d8524fab"],

Cell["\:0421\:0447\:0438\:0442\:044b\:0432\:0430\:0435\:043c \:043f\:0430\
\:0440\:0430\:043c\:0435\:0442\:0440\:044b \:0440\:0430\:0441\:0447\:0451\
\:0442\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, 3.7489697348525867`*^9, 3.7489697856339073`*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"a26e5cb8-621f-473e-9817-\
1af4aa08599c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"parameters", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<parameters.json\>\""}], ",", 
      "\"\<RawJSON\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"height", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"length", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<length\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"middleH", " ", "=", " ", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "height"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"middleL", "=", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "length"}], "]"}], "+", "1"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"size", "=", 
   RowBox[{
    RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"middle", "=", 
   RowBox[{
    RowBox[{"Floor", "[", 
     RowBox[{"0.5", "*", "size"}], "]"}], "+", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cellLength", "=", 
   RowBox[{"2", "*", 
    RowBox[{
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<cell\>\"", 
      "]"}], "[", "\"\<length\>\"", "]"}]}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747655287287675*^9, {3.747656648179721*^9, 3.74765664850766*^9}, {
   3.747656733330495*^9, 3.747656752436288*^9}, {3.747656912578596*^9, 
   3.7476569586085052`*^9}, {3.7476569957355824`*^9, 3.747657000350354*^9}, {
   3.747657434800095*^9, 3.747657435013611*^9}, {3.747657489717287*^9, 
   3.747657567951728*^9}, {3.7476576237958593`*^9, 3.747657744332275*^9}, 
   3.7476579502511377`*^9, 3.74765802117413*^9, 3.747659478052923*^9, 
   3.747659922966485*^9, {3.747659991785955*^9, 3.747660041283514*^9}, {
   3.7476600785009727`*^9, 3.747660104489366*^9}, {3.747660507830991*^9, 
   3.747660518100801*^9}, {3.747660570048667*^9, 3.747660584277534*^9}, {
   3.7476606203847427`*^9, 3.747660620713311*^9}, 3.747661032742475*^9, {
   3.7489336188607807`*^9, 3.748933619107676*^9}, {3.7489338681042213`*^9, 
   3.748933945735607*^9}, {3.7489340816532583`*^9, 3.7489340850716543`*^9}, {
   3.748934703289136*^9, 3.748934761141674*^9}, 3.748969734852895*^9, 
   3.74896978563422*^9, 3.7506535748684483`*^9, {3.7524857559405956`*^9, 
   3.752485761689149*^9}, {3.754653259405737*^9, 3.7546532596400566`*^9}, {
   3.756111089452158*^9, 3.75611109843443*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}, {3.75844143024053*^9, 
   3.758441430842722*^9}},ExpressionUUID->"10ceb89e-20df-48f1-a321-\
ff7ea6718edd"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:043f\:0430\:0440\:0430\:043c\
\:0435\:0442\:0440\:044b \:043e\:0442\:043e\:0431\:0440\:0430\:0436\:0435\
\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, {3.748934769874744*^9, 3.7489347748029413`*^9}, 
   3.74896973485305*^9, 3.7489697856343813`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"d7ba3c85-2ecc-4633-b74f-\
86fb15d632b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\:0415\:0441\:043b\:0438", " ", "True"}], ",", " ", 
    RowBox[{
    "\:043d\:0430", " ", "\:0433\:0440\:0430\:0444\:0438\:043a\:0435", " ", 
     "\:0431\:0443\:0434\:0443\:0442", " ", 
     "\:0432\:044b\:0432\:043e\:0434\:0438\:0442\:044c\:0441\:044f", " ", 
     "\:0433\:0440\:0430\:043d\:0438\:0446\:044b", " ", 
     "\:0441\:043b\:043e\:0451\:0432"}], ",", 
    RowBox[{
    "\:0440\:0430\:0441\:043f\:043e\:043b\:043e\:0436\:0435\:043d\:043d\:044b\
\:0445", " ", "\:0437\:0430", " ", 
     "\:043f\:0440\:0435\:0434\:0435\:043b\:0430\:043c\:0438", " ", 
     "\:0440\:0430\:0441\:0447\:0451\:0442\:043d\:043e\:0439", " ", 
     "\:043e\:0431\:043b\:0430\:0441\:0442\:0438"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"showAllBarriers", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"textPadding", "=", "1"}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748936129152269*^9, 3.748936131996414*^9}, {
   3.748936437491951*^9, 3.748936446079194*^9}, {3.748936835688491*^9, 
   3.748936836198721*^9}, {3.7489370016931553`*^9, 3.748937002355495*^9}, 
   3.7489687346210823`*^9, 3.7489697856346483`*^9, {3.748970588914028*^9, 
   3.748970589224121*^9}, {3.750355327100403*^9, 3.750355327233083*^9}, {
   3.75035545494031*^9, 3.750355455090455*^9}, 3.750656912157938*^9, 
   3.7516154744310207`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"2132100d-0f03-4edf-8750-\
0a4cfeec3cf8"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:0440\:0438\
\:0441\:043a\:0438 \:043f\:043e \:043e\:0441\:044f\:043c \:0433\:0440\:0430\
\:0444\:0438\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, 
   3.747661032742928*^9, 3.748969734853208*^9, 3.748969785634802*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"a1f5bcd3-ad1c-4608-8d2e-\
184dd5d3b14f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ticksSetVertical", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"height", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"height", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ticksSetHorizontal", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"length", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"length", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ticks", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ticksSetHorizontal", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ticksSetVertical", ",", "None"}], "}"}]}], "}"}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"createTicks", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cellLength", ",", "middle", ",", "size"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ticksSet", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"-", "cellLength"}], "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"size", "/", "4"}], "]"}]}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"-", "cellLength"}], "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"size", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"3", 
                RowBox[{"size", "/", "4"}]}], "]"}]}], ",", 
             RowBox[{"N", "[", 
              RowBox[{"cellLength", "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"size", ",", 
             RowBox[{"N", "[", 
              RowBox[{"cellLength", "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ticksSet", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ticksSet", ",", "None"}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ticks", "=", 
     RowBox[{"createTicks", "[", 
      RowBox[{"cellLength", ",", "middle", ",", "size"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.74766059129346*^9, 3.74766061456117*^9}, 
   3.747661032743846*^9, {3.748933853433467*^9, 3.748933890369454*^9}, {
   3.7489339519881077`*^9, 3.748934022178279*^9}, {3.748934089035924*^9, 
   3.748934096639612*^9}, 3.74896973485367*^9, 3.748969785635269*^9, {
   3.757672639256096*^9, 3.7576726982404222`*^9}, {3.7576728052825923`*^9, 
   3.757672817092346*^9}, {3.757672891902179*^9, 3.7576729030401917`*^9}, {
   3.7576729381237707`*^9, 3.757672945169193*^9}, {3.757921512969803*^9, 
   3.757921520186861*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"064c7d03-91ae-4e2d-a5a1-\
1e6c1a61dace"],

Cell["\:041f\:043e \:0440\:0438\:0441\:043a\:0430\:043c \:043d\:0430\:043c\
\:0435\:0447\:0430\:0435\:043c \:043b\:0438\:043d\:0438\:0438 \:0441\:0435\
\:0442\:043a\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660845455511*^9}, 3.747661032744216*^9, 
   3.748969734853849*^9, 3.7489697856354237`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"ba1976cb-53a4-4ebe-af03-\
95fcd4651050"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"createLines", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "ticks", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lines", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lines", ",", 
           RowBox[{"{", "}"}]}], "]"}], ";", 
         RowBox[{"leftTicks", "=", 
          RowBox[{
           RowBox[{"ticks", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "leftTicks", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"lines", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"leftTicks", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lines", ",", 
           RowBox[{"{", "}"}]}], "]"}], ";", 
         RowBox[{"rightTicks", "=", 
          RowBox[{
           RowBox[{"ticks", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "rightTicks", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"lines", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"rightTicks", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "lines"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lines", "=", 
   RowBox[{"createLines", "[", "ticks", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747661032744575*^9, 3.748969734854225*^9, 3.7489697856357327`*^9, {
   3.757672495233093*^9, 3.7576726309613447`*^9}, {3.757672685223899*^9, 
   3.7576726858954177`*^9}, {3.7576727860678577`*^9, 
   3.7576728004399943`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"98de9a1d-6124-4724-8226-\
daf84a86a835"],

Cell["\:0421\:043e\:0437\:0434\:0430\:0451\:043c \:043c\:0430\:0441\:0441\
\:0438\:0432 \:043b\:0438\:043d\:0438\:0439\[Dash]\:0433\:0440\:0430\:043d\
\:0438\:0446 \:0441\:043b\:043e\:0451\:0432 \:043f\:043b\:0430\:0441\:0442\
\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660912488222*^9}, 3.747661032744845*^9, 
   3.7489697348543863`*^9, 3.748969785635898*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"36014964-da04-4894-82b2-\
12a8ee0727f9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lineBarriers", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nominalStress", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"0", ">", 
      RowBox[{
       RowBox[{
        RowBox[{"layers", "[", 
         RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", "]"}],
        "*", 
       RowBox[{
        RowBox[{"layers", "[", 
         RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y2\>\"", 
        "]"}]}]}], ",", 
     RowBox[{"nominalStress", "=", 
      RowBox[{
       RowBox[{"layers", "[", 
        RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<stress\>\"", 
       "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"barrierCoordinate", "=", 
     RowBox[{"middle", "+", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"layers", "[", 
           RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
          "]"}], "/", "cellLength"}], "-", "0.5"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"showAllBarriers", "||", 
       RowBox[{
        RowBox[{"1", "\[LessEqual]", "barrierCoordinate"}], " ", "&&", " ", 
        RowBox[{"size", "\[GreaterEqual]", "barrierCoordinate"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "barrierCoordinate"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"size", ",", "barrierCoordinate"}], "}"}]}], "}"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"barrierCoordinate", ">", "middle"}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}], "[", "\"\<stress\>\"", 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<stress\>\"",
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stress", "-=", "nominalStress"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"stress", "/=", 
        SuperscriptBox["10", "6"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"signum", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"stress", " ", ">", " ", "0"}], ",", " ", 
         RowBox[{"signum", "=", "\"\<+\>\""}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"signum", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", "stress", "]"}], "]"}], "<>", 
            "\"\< \:041c\:041f\:0430\>\""}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"2", "+", "textPadding"}], ",", 
             RowBox[{"textPadding", "+", "barrierCoordinate"}]}], "}"}]}], 
          "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"barriers", "=", 
   RowBox[{"Graphics", "[", "lineBarriers", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747661032745192*^9, {3.748934559310659*^9, 3.7489346973352013`*^9}, {
   3.748936028834214*^9, 3.74893640178518*^9}, {3.748936537538189*^9, 
   3.74893659455238*^9}, {3.748936626625805*^9, 3.748936705526024*^9}, 
   3.748936851846299*^9, {3.7489369647365932`*^9, 3.748936969645989*^9}, 
   3.7489697348547573`*^9, 3.7489697856362667`*^9, {3.749746386574204*^9, 
   3.7497463871546*^9}, {3.7497465169733543`*^9, 3.7497465172756653`*^9}, {
   3.749746575601492*^9, 3.749746575932219*^9}, {3.7497467735023746`*^9, 
   3.749746911372019*^9}, {3.750355373538177*^9, 3.7503553959537697`*^9}, {
   3.750360862816245*^9, 3.75036091965701*^9}, {3.75065554275772*^9, 
   3.750655545907774*^9}, {3.750655612889615*^9, 3.750655613558167*^9}, {
   3.750655741547908*^9, 3.750655792393737*^9}, 3.750656931278842*^9, {
   3.7571468034507365`*^9, 3.7571468366775255`*^9}, {3.7571468766358757`*^9, 
   3.7571468862076864`*^9}, {3.7576635407774744`*^9, 
   3.7576635425425215`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"01047cc0-f16a-427d-b7ce-\
0c29435e4e64"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:0438 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:0442\:0440\:0435\:0449\:0438\:043d\:044b \:0438 \:0446\
\:0432\:0435\:0442\:043e\:0432\:0443\:044e \:0433\:0430\:043c\:043c\:0443", \
"Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660953767308*^9}, 3.7476610327454557`*^9, 
   3.748969734854912*^9, 3.7489697856364202`*^9, {3.750660427182559*^9, 
   3.750660432292466*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"21ae29e2-a91d-4224-a123-\
209e3951a365"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "LightBlue", ",", "Green", ",", "LightGreen", ",", "White", ",", 
           "Yellow", ",", "Orange", ",", "\[IndentingNewLine]", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "White", ",", "White", ",", "White", ",", "White", ",", "White", 
           ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0.6", ",", "0.6"}], "]"}], ",", "Yellow", 
           ",", "Orange", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"myRainbow", "=", 
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"0.5", ">", "x"}], ",", "White", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"\"\<Rainbow\>\"", ",", "x"}], "]"}]}], "]"}]}], "]"}]}], 
     ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myRainbow3D", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"ColorData", "[", 
        RowBox[{"\"\<Rainbow\>\"", ",", "z"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GlueMatrix", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "matrix", "}"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"TakeList", "[", 
            RowBox[{
             RowBox[{"Reverse", "[", 
              RowBox[{"Transpose", "[", "matrix", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"matrix", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}], "}"}]}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Transpose", "[", "matrix", "]"}]}], "]"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PlotMatrix", "=", " ", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"matrix", ",", "matrixName"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"GlueMatrix", "[", "matrix", "]"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "matrixName"}], ",", " ", 
           RowBox[{"FrameTicks", "\[Rule]", "ticks"}], ",", 
           RowBox[{"GridLines", "\[Rule]", "lines"}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", "myRainbow"}], ",", 
           RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "barriers"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7476531195786133`*^9, 3.747653120240994*^9}, {
   3.7476534505006332`*^9, 3.747653485458448*^9}, 3.7476535222351294`*^9, {
   3.7476535950633698`*^9, 3.7476536054617443`*^9}, {3.747653655142853*^9, 
   3.747653656807279*^9}, {3.747653688090948*^9, 3.747653739282906*^9}, {
   3.7476538118536386`*^9, 3.747653827707106*^9}, {3.747656704788455*^9, 
   3.747656729694378*^9}, 3.74765701664755*^9, {3.7476584586379547`*^9, 
   3.7476584675487127`*^9}, {3.747658699447795*^9, 3.7476587124774933`*^9}, {
   3.7476587568371267`*^9, 3.747658782431654*^9}, {3.747660465335277*^9, 
   3.747660479701996*^9}, 3.7476610327461433`*^9, {3.7489348068714037`*^9, 
   3.748934817133738*^9}, {3.74893485538281*^9, 3.7489349552592983`*^9}, {
   3.7489349950905046`*^9, 3.748935017743618*^9}, {3.748935079617112*^9, 
   3.748935148106749*^9}, {3.748935208873681*^9, 3.7489353309778967`*^9}, {
   3.74893543472754*^9, 3.7489354449637127`*^9}, {3.748935604513166*^9, 
   3.748935774112791*^9}, {3.7489358857234097`*^9, 3.748935920285569*^9}, {
   3.748937178914475*^9, 3.748937196849533*^9}, {3.748937233907132*^9, 
   3.74893723762293*^9}, {3.7489372857884893`*^9, 3.74893733649858*^9}, {
   3.74893736830401*^9, 3.748937501097311*^9}, {3.748937550591075*^9, 
   3.748937608682899*^9}, {3.748937665178151*^9, 3.748937688168676*^9}, 
   3.748969734855296*^9, 3.7489697856368*^9, {3.750658527075471*^9, 
   3.750658533734511*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"b438da06-2c58-4df8-acea-\
37ef3435337f"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:0433\:0440\:0430\:0444\:0438\:043a\:0430 \:0445\:0430\
\:0440\:0430\:043a\:0442\:0435\:0440\:0438\:0441\:0442\:0438\:043a\:0438 \
\:0442\:0440\:0435\:0449\:0438\:043d\:044b", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.750666372371853*^9, 3.750666386564352*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"f292807d-09b1-495c-8b9c-\
9b6b00df497f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotCharacteristic", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"index", ",", "valueName"}], "}"}], ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"fracture", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"fracture", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "index", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{"Length", "[", "fracture", "]"}], ",", "1"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\:0412\:0440\:0435\:043c\:044f, \:043c\:0438\:043d\>\"", ",", 
          "valueName"}], "}"}]}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7506665343051243`*^9, 3.750666577544717*^9}, {
  3.750666634387631*^9, 3.75066664314911*^9}, {3.7579216351176195`*^9, 
  3.757921637429574*^9}},ExpressionUUID->"72bf3732-c3a2-4f97-80cb-\
c1e43b95ecdf"],

Cell["\<\
\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\:0438\
\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\
\:0438\:044f \:043a\:043e\:043d\:0442\:0443\:0440\:0430 \:0444\:0440\:043e\
\:043d\:0442\:0430 \:0442\:0440\:0435\:0449\:0438\:043d\:044b \:043f\:043e \
\:0433\:0440\:0430\:043d\:0438\:0447\:043d\:044b\:043c \:044d\:043b\:0435\
\:043c\:0435\:043d\:0442\:0430\:043c\
\>", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.751040043497757*^9, 3.7510400775702553`*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"b0004f69-f221-4be9-a8c1-\
e15c829973e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotCircles", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "distances", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"step", "=", "16"}], ";", "\[IndentingNewLine]", 
      RowBox[{"margin", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"color", "=", "Orange"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"color", ",", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Circle", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"i", "*", "step"}], ",", " ", 
                RowBox[{
                 RowBox[{"-", "j"}], "*", "step"}]}], "}"}], ",", 
              RowBox[{"4", "*", 
               RowBox[{
                RowBox[{"distances", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
             "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "margin", ",", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"distances", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "margin", " ", 
               "+", " ", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "margin", ",", 
              RowBox[{
               RowBox[{"Length", "[", "distances", "]"}], "-", "margin", " ", 
               "+", " ", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7510400351290483`*^9, {3.751040082955327*^9, 3.751040201282288*^9}, {
   3.751040352870755*^9, 3.751040354389183*^9}, {3.7510404023651247`*^9, 
   3.751040408893008*^9}, 3.7510404920256357`*^9, {3.7576533191945534`*^9, 
   3.757653335925003*^9}, {3.757653431925517*^9, 3.757653449333905*^9}, {
   3.7576715103027487`*^9, 3.7576715560901613`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"88e4f2ea-e727-4648-a92f-\
4e85f1dbd17f"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:043a\:0430\:0440\:0442\:044b \:0441\:043b\:043e\:0451\
\:0432", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.751040040004345*^9, 3.751040041480859*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"394e299f-9abe-4d8b-a9b5-\
36a2d37636ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotLayersMap", "=", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"stressLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plainModulusLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"carterLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"minY", "=", "100000"}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxY", "=", 
       RowBox[{"-", "100000"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"layers", "=", 
       RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"i", "=", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "<", " ", 
         RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"y1", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y2", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y2\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"plainModulus", "=", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"layers", "[", 
              RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
             "\"\<Young's modulus\>\"", "]"}], "*", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "9"}]], "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Power", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"layers", "[", 
                   RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                  "\"\<Poisson's ratio\>\"", "]"}], ",", "2"}], "]"}]}], 
              ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<stress\>\"", "]"}], "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "y1"}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<stress\>\"", "]"}], "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "y2"}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plainModulusLine", ",", 
           RowBox[{"{", 
            RowBox[{"plainModulus", ",", "y1"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plainModulusLine", ",", 
           RowBox[{"{", 
            RowBox[{"plainModulus", ",", "y2"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"carterLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<Carter's coefficient\>\"", "]"}], "*", 
               SuperscriptBox["10", "6"]}], "]"}], ",", "y1"}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"carterLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<Carter's coefficient\>\"", "]"}], "*", 
               SuperscriptBox["10", "6"]}], "]"}], ",", "y2"}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"minY", "=", 
          RowBox[{"Min", "[", 
           RowBox[{"{", 
            RowBox[{"y1", ",", "y2", ",", "minY"}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"maxY", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"{", 
            RowBox[{"y1", ",", "y2", ",", "maxY"}], "}"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"minY", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.5"}], "*", "cellLength", "*", "size"}], ",", 
          "minY"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxY", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "minY"}], ",", "maxY"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plotStyles", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dotted"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Green", ",", "Dashed"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Purple", ",", "Dotted"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plotLegend", "=", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\:041d\:0430\:043f\:0440\:044f\:0436\:0435\:043d\:0438\:044f\
\>\"", ",", 
             "\"\<\:041f\:043b\:043e\:0441\:043a\:0438\:0439 \:043c\:043e\
\:0434\:0443\:043b\:044c \:042e\:043d\:0433\:0430\>\"", ",", 
             "\"\<\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\
\:0442 \:041a\:0430\:0440\:0442\:0435\:0440\:0430\>\""}], "}"}], ",", 
           RowBox[{
           "LegendLabel", "\[Rule]", 
            "\"\<\:041a\:0430\:0440\:0442\:0430 \
\:0441\:043b\:043e\:0451\:0432\>\""}], ",", " ", 
           RowBox[{"LegendFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Framed", "[", 
               RowBox[{"#", ",", 
                RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], "&"}], 
             ")"}]}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}], ",", "Right"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"commonPlotParameters", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Tiny", ",", "Medium"}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         RowBox[{"AxesStyle", "\[Rule]", "Transparent"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"minY", ",", "maxY"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"False", ",", "True", ",", "False", ",", "False"}], 
           "}"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"stressLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", "None", "}"}], ",", 
           RowBox[{"{", "None", "}"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "plotStyles"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "plotLegend"}], ",", 
         "commonPlotParameters"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plainModulusLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"plainModulusLine", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"plotStyles", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "commonPlotParameters"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"carterLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"carterLine", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"plotStyles", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", "commonPlotParameters"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Overlay", "[", 
       RowBox[{"{", 
        RowBox[{
        "stressLinePlot", ",", "plainModulusLinePlot", ",", 
         "carterLinePlot"}], "}"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.750355499782115*^9, 3.750355793596572*^9}, {
   3.7503558631512537`*^9, 3.75035595668403*^9}, {3.750356028597644*^9, 
   3.7503561318033533`*^9}, {3.750356194818742*^9, 3.750356208887875*^9}, {
   3.7503563618567467`*^9, 3.750356363361658*^9}, {3.750356423863585*^9, 
   3.750356473236062*^9}, {3.750356504013914*^9, 3.750356817174099*^9}, {
   3.7503568624727697`*^9, 3.7503569686281157`*^9}, {3.750357008792891*^9, 
   3.750357226835019*^9}, {3.750357435011059*^9, 3.7503574352471*^9}, {
   3.750357508025413*^9, 3.7503575160456057`*^9}, {3.750357547885824*^9, 
   3.750357583085084*^9}, {3.750357887241557*^9, 3.750357889461896*^9}, {
   3.7503579481465197`*^9, 3.750357984969563*^9}, {3.7503580226450663`*^9, 
   3.750358024481966*^9}, 3.750361185626094*^9, {3.750658720102997*^9, 
   3.750658726408321*^9}, {3.7506587623250723`*^9, 3.750658810269313*^9}, {
   3.750658848101965*^9, 3.750658944354722*^9}, {3.750658984747673*^9, 
   3.750659069691119*^9}, {3.7506592334858294`*^9, 3.750659554818267*^9}, 
   3.7506595987503633`*^9, {3.750660239574378*^9, 3.750660403592054*^9}, 
   3.750660460234714*^9, {3.750660513265897*^9, 3.7506606132287827`*^9}, {
   3.757146186440631*^9, 3.7571462480997224`*^9}, {3.7571463308534384`*^9, 
   3.757146374077917*^9}, {3.7571464264808116`*^9, 3.757146456638303*^9}, {
   3.7571467048801203`*^9, 3.7571467219542065`*^9}, {3.7579216351176195`*^9, 
   3.7579216374451947`*^9}},ExpressionUUID->"de53eaa8-5f9f-4f21-90ff-\
43a6ff9125cd"],

Cell["\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0443\
\:0434\:0432\:043e\:0435\:043d\:043d\:043e\:0433\:043e \:0433\:0440\:0430\
\:0444\:0438\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.7579216318215137`*^9, 
   3.757921647114832*^9}},ExpressionUUID->"1a670f20-a3b6-450a-ad8b-\
342673b49f03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotDoubleMatrix", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "matrixName"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"doubleTicks", "=", 
       RowBox[{"createTicks", "[", 
        RowBox[{
         RowBox[{"0.5", "*", "cellLength"}], ",", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"middle", "-", "1"}], ")"}]}], "+", "1"}], ",", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"size", "-", "1"}], ")"}]}], "+", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"doubleLines", "=", 
       RowBox[{"createLines", "[", "doubleTicks", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"GlueMatrix", "[", "matrix", "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "matrixName"}], ",", " ", 
         RowBox[{"FrameTicks", "\[Rule]", "doubleTicks"}], ",", 
         RowBox[{"GridLines", "\[Rule]", "doubleLines"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", "myRainbow"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7579216318215137`*^9, 
  3.7579216374451947`*^9}},ExpressionUUID->"22d0e063-4a2f-4302-8b76-\
c318fb3d02c1"],

Cell["\:0417\:0430\:0433\:0440\:0443\:0436\:0430\:0435\:043c \:0434\:0430\
\:043d\:043d\:044b\:0435 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\
\:043e\:0435\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 
   3.7489697856369534`*^9},ExpressionUUID->"573585d3-2ab7-4012-9bde-\
ee091976122e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"concentration", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<concentration_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fracture", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<fracture_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opening", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<opening_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressure", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<pressure_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748933665070517*^9, 3.748933667635915*^9}, {
   3.748967897373295*^9, 3.748967952408773*^9}, 3.748968045615181*^9, 
   3.748969785637787*^9, {3.748969873450966*^9, 3.7489698881760197`*^9}, {
   3.748970008078432*^9, 3.748970029339315*^9}, {3.749002589036405*^9, 
   3.749002591800912*^9}, {3.749197428231081*^9, 3.74919743718463*^9}, {
   3.750355267359632*^9, 3.7503553082320023`*^9}, {3.750361141233561*^9, 
   3.75036114372082*^9}, {3.75036139017474*^9, 
   3.7503613910997057`*^9}},ExpressionUUID->"dbe4cd76-4469-4ba0-8820-\
019c7d484c1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"openingFilenames", "=", 
    RowBox[{"FileNames", "[", 
     RowBox[{"\"\<*_m.txt\>\"", ",", 
      RowBox[{"folder", "<>", "\"\<Opening/\>\""}]}], "]"}]}], ";"}], 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"1", " ", "<", 
       RowBox[{"Length", "[", "openingFilenames", "]"}]}], ",", 
      RowBox[{"openingFilenames", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{"openingFilenames", ",", 
         RowBox[{"ToExpression", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringSplit", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<=\>\"", ",", "\"\<_\>\""}], "}"}]}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "]"}]}], "]"}]}]}], "]"}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"openingAtCheckStep", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"openingFilenames", "[", 
        RowBox[{"[", "t", "]"}], "]"}], ",", " ", "\"\<Table\>\""}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numberOfCheckSteps", "=", 
   RowBox[{"Length", "[", "openingFilenames", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7503554730398903`*^9, {3.750657168634218*^9, 3.7506572226324253`*^9}, {
   3.750657269550213*^9, 3.75065727758918*^9}, {3.750657360637339*^9, 
   3.750657373821903*^9}, {3.7506574159365473`*^9, 3.750657416799019*^9}, {
   3.752485685149294*^9, 3.752485723856041*^9}, {3.753164422442254*^9, 
   3.75316447320899*^9}},ExpressionUUID->"a97292b3-e790-4763-b444-\
aa3c9e960ac0"],

Cell["\:0412\:044b\:0432\:043e\:0434\:0438\:043c \:0432\:0440\:0435\:043c\
\:044f \:043f\:043e\:0441\:043b\:0435\:0434\:043d\:0435\:0433\:043e \:0437\
\:0430\:043f\:0443\:0441\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}},ExpressionUUID->"5f65bd77-40eb-4e12-b562-\
42a327fbbec3"],

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
    "\"\<\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\:0434\
\:043d\:0435\:0433\:043e \:0437\:0430\:043f\:0443\:0441\:043a\:0430:\>\"", 
     " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"DateString", "[", "]"}], ",", "Orange"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.749195512564392*^9, 3.749195545569838*^9}, {
  3.749195598370927*^9, 3.749195681354604*^9}, {3.749197676357965*^9, 
  3.749197687499799*^9}, {3.7491981127205763`*^9, 
  3.749198119614801*^9}},ExpressionUUID->"38a1c404-a80a-4f37-b880-\
ecc92f0fda32"],

Cell[BoxData[
 StyleBox[
  RowBox[{"\<\"\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\
\:0434\:043d\:0435\:0433\:043e \
\:0437\:0430\:043f\:0443\:0441\:043a\:0430:\"\>", " ", 
   StyleBox["\<\"Tue 5 Mar 2019 17:24:56\"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0.5, 0],
    FrontFaceColor->RGBColor[1, 0.5, 0],
    BackFaceColor->RGBColor[1, 0.5, 0],
    GraphicsColor->RGBColor[1, 0.5, 0],
    FontColor->RGBColor[1, 0.5, 0]]}],
  StripOnInput->False,
  FontSize->24]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.749195659419508*^9, 3.749195673211211*^9}, 
   3.749195717683158*^9, 3.7491976880563498`*^9, {3.74919811272084*^9, 
   3.749198124508636*^9}, 3.749198547581563*^9, 3.74974577318449*^9, 
   3.7497458945699177`*^9, 3.749746363493379*^9, 3.749746523405265*^9, 
   3.749746676390993*^9, 3.749746717948832*^9, {3.749746796696604*^9, 
   3.749746814039156*^9}, 3.749746914039852*^9, 3.750355233686296*^9, 
   3.7503554477398863`*^9, {3.750360556216104*^9, 3.7503605666632433`*^9}, 
   3.7503607801969137`*^9, 3.7503611476314583`*^9, 3.750361263438398*^9, 
   3.7503613949006863`*^9, 3.7503614744322433`*^9, 3.750655374338236*^9, 
   3.7506554082503853`*^9, {3.750655458531261*^9, 3.750655464638625*^9}, 
   3.7506557512823467`*^9, 3.750655795952038*^9, 3.7506560265283737`*^9, 
   3.750656136604802*^9, 3.7506564375125713`*^9, {3.750656915409037*^9, 
   3.750656934849925*^9}, 3.750658504368836*^9, 3.750658566935512*^9, 
   3.750659695607489*^9, 3.750660462939427*^9, 3.750660582327619*^9, 
   3.750660616680229*^9, 3.7506663258812857`*^9, 3.750666757135747*^9, {
   3.751040182747201*^9, 3.751040192950671*^9}, 3.751040360329432*^9, 
   3.751040412204547*^9, 3.7515227620073433`*^9, 3.7515261687620907`*^9, 
   3.751615377030303*^9, {3.751615463201515*^9, 3.751615477707189*^9}, 
   3.751615682300685*^9, 3.751615917177168*^9, 3.751615995074151*^9, 
   3.751616095693368*^9, 3.7516183414337597`*^9, 3.7524855465523653`*^9, {
   3.7524855804109573`*^9, 3.7524856094127126`*^9}, 3.7524856461426153`*^9, 
   3.7524857590646477`*^9, 3.753164440016218*^9, 3.7538625516409483`*^9, 
   3.7538626010512495`*^9, 3.7538627623884706`*^9, 3.754638725719348*^9, 
   3.754638979218073*^9, 3.7546391083282213`*^9, 3.7546392253821335`*^9, 
   3.7546393299616723`*^9, 3.754639792915779*^9, 3.754640136856781*^9, 
   3.754642428063615*^9, 3.754646200280037*^9, 3.754649657661769*^9, 
   3.7546504264040556`*^9, 3.7546505727445335`*^9, 3.7546519768998513`*^9, 
   3.75465208037519*^9, 3.7546523291861*^9, 3.7546525047837963`*^9, 
   3.7546531259332304`*^9, 3.75465323619244*^9, 3.7561110952789073`*^9, 
   3.756183767554145*^9, 3.7561838191099224`*^9, 3.756188248790681*^9, 
   3.7561882858664894`*^9, 3.7561959488481665`*^9, 3.757146255714679*^9, 
   3.7571465394105883`*^9, {3.757146679426608*^9, 3.7571467254847383`*^9}, {
   3.7571468087151065`*^9, 3.757146839098605*^9}, {3.7571468791351013`*^9, 
   3.7571468881290636`*^9}, 3.757147012508487*^9, 3.757147053309069*^9, 
   3.75714709071288*^9, 3.757147139474738*^9, 3.757147282024349*^9, 
   3.757147439329136*^9, 3.757148048138564*^9, 3.757148390117943*^9, 
   3.757149543401328*^9, 3.7573124901220355`*^9, 3.757312806925419*^9, 
   3.757313095773717*^9, 3.7573132106623006`*^9, 3.75731326216355*^9, 
   3.757313384022509*^9, 3.757313518103788*^9, 3.7573136926188917`*^9, 
   3.7573137480517673`*^9, 3.7573138330349555`*^9, 3.757314482294738*^9, 
   3.7573145228180227`*^9, 3.7573145899272633`*^9, 3.757314712860545*^9, 
   3.7573147663542857`*^9, 3.757315101863775*^9, 3.757315707041792*^9, 
   3.757315973157895*^9, 3.7573165752591634`*^9, 3.757323338833152*^9, 
   3.757323657121977*^9, 3.757327845501257*^9, 3.757328738569846*^9, 
   3.7573298575505896`*^9, 3.757393788709646*^9, 3.7573950029163485`*^9, 
   3.7574076969767027`*^9, 3.7574089268359537`*^9, 3.7574114422623997`*^9, 
   3.757415015625086*^9, 3.7576527927824078`*^9, 3.757652850347029*^9, 
   3.757660420367476*^9, 3.7576630996657834`*^9, 3.757663546775882*^9, 
   3.757671560698409*^9, 3.7576720854083395`*^9, 3.7576727139398627`*^9, 
   3.7576728118433695`*^9, 3.757672846095731*^9, {3.7576728960884647`*^9, 
   3.7576729061173906`*^9}, 3.7576729476683617`*^9, 3.7579120251677094`*^9, 
   3.7579210121227283`*^9, 3.7579212537288756`*^9, 3.757921429520739*^9, 
   3.7579215247170496`*^9, 3.757925447983324*^9, 3.75792739758609*^9, 
   3.7579276460377007`*^9, 3.7584308130387497`*^9, 3.758431088071436*^9, 
   3.7584314333747234`*^9, 3.758431869639453*^9, 3.758431981983164*^9, 
   3.758432020462161*^9, 3.758432081701499*^9, 3.7584323369175463`*^9, 
   3.7584326706889896`*^9, 3.75843284677746*^9, 3.758433888144831*^9, 
   3.7584347756995645`*^9, 3.7584389799787865`*^9, {3.7584414130548944`*^9, 
   3.7584414342552605`*^9}, 3.758441881257159*^9, 3.7590590926429453`*^9, 
   3.7592211796408396`*^9, 3.759221267962756*^9, 3.7592219257789297`*^9, 
   3.759222067464307*^9, 3.7592242962870893`*^9, 3.759224783216329*^9, 
   3.7607801356086664`*^9, 3.7607819373382883`*^9, 
   3.76078469609286*^9},ExpressionUUID->"49e89a3f-160a-45be-bb95-\
73296d576db0"],

Cell["\:0421\:0442\:0440\:043e\:0438\:043c \:0433\:0440\:0430\:0444\:0438\
\:043a\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660984637878*^9}, 3.7476611498754272`*^9, 
   3.747664166427878*^9, 3.7489697348559017`*^9, {3.749746711959444*^9, 
   3.749746715762725*^9}},ExpressionUUID->"c9835767-2b4a-4bf0-9d05-\
9ee1c3d7ac31"],

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
    "\"\<\:0414\:043b\:0438\:043d\:0430, \
\:0432\:044b\:0441\:043e\:0442\:0430, \:0440\:0430\:0441\:043a\:0440\:044b\
\:0442\:0438\:0435 \:0432 \:0438\:0441\:0442\:043e\:0447\:043d\:0438\:043a\
\:0435 {\:043c,\:043c,\:043c\:043c}:\\n\\t\\t\>\"", " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "Orange"}], "]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotMatrix", "[", 
  RowBox[{
  "opening", ",", " ", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotCharacteristic", "[", 
  RowBox[{
  "3", ",", 
   "\"\<\:041f\:0440\:0438\:0437\:0430\:0431\:043e\:0439\:043d\:043e\:0435 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:0435, \:041c\:041f\:0430\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"0", "<", 
    RowBox[{"Max", "[", "concentration", "]"}]}], ",", 
   RowBox[{"PlotMatrix", "[", 
    RowBox[{
    "concentration", ",", " ", 
     "\"\<\:041a\:043e\:043d\:0446\:0435\:043d\:0442\:0440\:0430\:0446\:0438\
\:044f \:043f\:0440\:043e\:043f\:043f\:0430\:043d\:0442\:0430\>\""}], "]"}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotLayersMap", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"opening", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"middle", "-", "i"}], ")"}], "*", "cellLength"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "opening", "]"}], ",", "1"}], "}"}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", "All"}], "}"}]}], 
      ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">=", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              RowBox[{"opening", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"middle", "-", "i"}], ")"}], "*", "cellLength"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "opening", "]"}], ",", "1"}], "}"}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"FileExistsQ", "[", 
    RowBox[{"folder", "<>", "\"\<times_v.txt\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<\:0417\:0430\:043c\:0435\:0440\:044b \
\:0432\:0440\:0435\:043c\:0435\:043d\:0438\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"measuredTimes", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"folder", "<>", "\"\<times_v.txt\>\""}], ",", " ", 
        "\"\<Table\>\""}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"totalTime", "=", 
     RowBox[{"measuredTimes", "[", 
      RowBox[{"[", 
       RowBox[{"Length", "[", "measuredTimes", "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{"Length", "[", "measuredTimes", "]"}]}], ",", 
      RowBox[{"++", "i"}], ",", 
      RowBox[{
       RowBox[{"measuredTimes", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "/=", 
       RowBox[{"0.01", "*", "totalTime"}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Grid", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
            "\"\<\:0420\:0430\:0441\:0447\:0451\:0442 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:044f\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<\:041f\:0440\:0438\:0440\:043e\:0441\:0442 \:0440\:0430\
\:0441\:043a\:0440\:044b\:0442\:0438\:044f\\n(\:0438 \:043a\:043e\:043d\:0446\
\:0435\:043d\:0442\:0440\:0430\:0446\:0438\:0438)\>\"", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\:041f\:0435\:0440\:0435\:0441\:0447\:0451\:0442 \:0440\
\:0430\:0441\:0441\:0442\:043e\:044f\:043d\:0438\:0439\\n\:0434\:043e \:0444\
\:0440\:043e\:043d\:0442\:0430\>\"", ",", 
               RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             "\"\<\:0418\:043d\:0442\:0435\:0433\:0440\:0438\:0440\:043e\:0432\
\:0430\:043d\:0438\:0435\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:041f\:0435\:0440\:0435\:0441\:0442\:0440\:043e\:0435\:043d\
\:0438\:0435 \:0441\:043f\:0438\:0441\:043a\:043e\:0432\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<\:0421\:043e\:0445\:0440\:0430\:043d\:0435\:043d\:0438\:0435\
 \:0448\:0430\:0433\:0430\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:0418\:0437\:043c\:0435\:043d\:0435\:043d\:0438\:0435 \
\:0437\:0430\:043a\:0430\:0447\:043a\:0438\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:041c\:0430\:0441\:0448\:0442\:0430\:0431\:0438\:0440\:043e\
\:0432\:0430\:043d\:0438\:0435\>\""}], "\[IndentingNewLine]", "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"measuredTimes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{
                RowBox[{"Length", "[", "measuredTimes", "]"}], "-", "1"}], 
               ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
         "\[IndentingNewLine]", "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "All"}], ",", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"totalTime", "/", "1000000"}], 
       "\"\<\:0441\:0435\:043a\:0443\:043d\:0434 \:0432\:0441\:0435\:0433\
\:043e\>\""}], ",", "Bottom"}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.749746711959631*^9, {3.7503604496962852`*^9, 3.7503605102226467`*^9}, {
   3.750658187684452*^9, 3.7506581966759377`*^9}, 3.750658599559669*^9, {
   3.750660410623929*^9, 3.7506604108938932`*^9}, {3.750666592966673*^9, 
   3.750666609429427*^9}, {3.750666647089669*^9, 3.750666650063033*^9}, {
   3.7510398594727287`*^9, 3.751039878653421*^9}, {3.757313894301865*^9, 
   3.7573142039637947`*^9}, {3.7579135982458677`*^9, 3.757913608602586*^9}, {
   3.7579142495638924`*^9, 3.7579143338119197`*^9}, 3.75791440434883*^9, {
   3.757914587589645*^9, 3.7579145929167037`*^9}, {3.7579146284265175`*^9, 
   3.7579146349248953`*^9}, {3.7579213280693846`*^9, 
   3.7579213309280586`*^9}, {3.75922430234816*^9, 
   3.7592243128300653`*^9}},ExpressionUUID->"d92d7a12-ebcc-4f18-83e0-\
f681f54b8eec"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"\<\"\:0414\:043b\:0438\:043d\:0430, \:0432\:044b\:0441\:043e\:0442\
\:0430, \:0440\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435 \:0432 \:0438\
\:0441\:0442\:043e\:0447\:043d\:0438\:043a\:0435 \
{\:043c,\:043c,\:043c\:043c}:\\n\\t\\t\"\>", " ", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"140.316`", ",", "27.5562`", ",", "3.45406`"}], "}"}],
    StripOnInput->False,
    LineColor->RGBColor[1, 0.5, 0],
    FrontFaceColor->RGBColor[1, 0.5, 0],
    BackFaceColor->RGBColor[1, 0.5, 0],
    GraphicsColor->RGBColor[1, 0.5, 0],
    FontColor->RGBColor[1, 0.5, 0]]}],
  StripOnInput->False,
  FontSize->24]], "Print",
 CellChangeTimes->{{3.7573140571074085`*^9, 3.7573142043853965`*^9}, 
   3.757314482310359*^9, 3.7573145228180227`*^9, 3.7573145899585056`*^9, 
   3.757314712876047*^9, 3.7573147663857603`*^9, 3.7573151018793845`*^9, 
   3.757315707057434*^9, 3.757315973173514*^9, 3.757316575290423*^9, 
   3.757323338833152*^9, 3.757323657121977*^9, 3.757327845516865*^9, 
   3.7573287385855427`*^9, 3.7573298575609694`*^9, 3.7573937887252316`*^9, 
   3.757395002931969*^9, 3.7574076969767027`*^9, 3.757408926842561*^9, 
   3.757411442278022*^9, 3.757415015640706*^9, 3.757652792813685*^9, 
   3.7576528503626814`*^9, 3.7576604203831*^9, 3.7576630996657834`*^9, 
   3.757663546807126*^9, 3.757671560698409*^9, 3.7576720854241066`*^9, 
   3.7576727139554834`*^9, 3.757672811858959*^9, 3.7576728461113534`*^9, {
   3.757672896104086*^9, 3.7576729061486063`*^9}, 3.757672947699605*^9, 
   3.757912025198925*^9, 3.757913618506505*^9, 3.7579146467513285`*^9, 
   3.75792101213837*^9, 3.7579212537429314`*^9, 3.7579214295362797`*^9, 
   3.757921524732671*^9, 3.7579254479989767`*^9, 3.7579273976017113`*^9, 
   3.757927646053316*^9, 3.758430813069991*^9, 3.758431088071436*^9, 
   3.7584314333903723`*^9, 3.758431869655073*^9, 3.758431981983164*^9, 
   3.7584320204777665`*^9, 3.7584320817171535`*^9, 3.758432336933195*^9, 
   3.758432670704612*^9, 3.758432846793081*^9, 3.7584338881604366`*^9, 
   3.7584347757307854`*^9, 3.758438979994408*^9, {3.758441413070539*^9, 
   3.758441434286497*^9}, 3.7584418812727795`*^9, 3.7590590926740355`*^9, 
   3.759221179656455*^9, 3.759221267978345*^9, 3.7592219257789297`*^9, 
   3.75922206747991*^9, 3.7592242963027105`*^9, 3.7592247832319508`*^9, 
   3.76078013566068*^9, 3.7607819373562927`*^9, 
   3.760784696106863*^9},ExpressionUUID->"571b18dd-b70d-4874-a6bd-\
c95d6d245811"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1:eJzs3Qk01W3bN35FKhGlJE2kQSopUWk4lQaJUqK5dBVKkyZJEw1ClNKAypCS
lDKFBkWGpInImOywt20PtlIqSe9+/vfT79e6zn2s+1rr/f/f5/k/79Fa1/rc
67itzf79zvM4vue2ofPXtkWO8nJycgHS/05K//uP//2vf00ERVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURdH/+SqdL5xo/0NCKdfspb6h
njagr7yedgmtWVuewqxsWnPPbdXeibQ2gpOzLl+T4ZLH51JDaIOCzMuTvWm9
Nfu6ZHj9c6HHgT4v9HVCzwu6DtB1g64zeF/+m6wbFEVRFEXR/ynqrn2tO8pf
QmmjP+jEzB+NlIF2OgM3raONevB+9MUXYkqt/t0VY+xold4UGLrWiyin7rYa
xvOlFZjt7dnBiJbTIyQ+QSikDC38Gvsgh9ZyrvW+vBBaz9Qdo2/tpLUJnHj9
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
obOxsmtTDOGtvrz7orTf/9ZBi3zfXB5JNPqs2rhmn4Qx4+aJaf3fB5PYwVnC
OWkSRk+5ovOduX5ki9E0o5GfJYxyVYmDjR6vZfof54m1j1nO77ny+18TSYvb
1NPmMF2/1H3m7akmdJ2/c0DgDTm6bugrOFX7sJGqa3uIbpzfTdc3JCx+f2so
XU/7lpqe2iamH2fI+m++lXR9V06Bxqk4uu4eeK/DkzN03Uy7dNnR7TI+frZg
z8o1dN0w+ejVGYv+eR16HPDzAl8n9Lyg6wBdN+g6Q/cFuo/QfYfWCbSu/r4O
oXULrXNoX0D7CNx3wD6F9jXUB6C+AfUZqC9BfQzqe1CfhPoq1Iehvg31eWgu
QHMEmjvQnILmGjQHobkJzVloLkNzHJr7UE6AcgWUQ6DcAuUcKBdBOQrKXVBO
g3IdlAOh3AjlTCiXQjkWyr1QToZyNZTDodwO5XzoXACdI6Bzx+9++N/d6IbP
sd9tBZR+3wcU9B/OpyxK6Hho/TUepdxUI0clHS5lkUv27X596yhVXM00ps+u
ZRQvCV8dplFL5AYX6p+dWsdqnfs4MuoD8W085DDTiMs4VstsW18jDrkfdr3a
U8BlLNLtuvaA2Xsy28xqeEgkj3EU6ec3vt87siok3vzsinpGgVHjeHNxOUlR
PFXdUZnP+E64aO3XylKSbtMz5Kh0Pf72mcqz8TsevSXWZjtudlnVwNiX3PjJ
5ReRjHI7TT05AeuO9pTjvwqJZ7ihUZa/gFVnq1PKsgJiEntJOE9dyHi/42KP
if4vSeiYGP0+V4WMTjXd5XYPzye2nvq2/joiRuV2OZUUk6ek4MOKUxPvixi1
75ZF3bqSRWKNumg4jxQzKua/2nfuRwaZmvK1dP1FMaPe7nWcWakPyX2LFZ9U
+zQy2lxIizITppCUPd4jn51uZHRdl/jltH4C8Z7r7yvpKGF06FeudeLedaK1
as7DFjcJo9mJsMSHCSFk9tIhobViCaPc+X3PgvU3Mevx3fP664k+dK7QnNH+
9k4LnVuOLtMLeWcmI+fox929lUPnpV6XZjnfGiYjp6m6nDwaJ6LqPq/69ztt
TNeXtlpEHpPO2b/X+bbt/XXn0vVdL+U6Wr4WUPVv/G0W+zfR9aVqQ4bkvW+g
6m29gtLV3GXUuydmpPzkU/XNVk9UtPzo+q65RWWnVej6+ryuWzm36ulcZ29r
nG9N12+9Pbf1CZdHf15vYbrSKbpus3dAZ1V9uu6w0KREoZBL1eMf6e5x3EvX
bw0uKRyiS9dj0heZHimqo+pdPP1tTI/RdT29ja5dBtL1wGfjBRNqaumcf/Du
VBsfur5ywoRS3ky6zjcL8DhYW0PV9+dP6JUbR9cDLxuIgnfR9YJdd1Ocp9J1
hW/9r46Xp+tl1pK0FZUfqPq7Pf67vSLpus8E0fwMP7rusCTWd8cGur5SN/f9
fBu6HlHecZ9oxj+vQ48DfV7o64SeF3QdoOsGXWfovkD3Ebrv0DqB1hW0DqF1
C61zaF9A+wjad9A+hfY11AegvgH1GagvQX0M6ntQn4T6KtSHob4N9XloLkBz
BJo70JyC5ho0B6G5Cc3Zv89laI5Dcx/KCVCugHIIlFugnAPlIihHQbkLymlQ
roNyIJQboZwJ5VIox0K5F8rJUK6GcjiU26GcD54LgHMEdO6Azim/1+f/aZ3s
wiLt3gooi+q6u/9cXU9p1m/UmoDaOsomk40e441rGYNH/2Ux1rCWOFSGdQh6
U8fYlHL6gG42h1hOisle25vHqLu4c2LF4yqi7qt6Wm9oPWPu+kIr78AK4lfk
ldQyhc+47pgHt9/cUlL0cVTLsRENjN76ewdsPVJMRj++tFuuj4Bx75MR4e33
C0lox91tOmUCRqem6b3HS16RYcueZS66IGTUapizW3VXPunv2qd2+UwR46I1
O+PeO+YSLe7H1OJOYkanyMXx8lWZhLfsQ6hitJhx/LNt6fETHhLx7FU7e5s3
MvJvRVxor0gmTt/Su08tb2R0SDEMm33lJuHoF5oobpcwyrU8TXv7KpS5bzFd
gj62f6LPF++uX6m+MoyuNw1erXLBme6HZbpL33jflXGOePox8mAnuh5s8vX6
ke1039b+q0+X3a/p/i+a5PueN42uF8zXTs2JpeeL5ocP3IWadH293VW36/70
/HL41S8n9BM9B5t6Dm+wXkDX+cU5sfpP6Pk7sbg1s2UWXRedjDYxfEDP96be
wrSBU2TM/dl561Xu0bnCc/zYRy5T6HrBLU2vyQl0nilb5Dvp7li6zjkacDMq
jc5Ru+4Mv9lnLF3vlblX4eo1Or/VuT+prjGWkRt31CdXpdI5U5vI+a+YTNeL
14xa9b6aQ9WvPhmvN8CNrhenmX0MH8DWvXdrZsQ8k5CCoVM5Q92r2bncXbP+
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
eR48s5H47L3y48DNP37PQFt6fstrMZnYUtHKP87Ol52DZ/9qXS8m2vZjDu7c
z75PY13d3W7PPonIt/uzL7esZueUp/y85hF+IpLhM5mzYdkf7/8PiK1R0ZDO
QYfYlMET/vj595jrTkpRQhI4NEoutA87N4cd7K18d6qQODwwDpupxc5ZxfGJ
qleqBETt8NThvfXZuWw7pfeKbR4CUqBxd53GOHaOh1775tK9l3T9hW3pNmQc
O/cPPDAW+cQ2kLTF3vPt9dmcMKBu7Yabk6R5Y1dD12Xa7Ou9foud+79/zyfx
0Qon7ZezPz9ic+2iga0vnwSaKjWE32bzzMtemRen60nX64YcJYtnbP4xGmeX
r1wuXa8/bjSTqez7kfLfHh096FQ9aRoVXHvxOZuvckv3T6ydWk84Jq5arsbs
6+S5nQ7Mb/7II5z+230y7rH5zfZbxTmvUB6JKJ8tPq7Avg5/K+/OwHEzpXmv
pGrclxtsPtQ42jOk9BeXcPTutW5qZ/Nk066naz3SuMThdH7h0/H3mLroVZSj
lxuXmPV2+qYSyeZV09e5xQqm0rpm9gLDmWy+ba7MmVjYLs3PF+5PGPWZ/b5G
y/YL3Sc8qyNm9cW61ml32OdlHPRu0lHpxxt5Tj62OJapm5eHrDyzUPrx3xWm
bFsTzdQ3f7IIXtRf+vFNidydJlfYvPq8ZJvjF+l5ofjU3vIlYez69DjlbV3w
H+eFTYoD/IPZXBq0pW97jPTjuw/6nuR8hs1d4Rs7hRySfrygQ0Jh9XH2+e5I
7DzSUVpff/x1nekhph5kRlo3WUvrK32c969zZe/LoftL1kyV1m2mLVqxdRm7
Hv6ff3/vI3Adehzo80JfJ/S8oOsAXTfoOkP3BbqP0H2H1gm0rqB1CK1baJ1D
+wLaR9C+g/YptK+hPgD1DajPQH0J6mNQ34P6JNRXoT4M9W2oz0NzAZoj0NyB
5hQ016A5CM1NaM5Ccxma4//5/1Jz/3cdyglQroByCJRboJwD5iIgR0G5C8pp
UK6DciCUG6GcCeVSKMdCuffvORnK1VAOh3I7lPOhcwF0joDOHdA5BTrXQOeg
39fhn5q75EzLX7kCSv+B137WJ/Ioc7tW7PzuX0vp3Z7YLdKTy7hZof5d/4PV
5P7H7d0Eh+sZi/Rjq6bvKScay4515WxoYEz/vK12TU4R4Shbenf5JGDMSDSv
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
TUw4q9RvdB/A1uMVpwR2qxaRNLXz/Euj2XkdNE/91cajItI0xfBIl3nsfM+9
dlo3cJiIuA4ULd3gwOaBpMm7X/ZMl/bJ3tc63FnK5gf1k1531zkKiWFt1qy9
B9i8Ybiq+qRlPyH5tsHA0TSbzSdJSfs2XsgRELPpd4+3iv/4PeS5ZocTvQQk
oily1rSZbF2rqPJY4QgByTh17dWJDWwuylqmttqpsoFs4OgJD11lcxRvWNeB
SieluevJ6PPjctmfjwjIXrvtp6G0r5XwRzV/Zn+eIj3504mkFj6JP57+wKuQ
zXU7rbZwFBKkee/g4L80d7M58L79sqRNG/gkIuGRp5YS+zp582rn9hE60v5V
ofCt8Br7fqT4rmufDxXVE1dD7reHl9j82SKq1d2eLM2lETuTjL3/+H7cGj2L
PG9pvfLZhoZINt9696tPSLSvJxG+R/YeSGBf/x+2afrHvtrS+dBnTopXBJuT
Fe0mx29vk86hG3rbJzayudph4Iieh1/xCOfCy+V+Xdj68m4GH0vuSPP5RN7d
cdvYfG6qmpj++oT0caw8krs/YH+OJiWGODbt4ZHAedNaE5aw9f0K8uHbN/OI
q4Zqv4kD2bqZ+bAn9x15xDPi4Ll53x//2zr0ONDnhb5O6HlB1wG6btB1hu4L
dB+h+w6tE2hdQesQWrfQOof2BbSPoH0H7VNoX0N9AOobUJ+B+hLUx6C+B/VJ
qK9CfRjq21Cfh+YCNEegufOvf/Sc+l2H5ho0B6G5Cc5ZYC5Dcxya+1BOgHIF
lEOg3ALlHCgXQTkKyl1QToNyHZQDodwI5cy/51Iox0K5F8rJUK6GcjiU26Gc
D50LoHMEdO6AzinQueb3dfv/SvPH3SMfVQopow98UXjjwqcM/dJ+xSuRS1kw
cGFIcUgt5WjNo8avSuoY0yvv3clP55Dm6xN9zjjwGId1sXe2eP+OxLUOvmn9
qp6xVfVCu8a5MuIdlX/EyqiBcUvviF1aTsXkyFYVyax1Aka35NJxBiUFROO6
x+FX0nP+bz16a3/UW/GcpARHFnlsFTHe32SiNGhjDonSU9pkaC1mHKWcdaDK
MIOozNq7x2RQI+OGLBunHb4phNflmMtTbiOjg/5x+fm7Y8mRxSuvDI2WMDoM
jz/5sSyQud7f4ot/fQukz2Vl6Q19l1yh94vP9cUzytPp/SWKWHB2MJ/ej1b9
5t6UmNJ1tTHXvXVP0/s6sNOnt/xqug/krW/yXzCKrgfyNg26cI7uJ/EH6o7m
fKD7EueDXuS1oXR9SP8xK/3Oyfj9pRzvG6ad6frmD/Lfl+ym+yQ/yDdlpkDG
9+XzmjJH29P1S2OnpAZk0X07JmJZ7pkJdH39rFFBxpfpueDZ46HKWAW6rhaj
/uS+Nz1fgoM/CtNbZXzfLddxU/whuv6uYPK7rCZ6DqZtivDYfZiuK9c6KVnI
sfWIByNbvsdJiJrdlvqmcez8dVJ26LLtP36/z6Cms71XsfNavdk/ePLXRhK/
xuFnL5c/fv/h1E9dW883Eu2QKs3te9nXOVUWDuW5GUnzgOUqcsOTzQmruh4w
GyQQkw0XJurMf/bH37dN/+uKMFBMbCpaelsL/jj3+Shs9porJml23U5mTfjj
ff6va0putkpzTqcJIXE72JyzXCG2v1KCiHCUbswJuc/moqkVeTt3bBCRYB03
nYGd/vj7Vh1v93zQX5qvFJNuF81h85X1uVX3vHOkeezLxtcFW9g8ZjkzTefk
USFJi7VavO45m99y6wWPJlsLiav5vFW9p7N1py1br+9XFErXw9krEwLZHBjk
W5kwokRAmkqvTtnQh60bdSxzDj0vIJ6dLskfdmfzZNCdjhn91ko/PkXRIecT
m0u9tRZfeG0sIDYzFrV6e7P1qUrHn3ZXEJDgkMJPQ5TYusnAL9qHihuIz/P1
b6YGsbnXaKbv1KYkaU7WLw0pm87Wxb7OLkd9G6T5vFOv83fY/OxnlOT1dGsD
ie/g6cMdwdYdmpdVZK5oIJyMTPNn+ez3EWzXBjSmWUkfh/ck5tIhtg793ApU
hx4H+rzQ1wk9L+g6QNcNus7QfYHuI3jfgXUCrStoHULrFlrn0L6A9hG076B9
Cu1rqA9AfQPqM1BfgvoY1PegPvmvf3Rf/V2H+jDUt6E+D80FaI5AcweaU9Bc
g+YgNDehOQvNZWiOQ3MfyglQroByCJhbgJwD5SIoR0G5C8ppUK77ew6EciOU
M6FcCuVYKPdCORnK1VAOh3I7lPOhcwF0joDOHdA5BTrX/L7+/6dt+jjgavlt
MaX8B+sDqh8ElB68Nwo9FvIp5Y1n5OZv4FEO84ohYv86yoxJFwzi1tYyOowY
YLpfXENCjlz5VVFdx2rq7zkhXnouU8pa8KUrj3FYdYqadk0VOWJ58nG7aj2j
m7ZdpnxBBXFbb1T5tAef8dIbx60x+aUkfqDtJJ82PmNTlOJiZ6W3ZKeb8Frs
+wbG6EtTu8utf0MizEweSi4IGLWnrXpuOLFAum6C7x+dJmS0UtscUevzgmze
1PxjCV/IuGPfPM2mgDzS7Bf5+XaYiNHqkclM3pxsoq7R8L7NSMzov883t2de
BtFyPL9pbK6Y8cWM5s+3794nQe56Dw4ubGTUXKZlqmqQTLYMvmfaVNjIWJBz
9aDHwlsk4swTcdxKCaPc4aOb1oWHEY+WsxOq3kkY5YbOsdFY7sGsC//tW3qb
7KXPg2mD7ernFdF9w7+ocML43nR9853yNy2HZfycmvvnB+E1Mn5ObYPa630b
6HqvVQ03f1TT/TBG//Cb+evoesTqvNhJZXRfvXWzSHviarruueAQ/3iBjO/X
t9WIr86n6+s71aRNKaL7f69JZuUek+j6pdtjsgrzZbzvOtvt0bhVdL3L5i6b
lgjp+RVztnTD920yfu/QwO67nDrR9RdlYRZR5+n5aBgZtqhNj64vLuljPzWV
nr/BI1QknHl0nZ92JGDHO3q+x3M39eVtoOv8aXmWHUSy3v+Z17vzORl/T/nE
tGkeY+i62k07z5i3Mv6e8hvV+Cs7ZPy+lHjfWQ+60XXN7LZeVg/oXFTGO6zh
vlnGz02XzBpcNoKth0YrxxlzJcQzItxQMZ3NaVXBun0EiRKi1142aS5h66ZK
oz1Td0tIYIhrhmU0m/c4m8fZDZwnIYZq7cXPJ7P1rIVrnZp6S8gGq+ZfZSls
bow9HDbaV9JIYmYrfyqxZ+seDZ3Lzj+X5syn6v2/t7H5MyMq8JBBtHROhzRM
2xXO1pfzZ87v6tNIODNvmfdZzNZ54eFXU3Y3kgzVUxcthrF13aFJL9ZtaiRl
7x4f2qvM1lvnhhj1d2wkTRN/eea2Vf7bOvQ40OeFvk7oeUHXAbpu0HWG7gt0
H6H7Dq2Tf/2j19XvOrQOoXULrXNoX0D7CNp30D6F9jXYB4C+AfUZqC9BfQzq
e1CfhPoq1Iehvg31eWguQHMEmjvQnILmGjQHobkJzVloLkNzHJr7UE4Ac8Xf
cgiUW6CcA+UiKEdBuQvKaVCuA3MgkBuhnAnlUijHQrkXyslQroZyOJTboZwP
nQvAcwRw7oDOKb/Xyf9fNSqKVLEaLaJ0OFqfP1FPQDnKcPWHJcJ6ygiXv45M
mcWjVFpfPetHTB2lYkByeJpHLWVQY6hdgmIdo27ohV9fvnwgyy4dCvmhy2Xc
ey4jRNGSQ2YvmSknbOQyjmod92ua0XviuXvxap0EHmt4R+5FUSVZ/uH67ux1
9YzNK7qEJxaXk+XdT2h2H8BnbC5enfI2ppR4V/axIy/5jFu2pMnNCH5LMgQW
Xb3WN7CSoXX73xSR1pByYtxJwKg+bqeZQ1MhUY8z8c7xEjDmflux5Y5HAdF+
X698QEHIaPY8MLEH9yWJ6PB41fEAIaNZy7GXRbfzSdYPwTxtZRHj5r4HJ05L
fUqGnbxRoXZaxKh1U5ETGpJN9CssVOK6iRkVay3jP97LJEG7srT5e8SMmr4l
bgPXPiLiJtdj52vEjPzk5EcfHe6R8z69D59e2sjYFPyTN7o8icQN26EW/bCR
sWCN1e6tNrdJhUGJ9rpREsaIi0JhckkUiVPT8Zx9UcIYUf3i+9OaM8x67BIx
zpvfTp/7bGw6+dlvp+vZpj6PT0jovu3a33/cLEsZv1e/db2uz1sZv1dfPfZZ
6hwZv6e0asPYSW/p+ZJ382jNPXe6vnh1eMSbjjJeH9Or/HXoMj3XyuoHv+g2
RMbfO5sSn340g56bhkfcLe4upevf8q7EPBDJ+DnZUXPDhhyXMa8HLtYZoSnj
76aFl3nlJ8v4u2lxtwYpGsl432lj3z29RXTeyHuXGb7Di64rHKj11RlH11d2
3ZUzoZjOORHbY7fOPS7j/asJJ3qMHivj+57n5vMyP8jIYy5Kox19Zfz+zJW9
x2XNoesxw7eN3vGTzntHo2c7n4+l64GKn0a+2yrjdWNXn1KhvoyPd3XxmPpd
xvtqBhROUc6h6y9+6jyIPknXH/KLZ9U40PVbQW4hnHkyfr7bcI2+2Ui6brhU
Y9aFvnR9opmkME75n9ehx4E+L/R1Qs8Lug7QdYOuM3hfgPsI3XdonUDrClqH
0LqF1jm0L6B9BO07aJ9C+xrqA1DfgPoM1JegPgb1PahPQn0V6sNQ34b6PDQX
oDkCzR1oTkFzDZqDf5+b0JwF5zIwx6G5D+UEKFdAOQTKLVDOgXIRlKOg3AXl
NCjXQTkQyo1QzoRyKZRjodwL5WQoV0M5HMrtUM6HzgXQOeL3+vy/XbeRwfp9
wiSU0QkfvLROCCkjjH463wlroHzY5fOGhIp6yoxr8xdYn+VRTnmWVbd1EpdS
48yWtrINdZRHxoxtW32zljJkOvd18Ok/HKCXF3qthsSVFdfHmtcx/rxvdvVQ
6AfiFhD7vUWBy/hqpKdvgDuHqDcsdl14isuYO7PDnW6LqglvakzFIS0eo9Xs
zq6e8VVEy0v1oN8ZHmPS/sJjDhbvyOj9x4ak961n9Dix7UxeYgUJ9DTpcTq8
ntHm4MoXVjrlJF35+NAqXT5jfrnLqQ1nS4m6qvf1VdF8xtw3W7rWK5eQWHK3
aI5WA6P8dM5RvYRiEjvrfEHk2QZG+TFTT2rNKCIeKr/qJ6kIGINKO1osKisk
pstM7+ttEjDafrYpPPaogBid8T69rUDA+OJM2fm/Brwm2hZbt2caChnNFrgs
2VP5ggR2nOOiI51bv41osjs8YWE+aT2w+YnxNyHjMOXd29MN8sgws56X451F
jFqHzix8dzqHHMisaThZIWLstefO0WjOE5JeMN/u+jAx49l+w+V6aWaSn5/D
FsV5ixn1jvprc+6kkxKb7AT1cjHjZ+MXsepF94h4v3d/ybhGRv6QxBv5l+4S
3V27l/060ci49OTBV51dE4hYw3HRdE4jY0H5sdmc77FExTU51HmKhLHgYO9D
c+2vkPh1ZzrdPiVhlFsQ8Hm16jmSccj5hluNhFHO0OGT3HA3Zv/lXVuXlpBE
z03tX0mzdKfR9f73N3HWlMs4Pwbudm2zoeu7SgaHHmmU8Xta/Md80Aqg63If
T8ztMEBGThhpNLJ3Hp0r4v0GCyqP0HWL5/pneurI+DnEk8cqnz6T8Xc6dNbY
Lz9C1/XERYmJRjLqj7VGxAtkvD/ktPP2jmEyzqEHG4d3t6XrixWLC0aq0vUX
2lZDuuXJeJ054Jzl7Mt0Pa3nE+fA5XRdr7v2w1OD6Hpy8M/HniI6l27Ym7Pu
U66M399bmj7GKZyur/y6OzjLk67LeU17pewko15xuvzdYrqecTnkdh+Lf16H
Hgf6vNDXCT0v6DpA1w26ztB9ge4jdN+hdQKtK2gdQusWWufQvoD2EbTvoH0K
7WuoD0B9A+ozUF+C+hjU9/7eJ6G+CvVhqG9DfR6cC8AcgeYONKeguQbNQWhu
QnMWmsvQHIfmPpQToFwB5RAot0A5B8pFUI6CcheU06BcB+VAKDdCORPKpVCO
hXIvlJOhXA3lcCi3QzkfOhcw/QH9f8VV/6u9O43Kst76OI5DOKI45izqIwqK
Y5rjuUgTxRFDUcmcxTlRzBQTKBWLJElES0E9kpRj5KxBoGamOJAoKjgw3MyT
Q2JyHJ7Oiy7XOrv9rN75nNb31Wet68V93ff/v/dv7xcu2V1U95ulxcINrh4V
t88rEAbuzHw2um6+MKLjwTXev+UKg/c/K3XvKp1tc27JugU5QqvAR+HVLmQL
N92/1NChlTTayf3kqslZwqCEX2I2pliEMTPbNIjwkfa3v9ll+5NMof0r3oWr
Vkn7u45u8faCFzaubTX80dUMo8g/1K96bqZp0/iW/YpaZRj2gwJvD59sMf0p
tPv+Ku+mG+PWP0tYfc9iurRF+eEHw9KMKJvVBdHjskyrX5vdt+j+HWNvcL/c
4CNZpo89egz0uHHbCMyZ/XWkXbbpXNe4KvW23DKGLe93OWhOtmmjj3t8MjH2
puHcblUD/0vZL/TzPvzR56mGZ+3DWXM75pg++PnW8GMLUoykt1u4527MMQ0s
3Gw9sMcNo1FElusvj3JMD7Qd0XJNg+vG4htu9V+dm2sa7mMTe/z7ZMPptSWv
Nfx9r/rDpVM3Tjm496phdzG86s1meabbwhzS5kReMXyvp86M8s0zDV0893T1
kCQjqmuVnu9dzTO1mW4Ztc3/suHy9NWwd9rlmzpVPuqcs/wXI23C09IBi/JN
J2VWatwhMtGwTqsxv/OJfNOUuKjp15ZcMrr7rU97blNgerzqqhirPRd+n/Nv
Vrb697/P+MM0r4vP9yYYfa4u/PZJXIHpOqsRmXUCzhoxwyo0uf2swHSdU+GY
BOufjcQW6cGLXQtN7bod29Nj4E9GzOovawzbU2i67hevbzqXnjLcI+N7Pfi1
0LR6+w+2Du130rA5ELTuox5FpgcvxIXc3RNvWFs1jLIsLDI9+Dyp+6CIHwyb
UW4li2KLTGfW7PPzymbfGxvmrDl4o6zI9O6vsz9J6HvUcKlc7XFq72LT6PBl
7tGdDxnzbt+vuTCg2DR3XYTz12XfGXb7z4RtP1JsajVs4MMTP+8z4sNsFwWU
FZtalS5o9nDFN0bw1xZvmx4lpomDQ2bH/rDdsGq+aErJnJIXduoV1PTUZiOg
hkuXnt+WmFqFHG8dPPgzY17IVz0TrpWYBuwL/XF9Gz8z564f73l2SM6f/F28
wQMcDkfK599Y9xm1dYZ8/oHDGI9HTvK588SMpLxq8vnMW42n982Qe+bPm72K
fQ/L520rtAqfHiqfBxxLPHd9xZ/8HZMNkcMvzZPPV3ZLmdNh8l9/rn2O9l7t
e2q/SzsH7dy0c9buRbvH/7x3rU60utLqUKtbrc61vtD6SOs7rU+1vlZzQMkN
LWe0XFJzTMk9LSe1XNVyWMttLee1uaDNEW3uaHNKm2vaHNTmpjZntbmszXFt
7mt7grZXaHuItrdoe462F2l7lLp3KXuattdpe6C2N2p7praXanustvdqe7K2
V2t7uLa3/5F7+N/hhgGL+p0tLBEu7zSyKNdT6mg3pFHqiWJhaM2kvWf+IX3Q
4qJN6xtFwqpNrVZunCHNXFz5w/4lhcLsbgs+DPKVOhY2HT+lgtR21g+H7LYU
CI+viW4+qL3U+lza1I/35wuTa/f0adlR6tkq65+X1ucJfa09tsY1l6bVqNYx
dmeuMHPi3tXNh0g37YzI2FyWIywL3+HqsF3qWXey+/Q3paElh6btuJctXBFd
qZ5NgLR7469/O2cjbfXK/PI5G7Ok38VWPtZGOimsT+DoixZh2a+ZBz1WS8M9
ffLzXpMOfeT+7qcFmdLU7Y97bZd6J2+btqy/1G5opxFzAl+YGPx6lYmHM4zu
3m/VqfJLpum+MRWnLnTJMFzDkx0srSymn9f7xwmHc+lGaalV/8iPLKafBfs1
rtYn3XDZ02Gnv8ViuuFpz4+cd6YZEe/b7Pu4R5Zp2PmCsi7t0gyvZY5ZXRdm
mZ4PDnCbtvOOMfv51qvDD2SZnipn518n+7aRHf/tG02eZJkOjb3ba3e120Za
hWoBA5yzTSf9etu/o3HLeNBmwqixPtmm9h9nlX+046aR0j59gGdctqnP0vEd
7p1INQLbTW/hVJZtOnd54uYltVKNTq4b7if2yTH1/p++bYNdU4wHXnNHdFyc
Y2qfcLzWwogbhm+ATYdrh3NMQ/2uveebet3oWr5ls1/v5Zh6Pf5yRyvH60ZR
p3s7nv0+l/6w17z2NSpOu2ZEdLvXbPeSXFPHie0jn4UlG7a7Gn0weEuuaWK5
6E/tWicbLj1j3Com5Zo6jUqweRB41bDPnNqw9G6uabDHlQNNna4aoVtvZsyv
l2fq0mL2mOi4K0bIxnBr+z55pm49HQuDh1wxJt06mj9obJ5p2oyrRutHScaw
H7us67c4z7ThgRmuPSKSjOQ90e3nBeeZLn9ctPTomCQjZfHqFaEReaY+m2e9
N6BNklHULX1ozr48054Txjcc/OCy4X5nwsNDB/NMradkNr+drj/XPkd7r/Y9
td+lnYN2bto5a/ei3aN271qdaHWl1aFWt1qda32h9ZHWd1qfan2t5YCWG1rO
aLmk5ZiWe1pOarmq5bCW21rOa3NBmyPa3NHmlDbXtDmozU1tzmpzWZvj2tzX
9gRtr9D2EG1v0fYcbS/S9iht79L2NG2v0/ZAbW/U9kxtL9X2WG3v1fZkba9+
2fs+4v9ldFTv0DmlJcK+SRFNToVI4ysXdK3QSjps84VlF74rFk5qnnUiZaDU
fladLkvvFgnrHL4zuvxG6fGRvSvtcJMmH196bkY56dQzCSGFuwuFiXlXHEsn
SouG57x+/HGBcHZE9/ud90gdVy3LzXeWTj15NeRfOfnCw+MzQ2IWSrfNeqeJ
j4307srT77aLzBOW7tuQ5N9bGnvJJiUoP1cYbRsw9Yst0qJXVw3w9ZQm1R0y
51klaf/X6m0u+z5H+kmMv72X1L52B4c36koP3InuvPZMtjAmseGKJ/Ol9lH/
XGNTXzq3XGojj3NZwgO+Vt5Js6VD97760/km0sL4yHeq5lqEbuXK9ei9Xepd
M3TYZ9OkzoELq1y0l25as2TNqXuZwp9W1BzidkwalPp294ELpNl+7dd6vv4n
Ppu1qemSF0aVm/xFUkKGkbQ47PziXZmmpy40vzAsIMOw+uHUK7eTM1841fPR
/r4ZhnXAgOFvPc00LY3bGFSxYoYx71bIIm9Hi+mtA/Yjx8SnG12HdFyWNNry
wpo9z/TzTzduPWm+tvz7FtNDFd0cPhiWbtxI/u125BaL6bHYoM5Va6cb46YO
LvQ/YjF9PDukaXxhmuG9+9CXDy9YTK/7zf+yZsLvzxv79+qabzG97vFG2wPb
0oyQ4GXbrR9ZTL/Z7VJ9cXCase157NAjTyymIVaZ1YtW6s+1z9Heq31P7Xdp
56Cdm3bO2r1o96jdu1YnWl1pdajVrVbnWl9ofaT1ndanWl9rOaDlhpYzWi5p
OablnpaTWq5qOazltpbz2lzQ5og2d7Q5pc01bQ5qc1Obs9pc1ua4Nve1PUHb
K7Q9RNtbtD1H24u0PUrbu7Q9TdvrXva+iYh/H+3GeFw+nl4iPHztSY7XUumk
Sj+55DeSOnqsqLzgcLEwaOuJWm1HSCPeqh62/7ciofPSpadX7pA6Wf61Z+8U
aaPdXziMtZPazgybdiStUOiY8NbGgE1S63+s77t2pDR4nO1XbZ4XCJ9u+67b
yIPSqIkDjt4dKw0sdXl65Em+sNOwPete/1pawTGwy9lB0tAVjbu5lOUJ0w42
GNRslzQktGutce5SZ4cJfpcaSe13+Vcfez5XGN8w5syJMGnT8OXV/UZLU86W
5da3lZbF2O4/8u//v/U/tL9T732Hz6SRe4OeerlLPZ3GVdvSSJrdJsRzcGG2
0LYoYvnnR6TODXdUOrNS2qt2ucAUd2kTJ6+VtZykSc7LT0x8niWMP5LRMSRV
Gn1nfLnpx6RN6lao6xYhDW+5suPkFdIor0edq3pLU0Y1DvQbLg1NGFQ3a9Bf
V/sc7b3a99R+l3YO2rlp56zdi3aP2r1rdaLVlVaHWt1qda71hdZHWt9pfar1
tZYDWm5oOaPlkpZjWu5pOanlqpbDWm5rOa/NBW2OaHNHm1PaXNPmoDY3tTmr
zWVtjmtz/2XvI4iI+N9h2dHsrK73S4SDTwcFOYdJj/e7Gj++t9Tl5OWTDxOL
hV71Z8RtXyCNfOB39lIDaafP3tngdqZI6OJ7z/23FdINPcY2cxkirZ81vmhH
fanHd7vPt71eKLTbO+q6X7R0w5jECa3mSxtNst53r7XU95UrUaOvFgi73kxZ
ELtOWj/+zNHLLtLk0rB2TytLfS4kOr93Il+Y1rnnW/nB0qS4+Qds35ROHZXS
tVUj6YEv1teJSs8TZrc0ljWIkXp/eWNk+qdSn2ujakRPku6adK7kbj+p2/CT
s2M7SJ2efdWsbzVp1Y5bb4U+yxUu/mrRleslUlvv+rEj7kh9Ppo8+PSNv672
Odp7te+p/S7tHLRz085ZuxftHrV71+pEqyutDrW61epc6wutj7S+0/pU62st
B7Tc0HJGyyUtx7Tc03JSy1Uth7Xc1nJemwsve14hIiLi/197RdS6OPlSiXDw
5Uvf+8yXJlfbMaOdg9S2z9D4+jeLhaH3J3iMXCO1ze7ic7GHdMPqvPPzXpHa
uC7cviOmSHgqLt++3Vrp0/CN3659V2q/fKLPJ29Kb82K/NGrtdQlo/fyo5Wl
3ad0SvZ9UCj0cTp7+ZNL0r0tZv147YjUp+Dj13JDpVXrn25/4UPp1DV5FxNm
Sr1mXUhNHS0NGOiZP8VVGrJwX0Jc/7+u9jnae7Xvqf0u7RzUc1POWbsX7R61
e9fqRKsrrQ61utXqXOsLtY+UvtP6VOtrLQdedj4hIiIi4t/TMo+ovVdTS4Sn
Dn5RrWj3n9j37V3ZPtL+xesWDXWTbppSEDi/u/TBmCtWj+pJ8z/oZGldUepc
FjvK9WGxMPTNmVfeK/7rap+jvVf7ntrv0s5BOzftnLV7edn1goiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIfx//
Fy6NvvI=
      "], {{0, 0}, {142, 141}}, {0, 1}], {
      LineBox[{{1, 79}, {141, 79}}], 
      InsetBox[
       FormBox["\"+6.9289 \:041c\:041f\:0430\"", TraditionalForm], {3, 80}], 
      LineBox[{{1, 77}, {141, 77}}], 
      InsetBox[
       FormBox["\"+3.2789 \:041c\:041f\:0430\"", TraditionalForm], {3, 78}], 
      LineBox[{{1, 75}, {141, 75}}], 
      InsetBox[
       FormBox["\"+3.2089 \:041c\:041f\:0430\"", TraditionalForm], {3, 76}], 
      LineBox[{{1, 75}, {141, 75}}], 
      InsetBox[
       FormBox["\"+1.1889 \:041c\:041f\:0430\"", TraditionalForm], {3, 76}], 
      LineBox[{{1, 73}, {141, 73}}], 
      InsetBox[
       FormBox["\"+1.1789 \:041c\:041f\:0430\"", TraditionalForm], {3, 74}], 
      LineBox[{{1, 68}, {141, 68}}], 
      InsetBox[
       FormBox["\"+2.8989 \:041c\:041f\:0430\"", TraditionalForm], {3, 69}], 
      LineBox[{{1, 67}, {141, 67}}], 
      InsetBox[
       FormBox["\"+2.8889 \:041c\:041f\:0430\"", TraditionalForm], {3, 68}], 
      LineBox[{{1, 66}, {141, 66}}], 
      InsetBox[
       FormBox["\"+2.8489 \:041c\:041f\:0430\"", TraditionalForm], {3, 67}], 
      LineBox[{{1, 65}, {141, 65}}], 
      InsetBox[
       FormBox["\"+2.8289 \:041c\:041f\:0430\"", TraditionalForm], {3, 66}], 
      LineBox[{{1, 65}, {141, 65}}], 
      InsetBox[
       FormBox["\"+4.7489 \:041c\:041f\:0430\"", TraditionalForm], {3, 66}], 
      LineBox[{{1, 64}, {141, 64}}], 
      InsetBox[
       FormBox["\"+6.6489 \:041c\:041f\:0430\"", TraditionalForm], {3, 65}], 
      LineBox[{{1, 63}, {141, 63}}], 
      InsetBox[
       FormBox["\"+6.6389 \:041c\:041f\:0430\"", TraditionalForm], {3, 64}], 
      LineBox[{{1, 63}, {141, 63}}], 
      InsetBox[
       FormBox["\"+4.6789 \:041c\:041f\:0430\"", TraditionalForm], {3, 64}], 
      LineBox[{{1, 62}, {141, 62}}], 
      InsetBox[
       FormBox["\"+6.5489 \:041c\:041f\:0430\"", TraditionalForm], {3, 63}], 
      LineBox[{{1, 61}, {141, 61}}], 
      InsetBox[
       FormBox["\"+8.4889 \:041c\:041f\:0430\"", TraditionalForm], {3, 62}], 
      LineBox[{{1, 60}, {141, 60}}], 
      InsetBox[
       FormBox["\"+4.6089 \:041c\:041f\:0430\"", TraditionalForm], {3, 61}], 
      LineBox[{{1, 58}, {141, 58}}], 
      InsetBox[
       FormBox["\"+4.5389 \:041c\:041f\:0430\"", TraditionalForm], {3, 
       59}]}}, {
    Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
     Automatic, FrameTicks -> {{{{140.5, 
          FormBox[
           RowBox[{"-", "142.12800000000001`"}], TraditionalForm]}, {105.5, 
          FormBox[
           RowBox[{"-", "71.06400000000001`"}], TraditionalForm]}, {70.5, 
          FormBox["0", TraditionalForm]}, {35.5, 
          FormBox["71.06400000000001`", TraditionalForm]}, {0.5, 
          FormBox["142.12800000000001`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "142.12800000000001`"}], TraditionalForm]}, {35.5, 
          FormBox[
           RowBox[{"-", "71.06400000000001`"}], TraditionalForm]}, {70.5, 
          FormBox["0", TraditionalForm]}, {105.5, 
          FormBox["71.06400000000001`", TraditionalForm]}, {140.5, 
          FormBox["142.12800000000001`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 35.5, 70.5, 105.5, 140.5}, {0.5, 35.5, 70.5, 105.5, 
      140.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
       TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -138.28241914137175`}, 
                    Offset[{4., 0}, {7.5, -138.28241914137175`}]}, {{
                    7.5, -5.644569489257719}, 
                    Offset[{4., 0}, {7.5, -5.644569489257719}]}, {{7.5, 
                    143.57301136937042`}, 
                    Offset[{4., 0}, {7.5, 143.57301136937042`}]}, {{7.5, 
                    276.21086102148456`}, 
                    Offset[{4., 0}, {7.5, 276.21086102148456`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -138.28241914137175`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.7\"", 1.7000000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -5.644569489257719}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 143.57301136937042`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.4\"", 3.4000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 276.21086102148456`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6297544181379376`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.7450916787049933`", ",", "1.7000000000000002`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8748460968429308`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9901833574099865`", ",", "3.4000000000000004`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.760784696248895*^9},ExpressionUUID->"a7769b9f-372c-4fea-9038-\
cf2a26ffc08b"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
8NYOw80reqFGQ/8//z+weEKu
        "]]}}}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\:0412\:0440\:0435\:043c\:044f, \:043c\:0438\:043d\"", 
     TraditionalForm], 
    FormBox[
    "\"\:041f\:0440\:0438\:0437\:0430\:0431\:043e\:0439\:043d\:043e\:0435 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:0435, \:041c\:041f\:0430\"", 
     TraditionalForm]},
  AxesOrigin->{0, 2.1695830000000003`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.26695}, {2.23823, 3.61117}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7607846962979064`*^9},ExpressionUUID->"da615488-3f91-47fa-88a2-\
3d5171c0286f"],

Cell[BoxData[
 OverlayBox[{
  TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{0, Small}]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQzXV9cYFtl5PD4a8aMf2HLB1gfEmWMD7dTYYOIC7X
dgcMfrvYzXPfg7Ud1rk/rBJZh8m/q8LWONVZGaI+3B6DX5wx8W2NvaKDCEhD
CCY/DQzEHL7khNWuU7PDxT8AptocMPjW9/17p+dJHWh9HbhDrhWTD3XPAQYQ
aMDke4C84a56wBYUILWY/E1z3y8/5q1+wBgEih0x+NDwgLgnzQmD/+mSb5JA
hC7EPamYfGBkAGNE/wA4PrIcMfjQ+DgwEwQinTD4zQdOLXTdZnwgCOjb14HO
GHwwtcPkANhbiY4YfGh6OAAWj8Dk64I9bH0AAG+Y9iU=
          
          "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {30.018460937500002`, 0}, 
      PlotRange -> {{30.1511, 38.64}, {-27.776, 25.76}}, PlotRangeClipping -> 
      True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      Full, Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {30.018460937500002`, 0}, AxesStyle -> GrayLevel[0, 0], 
      DisplayFunction :> Identity, Frame -> {{True, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {Tiny, Medium}, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{30.1511, 38.64}, {-27.776, 25.76}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{
       "\"\:041d\:0430\:043f\:0440\:044f\:0436\:0435\:043d\:0438\:044f\"", 
        "\"\:041f\:043b\:043e\:0441\:043a\:0438\:0439 \
\:043c\:043e\:0434\:0443\:043b\:044c \:042e\:043d\:0433\:0430\"", 
        "\"\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\:0442 \
\:041a\:0430\:0440\:0442\:0435\:0440\:0430\""}, "LineLegend", 
       DisplayFunction -> (FormBox[
         FrameBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"\:041a\:0430\:0440\:0442\:0430 \:0441\:043b\:043e\:0451\
\:0432\"", {FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                  False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], RoundingRadius -> 5, StripOnInput -> False], 
         TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
              "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendFunction", "\[Rule]", 
              RowBox[{"(", 
                RowBox[{
                  FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False], 
                  "&"}], ")"}]}], ",", 
            
            RowBox[{"LegendLabel", "\[Rule]", 
              "\"\:041a\:0430\:0440\:0442\:0430 \
\:0441\:043b\:043e\:0451\:0432\""}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
       True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  GraphicsBox[{{}, {{{}, {}, {
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQvdmBe4sDt6XD4a8aMf2HLB1gfEmWMD7dTYY4+e1i
N899D9bGyb+rwtY41VkZJ784Y+LbGntFnPw0MBAjxD+Ai2993793ep4UTj7U
PTj5Hg+rRNa5q+Lkb5r7fvkxb3WcfGh44OR/uuSbJBChi5MPjAxgjOjj5EPj
Aye/+cCpha7bjHHyd8i1vg7cYYKTD00POPm6YA9bHwAAw83eUw==
         
         "]]}}}}, {}, {}, {{}, {}}, {{}, {}}},
   AspectRatio->Full,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   AxesStyle->GrayLevel[0, 0],
   DisplayFunction->Identity,
   Frame->{{True, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{Tiny, Medium},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 50.08791208791208}, {-27.776, 25.76}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}], 
  GraphicsBox[{{}, {{{}, {}, {
       {RGBColor[0.5, 0, 0.5], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], Dashing[{0, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQOHv2rE9B+ydIDxJVnC+HQ3GeLkt4vdPPc9WBsn
/64KW+NUZ2Wc/OKMiW9r7BVx8tPAQIwQ/wAuvvV9/97peVI4+VD34OR7PKwS
WeeuipO/ae775ce81XHyoeGBk//pkm+SQIQuTj4wMoAxoo+TD40PnPzmA6cW
um4zxsnfIdf6OnCHCU4+ND3g5OuCPWx9AABA/oW7
         
         "]]}}}}, {}, {}, {{}, {}}, {{}, {}}},
   AspectRatio->Full,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   AxesStyle->GrayLevel[0, 0],
   DisplayFunction->Identity,
   Frame->{{True, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{Tiny, Medium},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-1., 1.}, {-27.776, 25.76}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}]}]], "Output",
 CellChangeTimes->{
  3.760784696396928*^9},ExpressionUUID->"085c623f-ffde-4e35-bd78-\
508d6e7db57c"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQ7bdiWnKG9kp7O67riwts7RyyTHZKML8+Y3/ZN0kg
wtLGwU7ROj958y37jIlva+xNrRxWSDzPd1J8Yv/vSsVLNUMLB+XbP+uybN7Y
T5FgCePTNXMQUXogsCrks71mTP+hrxomDgb6B+ysvv623zdfSv+uipFDXc/O
bM6dDA4hj5fOPqJg4PBh+TFvc05mB4h9Og6L2S4b1LiwOkDM13DQm7Dgh6Ea
hwPEPBWH+Bk+oj2nOKH6FRzAwne4oOolHJ4zHJSxreOGygs4RKz1+bF0H4zP
4HAkfrLpq4XcDgxQ8HD6r8pgQbj8gbjk6SvuSXHB9B94etWSLWU9B8z8AyWO
tafnrGOD2X8A7P6TzDD3HcgMV3yqfvUPNHw0Dsz84P13z8pv0PDUOeCyImgz
+62P9lD/H+h6cf2af/1rWPgceOvxdW68yBNY+B34m2GRmrfvBix8DzRY6cev
4J0AC/8DACJNyC0=
         
         "]]}}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.01388888888888889], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxd1n9MjVEYB/C7IpUfi2ViZkUjKyqKfiinlPRbP1SSbj+3xKqNmSyxmT9Q
kzExQkvrZompWZl1D2tGzEyS30O1kFQjojL3ved5v2d779bap9t73nOe53mf
53XKKozPtdDpdOWmH+W3+rlSFGDbXZPJVM979eR3Qrb00aCMvqeLpSfqR55F
f8qAC+cc5h3V0h/32zeGZUon9tSeb3eULq8sMF2hh3fnnRwsWS+d4tv8YG9b
Ohxo2l1RgPSSN39K8+9sh60bFqbm+Et/L1nvnX47De6MzrJL8ZVuWXRkIK5l
G3xxqO5+5Fpp5TSht1Jh8/a8pWOU5Zq3wqvNH+n5U5JmrbiZAv97vu/LUk9p
czhuJMMP97ZdWuAu3RimRDAJPu2gLChdbFrNumELnH47fIaFq3TI8V394/WJ
8PK0E/dGXaRNm6saqkuAf04qG5RW0t9TGw8ru3vnLC3qJQ4W9SEt6mEzLPIv
LfIdC4v8xsAin9GwyF8ULPIVCYv8RMAiH+GwiP8mWMQ7DBbx3QiLeIbCIn4h
sIjXBk18gjXxCNKcn7EYw5nsPNd6ozhvIMv3anWwHHhsFOdbxwKd/Auzm14b
xXn8mMGhvzDYqdco9u/DzHW/7ptR7HcNs1/8we5q4g+j2J8X83DngX6j40ax
n1WstKx1p02rjov7e7BhJWw2llzcz43VWHV6lIRM5WJ9F7ay4vKY51JrLtZz
ZvqzUXPLOmzoekdm/vNbW/p/B9avu7swoHQ6fW/HUq5FjdW2qdaxdv0p76/V
07kah4+Vf4sTZuN7np5daXi/wFa9nvd1+VrlXLdW1+d7gg48utBopd6fm/f/
0FLdH9+R7NS3rGuC4uPCzw1HTt6p/0XxdOMhhvimaa9HjHR+fuxz94vYgwNq
fPjgptEqvX2vGj8+meeTW9D2Uo0vP+TnrjfMrFDjj3NQfmDKH0z5hSn/MNUH
TPUDU33BVH8w1SdM9QtTfcNU/zA9H5rzRMD0fGnOFwXT86k5bwxMz7fm/Jth
6g+aeMTB1F808YmHqT/B1L9g6m8w9T+Y+iNM/ROm/gpT/4WpP8PUv2Hq7zD1
f5jmA0zzA6b5AtP8gWk+wTS/YJpvMM0/mOYjTPMTpvkK0/yFaT7DNL9hmu8w
zX+Y3g9gen+A6f0CpvcPmN5PYHp/4f8B+Lt31g==
         
         "]]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
    TraditionalForm],
  PlotRange->{{-100, 100}, {-24.192, 30.240000000000002`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7607846964409385`*^9},ExpressionUUID->"fe58815a-09ca-4268-9b73-\
f27da7caba55"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1:eJzs3Qk01W3bN35FKhGlJE2kQSopUWk4lQaJUqK5dBVKkyZJEw1ClNKAypCS
lDKFBkWGpInImOywt20PtlIqSe9+/vfT79e6zn2s+1rr/f/f5/k/79Fa1/rc
67itzf79zvM4vue2ofPXtkWO8nJycgHS/05K//uP//2vf00ERVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURdH/+SqdL5xo/0NCKdfspb6h
njagr7yedgmtWVuewqxsWnPPbdXeibQ2gpOzLl+T4ZLH51JDaIOCzMuTvWm9
Nfu6ZHj9c6HHgT4v9HVCzwu6DtB1g64zeF/+m6wbFEVRFEXR/ynqrn2tO8pf
QmmjP+jEzB+NlIF2OgM3raONevB+9MUXYkqt/t0VY+xold4UGLrWiyin7rYa
xvOlFZjt7dnBiJbTIyQ+QSikDC38Gvsgh9ZyrvW+vBBaz9Qdo2/tpLUJnHj9
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
obOxsmtTDOGtvrz7orTf/9ZBi3zfXB5JNPqs2rhmn4Qx4+aJaf3fB5PYwVnC
OWkSRk+5ovOduX5ki9E0o5GfJYxyVYmDjR6vZfof54m1j1nO77ny+18TSYvb
1NPmMF2/1H3m7akmdJ2/c0DgDTm6bugrOFX7sJGqa3uIbpzfTdc3JCx+f2so
XU/7lpqe2iamH2fI+m++lXR9V06Bxqk4uu4eeK/DkzN03Uy7dNnR7TI+frZg
z8o1dN0w+ejVGYv+eR16HPDzAl8n9Lyg6wBdN+g6Q/cFuo/QfYfWCbSu/r4O
oXULrXNoX0D7CNx3wD6F9jXUB6C+AfUZqC9BfQzqe1CfhPoq1Iehvg31eWgu
QHMEmjvQnILmGjQHobkJzVloLkNzHJr7UE6AcgWUQ6DcAuUcKBdBOQrKXVBO
g3IdlAOh3AjlTCiXQjkWyr1QToZyNZTDodwO5XzoXACdI6Bzx+9++N/d6IbP
sd9tBZR+3wcU9B/OpyxK6Hho/TUepdxUI0clHS5lkUv27X596yhVXM00ps+u
ZRQvCV8dplFL5AYX6p+dWsdqnfs4MuoD8W085DDTiMs4VstsW18jDrkfdr3a
U8BlLNLtuvaA2Xsy28xqeEgkj3EU6ec3vt87siok3vzsinpGgVHjeHNxOUlR
PFXdUZnP+E64aO3XylKSbtMz5Kh0Pf72mcqz8TsevSXWZjtudlnVwNiX3PjJ
5ReRjHI7TT05AeuO9pTjvwqJZ7ihUZa/gFVnq1PKsgJiEntJOE9dyHi/42KP
if4vSeiYGP0+V4WMTjXd5XYPzye2nvq2/joiRuV2OZUUk6ek4MOKUxPvixi1
75ZF3bqSRWKNumg4jxQzKua/2nfuRwaZmvK1dP1FMaPe7nWcWakPyX2LFZ9U
+zQy2lxIizITppCUPd4jn51uZHRdl/jltH4C8Z7r7yvpKGF06FeudeLedaK1
as7DFjcJo9mJsMSHCSFk9tIhobViCaPc+X3PgvU3Mevx3fP664k+dK7QnNH+
9k4LnVuOLtMLeWcmI+fox929lUPnpV6XZjnfGiYjp6m6nDwaJ6LqPq/69ztt
TNeXtlpEHpPO2b/X+bbt/XXn0vVdL+U6Wr4WUPVv/G0W+zfR9aVqQ4bkvW+g
6m29gtLV3GXUuydmpPzkU/XNVk9UtPzo+q65RWWnVej6+ryuWzm36ulcZ29r
nG9N12+9Pbf1CZdHf15vYbrSKbpus3dAZ1V9uu6w0KREoZBL1eMf6e5x3EvX
bw0uKRyiS9dj0heZHimqo+pdPP1tTI/RdT29ja5dBtL1wGfjBRNqaumcf/Du
VBsfur5ywoRS3ky6zjcL8DhYW0PV9+dP6JUbR9cDLxuIgnfR9YJdd1Ocp9J1
hW/9r46Xp+tl1pK0FZUfqPq7Pf67vSLpus8E0fwMP7rusCTWd8cGur5SN/f9
fBu6HlHecZ9oxj+vQ48DfV7o64SeF3QdoOsGXWfovkD3Ebrv0DqB1hW0DqF1
C61zaF9A+wjad9A+hfY11AegvgH1GagvQX0M6ntQn4T6KtSHob4N9XloLkBz
BJo70JyC5ho0B6G5Cc3Zv89laI5Dcx/KCVCugHIIlFugnAPlIihHQbkLymlQ
roNyIJQboZwJ5VIox0K5F8rJUK6GcjiU26GcD54LgHMEdO6Azim/1+f/aZ3s
wiLt3gooi+q6u/9cXU9p1m/UmoDaOsomk40e441rGYNH/2Ux1rCWOFSGdQh6
U8fYlHL6gG42h1hOisle25vHqLu4c2LF4yqi7qt6Wm9oPWPu+kIr78AK4lfk
ldQyhc+47pgHt9/cUlL0cVTLsRENjN76ewdsPVJMRj++tFuuj4Bx75MR4e33
C0lox91tOmUCRqem6b3HS16RYcueZS66IGTUapizW3VXPunv2qd2+UwR46I1
O+PeO+YSLe7H1OJOYkanyMXx8lWZhLfsQ6hitJhx/LNt6fETHhLx7FU7e5s3
MvJvRVxor0gmTt/Su08tb2R0SDEMm33lJuHoF5oobpcwyrU8TXv7KpS5bzFd
gj62f6LPF++uX6m+MoyuNw1erXLBme6HZbpL33jflXGOePox8mAnuh5s8vX6
ke1039b+q0+X3a/p/i+a5PueN42uF8zXTs2JpeeL5ocP3IWadH293VW36/70
/HL41S8n9BM9B5t6Dm+wXkDX+cU5sfpP6Pk7sbg1s2UWXRedjDYxfEDP96be
wrSBU2TM/dl561Xu0bnCc/zYRy5T6HrBLU2vyQl0nilb5Dvp7li6zjkacDMq
jc5Ru+4Mv9lnLF3vlblX4eo1Or/VuT+prjGWkRt31CdXpdI5U5vI+a+YTNeL
14xa9b6aQ9WvPhmvN8CNrhenmX0MH8DWvXdrZsQ8k5CCoVM5Q92r2bncXbP+
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
eR48s5H47L3y48DNP37PQFt6fstrMZnYUtHKP87Ol52DZ/9qXS8m2vZjDu7c
z75PY13d3W7PPonIt/uzL7esZueUp/y85hF+IpLhM5mzYdkf7/8PiK1R0ZDO
QYfYlMET/vj595jrTkpRQhI4NEoutA87N4cd7K18d6qQODwwDpupxc5ZxfGJ
qleqBETt8NThvfXZuWw7pfeKbR4CUqBxd53GOHaOh1775tK9l3T9hW3pNmQc
O/cPPDAW+cQ2kLTF3vPt9dmcMKBu7Yabk6R5Y1dD12Xa7Ou9foud+79/zyfx
0Qon7ZezPz9ic+2iga0vnwSaKjWE32bzzMtemRen60nX64YcJYtnbP4xGmeX
r1wuXa8/bjSTqez7kfLfHh096FQ9aRoVXHvxOZuvckv3T6ydWk84Jq5arsbs
6+S5nQ7Mb/7II5z+230y7rH5zfZbxTmvUB6JKJ8tPq7Avg5/K+/OwHEzpXmv
pGrclxtsPtQ42jOk9BeXcPTutW5qZ/Nk066naz3SuMThdH7h0/H3mLroVZSj
lxuXmPV2+qYSyeZV09e5xQqm0rpm9gLDmWy+ba7MmVjYLs3PF+5PGPWZ/b5G
y/YL3Sc8qyNm9cW61ml32OdlHPRu0lHpxxt5Tj62OJapm5eHrDyzUPrx3xWm
bFsTzdQ3f7IIXtRf+vFNidydJlfYvPq8ZJvjF+l5ofjU3vIlYez69DjlbV3w
H+eFTYoD/IPZXBq0pW97jPTjuw/6nuR8hs1d4Rs7hRySfrygQ0Jh9XH2+e5I
7DzSUVpff/x1nekhph5kRlo3WUvrK32c969zZe/LoftL1kyV1m2mLVqxdRm7
Hv6ff3/vI3Adehzo80JfJ/S8oOsAXTfoOkP3BbqP0H2H1gm0rqB1CK1baJ1D
+wLaR9C+g/YptK+hPgD1DajPQH0J6mNQ34P6JNRXoT4M9W2oz0NzAZoj0NyB
5hQ016A5CM1NaM5Ccxma4//5/1Jz/3cdyglQroByCJRboJwD5iIgR0G5C8pp
UK6DciCUG6GcCeVSKMdCuffvORnK1VAOh3I7lPOhcwF0joDOHdA5BTrXQOeg
39fhn5q75EzLX7kCSv+B137WJ/Ioc7tW7PzuX0vp3Z7YLdKTy7hZof5d/4PV
5P7H7d0Eh+sZi/Rjq6bvKScay4515WxoYEz/vK12TU4R4Shbenf5JGDMSDSv
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
TUw4q9RvdB/A1uMVpwR2qxaRNLXz/Euj2XkdNE/91cajItI0xfBIl3nsfM+9
dlo3cJiIuA4ULd3gwOaBpMm7X/ZMl/bJ3tc63FnK5gf1k1531zkKiWFt1qy9
B9i8Ybiq+qRlPyH5tsHA0TSbzSdJSfs2XsgRELPpd4+3iv/4PeS5ZocTvQQk
oily1rSZbF2rqPJY4QgByTh17dWJDWwuylqmttqpsoFs4OgJD11lcxRvWNeB
SieluevJ6PPjctmfjwjIXrvtp6G0r5XwRzV/Zn+eIj3504mkFj6JP57+wKuQ
zXU7rbZwFBKkee/g4L80d7M58L79sqRNG/gkIuGRp5YS+zp582rn9hE60v5V
ofCt8Br7fqT4rmufDxXVE1dD7reHl9j82SKq1d2eLM2lETuTjL3/+H7cGj2L
PG9pvfLZhoZINt9696tPSLSvJxG+R/YeSGBf/x+2afrHvtrS+dBnTopXBJuT
Fe0mx29vk86hG3rbJzayudph4Iieh1/xCOfCy+V+Xdj68m4GH0vuSPP5RN7d
cdvYfG6qmpj++oT0caw8krs/YH+OJiWGODbt4ZHAedNaE5aw9f0K8uHbN/OI
q4Zqv4kD2bqZ+bAn9x15xDPi4Ll53x//2zr0ONDnhb5O6HlB1wG6btB1hu4L
dB+h+w6tE2hdQesQWrfQOof2BbSPoH0H7VNoX0N9AOobUJ+B+hLUx6C+B/VJ
qK9CfRjq21Cfh+YCNEegufOvf/Sc+l2H5ho0B6G5Cc5ZYC5Dcxya+1BOgHIF
lEOg3ALlHCgXQTkKyl1QToNyHZQDodwI5cy/51Iox0K5F8rJUK6GcjiU26Gc
D50LoHMEdO6AzinQueb3dfv/SvPH3SMfVQopow98UXjjwqcM/dJ+xSuRS1kw
cGFIcUgt5WjNo8avSuoY0yvv3clP55Dm6xN9zjjwGId1sXe2eP+OxLUOvmn9
qp6xVfVCu8a5MuIdlX/EyqiBcUvviF1aTsXkyFYVyax1Aka35NJxBiUFROO6
x+FX0nP+bz16a3/UW/GcpARHFnlsFTHe32SiNGhjDonSU9pkaC1mHKWcdaDK
MIOozNq7x2RQI+OGLBunHb4phNflmMtTbiOjg/5x+fm7Y8mRxSuvDI2WMDoM
jz/5sSyQud7f4ot/fQukz2Vl6Q19l1yh94vP9cUzytPp/SWKWHB2MJ/ej1b9
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
mcWjVFpfPetHTB2lYkByeJpHLWVQY6hdgmIdo27ohV9fvnwgyy4dCvmhy2Xc
ey4jRNGSQ2YvmSknbOQyjmod92ua0XviuXvxap0EHmt4R+5FUSVZ/uH67ux1
9YzNK7qEJxaXk+XdT2h2H8BnbC5enfI2ppR4V/axIy/5jFu2pMnNCH5LMgQW
Xb3WN7CSoXX73xSR1pByYtxJwKg+bqeZQ1MhUY8z8c7xEjDmflux5Y5HAdF+
X698QEHIaPY8MLEH9yWJ6PB41fEAIaNZy7GXRbfzSdYPwTxtZRHj5r4HJ05L
fUqGnbxRoXZaxKh1U5ETGpJN9CssVOK6iRkVay3jP97LJEG7srT5e8SMmr4l
bgPXPiLiJtdj52vEjPzk5EcfHe6R8z69D59e2sjYFPyTN7o8icQN26EW/bCR
sWCN1e6tNrdJhUGJ9rpREsaIi0JhckkUiVPT8Zx9UcIYUf3i+9OaM8x67BIx
zpvfTp/7bGw6+dlvp+vZpj6PT0jovu3a33/cLEsZv1e/db2uz1sZv1dfPfZZ
6hwZv6e0asPYSW/p+ZJ382jNPXe6vnh1eMSbjjJeH9Or/HXoMj3XyuoHv+g2
RMbfO5sSn340g56bhkfcLe4upevf8q7EPBDJ+DnZUXPDhhyXMa8HLtYZoSnj
76aFl3nlJ8v4u2lxtwYpGsl432lj3z29RXTeyHuXGb7Di64rHKj11RlH11d2
3ZUzoZjOORHbY7fOPS7j/asJJ3qMHivj+57n5vMyP8jIYy5Kox19Zfz+zJW9
x2XNoesxw7eN3vGTzntHo2c7n4+l64GKn0a+2yrjdWNXn1KhvoyPd3XxmPpd
xvtqBhROUc6h6y9+6jyIPknXH/KLZ9U40PVbQW4hnHkyfr7bcI2+2Ui6brhU
Y9aFvnR9opmkME75n9ehx4E+L/R1Qs8Lug7QdYOuM3hfgPsI3XdonUDrClqH
0LqF1jm0L6B9BO07aJ9C+xrqA1DfgPoM1JegPgb1PahPQn0V6sNQ34b6PDQX
oDkCzR1oTkFzDZqDf5+b0JwF5zIwx6G5D+UEKFdAOQTKLVDOgXIRlKOg3AXl
NCjXQTkQyo1QzoRyKZRjodwL5WQoV0M5HMrtUM6HzgXQOeL3+vy/XbeRwfp9
wiSU0QkfvLROCCkjjH463wlroHzY5fOGhIp6yoxr8xdYn+VRTnmWVbd1EpdS
48yWtrINdZRHxoxtW32zljJkOvd18Ok/HKCXF3qthsSVFdfHmtcx/rxvdvVQ
6AfiFhD7vUWBy/hqpKdvgDuHqDcsdl14isuYO7PDnW6LqglvakzFIS0eo9Xs
zq6e8VVEy0v1oN8ZHmPS/sJjDhbvyOj9x4ak961n9Dix7UxeYgUJ9DTpcTq8
ntHm4MoXVjrlJF35+NAqXT5jfrnLqQ1nS4m6qvf1VdF8xtw3W7rWK5eQWHK3
aI5WA6P8dM5RvYRiEjvrfEHk2QZG+TFTT2rNKCIeKr/qJ6kIGINKO1osKisk
pstM7+ttEjDafrYpPPaogBid8T69rUDA+OJM2fm/Brwm2hZbt2caChnNFrgs
2VP5ggR2nOOiI51bv41osjs8YWE+aT2w+YnxNyHjMOXd29MN8sgws56X451F
jFqHzix8dzqHHMisaThZIWLstefO0WjOE5JeMN/u+jAx49l+w+V6aWaSn5/D
FsV5ixn1jvprc+6kkxKb7AT1cjHjZ+MXsepF94h4v3d/ybhGRv6QxBv5l+4S
3V27l/060ci49OTBV51dE4hYw3HRdE4jY0H5sdmc77FExTU51HmKhLHgYO9D
c+2vkPh1ZzrdPiVhlFsQ8Hm16jmSccj5hluNhFHO0OGT3HA3Zv/lXVuXlpBE
z03tX0mzdKfR9f73N3HWlMs4Pwbudm2zoeu7SgaHHmmU8Xta/Md80Aqg63If
T8ztMEBGThhpNLJ3Hp0r4v0GCyqP0HWL5/pneurI+DnEk8cqnz6T8Xc6dNbY
Lz9C1/XERYmJRjLqj7VGxAtkvD/ktPP2jmEyzqEHG4d3t6XrixWLC0aq0vUX
2lZDuuXJeJ054Jzl7Mt0Pa3nE+fA5XRdr7v2w1OD6Hpy8M/HniI6l27Ym7Pu
U66M399bmj7GKZyur/y6OzjLk67LeU17pewko15xuvzdYrqecTnkdh+Lf16H
Hgf6vNDXCT0v6DpA1w26ztB9ge4jdN+hdQKtK2gdQusWWufQvoD2EbTvoH0K
7WuoD0B9A+ozUF+C+hjU9/7eJ6G+CvVhqG9DfR6cC8AcgeYONKeguQbNQWhu
QnMWmsvQHIfmPpQToFwB5RAot0A5B8pFUI6CcheU06BcB+VAKDdCORPKpVCO
hXIvlJOhXA3lcCi3QzkfOhcw/QH9f8VV/6u9O43Kst76OI5DOKI45izqIwqK
Y5rjuUgTxRFDUcmcxTlRzBQTKBWLJElES0E9kpRj5KxBoGamOJAoKjgw3MyT
Q2JyHJ7Oiy7XOrv9rN75nNb31Wet68V93ff/v/dv7xcu2V1U95ulxcINrh4V
t88rEAbuzHw2um6+MKLjwTXev+UKg/c/K3XvKp1tc27JugU5QqvAR+HVLmQL
N92/1NChlTTayf3kqslZwqCEX2I2pliEMTPbNIjwkfa3v9ll+5NMof0r3oWr
Vkn7u45u8faCFzaubTX80dUMo8g/1K96bqZp0/iW/YpaZRj2gwJvD59sMf0p
tPv+Ku+mG+PWP0tYfc9iurRF+eEHw9KMKJvVBdHjskyrX5vdt+j+HWNvcL/c
4CNZpo89egz0uHHbCMyZ/XWkXbbpXNe4KvW23DKGLe93OWhOtmmjj3t8MjH2
puHcblUD/0vZL/TzPvzR56mGZ+3DWXM75pg++PnW8GMLUoykt1u4527MMQ0s
3Gw9sMcNo1FElusvj3JMD7Qd0XJNg+vG4htu9V+dm2sa7mMTe/z7ZMPptSWv
Nfx9r/rDpVM3Tjm496phdzG86s1meabbwhzS5kReMXyvp86M8s0zDV0893T1
kCQjqmuVnu9dzTO1mW4Ztc3/suHy9NWwd9rlmzpVPuqcs/wXI23C09IBi/JN
J2VWatwhMtGwTqsxv/OJfNOUuKjp15ZcMrr7rU97blNgerzqqhirPRd+n/Nv
Vrb697/P+MM0r4vP9yYYfa4u/PZJXIHpOqsRmXUCzhoxwyo0uf2swHSdU+GY
BOufjcQW6cGLXQtN7bod29Nj4E9GzOovawzbU2i67hevbzqXnjLcI+N7Pfi1
0LR6+w+2Du130rA5ELTuox5FpgcvxIXc3RNvWFs1jLIsLDI9+Dyp+6CIHwyb
UW4li2KLTGfW7PPzymbfGxvmrDl4o6zI9O6vsz9J6HvUcKlc7XFq72LT6PBl
7tGdDxnzbt+vuTCg2DR3XYTz12XfGXb7z4RtP1JsajVs4MMTP+8z4sNsFwWU
FZtalS5o9nDFN0bw1xZvmx4lpomDQ2bH/rDdsGq+aErJnJIXduoV1PTUZiOg
hkuXnt+WmFqFHG8dPPgzY17IVz0TrpWYBuwL/XF9Gz8z564f73l2SM6f/F28
wQMcDkfK599Y9xm1dYZ8/oHDGI9HTvK588SMpLxq8vnMW42n982Qe+bPm72K
fQ/L520rtAqfHiqfBxxLPHd9xZ/8HZMNkcMvzZPPV3ZLmdNh8l9/rn2O9l7t
e2q/SzsH7dy0c9buRbvH/7x3rU60utLqUKtbrc61vtD6SOs7rU+1vlZzQMkN
LWe0XFJzTMk9LSe1XNVyWMttLee1uaDNEW3uaHNKm2vaHNTmpjZntbmszXFt
7mt7grZXaHuItrdoe462F2l7lLp3KXuattdpe6C2N2p7praXanustvdqe7K2
V2t7uLa3/5F7+N/hhgGL+p0tLBEu7zSyKNdT6mg3pFHqiWJhaM2kvWf+IX3Q
4qJN6xtFwqpNrVZunCHNXFz5w/4lhcLsbgs+DPKVOhY2HT+lgtR21g+H7LYU
CI+viW4+qL3U+lza1I/35wuTa/f0adlR6tkq65+X1ucJfa09tsY1l6bVqNYx
dmeuMHPi3tXNh0g37YzI2FyWIywL3+HqsF3qWXey+/Q3paElh6btuJctXBFd
qZ5NgLR7469/O2cjbfXK/PI5G7Ok38VWPtZGOimsT+DoixZh2a+ZBz1WS8M9
ffLzXpMOfeT+7qcFmdLU7Y97bZd6J2+btqy/1G5opxFzAl+YGPx6lYmHM4zu
3m/VqfJLpum+MRWnLnTJMFzDkx0srSymn9f7xwmHc+lGaalV/8iPLKafBfs1
rtYn3XDZ02Gnv8ViuuFpz4+cd6YZEe/b7Pu4R5Zp2PmCsi7t0gyvZY5ZXRdm
mZ4PDnCbtvOOMfv51qvDD2SZnipn518n+7aRHf/tG02eZJkOjb3ba3e120Za
hWoBA5yzTSf9etu/o3HLeNBmwqixPtmm9h9nlX+046aR0j59gGdctqnP0vEd
7p1INQLbTW/hVJZtOnd54uYltVKNTq4b7if2yTH1/p++bYNdU4wHXnNHdFyc
Y2qfcLzWwogbhm+ATYdrh3NMQ/2uveebet3oWr5ls1/v5Zh6Pf5yRyvH60ZR
p3s7nv0+l/6w17z2NSpOu2ZEdLvXbPeSXFPHie0jn4UlG7a7Gn0weEuuaWK5
6E/tWicbLj1j3Com5Zo6jUqweRB41bDPnNqw9G6uabDHlQNNna4aoVtvZsyv
l2fq0mL2mOi4K0bIxnBr+z55pm49HQuDh1wxJt06mj9obJ5p2oyrRutHScaw
H7us67c4z7ThgRmuPSKSjOQ90e3nBeeZLn9ctPTomCQjZfHqFaEReaY+m2e9
N6BNklHULX1ozr48054Txjcc/OCy4X5nwsNDB/NMradkNr+drj/XPkd7r/Y9
td+lnYN2bto5a/ei3aN271qdaHWl1aFWt1qda32h9ZHWd1qfan2t5YCWG1rO
aLmk5ZiWe1pOarmq5bCW21rOa3NBmyPa3NHmlDbXtDmozU1tzmpzWZvj2tzX
9gRtr9D2EG1v0fYcbS/S9iht79L2NG2v0/ZAbW/U9kxtL9X2WG3v1fZkba9+
2fs+4v9ldFTv0DmlJcK+SRFNToVI4ysXdK3QSjps84VlF74rFk5qnnUiZaDU
fladLkvvFgnrHL4zuvxG6fGRvSvtcJMmH196bkY56dQzCSGFuwuFiXlXHEsn
SouG57x+/HGBcHZE9/ud90gdVy3LzXeWTj15NeRfOfnCw+MzQ2IWSrfNeqeJ
j4307srT77aLzBOW7tuQ5N9bGnvJJiUoP1cYbRsw9Yst0qJXVw3w9ZQm1R0y
51klaf/X6m0u+z5H+kmMv72X1L52B4c36koP3InuvPZMtjAmseGKJ/Ol9lH/
XGNTXzq3XGojj3NZwgO+Vt5Js6VD97760/km0sL4yHeq5lqEbuXK9ei9Xepd
M3TYZ9OkzoELq1y0l25as2TNqXuZwp9W1BzidkwalPp294ELpNl+7dd6vv4n
Ppu1qemSF0aVm/xFUkKGkbQ47PziXZmmpy40vzAsIMOw+uHUK7eTM1841fPR
/r4ZhnXAgOFvPc00LY3bGFSxYoYx71bIIm9Hi+mtA/Yjx8SnG12HdFyWNNry
wpo9z/TzTzduPWm+tvz7FtNDFd0cPhiWbtxI/u125BaL6bHYoM5Va6cb46YO
LvQ/YjF9PDukaXxhmuG9+9CXDy9YTK/7zf+yZsLvzxv79+qabzG97vFG2wPb
0oyQ4GXbrR9ZTL/Z7VJ9cXCase157NAjTyymIVaZ1YtW6s+1z9Heq31P7Xdp
56Cdm3bO2r1o96jdu1YnWl1pdajVrVbnWl9ofaT1ndanWl9rOaDlhpYzWi5p
OablnpaTWq5qOazltpbz2lzQ5og2d7Q5pc01bQ5qc1Obs9pc1ua4Nve1PUHb
K7Q9RNtbtD1H24u0PUrbu7Q9TdvrXva+iYh/H+3GeFw+nl4iPHztSY7XUumk
Sj+55DeSOnqsqLzgcLEwaOuJWm1HSCPeqh62/7ciofPSpadX7pA6Wf61Z+8U
aaPdXziMtZPazgybdiStUOiY8NbGgE1S63+s77t2pDR4nO1XbZ4XCJ9u+67b
yIPSqIkDjt4dKw0sdXl65Em+sNOwPete/1pawTGwy9lB0tAVjbu5lOUJ0w42
GNRslzQktGutce5SZ4cJfpcaSe13+Vcfez5XGN8w5syJMGnT8OXV/UZLU86W
5da3lZbF2O4/8u//v/U/tL9T732Hz6SRe4OeerlLPZ3GVdvSSJrdJsRzcGG2
0LYoYvnnR6TODXdUOrNS2qt2ucAUd2kTJ6+VtZykSc7LT0x8niWMP5LRMSRV
Gn1nfLnpx6RN6lao6xYhDW+5suPkFdIor0edq3pLU0Y1DvQbLg1NGFQ3a9Bf
V/sc7b3a99R+l3YO2rlp56zdi3aP2r1rdaLVlVaHWt1qda71hdZHWt9pfar1
tZYDWm5oOaPlkpZjWu5pOanlqpbDWm5rOa/NBW2OaHNHm1PaXNPmoDY3tTmr
zWVtjmtz/2XvI4iI+N9h2dHsrK73S4SDTwcFOYdJj/e7Gj++t9Tl5OWTDxOL
hV71Z8RtXyCNfOB39lIDaafP3tngdqZI6OJ7z/23FdINPcY2cxkirZ81vmhH
fanHd7vPt71eKLTbO+q6X7R0w5jECa3mSxtNst53r7XU95UrUaOvFgi73kxZ
ELtOWj/+zNHLLtLk0rB2TytLfS4kOr93Il+Y1rnnW/nB0qS4+Qds35ROHZXS
tVUj6YEv1teJSs8TZrc0ljWIkXp/eWNk+qdSn2ujakRPku6adK7kbj+p2/CT
s2M7SJ2efdWsbzVp1Y5bb4U+yxUu/mrRleslUlvv+rEj7kh9Ppo8+PSNv672
Odp7te+p/S7tHLRz085ZuxftHrV71+pEqyutDrW61epc6wutj7S+0/pU62st
B7Tc0HJGyyUtx7Tc03JSy1Uth7Xc1nJemwsve14hIiLi/197RdS6OPlSiXDw
5Uvf+8yXJlfbMaOdg9S2z9D4+jeLhaH3J3iMXCO1ze7ic7GHdMPqvPPzXpHa
uC7cviOmSHgqLt++3Vrp0/CN3659V2q/fKLPJ29Kb82K/NGrtdQlo/fyo5Wl
3ad0SvZ9UCj0cTp7+ZNL0r0tZv147YjUp+Dj13JDpVXrn25/4UPp1DV5FxNm
Sr1mXUhNHS0NGOiZP8VVGrJwX0Jc/7+u9jnae7Xvqf0u7RzUc1POWbsX7R61
e9fqRKsrrQ61utXqXOsLtY+UvtP6VOtrLQdedj4hIiIi4t/TMo+ovVdTS4Sn
Dn5RrWj3n9j37V3ZPtL+xesWDXWTbppSEDi/u/TBmCtWj+pJ8z/oZGldUepc
FjvK9WGxMPTNmVfeK/7rap+jvVf7ntrv0s5BOzftnLV7edn1goiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIfx//
Fy6NvvI=
      "], {{0, 0}, {142, 141}}, {0, 1}], {
      LineBox[{{1, 83}, {141, 83}}], 
      InsetBox["\"+6.9289 \:041c\:041f\:0430\"", {3, 84}], 
      LineBox[{{1, 83}, {141, 83}}], 
      InsetBox["\"+6.9289 \:041c\:041f\:0430\"", {3, 84}], 
      LineBox[{{1, 82}, {141, 82}}], 
      InsetBox["\"+\"", {3, 83}], 
      LineBox[{{1, 82}, {141, 82}}], 
      LineBox[{{1, 81}, {141, 81}}], 
      InsetBox[
      "\"+6.9289 \:041c\:041f\:0430\"", {1.6569987388033702`, 
       115.03783102543713`}], 
      LineBox[{{1, 81}, {141, 81}}], 
      InsetBox[
      "\"+6.9289 \:041c\:041f\:0430\"", {-0.5813367047563744, 
       117.54476670551787`}, Automatic, {5.64060529702585, 
       0.5372005044786525}, {{1., 0.}, {0., 1.}}], 
      LineBox[{{1, 80}, {141, 80}}], 
      InsetBox["\"+6.9289 \:041c\:041f\:0430\"", {3, 81}], 
      LineBox[{{1, 80}, {141, 80}}], 
      InsetBox["\"+6.9289 \:041c\:041f\:0430\"", {3, 81}], 
      LineBox[{{1, 79}, {141, 79}}], 
      InsetBox[
      "\"+3.2789 \:041c\:041f\:0430\"", {5.238335435327718, 
       120.0214375836596}], 
      LineBox[{{1, 79}, {141, 79}}], 
      InsetBox[
      "\"+3.2789 \:041c\:041f\:0430\"", {5.3278688527408296`, 
       121.09583859261691`}], 
      LineBox[{{1, 78}, {141, 78}}], 
      InsetBox[
      "\"+3.2789 \:041c\:041f\:0430\"", {7.2080706184161105`, 
       121.0807061841611}], 
      LineBox[{{1, 78}, {141, 78}}], 
      InsetBox[
      "\"+3.2789 \:041c\:041f\:0430\"", {5.775535939806373, 
       117.40983607022365`}], 
      LineBox[{{1, 77}, {141, 77}}], 
      InsetBox["\"+3.2789 \:041c\:041f\:0430\"", {3, 78}], 
      LineBox[{{1, 77}, {141, 77}}], 
      InsetBox[
      "\"+3.2089 \:041c\:041f\:0430\"", {6.312736444285024, 
       118.73770492296447`}], 
      LineBox[{{1, 76}, {141, 76}}], 
      InsetBox[
      "\"+3.2089 \:041c\:041f\:0430\"", {6.044136192045697, 
       117.20050441848582`}], 
      LineBox[{{1, 76}, {141, 76}}], 
      InsetBox[
      "\"+3.2089 \:041c\:041f\:0430\"", {3.2686002522393274`, 
       118.36443884485624`}], 
      LineBox[{{1, 75}, {141, 75}}], 
      InsetBox["\"+3.2089 \:041c\:041f\:0430\"", {3, 76}], 
      LineBox[{{1, 75}, {141, 75}}], 
      InsetBox[
      "\"+1.1889 \:041c\:041f\:0430\"", {6.581336696524351, 
       118.17023960157421`}], 
      LineBox[{{1, 74}, {141, 74}}], 
      InsetBox["\"+1.1789 \:041c\:041f\:0430\"", {3, 75}], 
      LineBox[{{1, 74}, {141, 74}}], 
      InsetBox[
      "\"+1.1789 \:041c\:041f\:0430\"", {3.8953341741310883`, 
       119.49810845431504`}], 
      LineBox[{{1, 73}, {141, 73}}], 
      InsetBox["\"+1.1789 \:041c\:041f\:0430\"", {3, 74}], 
      LineBox[{{1, 68}, {141, 68}}], 
      InsetBox["\"+2.8989 \:041c\:041f\:0430\"", {3, 69}], 
      LineBox[{{1, 67}, {141, 67}}], 
      InsetBox[
      "\"+2.8889 \:041c\:041f\:0430\"", {-8.818411098530351, 
       59.9419924328202}], 
      LineBox[{{1, 67}, {141, 67}}], 
      InsetBox[
      "\"+2.8889 \:041c\:041f\:0430\"", {-10.698612864205636`, 
       52.063051700466644`}], 
      LineBox[{{1, 66}, {141, 66}}], 
      InsetBox[
      "\"+2.8889 \:041c\:041f\:0430\"", {-9.176544768182787, 
       59.47919293729885}], 
      LineBox[{{1, 66}, {141, 66}}], 
      InsetBox[
      "\"+2.8489 \:041c\:041f\:0430\"", {-9.982345524900765, 
       59.03152585023332}], 
      LineBox[{{1, 65}, {141, 65}}], 
      InsetBox[
      "\"+2.8289 \:041c\:041f\:0430\"", {-13.563682221425115`, 
       60.9861286248659}], 
      LineBox[{{1, 65}, {141, 65}}], 
      InsetBox[
      "\"+4.7489 \:041c\:041f\:0430\"", {-7.833543506986157, 
       58.65825977212509}], 
      LineBox[{{1, 64}, {141, 64}}], 
      InsetBox["\"+4.7489 \:041c\:041f\:0430\"", {3, 65}], 
      LineBox[{{1, 64}, {141, 64}}], 
      InsetBox[
      "\"+6.6489 \:041c\:041f\:0430\"", {-9.982345524900765, 
       60.881462798997006`}], 
      LineBox[{{1, 63}, {141, 63}}], 
      InsetBox["\"+6.6389 \:041c\:041f\:0430\"", {3.0895334174131097`, 64.}], 
      
      LineBox[{{1, 63}, {141, 63}}], 
      InsetBox[
      "\"+4.6789 \:041c\:041f\:0430\"", {-9.982345524900765, 
       61.045397225367395`}], 
      LineBox[{{1, 62}, {141, 62}}], 
      InsetBox["\"+4.6789 \:041c\:041f\:0430\"", {-15.085750317447964`, 63.}], 
      LineBox[{{1, 62}, {141, 62}}], 
      InsetBox[
      "\"+6.5489 \:041c\:041f\:0430\"", {-13.026481716946464`, 
       61.56746532139026}], 
      LineBox[{{1, 61}, {141, 61}}], 
      InsetBox["\"+6.5489 \:041c\:041f\:0430\"", {3, 62}], 
      LineBox[{{1, 61}, {141, 61}}], 
      InsetBox[
      "\"+8.4889 \:041c\:041f\:0430\"", {-10.519546029379418`, 
       61.28373266069512}], 
      LineBox[{{1, 60}, {141, 60}}], 
      InsetBox[
      "\"+4.6089 \:041c\:041f\:0430\"", {-10.609079446792526`, 
       58.672131147259165`}], 
      LineBox[{{1, 60}, {141, 60}}], 
      InsetBox[
      "\"+4.6089 \:041c\:041f\:0430\"", {-12.668348047294028`, 
       59.298865069150935`}], 
      LineBox[{{1, 59}, {141, 59}}], 
      InsetBox[
      "\"+4.6089 \:041c\:041f\:0430\"", {-13.653215638838223`, 
       59.104665825868906`}], 
      LineBox[{{1, 59}, {141, 59}}], 
      InsetBox[
      "\"+4.6089 \:041c\:041f\:0430\"", {-8.19167717663859, 
       58.20933165173783}], 
      LineBox[{{1, 58}, {141, 58}}], 
      InsetBox[
      "\"+4.6089 \:041c\:041f\:0430\"", {-8.907944515943461, 
       57.92559899104269}], 
      LineBox[{{1, 58}, {141, 58}}], 
      InsetBox[
      "\"+4.5389 \:041c\:041f\:0430\"", {-13.474148804012007`, 
       57.20933165173783}], 
      LineBox[{{1, 57}, {141, 57}}], 
      InsetBox["\"+4.5389 \:041c\:041f\:0430\"", {3, 58}]}}, Axes -> False, 
    Frame -> True, FrameLabel -> {None, None}, FrameStyle -> Automatic, 
    FrameTicks -> {{{{140.5, 
         FormBox[
          RowBox[{"-", "142.12800000000001`"}], TraditionalForm]}, {105.5, 
         FormBox[
          RowBox[{"-", "71.06400000000001`"}], TraditionalForm]}, {70.5, 
         FormBox["0", TraditionalForm]}, {35.5, 
         FormBox["71.06400000000001`", TraditionalForm]}, {0.5, 
         FormBox["142.12800000000001`", TraditionalForm]}}, None}, {{{0.5, 
         FormBox[
          RowBox[{"-", "142.12800000000001`"}], TraditionalForm]}, {35.5, 
         FormBox[
          RowBox[{"-", "71.06400000000001`"}], TraditionalForm]}, {70.5, 
         FormBox["0", TraditionalForm]}, {105.5, 
         FormBox["71.06400000000001`", TraditionalForm]}, {140.5, 
         FormBox["142.12800000000001`", TraditionalForm]}}, None}}, 
    GridLines -> {{0.5, 35.5, 70.5, 105.5, 140.5}, {0.5, 35.5, 70.5, 105.5, 
     140.5}}, GridLinesStyle -> Directive[
      GrayLevel[0, 0.4], 
      AbsoluteThickness[1], 
      AbsoluteDashing[{1, 2}]], 
    ImagePadding -> {{43.909091, 1.409091}, {16.636364, 0.5}}, 
    ImageSize -> {1547.212121212121, Automatic}, 
    Method -> {
     "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
      "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
      "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
    PlotLabel -> 
    FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
      TraditionalForm], 
    PlotRange -> {{-2.958333333333334, 144.95833333333334`}, {-2.84, 143.84}},
     PlotRangePadding -> Automatic],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -138.28241914137175`}, 
                    Offset[{4., 0}, {7.5, -138.28241914137175`}]}, {{
                    7.5, -5.644569489257719}, 
                    Offset[{4., 0}, {7.5, -5.644569489257719}]}, {{7.5, 
                    143.57301136937042`}, 
                    Offset[{4., 0}, {7.5, 143.57301136937042`}]}, {{7.5, 
                    276.21086102148456`}, 
                    Offset[{4., 0}, {7.5, 276.21086102148456`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -138.28241914137175`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.7\"", 1.7000000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -5.644569489257719}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 143.57301136937042`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.4\"", 3.4000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 276.21086102148456`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6297544181379376`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.7450916787049933`", ",", "1.7000000000000002`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8748460968429308`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9901833574099865`", ",", "3.4000000000000004`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.760784498073922*^9, 
  3.7607845720582376`*^9}},ExpressionUUID->"bba36125-659f-446f-a365-\
4a9c4df427b0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1:eJzs3Qk01W3bN35FKhGlJE2kQSopUWk4lQaJUqK5dBVKkyZJEw1ClNKAypCS
lDKFBkWGpInImOywt20PtlIqSe9+/vfT79e6zn2s+1rr/f/f5/k/79Fa1/rc
67itzf79zvM4vue2ofPXtkWO8nJycgHS/05K//uP//2vf00ERVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURdH/+SqdL5xo/0NCKdfspb6h
njagr7yedgmtWVuewqxsWnPPbdXeibQ2gpOzLl+T4ZLH51JDaIOCzMuTvWm9
Nfu6ZHj9c6HHgT4v9HVCzwu6DtB1g64zeF/+m6wbFEVRFEXR/ynqrn2tO8pf
QmmjP+jEzB+NlIF2OgM3raONevB+9MUXYkqt/t0VY+xold4UGLrWiyin7rYa
xvOlFZjt7dnBiJbTIyQ+QSikDC38Gvsgh9ZyrvW+vBBaz9Qdo2/tpLUJnHj9
0yLaFs9VdjpGtAOi+xlP06R1+H5w6ZkvAkqzcIMJ5ZW0Saddqyfep9UQXvro
FknrbXLy+pejtGI3E63E9bScvW9vzbam1VBR/WVpQptuOo6fPIhWMci3clgn
GX5O6RsoaKDcyd0paXpOa/O6wX5uCq1tQErbuBDa5YUjflUeoy25XR+xzp12
akvgk5LNtD+fjPx+2vmfCz0O9HmhrxN6XtB1gK4bdJ2h+wLdR+i+Q+sEWlfQ
OoTWLbTOoX0B7SNo30H7FNrXUB+A+gbUZ6C+BPUxqO9BfRLqq1Afhvo21Oeh
ufBfPa9QFEXR/7s0eX1To8VJQqnV2ch7xttGSvNhjgkZY2iPXO353CRCTKm2
VbzrmAGtxz652S1PRJShzrbJnJ20KnsuBP01kHb2o5OHOzwSUpqO5wtGzqPV
7pTzfnSBgLJiX82J6mW0vG6bAhyrGiijN0/reWQHrdq44rVrh9AWdOQIx+bw
Kd029PzcepJWpS1cz3sdbVKks9qM0bQuS7a3/5TUU2r9aG25mU1rtaiD7sJQ
WtcJYzQubqY9cvvu3hhCO+xM70hFbVrPAdydPTvQxla2jzQo4VHaztmc+fEm
rZxXVMfWk7Sef90eGbeKdphtUXnlVNpmEedxykDaW4onsm80cyl39riUrV5C
GzpFvOltOq1u6A1X1eu0SRGa3vG+tH6xt9O77aM1HdRweq0TLaeuX83Nlf9c
6HGgzwt9ndDzgq4DdN2g6wzdF+g+QvcdWifQuoLWIbRuoXUO7QtoH0H7Dtqn
0L6G+gDUN6A+A/UlqI9BfQ/qk1Bfhfow1LehPg/NBWiOQHMHmlPQXIPmIDQ3
oTn7Xz3/URRF/7uoIgqJPJYvoWz+uvhXwRjaguE3xn8610hporm4j+MvMaWZ
arOD2V5aw/eOFtUqtH7nhp4/Ei6ivPzh86IjU2nTXYpnnKgRUsbemF75bh9t
RNLPpXnytFXrOhnbHBRQGjV4CeLaGyiDDApMEvbTRpVcX3hclTZO02/fyHg+
ZW3ysO+/VtM210cYBH6pp2wZbr1EPoh2lMme5GOjaQXTx88/V8mj5ClWlgTt
oX1xM5B3SIvW5Xy80txsLmXJ9A7+XW1pK4ZIdo7ToG2ycpefVF1H2XxjiEpZ
HK190cUnsQdoXZ8/9vw4nTbl40aXp+q0uRdF5lY1tZR+JUMydz+hXVmhJY44
Q2s6blbOuBW0Bdqa5lsmsea9WtHv3Yhaoujn+rHYibXFsPRcBreGZDlpOZ6/
UMtY6bh0Q9ilGlL+eMHQ6JRaxkkOXfIUt9YQdZG6kl5VLWPtgJom8/E1xHPF
7uT2L7WMGS0LPnZQrSFVU2/I/+xdx2ise9hDofoDMeNVmMZNrGOMiE4d3hb7
gVSVPBsydGEd492phRYW3h8Ip9H+zG7nOsb4kANXX6//QHJLLs6ft6+OsWSq
hpLqnA9k7tSCRfo+dYw9rj49kmH0gQTcMHjOCahjjOtg+tpgJFyHHgf6vNDX
CT0v8DoA1w26ztB9ge4jdN+hdQKtK2gdQusWWufQvoD2EbTvoH0K7WuoD0B9
A+ozUF+C+hjU96A+CfVVqA9DfRvq89BcgOYINHegOQXNNWgOQnMTmrPQXIbm
ODT3oZwA5Qooh0C5Bco5/9X5C0XRf+8Wrbgji1MltNfSXL270Bo9XBpwe1Uj
ZXRST5cuT8SU1gcWz+thRmvY+v2C5KmIMuhhcKrcCtrZGouveDQJKcUT0gpy
j9LKZQbskVOjDbAfU2y6V0C5c551Rw1eA6XJoPVz7axoi0YPqIks5lNuWd8w
8d5+2vNXP8d21aQNCrdz35xcT6l//nRN/FxaW3XfpadreJRHjqQThfW063qe
nCHP51LqPwvst9uNNlSsFfeqE23/8gHqIffrKDcLDsZtsaO1Gvt9qWonWrl7
FmesE2opHWxUTYdY0tq7Jtzf68V6sPSL87P0GnLAeJ6z2/Naxpwxqo6v5tdI
5/a5pPJ+dYy6phE7JpV8IHJW588Ebq1jPTlwyPDlH0iz0qEDeVl1jEHbMs1t
KzhkleKG6nnqXMbdLbWG3ddxSN8OkaI9VlzGZQe7D7BS4RDrZ3uzo3y4jH2v
nkns5VRNklQHqxx9zGXkFYSU7cx8TyLunOzp8IXLqP3RNq960Hti7Re8aK8B
j1FrrUmXs7uqSBEZdbvUjsfobbbvi3v7O6J9M2Ii34fHGNE+wH6O4zsS9yNr
t/oDHmOrcnJYzqtKEv85fuxAPo+xSUfscm1OJTHyc1Se0Kue0Wnt64rlWRXE
PL76mr95PaOJxKH7cuMKYplie9Z5Yz2jbpWC+bOscuLg/iDV9kw9I+f8yzKF
ueXEunX791MJ9YxaPWLVbYRlxLuhm7dXUT3jZvN3W/YdKyOzX3XU0myrZxx1
7mtCarcy8nPunnYFDT6j0uBQhY/ppcStMviW92g+46Utxq2b9pSSaOdRw2Ms
+YzKzzz8OmuXEkubfS41tnxGXdWTGUsVSkmFiab5s2V8xp0rUk2ufioB69Dj
QJ8X+jqh5wVdB+i6QdcZui/QfYTuO7ROoHUFrUNo3ULrHNoX0D6C9h20T6F9
DfUBqG9AfQbqS1Afg/oe1Cehvgr1YahvQ30emgvQHIHmDjSnoLkGzUFobkJz
FprL0ByH5j6UE6BcAeUQKLdAOQfKRVCOgnIXlNOgXAflQCg3/lfnWfT/LnMd
Tbq7TZdQanWLmjHwUCOluPVXr+JiMaXuiWOXORNorRtPHbK+KqKMGzHbvUaD
ltd53bQFUUJKXfLuxI4BtCUPF2RP2iqgvL9gRZ97TxoojV457UnsRSsXObb7
F18+ZazP4+kW/Wkz9JK3Ztysp2xL7XF3mDHtC6exEaYZPEpDif2n/sa0Hk/9
tj2+wqXMF07uHNadtuL9nOOuSXWUptO7vG22oI3etfexWX0tZVC0TmGmJ636
yCMr2m1Y15EHbocVa8ncsZv04rJZe5isMW9bWkOeGc/6ZmpUx7hwTPCJ4Ukf
SNdURYuucXWM28Vf1He0ccikWRslYwZwGUdo1mhOXMwhKrZHvh3cw2UsV3TT
OBJSTUz03s+f9JLLuPK4o/ri4PdkarPHRh8jHqPlsFNZTo5VRMu01sHEk8eY
tNC+auWhdyRgv07H6DIe43K/i99V3CqJh8jtmdL4esYg04tR1esqSP7kOTlP
fOsZo6z041P/KiecyaNnXC+vZ3Swcp+ktLOMVATFOj2ayGfcOVPuRbZdKfFO
nv7iqnR9/XZLjenFHutKSFTMQkWVcj6jhmI3cdmut6Rgle3IOpUGxkBep4O2
JcVEbquusdmiBtaUcw6kazHx3O9W1elKA6vfJefGvkXE9dihVPW6Bsb4bV7l
2bZvSJVtbtc6bQHjRoW4GtvLhSSj2Wq8xWIB65C+64bLF5LoaXatN70FjCoz
5Xq0bSogJp5pXfqmCRjvt996vvHOa5K/+XLiMb6AcfbOBQVV/q+I+szKmfr9
hYz+zu/+6rjkJVGcLHD3txQyVlw+rH/X7AXxrh7n2H2/kLHiyauIG32eEye5
4EkbbwkZQ39ui/b58ozMnlxtp1okZFx+KbstSuUZWd5Zreq9RMjIKwovzHXI
I9FCuccxfUSMWh6tx7rteEr8fd/MHGgsYkzMVVtnmZlLAm8GnD2+WMQY0Rp3
9I1CLuF1HJzts1vEGNpo5Px8Wg7Rj0klCYdFjIqqiV5lkmzybpndyz3+IsY3
db/GjL2bTYIWX9z/5LyI0V9hZa/te+A69DjQ54W+Tuh5QdcBum7QdYbuC3Qf
ofsOrRNoXUHrEFq30DqH9gW0j6B9B+1TaF9DfQDqG1CfgfoS1Megvgf1Saiv
Qn0Y6ttQn4fmAjRHoLkDzSlorkFzEJqb0JyF5jI0x6G5D+UEKFdAOQTKLVDO
gXIRlKOg3AXlNCjXQTkQyo1QzoRyKZRjodwL5WQoV/9X5/3/aVa9SjhW8khC
GeXZr3fU9UbK2oELT36pFlNe/vzCqlubiNJ1yZz59Wq0lsm+2r1WCymjOk+w
r7kooMwKmngiNaGBMn6HqYJlBp/y8tf829E6tGqznx4afqCeMumZm4V5C49S
q7STtsU8Wo+MVVFJZ7iURpaWifM/1VFa7c1WXbKG1lQjRelOZS2l96ct7q32
tF3P3QkwDmPdHuF+886ZGpIxveDKyO51jA6Xn554JPhAmr5zPaKi6hg1u15/
6qf0geQObFC8NIrLWLLwypfeUzlkS/lM94URXMZ7O8de6DaomsS37BKXdOcx
NvWLnLCvqIokffWbcnMPj5GnucayPfgd2dnnnppBLY8x+l7xy932lSRO4fid
+IX1jK0fXT6KlSqIw+LxHvse1zNyOq47HZBZRra0LfJqms5nvK/Ueb+Baan0
88l1EcfyGXmaP+sn/npLXlo7rS9UbGAM0Xj55oSwmGxZ2lV37qEGxnstteeH
HC4i1rzlTfqCBsa+1hKDQ9PfkNCFjV+2zxEwGnUzHhg7opBU2J/+GR0uYNz5
Y17nbjoFRC1+WfK4rwLGiGpuzuvxr4jG14RAi0VCRg/j4otWPV8Q/a0j2szu
CRkVN3Xu4xHzjKzztzvfR1HEeOtu+94dlU+JVoVOeNhfIkan2vGzLOJziK45
l+zIFzGO2hLhuWh6FnEoGmPnpS5mzOj2Qe6bXybxHD958Cd7MaOc3yTHaNFj
0lyexFkXKWYMzju9Z+G2h8S23+7LCY1iRs20w2G3XqeR2MNaHfsbNDKqcTJ5
d0rukuhLG5fy3BsZDWOUK43sEgnv0EK1xIRGRoeOK93nL7lDQsMqz//60sgY
obOxsmtTDOGtvrz7orTf/9ZBi3zfXB5JNPqs2rhmn4Qx4+aJaf3fB5PYwVnC
OWkSRk+5ovOduX5ki9E0o5GfJYxyVYmDjR6vZfof54m1j1nO77ny+18TSYvb
1NPmMF2/1H3m7akmdJ2/c0DgDTm6bugrOFX7sJGqa3uIbpzfTdc3JCx+f2so
XU/7lpqe2iamH2fI+m++lXR9V06Bxqk4uu4eeK/DkzN03Uy7dNnR7TI+frZg
z8o1dN0w+ejVGYv+eR16HPDzAl8n9Lyg6wBdN+g6Q/cFuo/QfYfWCbSu/r4O
oXULrXNoX0D7CNx3wD6F9jXUB6C+AfUZqC9BfQzqe1CfhPoq1Iehvg31eWgu
QHMEmjvQnILmGjQHobkJzVloLkNzHJr7UE6AcgWUQ6DcAuUcKBdBOQrKXVBO
g3IdlAOh3AjlTCiXQjkWyr1QToZyNZTDodwO5XzoXACdI6Bzx+9++N/d6IbP
sd9tBZR+3wcU9B/OpyxK6Hho/TUepdxUI0clHS5lkUv27X596yhVXM00ps+u
ZRQvCV8dplFL5AYX6p+dWsdqnfs4MuoD8W085DDTiMs4VstsW18jDrkfdr3a
U8BlLNLtuvaA2Xsy28xqeEgkj3EU6ec3vt87siok3vzsinpGgVHjeHNxOUlR
PFXdUZnP+E64aO3XylKSbtMz5Kh0Pf72mcqz8TsevSXWZjtudlnVwNiX3PjJ
5ReRjHI7TT05AeuO9pTjvwqJZ7ihUZa/gFVnq1PKsgJiEntJOE9dyHi/42KP
if4vSeiYGP0+V4WMTjXd5XYPzye2nvq2/joiRuV2OZUUk6ek4MOKUxPvixi1
75ZF3bqSRWKNumg4jxQzKua/2nfuRwaZmvK1dP1FMaPe7nWcWakPyX2LFZ9U
+zQy2lxIizITppCUPd4jn51uZHRdl/jltH4C8Z7r7yvpKGF06FeudeLedaK1
as7DFjcJo9mJsMSHCSFk9tIhobViCaPc+X3PgvU3Mevx3fP664k+dK7QnNH+
9k4LnVuOLtMLeWcmI+fox929lUPnpV6XZjnfGiYjp6m6nDwaJ6LqPq/69ztt
TNeXtlpEHpPO2b/X+bbt/XXn0vVdL+U6Wr4WUPVv/G0W+zfR9aVqQ4bkvW+g
6m29gtLV3GXUuydmpPzkU/XNVk9UtPzo+q65RWWnVej6+ryuWzm36ulcZ29r
nG9N12+9Pbf1CZdHf15vYbrSKbpus3dAZ1V9uu6w0KREoZBL1eMf6e5x3EvX
bw0uKRyiS9dj0heZHimqo+pdPP1tTI/RdT29ja5dBtL1wGfjBRNqaumcf/Du
VBsfur5ywoRS3ky6zjcL8DhYW0PV9+dP6JUbR9cDLxuIgnfR9YJdd1Ocp9J1
hW/9r46Xp+tl1pK0FZUfqPq7Pf67vSLpus8E0fwMP7rusCTWd8cGur5SN/f9
fBu6HlHecZ9oxj+vQ48DfV7o64SeF3QdoOsGXWfovkD3Ebrv0DqB1hW0DqF1
C61zaF9A+wjad9A+hfY11AegvgH1GagvQX0M6ntQn4T6KtSHob4N9XloLkBz
BJo70JyC5ho0B6G5Cc3Zv89laI5Dcx/KCVCugHIIlFugnAPlIihHQbkLymlQ
roNyIJQboZwJ5VIox0K5F8rJUK6GcjiU26GcD54LgHMEdO6Azim/1+f/aZ3s
wiLt3gooi+q6u/9cXU9p1m/UmoDaOsomk40e441rGYNH/2Ux1rCWOFSGdQh6
U8fYlHL6gG42h1hOisle25vHqLu4c2LF4yqi7qt6Wm9oPWPu+kIr78AK4lfk
ldQyhc+47pgHt9/cUlL0cVTLsRENjN76ewdsPVJMRj++tFuuj4Bx75MR4e33
C0lox91tOmUCRqem6b3HS16RYcueZS66IGTUapizW3VXPunv2qd2+UwR46I1
O+PeO+YSLe7H1OJOYkanyMXx8lWZhLfsQ6hitJhx/LNt6fETHhLx7FU7e5s3
MvJvRVxor0gmTt/Su08tb2R0SDEMm33lJuHoF5oobpcwyrU8TXv7KpS5bzFd
gj62f6LPF++uX6m+MoyuNw1erXLBme6HZbpL33jflXGOePox8mAnuh5s8vX6
ke1039b+q0+X3a/p/i+a5PueN42uF8zXTs2JpeeL5ocP3IWadH293VW36/70
/HL41S8n9BM9B5t6Dm+wXkDX+cU5sfpP6Pk7sbg1s2UWXRedjDYxfEDP96be
wrSBU2TM/dl561Xu0bnCc/zYRy5T6HrBLU2vyQl0nilb5Dvp7li6zjkacDMq
jc5Ru+4Mv9lnLF3vlblX4eo1Or/VuT+prjGWkRt31CdXpdI5U5vI+a+YTNeL
14xa9b6aQ9WvPhmvN8CNrhenmX0MH8DWvXdrZsQ8k5CCoVM5Q92r2bncXbP+
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
eR48s5H47L3y48DNP37PQFt6fstrMZnYUtHKP87Ol52DZ/9qXS8m2vZjDu7c
z75PY13d3W7PPonIt/uzL7esZueUp/y85hF+IpLhM5mzYdkf7/8PiK1R0ZDO
QYfYlMET/vj595jrTkpRQhI4NEoutA87N4cd7K18d6qQODwwDpupxc5ZxfGJ
qleqBETt8NThvfXZuWw7pfeKbR4CUqBxd53GOHaOh1775tK9l3T9hW3pNmQc
O/cPPDAW+cQ2kLTF3vPt9dmcMKBu7Yabk6R5Y1dD12Xa7Ou9foud+79/zyfx
0Qon7ZezPz9ic+2iga0vnwSaKjWE32bzzMtemRen60nX64YcJYtnbP4xGmeX
r1wuXa8/bjSTqez7kfLfHh096FQ9aRoVXHvxOZuvckv3T6ydWk84Jq5arsbs
6+S5nQ7Mb/7II5z+230y7rH5zfZbxTmvUB6JKJ8tPq7Avg5/K+/OwHEzpXmv
pGrclxtsPtQ42jOk9BeXcPTutW5qZ/Nk066naz3SuMThdH7h0/H3mLroVZSj
lxuXmPV2+qYSyeZV09e5xQqm0rpm9gLDmWy+ba7MmVjYLs3PF+5PGPWZ/b5G
y/YL3Sc8qyNm9cW61ml32OdlHPRu0lHpxxt5Tj62OJapm5eHrDyzUPrx3xWm
bFsTzdQ3f7IIXtRf+vFNidydJlfYvPq8ZJvjF+l5ofjU3vIlYez69DjlbV3w
H+eFTYoD/IPZXBq0pW97jPTjuw/6nuR8hs1d4Rs7hRySfrygQ0Jh9XH2+e5I
7DzSUVpff/x1nekhph5kRlo3WUvrK32c969zZe/LoftL1kyV1m2mLVqxdRm7
Hv6ff3/vI3Adehzo80JfJ/S8oOsAXTfoOkP3BbqP0H2H1gm0rqB1CK1baJ1D
+wLaR9C+g/YptK+hPgD1DajPQH0J6mNQ34P6JNRXoT4M9W2oz0NzAZoj0NyB
5hQ016A5CM1NaM5Ccxma4//5/1Jz/3cdyglQroByCJRboJwD5iIgR0G5C8pp
UK6DciCUG6GcCeVSKMdCuffvORnK1VAOh3I7lPOhcwF0joDOHdA5BTrXQOeg
39fhn5q75EzLX7kCSv+B137WJ/Ioc7tW7PzuX0vp3Z7YLdKTy7hZof5d/4PV
5P7H7d0Eh+sZi/Rjq6bvKScay4515WxoYEz/vK12TU4R4Shbenf5JGDMSDSv
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
TUw4q9RvdB/A1uMVpwR2qxaRNLXz/Euj2XkdNE/91cajItI0xfBIl3nsfM+9
dlo3cJiIuA4ULd3gwOaBpMm7X/ZMl/bJ3tc63FnK5gf1k1531zkKiWFt1qy9
B9i8Ybiq+qRlPyH5tsHA0TSbzSdJSfs2XsgRELPpd4+3iv/4PeS5ZocTvQQk
oily1rSZbF2rqPJY4QgByTh17dWJDWwuylqmttqpsoFs4OgJD11lcxRvWNeB
SieluevJ6PPjctmfjwjIXrvtp6G0r5XwRzV/Zn+eIj3504mkFj6JP57+wKuQ
zXU7rbZwFBKkee/g4L80d7M58L79sqRNG/gkIuGRp5YS+zp582rn9hE60v5V
ofCt8Br7fqT4rmufDxXVE1dD7reHl9j82SKq1d2eLM2lETuTjL3/+H7cGj2L
PG9pvfLZhoZINt9696tPSLSvJxG+R/YeSGBf/x+2afrHvtrS+dBnTopXBJuT
Fe0mx29vk86hG3rbJzayudph4Iieh1/xCOfCy+V+Xdj68m4GH0vuSPP5RN7d
cdvYfG6qmpj++oT0caw8krs/YH+OJiWGODbt4ZHAedNaE5aw9f0K8uHbN/OI
q4Zqv4kD2bqZ+bAn9x15xDPi4Ll53x//2zr0ONDnhb5O6HlB1wG6btB1hu4L
dB+h+w6tE2hdQesQWrfQOof2BbSPoH0H7VNoX0N9AOobUJ+B+hLUx6C+B/VJ
qK9CfRjq21Cfh+YCNEegufOvf/Sc+l2H5ho0B6G5Cc5ZYC5Dcxya+1BOgHIF
lEOg3ALlHCgXQTkKyl1QToNyHZQDodwI5cy/51Iox0K5F8rJUK6GcjiU26Gc
D50LoHMEdO6AzinQueb3dfv/SvPH3SMfVQopow98UXjjwqcM/dJ+xSuRS1kw
cGFIcUgt5WjNo8avSuoY0yvv3clP55Dm6xN9zjjwGId1sXe2eP+OxLUOvmn9
qp6xVfVCu8a5MuIdlX/EyqiBcUvviF1aTsXkyFYVyax1Aka35NJxBiUFROO6
x+FX0nP+bz16a3/UW/GcpARHFnlsFTHe32SiNGhjDonSU9pkaC1mHKWcdaDK
MIOozNq7x2RQI+OGLBunHb4phNflmMtTbiOjg/5x+fm7Y8mRxSuvDI2WMDoM
jz/5sSyQud7f4ot/fQukz2Vl6Q19l1yh94vP9cUzytPp/SWKWHB2MJ/ej1b9
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
mcWjVFpfPetHTB2lYkByeJpHLWVQY6hdgmIdo27ohV9fvnwgyy4dCvmhy2Xc
ey4jRNGSQ2YvmSknbOQyjmod92ua0XviuXvxap0EHmt4R+5FUSVZ/uH67ux1
9YzNK7qEJxaXk+XdT2h2H8BnbC5enfI2ppR4V/axIy/5jFu2pMnNCH5LMgQW
Xb3WN7CSoXX73xSR1pByYtxJwKg+bqeZQ1MhUY8z8c7xEjDmflux5Y5HAdF+
X698QEHIaPY8MLEH9yWJ6PB41fEAIaNZy7GXRbfzSdYPwTxtZRHj5r4HJ05L
fUqGnbxRoXZaxKh1U5ETGpJN9CssVOK6iRkVay3jP97LJEG7srT5e8SMmr4l
bgPXPiLiJtdj52vEjPzk5EcfHe6R8z69D59e2sjYFPyTN7o8icQN26EW/bCR
sWCN1e6tNrdJhUGJ9rpREsaIi0JhckkUiVPT8Zx9UcIYUf3i+9OaM8x67BIx
zpvfTp/7bGw6+dlvp+vZpj6PT0jovu3a33/cLEsZv1e/db2uz1sZv1dfPfZZ
6hwZv6e0asPYSW/p+ZJ382jNPXe6vnh1eMSbjjJeH9Or/HXoMj3XyuoHv+g2
RMbfO5sSn340g56bhkfcLe4upevf8q7EPBDJ+DnZUXPDhhyXMa8HLtYZoSnj
76aFl3nlJ8v4u2lxtwYpGsl432lj3z29RXTeyHuXGb7Di64rHKj11RlH11d2
3ZUzoZjOORHbY7fOPS7j/asJJ3qMHivj+57n5vMyP8jIYy5Kox19Zfz+zJW9
x2XNoesxw7eN3vGTzntHo2c7n4+l64GKn0a+2yrjdWNXn1KhvoyPd3XxmPpd
xvtqBhROUc6h6y9+6jyIPknXH/KLZ9U40PVbQW4hnHkyfr7bcI2+2Ui6brhU
Y9aFvnR9opmkME75n9ehx4E+L/R1Qs8Lug7QdYOuM3hfgPsI3XdonUDrClqH
0LqF1jm0L6B9BO07aJ9C+xrqA1DfgPoM1JegPgb1PahPQn0V6sNQ34b6PDQX
oDkCzR1oTkFzDZqDf5+b0JwF5zIwx6G5D+UEKFdAOQTKLVDOgXIRlKOg3AXl
NCjXQTkQyo1QzoRyKZRjodwL5WQoV0M5HMrtUM6HzgXQOeL3+vy/XbeRwfp9
wiSU0QkfvLROCCkjjH463wlroHzY5fOGhIp6yoxr8xdYn+VRTnmWVbd1EpdS
48yWtrINdZRHxoxtW32zljJkOvd18Ok/HKCXF3qthsSVFdfHmtcx/rxvdvVQ
6AfiFhD7vUWBy/hqpKdvgDuHqDcsdl14isuYO7PDnW6LqglvakzFIS0eo9Xs
zq6e8VVEy0v1oN8ZHmPS/sJjDhbvyOj9x4ak961n9Dix7UxeYgUJ9DTpcTq8
ntHm4MoXVjrlJF35+NAqXT5jfrnLqQ1nS4m6qvf1VdF8xtw3W7rWK5eQWHK3
aI5WA6P8dM5RvYRiEjvrfEHk2QZG+TFTT2rNKCIeKr/qJ6kIGINKO1osKisk
pstM7+ttEjDafrYpPPaogBid8T69rUDA+OJM2fm/Brwm2hZbt2caChnNFrgs
2VP5ggR2nOOiI51bv41osjs8YWE+aT2w+YnxNyHjMOXd29MN8sgws56X451F
jFqHzix8dzqHHMisaThZIWLstefO0WjOE5JeMN/u+jAx49l+w+V6aWaSn5/D
FsV5ixn1jvprc+6kkxKb7AT1cjHjZ+MXsepF94h4v3d/ybhGRv6QxBv5l+4S
3V27l/060ci49OTBV51dE4hYw3HRdE4jY0H5sdmc77FExTU51HmKhLHgYO9D
c+2vkPh1ZzrdPiVhlFsQ8Hm16jmSccj5hluNhFHO0OGT3HA3Zv/lXVuXlpBE
z03tX0mzdKfR9f73N3HWlMs4Pwbudm2zoeu7SgaHHmmU8Xta/Md80Aqg63If
T8ztMEBGThhpNLJ3Hp0r4v0GCyqP0HWL5/pneurI+DnEk8cqnz6T8Xc6dNbY
Lz9C1/XERYmJRjLqj7VGxAtkvD/ktPP2jmEyzqEHG4d3t6XrixWLC0aq0vUX
2lZDuuXJeJ054Jzl7Mt0Pa3nE+fA5XRdr7v2w1OD6Hpy8M/HniI6l27Ym7Pu
U66M399bmj7GKZyur/y6OzjLk67LeU17pewko15xuvzdYrqecTnkdh+Lf16H
Hgf6vNDXCT0v6DpA1w26ztB9ge4jdN+hdQKtK2gdQusWWufQvoD2EbTvoH0K
7WuoD0B9A+ozUF+C+hjU9/7eJ6G+CvVhqG9DfR6cC8AcgeYONKeguQbNQWhu
QnMWmsvQHIfmPpQToFwB5RAot0A5B8pFUI6CcheU06BcB+VAKDdCORPKpVCO
hXIvlJOhXA3lcCi3QzkfOhcw/QH9f8VV/6u9O43Kst76OI5DOKI45izqIwqK
Y5rjuUgTxRFDUcmcxTlRzBQTKBWLJElES0E9kpRj5KxBoGamOJAoKjgw3MyT
Q2JyHJ7Oiy7XOrv9rN75nNb31Wet68V93ff/v/dv7xcu2V1U95ulxcINrh4V
t88rEAbuzHw2um6+MKLjwTXev+UKg/c/K3XvKp1tc27JugU5QqvAR+HVLmQL
N92/1NChlTTayf3kqslZwqCEX2I2pliEMTPbNIjwkfa3v9ll+5NMof0r3oWr
Vkn7u45u8faCFzaubTX80dUMo8g/1K96bqZp0/iW/YpaZRj2gwJvD59sMf0p
tPv+Ku+mG+PWP0tYfc9iurRF+eEHw9KMKJvVBdHjskyrX5vdt+j+HWNvcL/c
4CNZpo89egz0uHHbCMyZ/XWkXbbpXNe4KvW23DKGLe93OWhOtmmjj3t8MjH2
puHcblUD/0vZL/TzPvzR56mGZ+3DWXM75pg++PnW8GMLUoykt1u4527MMQ0s
3Gw9sMcNo1FElusvj3JMD7Qd0XJNg+vG4htu9V+dm2sa7mMTe/z7ZMPptSWv
Nfx9r/rDpVM3Tjm496phdzG86s1meabbwhzS5kReMXyvp86M8s0zDV0893T1
kCQjqmuVnu9dzTO1mW4Ztc3/suHy9NWwd9rlmzpVPuqcs/wXI23C09IBi/JN
J2VWatwhMtGwTqsxv/OJfNOUuKjp15ZcMrr7rU97blNgerzqqhirPRd+n/Nv
Vrb697/P+MM0r4vP9yYYfa4u/PZJXIHpOqsRmXUCzhoxwyo0uf2swHSdU+GY
BOufjcQW6cGLXQtN7bod29Nj4E9GzOovawzbU2i67hevbzqXnjLcI+N7Pfi1
0LR6+w+2Du130rA5ELTuox5FpgcvxIXc3RNvWFs1jLIsLDI9+Dyp+6CIHwyb
UW4li2KLTGfW7PPzymbfGxvmrDl4o6zI9O6vsz9J6HvUcKlc7XFq72LT6PBl
7tGdDxnzbt+vuTCg2DR3XYTz12XfGXb7z4RtP1JsajVs4MMTP+8z4sNsFwWU
FZtalS5o9nDFN0bw1xZvmx4lpomDQ2bH/rDdsGq+aErJnJIXduoV1PTUZiOg
hkuXnt+WmFqFHG8dPPgzY17IVz0TrpWYBuwL/XF9Gz8z564f73l2SM6f/F28
wQMcDkfK599Y9xm1dYZ8/oHDGI9HTvK588SMpLxq8vnMW42n982Qe+bPm72K
fQ/L520rtAqfHiqfBxxLPHd9xZ/8HZMNkcMvzZPPV3ZLmdNh8l9/rn2O9l7t
e2q/SzsH7dy0c9buRbvH/7x3rU60utLqUKtbrc61vtD6SOs7rU+1vlZzQMkN
LWe0XFJzTMk9LSe1XNVyWMttLee1uaDNEW3uaHNKm2vaHNTmpjZntbmszXFt
7mt7grZXaHuItrdoe462F2l7lLp3KXuattdpe6C2N2p7praXanustvdqe7K2
V2t7uLa3/5F7+N/hhgGL+p0tLBEu7zSyKNdT6mg3pFHqiWJhaM2kvWf+IX3Q
4qJN6xtFwqpNrVZunCHNXFz5w/4lhcLsbgs+DPKVOhY2HT+lgtR21g+H7LYU
CI+viW4+qL3U+lza1I/35wuTa/f0adlR6tkq65+X1ucJfa09tsY1l6bVqNYx
dmeuMHPi3tXNh0g37YzI2FyWIywL3+HqsF3qWXey+/Q3paElh6btuJctXBFd
qZ5NgLR7469/O2cjbfXK/PI5G7Ok38VWPtZGOimsT+DoixZh2a+ZBz1WS8M9
ffLzXpMOfeT+7qcFmdLU7Y97bZd6J2+btqy/1G5opxFzAl+YGPx6lYmHM4zu
3m/VqfJLpum+MRWnLnTJMFzDkx0srSymn9f7xwmHc+lGaalV/8iPLKafBfs1
rtYn3XDZ02Gnv8ViuuFpz4+cd6YZEe/b7Pu4R5Zp2PmCsi7t0gyvZY5ZXRdm
mZ4PDnCbtvOOMfv51qvDD2SZnipn518n+7aRHf/tG02eZJkOjb3ba3e120Za
hWoBA5yzTSf9etu/o3HLeNBmwqixPtmm9h9nlX+046aR0j59gGdctqnP0vEd
7p1INQLbTW/hVJZtOnd54uYltVKNTq4b7if2yTH1/p++bYNdU4wHXnNHdFyc
Y2qfcLzWwogbhm+ATYdrh3NMQ/2uveebet3oWr5ls1/v5Zh6Pf5yRyvH60ZR
p3s7nv0+l/6w17z2NSpOu2ZEdLvXbPeSXFPHie0jn4UlG7a7Gn0weEuuaWK5
6E/tWicbLj1j3Com5Zo6jUqweRB41bDPnNqw9G6uabDHlQNNna4aoVtvZsyv
l2fq0mL2mOi4K0bIxnBr+z55pm49HQuDh1wxJt06mj9obJ5p2oyrRutHScaw
H7us67c4z7ThgRmuPSKSjOQ90e3nBeeZLn9ctPTomCQjZfHqFaEReaY+m2e9
N6BNklHULX1ozr48054Txjcc/OCy4X5nwsNDB/NMradkNr+drj/XPkd7r/Y9
td+lnYN2bto5a/ei3aN271qdaHWl1aFWt1qda32h9ZHWd1qfan2t5YCWG1rO
aLmk5ZiWe1pOarmq5bCW21rOa3NBmyPa3NHmlDbXtDmozU1tzmpzWZvj2tzX
9gRtr9D2EG1v0fYcbS/S9iht79L2NG2v0/ZAbW/U9kxtL9X2WG3v1fZkba9+
2fs+4v9ldFTv0DmlJcK+SRFNToVI4ysXdK3QSjps84VlF74rFk5qnnUiZaDU
fladLkvvFgnrHL4zuvxG6fGRvSvtcJMmH196bkY56dQzCSGFuwuFiXlXHEsn
SouG57x+/HGBcHZE9/ud90gdVy3LzXeWTj15NeRfOfnCw+MzQ2IWSrfNeqeJ
j4307srT77aLzBOW7tuQ5N9bGnvJJiUoP1cYbRsw9Yst0qJXVw3w9ZQm1R0y
51klaf/X6m0u+z5H+kmMv72X1L52B4c36koP3InuvPZMtjAmseGKJ/Ol9lH/
XGNTXzq3XGojj3NZwgO+Vt5Js6VD97760/km0sL4yHeq5lqEbuXK9ei9Xepd
M3TYZ9OkzoELq1y0l25as2TNqXuZwp9W1BzidkwalPp294ELpNl+7dd6vv4n
Ppu1qemSF0aVm/xFUkKGkbQ47PziXZmmpy40vzAsIMOw+uHUK7eTM1841fPR
/r4ZhnXAgOFvPc00LY3bGFSxYoYx71bIIm9Hi+mtA/Yjx8SnG12HdFyWNNry
wpo9z/TzTzduPWm+tvz7FtNDFd0cPhiWbtxI/u125BaL6bHYoM5Va6cb46YO
LvQ/YjF9PDukaXxhmuG9+9CXDy9YTK/7zf+yZsLvzxv79+qabzG97vFG2wPb
0oyQ4GXbrR9ZTL/Z7VJ9cXCase157NAjTyymIVaZ1YtW6s+1z9Heq31P7Xdp
56Cdm3bO2r1o96jdu1YnWl1pdajVrVbnWl9ofaT1ndanWl9rOaDlhpYzWi5p
OablnpaTWq5qOazltpbz2lzQ5og2d7Q5pc01bQ5qc1Obs9pc1ua4Nve1PUHb
K7Q9RNtbtD1H24u0PUrbu7Q9TdvrXva+iYh/H+3GeFw+nl4iPHztSY7XUumk
Sj+55DeSOnqsqLzgcLEwaOuJWm1HSCPeqh62/7ciofPSpadX7pA6Wf61Z+8U
aaPdXziMtZPazgybdiStUOiY8NbGgE1S63+s77t2pDR4nO1XbZ4XCJ9u+67b
yIPSqIkDjt4dKw0sdXl65Em+sNOwPete/1pawTGwy9lB0tAVjbu5lOUJ0w42
GNRslzQktGutce5SZ4cJfpcaSe13+Vcfez5XGN8w5syJMGnT8OXV/UZLU86W
5da3lZbF2O4/8u//v/U/tL9T732Hz6SRe4OeerlLPZ3GVdvSSJrdJsRzcGG2
0LYoYvnnR6TODXdUOrNS2qt2ucAUd2kTJ6+VtZykSc7LT0x8niWMP5LRMSRV
Gn1nfLnpx6RN6lao6xYhDW+5suPkFdIor0edq3pLU0Y1DvQbLg1NGFQ3a9Bf
V/sc7b3a99R+l3YO2rlp56zdi3aP2r1rdaLVlVaHWt1qda71hdZHWt9pfar1
tZYDWm5oOaPlkpZjWu5pOanlqpbDWm5rOa/NBW2OaHNHm1PaXNPmoDY3tTmr
zWVtjmtz/2XvI4iI+N9h2dHsrK73S4SDTwcFOYdJj/e7Gj++t9Tl5OWTDxOL
hV71Z8RtXyCNfOB39lIDaafP3tngdqZI6OJ7z/23FdINPcY2cxkirZ81vmhH
fanHd7vPt71eKLTbO+q6X7R0w5jECa3mSxtNst53r7XU95UrUaOvFgi73kxZ
ELtOWj/+zNHLLtLk0rB2TytLfS4kOr93Il+Y1rnnW/nB0qS4+Qds35ROHZXS
tVUj6YEv1teJSs8TZrc0ljWIkXp/eWNk+qdSn2ujakRPku6adK7kbj+p2/CT
s2M7SJ2efdWsbzVp1Y5bb4U+yxUu/mrRleslUlvv+rEj7kh9Ppo8+PSNv672
Odp7te+p/S7tHLRz085ZuxftHrV71+pEqyutDrW61epc6wutj7S+0/pU62st
B7Tc0HJGyyUtx7Tc03JSy1Uth7Xc1nJemwsve14hIiLi/197RdS6OPlSiXDw
5Uvf+8yXJlfbMaOdg9S2z9D4+jeLhaH3J3iMXCO1ze7ic7GHdMPqvPPzXpHa
uC7cviOmSHgqLt++3Vrp0/CN3659V2q/fKLPJ29Kb82K/NGrtdQlo/fyo5Wl
3ad0SvZ9UCj0cTp7+ZNL0r0tZv147YjUp+Dj13JDpVXrn25/4UPp1DV5FxNm
Sr1mXUhNHS0NGOiZP8VVGrJwX0Jc/7+u9jnae7Xvqf0u7RzUc1POWbsX7R61
e9fqRKsrrQ61utXqXOsLtY+UvtP6VOtrLQdedj4hIiIi4t/TMo+ovVdTS4Sn
Dn5RrWj3n9j37V3ZPtL+xesWDXWTbppSEDi/u/TBmCtWj+pJ8z/oZGldUepc
FjvK9WGxMPTNmVfeK/7rap+jvVf7ntrv0s5BOzftnLV7edn1goiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIfx//
Fy6NvvI=
      "], {{0, 0}, {142, 141}}, {0, 1}], {
      LineBox[{{1, 83}, {141, 83}}], 
      TagBox[
       InsetBox["+6.9289 \:041c\:041f\:0430", {3, 84}], "InsetString"], 
      LineBox[{{1, 83}, {141, 83}}], 
      TagBox[
       InsetBox["+6.9289 \:041c\:041f\:0430", {3, 84}], "InsetString"], 
      LineBox[{{1, 82}, {141, 82}}], 
      TagBox[
       InsetBox["+", {3, 83}], "InsetString"], 
      LineBox[{{1, 82}, {141, 82}}], 
      LineBox[{{1, 81}, {141, 81}}], 
      TagBox[
       InsetBox[
       "+6.9289 \:041c\:041f\:0430", {1.6569987388033702`, 
        115.03783102543713`}], "InsetString"], 
      LineBox[{{1, 81}, {141, 81}}], 
      TagBox[
       InsetBox[
       "+6.9289 \:041c\:041f\:0430", {-0.5813367047563744, 
        117.54476670551787`}, Automatic, {5.64060529702585, 
        0.5372005044786525}, {{1., 0.}, {0., 1.}}], "InsetString"], 
      LineBox[{{1, 80}, {141, 80}}], 
      TagBox[
       InsetBox["+6.9289 \:041c\:041f\:0430", {3, 81}], "InsetString"], 
      LineBox[{{1, 80}, {141, 80}}], 
      TagBox[
       InsetBox["+6.9289 \:041c\:041f\:0430", {3, 81}], "InsetString"], 
      LineBox[{{1, 79}, {141, 79}}], 
      TagBox[
       InsetBox[
       "+3.2789 \:041c\:041f\:0430", {5.238335435327718, 120.0214375836596}], 
       "InsetString"], 
      LineBox[{{1, 79}, {141, 79}}], 
      TagBox[
       InsetBox[
       "+3.2789 \:041c\:041f\:0430", {5.3278688527408296`, 
        121.09583859261691`}], "InsetString"], 
      LineBox[{{1, 78}, {141, 78}}], 
      TagBox[
       InsetBox[
       "+3.2789 \:041c\:041f\:0430", {7.2080706184161105`, 
        121.0807061841611}], "InsetString"], 
      LineBox[{{1, 78}, {141, 78}}], 
      TagBox[
       InsetBox[
       "+3.2789 \:041c\:041f\:0430", {5.775535939806373, 
        117.40983607022365`}], "InsetString"], 
      LineBox[{{1, 77}, {141, 77}}], 
      TagBox[
       InsetBox["+3.2789 \:041c\:041f\:0430", {3, 78}], "InsetString"], 
      LineBox[{{1, 77}, {141, 77}}], 
      TagBox[
       InsetBox[
       "+3.2089 \:041c\:041f\:0430", {6.312736444285024, 
        118.73770492296447`}], "InsetString"], 
      LineBox[{{1, 76}, {141, 76}}], 
      TagBox[
       InsetBox[
       "+3.2089 \:041c\:041f\:0430", {6.044136192045697, 
        117.20050441848582`}], "InsetString"], 
      LineBox[{{1, 76}, {141, 76}}], 
      TagBox[
       InsetBox[
       "+3.2089 \:041c\:041f\:0430", {3.2686002522393274`, 
        118.36443884485624`}], "InsetString"], 
      LineBox[{{1, 75}, {141, 75}}], 
      TagBox[
       InsetBox["+3.2089 \:041c\:041f\:0430", {3, 76}], "InsetString"], 
      LineBox[{{1, 75}, {141, 75}}], 
      TagBox[
       InsetBox[
       "+1.1889 \:041c\:041f\:0430", {6.581336696524351, 
        118.17023960157421`}], "InsetString"], 
      LineBox[{{1, 74}, {141, 74}}], 
      TagBox[
       InsetBox["+1.1789 \:041c\:041f\:0430", {3, 75}], "InsetString"], 
      LineBox[{{1, 74}, {141, 74}}], 
      TagBox[
       InsetBox[
       "+1.1789 \:041c\:041f\:0430", {3.8953341741310883`, 
        119.49810845431504`}], "InsetString"], 
      LineBox[{{1, 73}, {141, 73}}], 
      TagBox[
       InsetBox["+1.1789 \:041c\:041f\:0430", {3, 74}], "InsetString"], 
      LineBox[{{1, 68}, {141, 68}}], 
      TagBox[
       InsetBox["+2.8989 \:041c\:041f\:0430", {3, 69}], "InsetString"], 
      LineBox[{{1, 67}, {141, 67}}], 
      TagBox[
       InsetBox[
       "+2.8889 \:041c\:041f\:0430", {-8.818411098530351, 59.9419924328202}], 
       "InsetString"], 
      LineBox[{{1, 67}, {141, 67}}], 
      TagBox[
       InsetBox[
       "+2.8889 \:041c\:041f\:0430", {-10.698612864205636`, 
        52.063051700466644`}], "InsetString"], 
      LineBox[{{1, 66}, {141, 66}}], 
      TagBox[
       InsetBox[
       "+2.8889 \:041c\:041f\:0430", {-9.176544768182787, 59.47919293729885}],
        "InsetString"], 
      LineBox[{{1, 66}, {141, 66}}], 
      TagBox[
       InsetBox[
       "+2.8489 \:041c\:041f\:0430", {-9.982345524900765, 59.03152585023332}],
        "InsetString"], 
      LineBox[{{1, 65}, {141, 65}}], 
      TagBox[
       InsetBox[
       "+2.8289 \:041c\:041f\:0430", {-13.563682221425115`, 
        60.9861286248659}], "InsetString"], 
      LineBox[{{1, 65}, {141, 65}}], 
      TagBox[
       InsetBox[
       "+4.7489 \:041c\:041f\:0430", {-7.833543506986157, 58.65825977212509}],
        "InsetString"], 
      LineBox[{{1, 64}, {141, 64}}], 
      TagBox[
       InsetBox["+4.7489 \:041c\:041f\:0430", {3, 65}], "InsetString"], 
      LineBox[{{1, 64}, {141, 64}}], 
      TagBox[
       InsetBox[
       "+6.6489 \:041c\:041f\:0430", {-9.982345524900765, 
        60.881462798997006`}], "InsetString"], 
      LineBox[{{1, 63}, {141, 63}}], 
      TagBox[
       InsetBox["+6.6389 \:041c\:041f\:0430", {3.0895334174131097`, 64.}], 
       "InsetString"], 
      LineBox[{{1, 63}, {141, 63}}], 
      TagBox[
       InsetBox[
       "+4.6789 \:041c\:041f\:0430", {-9.982345524900765, 
        61.045397225367395`}], "InsetString"], 
      LineBox[{{1, 62}, {141, 62}}], 
      TagBox[
       InsetBox["+4.6789 \:041c\:041f\:0430", {-15.085750317447964`, 63.}], 
       "InsetString"], 
      LineBox[{{1, 62}, {141, 62}}], 
      TagBox[
       InsetBox[
       "+6.5489 \:041c\:041f\:0430", {-13.026481716946464`, 
        61.56746532139026}], "InsetString"], 
      LineBox[{{1, 61}, {141, 61}}], 
      TagBox[
       InsetBox["+6.5489 \:041c\:041f\:0430", {3, 62}], "InsetString"], 
      LineBox[{{1, 61}, {141, 61}}], 
      TagBox[
       InsetBox[
       "+8.4889 \:041c\:041f\:0430", {-10.519546029379418`, 
        61.28373266069512}], "InsetString"], 
      LineBox[{{1, 60}, {141, 60}}], 
      TagBox[
       InsetBox[
       "+4.6089 \:041c\:041f\:0430", {-10.609079446792526`, 
        58.672131147259165`}], "InsetString"], 
      LineBox[{{1, 60}, {141, 60}}], 
      TagBox[
       InsetBox[
       "+4.6089 \:041c\:041f\:0430", {-12.668348047294028`, 
        59.298865069150935`}], "InsetString"], 
      LineBox[{{1, 59}, {141, 59}}], 
      TagBox[
       InsetBox[
       "+4.6089 \:041c\:041f\:0430", {-13.653215638838223`, 
        59.104665825868906`}], "InsetString"], 
      LineBox[{{1, 59}, {141, 59}}], 
      TagBox[
       InsetBox[
       "+4.6089 \:041c\:041f\:0430", {-8.19167717663859, 58.20933165173783}], 
       "InsetString"], 
      LineBox[{{1, 58}, {141, 58}}], 
      TagBox[
       InsetBox[
       "+4.6089 \:041c\:041f\:0430", {-8.907944515943461, 57.92559899104269}],
        "InsetString"], 
      LineBox[{{1, 58}, {141, 58}}], 
      TagBox[
       InsetBox[
       "+4.5389 \:041c\:041f\:0430", {-13.474148804012007`, 
        57.20933165173783}], "InsetString"], 
      LineBox[{{1, 57}, {141, 57}}], 
      TagBox[
       InsetBox["+4.5389 \:041c\:041f\:0430", {3, 58}], "InsetString"]}}, 
    Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
    Automatic, FrameTicks -> {{{{140.5, 
         FormBox[
          RowBox[{"-", "142.12800000000001`"}], TraditionalForm]}, {105.5, 
         FormBox[
          RowBox[{"-", "71.06400000000001`"}], TraditionalForm]}, {70.5, 
         FormBox["0", TraditionalForm]}, {35.5, 
         FormBox["71.06400000000001`", TraditionalForm]}, {0.5, 
         FormBox["142.12800000000001`", TraditionalForm]}}, None}, {{{0.5, 
         FormBox[
          RowBox[{"-", "142.12800000000001`"}], TraditionalForm]}, {35.5, 
         FormBox[
          RowBox[{"-", "71.06400000000001`"}], TraditionalForm]}, {70.5, 
         FormBox["0", TraditionalForm]}, {105.5, 
         FormBox["71.06400000000001`", TraditionalForm]}, {140.5, 
         FormBox["142.12800000000001`", TraditionalForm]}}, None}}, 
    GridLines -> {{0.5, 35.5, 70.5, 105.5, 140.5}, {0.5, 35.5, 70.5, 105.5, 
     140.5}}, GridLinesStyle -> Directive[
      GrayLevel[0, 0.4], 
      AbsoluteThickness[1], 
      AbsoluteDashing[{1, 2}]], 
    ImagePadding -> {{43.909091, 1.409091}, {16.636364, 0.5}}, 
    ImageSize -> {1547.212121212121, Automatic}, 
    Method -> {
     "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
      "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
      "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
    PlotLabel -> 
    FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
      TraditionalForm], 
    PlotRange -> {{-2.958333333333334, 144.95833333333334`}, {-2.84, 143.84}},
     PlotRangePadding -> Automatic],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -138.28241914137175`}, 
                    Offset[{4., 0}, {7.5, -138.28241914137175`}]}, {{
                    7.5, -5.644569489257719}, 
                    Offset[{4., 0}, {7.5, -5.644569489257719}]}, {{7.5, 
                    143.57301136937042`}, 
                    Offset[{4., 0}, {7.5, 143.57301136937042`}]}, {{7.5, 
                    276.21086102148456`}, 
                    Offset[{4., 0}, {7.5, 276.21086102148456`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -138.28241914137175`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.7\"", 1.7000000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -5.644569489257719}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 143.57301136937042`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.4\"", 3.4000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 276.21086102148456`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6297544181379376`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    "0.7450916787049933`", ",", "1.7000000000000002`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8748460968429308`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9901833574099865`", ",", "3.4000000000000004`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.7607848286603537`*^9, 3.76078493164451*^9}, {
  3.7607849647521086`*^9, 
  3.7607849914367037`*^9}},ExpressionUUID->"f270070e-3d12-44cd-b902-\
20d68dd1b2ef"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1:eJzt3QlUzW3bP/xMIZkTMhR1ZSoyhzjLkKSUKWTKlKmICBEhSURkjIjM5IoS
EkWDqQjNRKl2u92unSIhvPt578fvd63r7Fj3tdbz/t/7fdfzba17fe51rGvt
4fc7z+P4nrtBl/krJy2qp6Ki4qf8317l//7r///rq5xBCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEP5vNz/L0mZ2roJz0PvcDMlZ3tb6bePV1/J2in9ytp4572Vz87rd
u/LG6r4+06jlP5d6HOp5qddJvS/qOvyn7w+EEEIIIYT/T+pQteh1W5mCU2Vt
QUm7K7zfUnzGu8zgtU1bqdG4Dm+i/rnXFsFlnG5bTsu6Ml7D0+3tbr8s5XTe
lrjR3I131Kz1Jme787q9m/hr7hs5p8cfHd+d38Nrqb9DZ99c3u3NXzhk9OYN
PtqpcaQ6r5uZ4ntqUQln5Y2+gxISef3SEm5KzvGGj+u3RWUrr/3ByE2mTrxD
5x7xV1/wz6Ueh3pe6nVS74u6DtR1o64zdV+o+0jdd2qdUOuKWofUuqXWObUv
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
i63ymCR0p3FBSqGgVdUSu8l+75hups6jDs2KBA+vC7p8NS2baW73aNzva5Fg
tNvO/KUamax/u1tL9LOkgo63shP2rEljTcvztxtcKRbM6jNljfvPV8xw++q6
2XNlghvcLlavyk1hraM756l1LhHcc2Tsnfvjk1lri0MXZj8pEdxj49nq+dgn
zNM8pd+tjXJBlRmdX0S0T2CS3Y1i3ncqFQy8nbTjgdUDZv/GOzPpcalg0q3Q
rEWHo1jA64sVKf3LBNu10QwecOAm86s0idmh7Ju/Tek5rpXbqKusynnXFoWN
QjA3rFOTPVuDmVHTJk7P0hWCKh0jv6wo2izcT53vvgXdgvh+O8UwuEqthO/P
TtpLhlRO5OtHV2xa0zKc7/+xu6TldZrxdflRl69NlvHzxXiQ5dukHH5OeT01
ljpM4uvr9eaaOb/g52NsyOa6ZWP4elhsy8RT9/j569BcNffUIL5+ceHOJt/C
+LmvUr3x7spOfD1au0tQ8+t8rrDdkn1lWje+Hn059eTmk3yeWePcNXjTH7Xk
nHkLsx8H8Xlp9LNurdp15uuZ6t1+aR/hc5r/vZOT4rX5+u0H3n02+/L5MP7I
F9lhdb4+Ov+y6bH1fC5d2H7e/tOf8rj6dFPdNZob+HqSvkbToKZ83bPfRevd
Xrlc/e3qtIJALbEeHPhzXYsHCua/rabXpfnvhXqkz+f9PeYp2OO0QnnR6ndC
Pbyz35dPrRUsNil3WcH1HDFXtNxnMya5jC25UmhuWEesv3aVzM5YU8b8u8Qu
09J7K9T9OmzbrdujjOWOTnib6fhGqAfav5hUP7OUec5XfaF2Iluo66TJ94fv
VOYGjRS56essoZ5+5W6XScal7Kjh1CnJ6mLd3HZPUpNyOQt7PGdLp+mZQt26
w9i2pRflzDS+b5Tt+QyhHlVmqfd1lpylTLmbvUKaLtTrbVy2ZkM7OfPprxbS
Z7hYz831zt37poQZ9ZvYt/Bsmlh3SrUcFKist2h9d2cdsT65e7M7CfYlLGVh
yISy+alCXa3iWJh32xLWLsfzTkrUa6H+1FO9w9x8Gas2OxXnbCzWh6/MnZ0Y
I2PtNK/LVr5/JdQd9BZr7D0rY+XZdfovOP7v69TjUM9LvU7qfVHXgbpu1HWm
7gt1H6n7Tq0Tal1R65Bat9Q6p/YFtY+ofUft03998fv6d53qA1TfoPoM1Zeo
Pkb1PapPUn2V6sNU36b6PDUXqDlCzh1iTlFzjZqD1Nyk5iw1l6k5Ts19KidQ
uYLKIVRuoXIOlYv+nqOo3EXlNCrXUTmQyo1UzqRyKZVjqdxL5WQqV1M5nMrt
VM6nzgXUOYI6d1DnFOpc8/v+/k/V2RrqnT5BwZn05cD3jLVFnLkLnnf5EZ/P
OURrybNLLwoEL2XmT9j6OJc9TVZvMvGERDDkcNY79V5vma1thmxYB6lgi+bu
zOpaBvM2znDfMqVY0NnOfd/WuqnMfPnZzz88ZYKG91tpq3qkMJ17a3NfBJQI
mu4ffk9n11Om23dkl1+H5YIGWauNG7jFM78kl2X+ynn02yVLI+sOO3ePmZt8
Pr1nVJlgmMHWJUvSIljoy64q6Y0VginTomsUrS8wu3MDVgTeUwh6/jK7qinx
Ea5rzXA2XGcVf3456GFouewKv09H+1np1UmqpQ+0Nxj5opzvG9FrF/Zv0YWv
b5JunNHPtZbP2a5OjA/L4PtY+bL9S3fp8HWdbk8an9jG90mDGY/u787g+23H
hqnbMgfy9VmdN6eYBdXyeabFo9mvqvi5kJkZ5P7Kga+bfvRY1ziJnzt6m370
9TDm6+sn1j2VtZOfaycGyVveK+LnY/XQjpp35/L16aeGKY5H1XKOOP38aagm
X/cMTNp3ypef44/NJ935U8rnhIic7JwEO7HuNyq77d5iZf+9eHpY/iMxh4QO
a+/WwUfZt9uwC6NTxdyi49VMr3M3BbO11LN/lifmHEnHqC6HE8uYqcXEKevK
/3IueOCg4+OozFf5H22nqIj182dT+tdtWMaCj+/auqOlmLuqjN53+HlauU++
hY75riHmtMANd3fcG6dcr2FTns8wFnOdYXoTr+pCOXM50smydISYDx3TH9zP
2KZcr0cLZnUYK+ZJjwm+BlsM5Mw4foZi+Eoxf37rvM0j6GkJc7FOuLPLXcyx
dtc9pbNWlrDpd83GLDks5mHVP/5I3dWohPm/nXVg+qG/5OfmgZ49T8iYrf5W
s2XeYg7PHTHZaoeJjBl1ShlhfeSl+L4qXpXeUhQzzzn7Xo3PSBHqTR+Y9T4a
UsyC5591rWkn1mWTv2wfPr2Y+YekBvS/81zM2z2qZ+a3L2YtkjOfuWxNFq+z
2Ug2I0WqvC/jTe63TBLzp/2sidV+UqaTkHw4K+GpeL4Y97FlhLmU5a6InOE1
74lQ963KDn2gImVhKeaLHtd7LNT1910LnviwiMU+W6J79FmiUE/6Pqbtsf3K
fVgye82PjATx/Wr/jF5mq6yfrAprcyBeqCde1+s0sq2y36+/td9yTZx4/f+M
DVwkkbAwp7gGNVseCvWedS+XZF2RsBS1SYFmMx8IdZOkejM13CXM6EerR4vm
x4qv57DGzQHTlfu8ILlV89Ux/7ZOPQ71vNTrpN4XdR2o60ZdZ+q+UPeRuu/U
OqHWFbUOqXVLrXNqX1D7iNp31D6l9jXVB6i+QfUZqi9RfYzqe1SfpPoq1Yep
vk31+X998XPhd52aI9TcoeYUNdeoOUjNTWrOUnOZmuPU3KdyApUrqBxC5RYq
51C5iMpRVO6ichqV66gcSOXGv+dMKpdSOZbKvVROpnI1lcOp3E7lfOpcQJ0j
qHMHdU6hzjXUOej3df6nhheYXku8JOM8n/UsSVJHwrnhcvGeG9fyBcd5njb4
tOEDC9yuv+JOXYlg/7V7br7+ksMq2771WZFfJKh/e/miiKmZzHVytPd9n2LB
8w2eLY9f9JoNrXC/+qdcJnh+UufPea7PWW7Nrss/x8oFY1vFqzSyTWRRpvIZ
NRtLBa2+yB/3MrrPgosr1NO8ywQ91YMW1rt2nbm4PX8dNVchqPJs3Lhq9ZPC
9TBOsQhX/Mmfg6Zf9NBYfqaW79foH3duf7iW79ePbWppv4vfLxGa1mZDw/h9
V111oXRFCb9Pk6w35ttr8PX6L6/5tZnO94GkTm/DXxzh+4b0RINGMdl8/9Fz
kQyP78PXdb59sPJx4ftYfe1H7+Ie1tInNXXP91Lh6408Nk7QteP77YC8OalT
btbyuV9FhlffX3yfl7+46JY7kq+ruDTLsj/Pz5GzHweeOl2Pr9ecXjnHZbw4
jyp9D6w6k6pgDjPLOhwOEOdauHHzVTmLFSy26fnAS9vFOeipNqhNx7oKZqrV
cKD5DnFuuj7wumAapFxv+c/OdNklztkfJZdna/cvY9XWvZY93yLOa7dc2wfB
caWse1/L/JZLxfmuUnPM8b29cj1VeXr2XiDmAVdbV5/H1XKmM05n6mdnMT8Y
NV/6uM1uOas+p7o2cqaYN2zHX37dSE/OLKJ7tNS0F/OJ6s+7p1beKmEtvk9t
fsRSzDOSDx9yJoxR9sHBt3qOMRTzz6Dod+NysmTMJ/2q8SUdMS/dG7HBt3SJ
jGV27JM9UVXMV99UtCdlq8mYyzbr5C4dxDy2YOxuxcmYYra+31u7pnPF/Nbi
mnZ82YpiZut4MvVSzxdiXnXO33izVTGL7bJq+e7ZYm5UNTSqPyxOmT/zyjW6
pTwT70v7GY4z10iZ55Z7vx6PEXOpVtmZyR30lfXzvc/43Bfz7bcPGusdXylz
9Yol01U6PhLqHa9FyRdsKWL+judOVW4S83PHbfMTuhgq677y7It5Yg4Pf5L3
4FiahHmWL3miYvCX3J6jszhztYTlTjlbb+gIMf+766okbu4jYbHz60RXZt8T
6gG5xpHTKgtZbIJxZ+etd8X73qPaec3tQuZ58vr4PQPuiDn/wqEF8s3K/bY3
M3/Y50hxXS1rMLDSvJAFdx/UyjMhQqir23dpfl9T+The1kec8m+IeX7AipNr
pQXMtNkEo6Ma18X83Ofbx/GRBczzxu6isuHXhPrV2x0Hh3sr684jJqh4Xxbq
5j+ujzW3V9afFB3zaHpBvO/J34eM7lfAYptc3TmlNESoh7x+0MJUT1n30bOp
k3bm39apx6Gel3qd1PuirgN13ajrTN0X6j5S951aJ9S6otYhtW6pdU7tC2of
UfuO2qfUvqb6ANU3qD5D9SWqj1F9j+qTVF+l+jDVt6k+T80Fao5Qc4eaU9Rc
o+bgv774ufm7Ts1Zai5Tc5ya+1ROoHIFlUOo3ELlHCoXUTmKyl1kTiNyHZUD
qdxI5Uwql1I59u+5l8rJVK6mcjiV26mcT50LqHMEde6gzinUuYY6B/2+Pv9U
x4o7n37pFXPOeuVSHlxUwJnb9OI17wWiRiX1vt1clsde35juqXgtEfQu+ry5
r9cbptm34NjXq1LBe06T+7X+msYqzbxKdSbJBPWHug4OavySuacseliRVSKo
3ylolU3BYxb6K82ml1Wp4Kc6NTo1g2KZYVNJYoVHmaB03uDQk+2Uc6/DrbvN
9ihEyy8nm9w7JLzvRtu2NKicy5+bRnuVnYkxrOX3WYp/PVPT5NenV6zumjUN
+fUcnGPKerfl1//oNr+cbU1q2UcX+lg+cazl++ZTutlc9ub3abVksFqDJ/y+
nt4/7+azX3x/sFpl0T1rSC1941sznxdutfSZ7B2OhxL4fuXQ1iHQqyFfb3dM
t2HVKL7vpTZo12PKNr5PWkhbxl18yfdbq+enXgZ15esmzZa967BW7OfWr2b2
H5arnAt+i1QOhon9P9ljWadebgrmOdT3yfIL4rww3aqwqPlWxnTi7CLdXMX5
MmjGx2NaAWWs0dw3ng9XivPI5X3LyLpaZezoNYNHqmbi/PL2n7ZVJ6KU2Rbb
j5o48i/noCOvD3wfWco8v7ZQrOkmzsfctmdePcyUs7Bhh5oVdRLnadDp1W6W
K+Ws0cHO3YdqivPX2fCpq8O3Eua/akOXjx/FOa5/8Z6qxYES5qCX3SKiVJz7
wTsPakfqKef+5MoJj96IOcHZouWd/VdkrMXAKxPkV8VcYe3+x8Z6/WUs9npO
uM8WMYeojFsy3SmrmHlG1s/Ze0rMLVqHqlQ2eivrxSn1FweLOWfUpI6vtAco
889xP61T9cXPw4Nu564zfytlLY4vmOZgLX6uruZvYl5vh5QZpfSe2+KYmLtK
ZzqPXDlAyoKfdbUyUP3L91/2bI2f966Ihd3fmS6dJua62OJVOgqfIhbrP+TM
latiDgyWPbqtM6CI6RwqOh5SX/z+wuHBx/bfSZaw8jY/M07VF3Om+akZjVWW
SJhDx9jeKo3EXKrz5YuPUxcJM73w54zhE8Qca/ImbdWNvELm4G+/ujolSswh
0sNHss4oc3L7wpIts24LddmTAy5fFxYynfy7i+5/vCnUl53Nd27RVVl3KrA8
OyVczD/nOjexyVXuq3X9VmrGhQn1moXXtr8/pTxH5J8a5+ZxVajrxtyeV+Sg
rJetONP6gHiOcFdZvXNBW+V5obH0YOLr0+K6zVtaoVum3J/Dd+cGDQwS16fK
yF+/EpV1XdsPv9oeEepWmz4UzzmjrDst2J06Z79Q79lh98IYT2XdY/3yF8N8
hPoJ9emjc2cp6x8a3uqp7i6+r8aLkgaOUNZjj9Rs9p4p1Pv/319/7xd0nXoc
6nmp10m9L+o6UNeNus7UfaHuI3XfqXVCrStqHVLrllrn1L6g9hG176h9Su1r
qg9QfYPqM1RfovoY1feoPkn1VaoPU32b6vPUXKDmCDV3qDlFzTVqDlJzk5qz
1Fz+1xc/x3/XqblP5QQqV1A5hMotVM6hchGVo6jcReU0MtcROZDKjVTOpHIp
lWOp3MvlZCJXUzmcyu1UzqfOBdQ5gjp3UOcU6lxDnYN+X4d/aj39o3O3b5Ry
mtbf0c1/dgHnAi3TeRoxossztVfMy8tl2e0TE6N6FQm63gi98mJTNisfFrwv
rV6xoJGV9sQtn1JZ1N67g1KvyQTPXwi8pVr0gk3Oa11hZiQXVL/tM3nNu0RW
mn/h3PvTpYJS2y4mXkuj2eQiV/MDsWWCRrZdF42rCGW5XdR8biYrBFWs+tfI
32wT3rf6FJNe1tX8+jlYpB7kkc6vt0zfYb4Zx/j1mRr/9lG9EH49x75q8EfP
u/z69zcIfdA6r5bvL88flW2kXsvv275b43DZgN93YXua95vhwO/T9Q0r3yaf
5/e1NLYgf3Qe3x/axRiYjdDn655t39tdmMP3mYtRWTUNTvP9KmmM+t0jhXx/
87naLGSbXi2/D268rsUHJ75Ptts7oqv9n3y/tX0Zf+lkd7E+dL7G5keXFMz/
c7+7q7uLfTvQoX247VBln18VE/OkpdjnEzf7ebyIKWPl0Xl3vN+L80J30dOn
uyeVscyar+6zn4vzxX5ii/cTJKXM4dlFw4QYcR5ZT7X63GBjKTNNG1G4N1yc
X0371dgFqJUyHQ+3GS6Bf/n+0a6fEvXTclZtt8ks+IA4H00d9gy3NZaz4PJ3
xx7vET/nLP1UeFI/voTZFozwc1gmzlnZ93bHi+aXsMdr79cbtU6cy512Pt/+
vVjGHk/0evLJQpzjDts7HDq3SsZcHsd/6tRRnPvhz7qlDGslY6YeC3wOGf7l
53m0qlxX3ClmKWZFXQ7aiLnCXtI833xxMYvdYrNyfn0xh3SaVydmc+Ni5l+o
endDH/Fz5sBFFY2cbivXa81dg46B4ufSsdOGu6XPk7LYyH42RsViXpKMOnwp
uYmUeU5W2NQfJn7ufX7Ws8i5kUXM9EX1/nf7xJ+ncpMcke+cV8RsPb+cvFAk
5rfy1k/nTGmqzGkLKrLOjRQ/h4/NDF12M1zCYoctarN7m/jzYMGn2qWcnaDM
kyZVOi6txJ8r8+1sv/95M2We7LsjtOXBaKHuejBs47MXyryaVJha0UnMpZpO
Hycc2l3Ico1XtElzvSVe/8DL2S4TCllsw8u+S1qIuTfpk/fJierK/eY/pq/R
RvH7HbERL26ve6nM5807GYf2FnO11Ycf0QX7lfvwWlrcu0VXhPoC6+0Hro39
r+/XjFwdcuycUM9+vzFzThPlf+8RWrwkP1jM273a9xuZr9y378peT9t2XFyH
Cb7P1txT1l9dS2aBh4T6N68f++cHKuuPTrxw1PYX149OfM0Jd2Xd2PJHs4ne
Yo6dJvdpskhZ940MGNhti3i/LAqfhUxQ1i2tV87VXyXU873DjrwZrayfuHjC
o5Xjv61Tj0M9L/U6qfdFXQfqulHXmbov1H2k7ju1Tqh1Ra1Dat1S65zaF9Q+
ovYdtU+pfU31AapvUH2G6ktUH6P6HtUnqb5K9WGqb1N9npoL1Byh5g41p6i5
Rs1Bam5Sc5aay//64uf47zo196mcQOUKKodQuYXKOVQuonIUlbuonEblOioH
UrmRyplULqVyLJV7/56TqVxN5XAytxM5nzoXUOcI6txBnVOocw11Dvp9Hf6p
QZ/UlxWekXKqLvCq935LAefhiLpGvsdFO3/8fitMM48l1/lY8LhaIhj4zWDi
uTZvWOISs6l6SVLB0IRhKgHH01hrb8+165bLBBOdN586di+FOQ3T2flVUiK4
+viINP3Dj5nj6ydn70wqFQxsMkb3fPNYFhzqPC9leZmg59s3K4ZV3GAe+/1O
71+sEAy+vebm9YMnhPdtq7Zl0t2D/PenNhU7SK658OcsrwIj2bM5tfx+04se
W3ua1/L91pWORXuX8uv59vfGN0IP1PI5g0vpLsmLWv5+wqgXe/vU5eue3113
FTJ+P1pofC1ftaGW/ZtaoD8qgd/vjw0839+uX8vnLQ2DZ1ZM5ftGUr+Wv3Ze
4vvP9AA1W/Vyvl/pnKwq22vM11sU3Bjo6cv3PZMM+8U93tXyc+A5X46qDuPr
6r1dhmft5/uwU8cbZ4tVxHr+2A9lzQIV7Hb4wKl/1BH7fKfeg57M6a1gFq4N
v8grxc/fSp/Paulzq4zZNljSK/WpOEdKz8+6UjVDWT+9+Ko0V5w7k1MP7O76
sZSltFLMSs8W51RAbLp04L5S5pLXLlFVIs41ycLQ2z+7KefdpuvJNfniHNRs
5S3f+UDOjA1tXrzOF+dmkF2LqHNT5cwns/vEzuninD2v+rXtpvISFuxfNmxQ
ljiX47ptOCndXcKW5Pfek5AjzvEoNRVWZVjCUrQ8g4oqxLlvNLF75cDbMlb9
tOC9d5KYE5w/JM9pOk7GWkTWdT4dKeaKbEfLlfHVxUynzlDNklIxh5R3beP7
8kQxm54xIKtJI7GuO6jlrx3WxSysmd33oO3i58YpO9N9Hv6UshYXjK4mfRU/
Z65su6jbzjBljlr3NT5ktZiXVPK2j6xaolz3iwKsXqiLn1e7131l+raNlDmo
a422dhbzmMr4OM8t//X54LqU7R4KMb/JTyuiY9cVseAe18Li7MTPz03vzW/2
SF+Z926Ujs1/IOZDpyP5byPeSpjO51W2Pjbi5/NhUZIJtlslzOXcVt/93uLn
+U8bNXfpMkTCcqcddpgw7L54HQ7vchvys5A55Mw9PaJM/Pmuq5uijXbGK3Py
u1lFY0PFnwcLzLB5b31AuQ+dOt9RuyXmZJU/o9vsm6msp8/JOhwg5upvswyf
XTFQPs7pBMXN++L3NezVapYnflXm9sWZg2MfiD/P1nHZsDVWT5RzxfKsxtc7
fwp1k8LGG15dUJ4LpAlrVnUMFdetj0P9Mx7K/X/Dd9rFlEviOj+ecOHJUuXj
d3Pp8GDURaGufva7ZewE5X//8uKbBt3Oi/d9w/qwPUz5vF5Ln/yoOvtv69Tj
UM9LvU7qfVHXgbpu1HWm7gt1H6n7Tq0Tal1R65Bat9Q6p/YFtY/IfUfsU2pf
U32A6htUn6H6EtXHqL5H9Umqr1J9mOrbVJ+n5gI1R6i5Q80paq5Rc5Cam/99
F7g5+7tOzWVqjlNzn8oJVK6gcgiZW4icQ+UiKkdRuYvKaVSuo3IglRupnEnl
UirHUrn37zmZytVUDqdyO5XzqXMBdY6gzh3UOYU611DnoN/X4Z8a+bLy7uiz
xZyJ2ybFmU8u5Nww9Kj3e40CwXEXO0SG5eYxrYtuVldsJYLhDU9o/WyawxJH
WX+qVJ7Df3t1QDtdvQ0ZLKz3wSmrIooFy11H1b364RWrvN1rqcMvmaDV5a8+
9+o9Z6ojNhm2NZMLZu/WVKzZkMjMb/SKDplXKhhxttJwslMMc94TP3DMsDJB
6bIn7g+Mb7JloWcaBmopBHXux1js23qOOap9ed1ZphBU6X9bNW+Ji3Cdqk06
FpZ0589fwTMrsxzH1PL3YV5YjkxYzK9bnYHnfEav59e5wYm8n5ejavn7Nllb
3stUavm5WdYuik3i99fC5gEDdx+p5ftczb4VzCmq5e/W9h8w+IItX5fbPH5y
4lwtv1c13sTzaCnfT/ZsTT/Z3I6vR9zXMEi9zfcrnxWNUx+3qeXv/ZZHaNTb
xPe96v2Lt494W8vnS3c3HLg3ha9/Cj24wyKslt+3umDia9iUr5vG9NQx3FbL
34/aeMgmvpyfC6NVLBI9HcT6j/afdX9UKFh1bEHW+vfi3Om5puyYZ4CCLema
6vmgXPwcz7WrTvJHU+X6s0vxnNX1Lz8v0fbgRfmHMmY6dPU5m8HiXHMLudNp
05YydrGdrWXkCHEOaupFxEZ1LWPG9g/zXtmJczPA8aZHYJJy/nqOGbpty1/+
7tzCkZbFLqXM9tu5IWMDxbnsXmV682KbUma0pGvCH5HiHNea79Q0NUrOTD/v
7dLqtTj3E7/0H+3mKGcuJVsvd1P5y+9t5cvmL1eXMwvj8evUtcX8cE9v/9Lw
qyUs841sZ2wfMW+4R5bGuFiXMCOLV++PmYn5JCV/UEzKNxnzGdL4XWNXMc+k
697IneYrY0dn3Lv+ZoaYf7Yb/Kl/w0DGLBQ3He6tFPOSZfWn6jrSYnbbaWFZ
/XgxX50/3/V+68vFLDjYbmbfHmI9bNe58gcOxcwlbFj4k3wxv8kGy0Yu1itm
/m0DJtSPFD/3dqw3p8+7D8r90zJdbrdCzIHW2a03DjkhZZ6jFizWbirmRqNz
hZOu2UlZ+ZBNJxdfFz9v/zF9nvfWzsp6tOTUzqNiLrW9M9r+TlER8z85Le6k
t/jzUabPG82fdl6ZhxsayCKYmG+t1rYJTHMqYp6Wy+sa6Ih52EFW2eGoWRHL
DYjbXT1W/H6BedT0xrtUi5hDyN3eoTpiru6/JnZirFy5n8c8PPrglJjDbQ+W
L1S7L2H+hTeq+0eK36dwrDqmsemU8r9PqbPYqZNYr7Fpnnl+v4SV77MyHpkp
5ny7Js7JZT4SFmbcpd7lq/++Tj0O9bzU66TeF3UdqOtGXWfqvlD3kbrv1Dqh
1hW1Dql1S61zal9Q+4jad9Q+pfY11QeovkH1GaovUX2M6ntUn6T6KtWHqb5N
9XlqLlBzhJo7//ri59TvOjXXqDlIzU1qzlJzmZrj1NyncgKVK6gcQuUWKudQ
uYjKUVTuonIaleuoHEjlRipnUrn07zmWyr1UTqZyNZXDqdxO5XzqXECdI6hz
B3VOoc411Dno93X7p4atlI4unCTntDKWN+t3R8JpUt70/uiJ+ZzmyQtqDgwv
FNS0WrYjRDeXfauWP5let0iwdZshZz5XZzPJrvxP6hOlglbzp3bJUs9g3+5d
NbuysliwdeLXoT/DXjOHNe5V5mtkgrln/Dv2CklhagMdR+2bWyKY+CBw+dmH
z9jkXo2ytHrKBdVrnhfPqfeIuQc3Vcn6LBfUH37tV7HJQ9ZpWaNPG2JKBS+q
Ht9noXqX6Uj6pzpYlQl6Dtrf1G15BDMsCC4yLS0TTDkus5A9uMRi38123bpZ
Iahi4jgnauxR4Xpnnumr7iblz2Unqlbe9+jH1+MHLghetLOWzw1GDDk9430t
/w5R4aO703X5uulT6zTH+bV8nzcwTG/jS37/dm/V9I/UkbX8ncDUmZ/bXOD7
g3TJrc6Xe/F1C7dXX1PP8H1mzfJm/kyXr0tPJ59dvZfvV5uGdbk6U62Wv1t+
MCpx3L5a/v2Ub8W7qpvy9UYXCxIUfnxfdcqR5nVqztdNPp5cvHw/37eDi5uX
jWjK1xf2OViUHVzL78m+sQnLMuTrVnPn7Pa6Wsu/dxPf1rmRAV93smmspRXH
z6/cmTb7Pgzg6+s7X+lxKaGWz/3eaPjW2NXyd8u1O4R6Z9UyZ386bzy9nK+3
uD1+1rCmYl1rmNfMEXeU6z/gaUEHG3G+B6856mu2QsH8dT2yQwLEPJDbZtdb
r04KFhZp1y3piZgrOukcjZuVVcYsbGuki7XFuuf5sHreu5Q5JHhI4xfTxHwy
qP/uq+NNy1gjlVl97gWLeabpRe/csC+lTOesbd+hJWL+GRTR/9rlS6XMZ+TW
8J7dxXpTrUkvV85X/vdm1rvbuok5KvnX96ifHUqZ56+1r2sSxNwVt3v826kp
crYkJ/p8eiOxHlJvRFX8fjlr1/j4Yienv/ycp57mKB0LOQu2v3XBNkLMgTll
bQZGN5Cz7mmRXnbNxHqnuOCZGSkl7HFRy0VavmKejFRJn9Vrh7Jep+0SeZKY
P8vDIroFTC5h06NG5Stsxbpn8eKNik4lLPbR9oj0p2KOTcxlWYnlMlZ+XVv7
4wyx7r/2TOL8RBmT/nG4vEoh5mG/9znW7QOU/ffa5ZExK8X60M4ekVkbZcz/
mbFF8ECxrm93avbt+cq+Pa2ZLKlKzNuqTy0Wj7eXsRZfB26Lzvv3depxqOel
Xif1vqjrQF036jpT94W6j9R9p9YJta6odUitW2qdk/uC2kfEvqP2KbWvqT5A
9Q2qz/z33eH60u861ceovkf1SaqvUn2Y6ttUn6fmAjVHqLlDzSlqrlFzkJqb
1Jyl5jI1x6m5T+UEKldQOYTKLVTOoXIRlaOo3EXlNCrXUTnw77mRyplULqVy
LJV7qZxM5Woqh1O5ncr55LmAOEdQ5w7qnEKda6hz0O/r/z+16brsD9sCpJxq
RoNTZnYu5DTMml0zdXO+4PChrg22PPzAAvyWjR37pUAwpFeuRhu/XJYe7OjS
vLNEcFOnpGsvz+Uw9yvT1G/qFgkG/KjOzj2Yzaxfnmrw6UWRoNYeHYWuv3I+
LHplM3mzVPSlTwvVHenMsyD0VpZWseikqszVf6YynaSukw4p9+Fvg48faWza
7jXLidwYrt9ZJrj0zZ7C3edeMruWLst7X5QJ/nj25701DVOYc3idbdOMSgRX
P/tcWZGTxN4eqrHMPlsi+GqTxogPXZ+yAO3qOvc6yQX3jOzzab/1I9a/67wz
v67KBZP63elbtyKOBRpP61Cne6mg49VPM782f8DKB+1cUBhYKhjrdGkquxfN
HJrUN41pUCboue7Fr0Z3b7HkyzM9X68pE1zyM/x7G+8b7Om8h6rab8sEddIS
Z7edfYXptDry+exAhaCKdfpXn+ozzLbRpHZFpxSCKqtOulypf0BYL16bN8mP
1NTy9+GDZ0+4so2v+5uZz0prydfDsuzLEwJr+bugS46reXTi6xbNnj7oconv
V7na+06dGF7LufKL1WK3aL4fnniof3epCV8PC9Jb/0NWy/fT0+q0eLSdry+5
FTLsogFfT5nZe9qwR3w/b6Tpf+Pxqlr+jn39KtOJqrV8/3GliZ7tDX6OuJxa
eDDKhq9vKlu0nn3m59TbG9IZj87wdf9zNu7lFrX8XLdZs5Z9Ffx8NFUZV23s
zddH+392uDqMr1/80OnEy1f8XH5r23ziwg18fYrdz8kP2tXyeePOzOoG1/k8
cHHO4sE3Hfj6p7dt5Bcr+LzxeGTT+XXDa/k9wXib3YfN+br0tkua59da/n1b
tVXfgg/z9aMmqyXnx/N1l8yo49EVfL7SmNvp0rMzfL1Fg50Fb6z4ukPLQ+o2
Knx9yfKCeavu1fJ3LzMPpT4K4OtL2uSYeE3g64163W9e2pOvT9lwt37h91p+
D6L9uWrtl3zdv9/VyYUP+PrFGJ8ON2/98zr1ONTzUq+Tel/UdSCvG3GdqftC
3UfqvlPrhFpX1Dqk1i21zql9Qe0jat9R+5Ta11QfoPoG1WeovkT1MarvUX2S
6qtUH6b6NtXnqblAzRFq7lBzippr1Byk5iY1Z6m5TM1xau5TOYHKFX/PIVRu
oXIOlYuoHEXlLiqnUbmOyoFUbqRyJpVLqRxL5V4qJ1O5msrhVG6ncj51LqDO
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
RtjAS5m8lvdXLQq/xxubYJ9kEcSbc//zmb0evOlFxl8C5/D6fzqaFGTO69fV
0+dcH16HZPmuoIa8pg26JhhWyjmzc2IfzZXwLvjV6NawNN6e197XrZvI6924
Q9uC+/9c6nGo56VeJ/W+qOtAXTfqOlP3hbqP1H2n1gm1rqh1SK1bap1T+4La
R9S+o/Ypta+pPkD1DarPUH2J6mP/6f4KIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYT/U/8vP1G+pA==
      "], {{0, 0}, {142, 
      141}}, {0, 1}], {
      LineBox[{{1, 75}, {141, 75}}], 
      InsetBox[
       FormBox["\"+5.37 \:041c\:041f\:0430\"", TraditionalForm], {3, 76}], 
      LineBox[{{1, 69}, {141, 69}}], 
      InsetBox[
       FormBox["\"+3.49 \:041c\:041f\:0430\"", TraditionalForm], {3, 70}], 
      LineBox[{{1, 66}, {141, 66}}], 
      InsetBox[
       FormBox["\"+6.32 \:041c\:041f\:0430\"", TraditionalForm], {3, 67}], 
      LineBox[{{1, 64}, {141, 64}}], 
      InsetBox[
       FormBox["\"+4.66 \:041c\:041f\:0430\"", TraditionalForm], {3, 65}]}}, {
    Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
     Automatic, FrameTicks -> {{{{140.5, 
          FormBox[
           RowBox[{"-", "180.198`"}], TraditionalForm]}, {105.5, 
          FormBox[
           RowBox[{"-", "90.099`"}], TraditionalForm]}, {70.5, 
          FormBox["0", TraditionalForm]}, {35.5, 
          FormBox["90.099`", TraditionalForm]}, {0.5, 
          FormBox["180.198`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "180.198`"}], TraditionalForm]}, {35.5, 
          FormBox[
           RowBox[{"-", "90.099`"}], TraditionalForm]}, {70.5, 
          FormBox["0", TraditionalForm]}, {105.5, 
          FormBox["90.099`", TraditionalForm]}, {140.5, 
          FormBox["180.198`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 35.5, 70.5, 105.5, 140.5}, {0.5, 35.5, 70.5, 105.5, 
      140.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
       TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -142.75933052895368`}, 
                    Offset[{4., 0}, {7.5, -142.75933052895368`}]}, {{7.5, 
                    1.9813389420926342`}, 
                    Offset[{4., 0}, {7.5, 1.9813389420926342`}]}, {{7.5, 
                    146.72200841313884`}, 
                    Offset[{4., 0}, {7.5, 146.72200841313884`}]}, {{7.5, 
                    275.38038127629125`}, 
                    Offset[{4., 0}, {7.5, 275.38038127629125`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -142.75933052895368`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.8\"", 1.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 1.9813389420926342`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.7\"", 2.7, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 146.72200841313884`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"3.5\"", 3.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 275.38038127629125`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6258614517139534`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.7517229034279066`", ",", "1.8`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8775843551418598`", ",", "2.7`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9894612011098184`", ",", "3.5`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.760780155299864*^9, 
  3.760780163895626*^9}},ExpressionUUID->"aa956dd2-8049-46bc-869d-\
1ab93a5016c6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1:eJzt3QlUzW3bP/xMIZkTMhR1ZSoyhzjLkKSUKWTKlKmICBEhSURkjIjM5IoS
EkWDqQjNRKl2u92unSIhvPt578fvd63r7Fj3tdbz/t/7fdfzba17fe51rGvt
4fc7z+P4nrtBl/krJy2qp6Ki4qf8317l//7r///rq5xBCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEP5vNz/L0mZ2roJz0PvcDMlZ3tb6bePV1/J2in9ytp4572Vz87rd
u/LG6r4+06jlP5d6HOp5qddJvS/qOvyn7w+EEEIIIYT/T+pQteh1W5mCU2Vt
QUm7K7zfUnzGu8zgtU1bqdG4Dm+i/rnXFsFlnG5bTsu6Ml7D0+3tbr8s5XTe
lrjR3I131Kz1Jme787q9m/hr7hs5p8cfHd+d38Nrqb9DZ99c3u3NXzhk9OYN
PtqpcaQ6r5uZ4ntqUQln5Y2+gxISef3SEm5KzvGGj+u3RWUrr/3ByE2mTrxD
5x7xV1/wz6Ueh3pe6nVS74u6DtR1o64zdV+o+0jdd2qdUOuKWofUuqXWObUv
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
i63ymCR0p3FBSqGgVdUSu8l+75hups6jDs2KBA+vC7p8NS2baW73aNzva5Fg
tNvO/KUamax/u1tL9LOkgo63shP2rEljTcvztxtcKRbM6jNljfvPV8xw++q6
2XNlghvcLlavyk1hraM756l1LhHcc2Tsnfvjk1lri0MXZj8pEdxj49nq+dgn
zNM8pd+tjXJBlRmdX0S0T2CS3Y1i3ncqFQy8nbTjgdUDZv/GOzPpcalg0q3Q
rEWHo1jA64sVKf3LBNu10QwecOAm86s0idmh7Ju/Tek5rpXbqKusynnXFoWN
QjA3rFOTPVuDmVHTJk7P0hWCKh0jv6wo2izcT53vvgXdgvh+O8UwuEqthO/P
TtpLhlRO5OtHV2xa0zKc7/+xu6TldZrxdflRl69NlvHzxXiQ5dukHH5OeT01
ljpM4uvr9eaaOb/g52NsyOa6ZWP4elhsy8RT9/j569BcNffUIL5+ceHOJt/C
+LmvUr3x7spOfD1au0tQ8+t8rrDdkn1lWje+Hn059eTmk3yeWePcNXjTH7Xk
nHkLsx8H8Xlp9LNurdp15uuZ6t1+aR/hc5r/vZOT4rX5+u0H3n02+/L5MP7I
F9lhdb4+Ov+y6bH1fC5d2H7e/tOf8rj6dFPdNZob+HqSvkbToKZ83bPfRevd
Xrlc/e3qtIJALbEeHPhzXYsHCua/rabXpfnvhXqkz+f9PeYp2OO0QnnR6ndC
Pbyz35dPrRUsNil3WcH1HDFXtNxnMya5jC25UmhuWEesv3aVzM5YU8b8u8Qu
09J7K9T9OmzbrdujjOWOTnib6fhGqAfav5hUP7OUec5XfaF2Iluo66TJ94fv
VOYGjRS56essoZ5+5W6XScal7Kjh1CnJ6mLd3HZPUpNyOQt7PGdLp+mZQt26
w9i2pRflzDS+b5Tt+QyhHlVmqfd1lpylTLmbvUKaLtTrbVy2ZkM7OfPprxbS
Z7hYz831zt37poQZ9ZvYt/Bsmlh3SrUcFKist2h9d2cdsT65e7M7CfYlLGVh
yISy+alCXa3iWJh32xLWLsfzTkrUa6H+1FO9w9x8Gas2OxXnbCzWh6/MnZ0Y
I2PtNK/LVr5/JdQd9BZr7D0rY+XZdfovOP7v69TjUM9LvU7qfVHXgbpu1HWm
7gt1H6n7Tq0Tal1R65Bat9Q6p/YFtY+ofUft03998fv6d53qA1TfoPoM1Zeo
Pkb1PapPUn2V6sNU36b6PDUXqDlCzh1iTlFzjZqD1Nyk5iw1l6k5Ts19KidQ
uYLKIVRuoXIOlYv+nqOo3EXlNCrXUTmQyo1UzqRyKZVjqdxL5WQqV1M5nMrt
VM6nzgXUOYI6d1DnFOpc8/v+/k/V2RrqnT5BwZn05cD3jLVFnLkLnnf5EZ/P
OURrybNLLwoEL2XmT9j6OJc9TVZvMvGERDDkcNY79V5vma1thmxYB6lgi+bu
zOpaBvM2znDfMqVY0NnOfd/WuqnMfPnZzz88ZYKG91tpq3qkMJ17a3NfBJQI
mu4ffk9n11Om23dkl1+H5YIGWauNG7jFM78kl2X+ynn02yVLI+sOO3ePmZt8
Pr1nVJlgmMHWJUvSIljoy64q6Y0VginTomsUrS8wu3MDVgTeUwh6/jK7qinx
Ea5rzXA2XGcVf3456GFouewKv09H+1np1UmqpQ+0Nxj5opzvG9FrF/Zv0YWv
b5JunNHPtZbP2a5OjA/L4PtY+bL9S3fp8HWdbk8an9jG90mDGY/u787g+23H
hqnbMgfy9VmdN6eYBdXyeabFo9mvqvi5kJkZ5P7Kga+bfvRY1ziJnzt6m370
9TDm6+sn1j2VtZOfaycGyVveK+LnY/XQjpp35/L16aeGKY5H1XKOOP38aagm
X/cMTNp3ypef44/NJ935U8rnhIic7JwEO7HuNyq77d5iZf+9eHpY/iMxh4QO
a+/WwUfZt9uwC6NTxdyi49VMr3M3BbO11LN/lifmHEnHqC6HE8uYqcXEKevK
/3IueOCg4+OozFf5H22nqIj182dT+tdtWMaCj+/auqOlmLuqjN53+HlauU++
hY75riHmtMANd3fcG6dcr2FTns8wFnOdYXoTr+pCOXM50smydISYDx3TH9zP
2KZcr0cLZnUYK+ZJjwm+BlsM5Mw4foZi+Eoxf37rvM0j6GkJc7FOuLPLXcyx
dtc9pbNWlrDpd83GLDks5mHVP/5I3dWohPm/nXVg+qG/5OfmgZ49T8iYrf5W
s2XeYg7PHTHZaoeJjBl1ShlhfeSl+L4qXpXeUhQzzzn7Xo3PSBHqTR+Y9T4a
UsyC5591rWkn1mWTv2wfPr2Y+YekBvS/81zM2z2qZ+a3L2YtkjOfuWxNFq+z
2Ug2I0WqvC/jTe63TBLzp/2sidV+UqaTkHw4K+GpeL4Y97FlhLmU5a6InOE1
74lQ963KDn2gImVhKeaLHtd7LNT1910LnviwiMU+W6J79FmiUE/6Pqbtsf3K
fVgye82PjATx/Wr/jF5mq6yfrAprcyBeqCde1+s0sq2y36+/td9yTZx4/f+M
DVwkkbAwp7gGNVseCvWedS+XZF2RsBS1SYFmMx8IdZOkejM13CXM6EerR4vm
x4qv57DGzQHTlfu8ILlV89Ux/7ZOPQ71vNTrpN4XdR2o60ZdZ+q+UPeRuu/U
OqHWFbUOqXVLrXNqX1D7iNp31D6l9jXVB6i+QfUZqi9RfYzqe1SfpPoq1Yep
vk31+X998XPhd52aI9TcoeYUNdeoOUjNTWrOUnOZmuPU3KdyApUrqBxC5RYq
51C5iMpRVO6ichqV66gcSOXGv+dMKpdSOZbKvVROpnI1lcOp3E7lfOpcQJ0j
qHMHdU6hzjXUOej3df6nhheYXku8JOM8n/UsSVJHwrnhcvGeG9fyBcd5njb4
tOEDC9yuv+JOXYlg/7V7br7+ksMq2771WZFfJKh/e/miiKmZzHVytPd9n2LB
8w2eLY9f9JoNrXC/+qdcJnh+UufPea7PWW7Nrss/x8oFY1vFqzSyTWRRpvIZ
NRtLBa2+yB/3MrrPgosr1NO8ywQ91YMW1rt2nbm4PX8dNVchqPJs3Lhq9ZPC
9TBOsQhX/Mmfg6Zf9NBYfqaW79foH3duf7iW79ePbWppv4vfLxGa1mZDw/h9
V111oXRFCb9Pk6w35ttr8PX6L6/5tZnO94GkTm/DXxzh+4b0RINGMdl8/9Fz
kQyP78PXdb59sPJx4ftYfe1H7+Ie1tInNXXP91Lh6408Nk7QteP77YC8OalT
btbyuV9FhlffX3yfl7+46JY7kq+ruDTLsj/Pz5GzHweeOl2Pr9ecXjnHZbw4
jyp9D6w6k6pgDjPLOhwOEOdauHHzVTmLFSy26fnAS9vFOeipNqhNx7oKZqrV
cKD5DnFuuj7wumAapFxv+c/OdNklztkfJZdna/cvY9XWvZY93yLOa7dc2wfB
caWse1/L/JZLxfmuUnPM8b29cj1VeXr2XiDmAVdbV5/H1XKmM05n6mdnMT8Y
NV/6uM1uOas+p7o2cqaYN2zHX37dSE/OLKJ7tNS0F/OJ6s+7p1beKmEtvk9t
fsRSzDOSDx9yJoxR9sHBt3qOMRTzz6Dod+NysmTMJ/2q8SUdMS/dG7HBt3SJ
jGV27JM9UVXMV99UtCdlq8mYyzbr5C4dxDy2YOxuxcmYYra+31u7pnPF/Nbi
mnZ82YpiZut4MvVSzxdiXnXO33izVTGL7bJq+e7ZYm5UNTSqPyxOmT/zyjW6
pTwT70v7GY4z10iZ55Z7vx6PEXOpVtmZyR30lfXzvc/43Bfz7bcPGusdXylz
9Yol01U6PhLqHa9FyRdsKWL+judOVW4S83PHbfMTuhgq677y7It5Yg4Pf5L3
4FiahHmWL3miYvCX3J6jszhztYTlTjlbb+gIMf+766okbu4jYbHz60RXZt8T
6gG5xpHTKgtZbIJxZ+etd8X73qPaec3tQuZ58vr4PQPuiDn/wqEF8s3K/bY3
M3/Y50hxXS1rMLDSvJAFdx/UyjMhQqir23dpfl9T+The1kec8m+IeX7AipNr
pQXMtNkEo6Ma18X83Ofbx/GRBczzxu6isuHXhPrV2x0Hh3sr684jJqh4Xxbq
5j+ujzW3V9afFB3zaHpBvO/J34eM7lfAYptc3TmlNESoh7x+0MJUT1n30bOp
k3bm39apx6Gel3qd1PuirgN13ajrTN0X6j5S951aJ9S6otYhtW6pdU7tC2of
UfuO2qfUvqb6ANU3qD5D9SWqj1F9j+qTVF+l+jDVt6k+T80Fao5Qc4eaU9Rc
o+bgv774ufm7Ts1Zai5Tc5ya+1ROoHIFlUOo3ELlHCoXUTmKyl1kTiNyHZUD
qdxI5Uwql1I59u+5l8rJVK6mcjiV26mcT50LqHMEde6gzinUuYY6B/2+Pv9U
x4o7n37pFXPOeuVSHlxUwJnb9OI17wWiRiX1vt1clsde35juqXgtEfQu+ry5
r9cbptm34NjXq1LBe06T+7X+msYqzbxKdSbJBPWHug4OavySuacseliRVSKo
3ylolU3BYxb6K82ml1Wp4Kc6NTo1g2KZYVNJYoVHmaB03uDQk+2Uc6/DrbvN
9ihEyy8nm9w7JLzvRtu2NKicy5+bRnuVnYkxrOX3WYp/PVPT5NenV6zumjUN
+fUcnGPKerfl1//oNr+cbU1q2UcX+lg+cazl++ZTutlc9ub3abVksFqDJ/y+
nt4/7+azX3x/sFpl0T1rSC1941sznxdutfSZ7B2OhxL4fuXQ1iHQqyFfb3dM
t2HVKL7vpTZo12PKNr5PWkhbxl18yfdbq+enXgZ15esmzZa967BW7OfWr2b2
H5arnAt+i1QOhon9P9ljWadebgrmOdT3yfIL4rww3aqwqPlWxnTi7CLdXMX5
MmjGx2NaAWWs0dw3ng9XivPI5X3LyLpaZezoNYNHqmbi/PL2n7ZVJ6KU2Rbb
j5o48i/noCOvD3wfWco8v7ZQrOkmzsfctmdePcyUs7Bhh5oVdRLnadDp1W6W
K+Ws0cHO3YdqivPX2fCpq8O3Eua/akOXjx/FOa5/8Z6qxYES5qCX3SKiVJz7
wTsPakfqKef+5MoJj96IOcHZouWd/VdkrMXAKxPkV8VcYe3+x8Z6/WUs9npO
uM8WMYeojFsy3SmrmHlG1s/Ze0rMLVqHqlQ2eivrxSn1FweLOWfUpI6vtAco
889xP61T9cXPw4Nu564zfytlLY4vmOZgLX6uruZvYl5vh5QZpfSe2+KYmLtK
ZzqPXDlAyoKfdbUyUP3L91/2bI2f966Ihd3fmS6dJua62OJVOgqfIhbrP+TM
latiDgyWPbqtM6CI6RwqOh5SX/z+wuHBx/bfSZaw8jY/M07VF3Om+akZjVWW
SJhDx9jeKo3EXKrz5YuPUxcJM73w54zhE8Qca/ImbdWNvELm4G+/ujolSswh
0sNHss4oc3L7wpIts24LddmTAy5fFxYynfy7i+5/vCnUl53Nd27RVVl3KrA8
OyVczD/nOjexyVXuq3X9VmrGhQn1moXXtr8/pTxH5J8a5+ZxVajrxtyeV+Sg
rJetONP6gHiOcFdZvXNBW+V5obH0YOLr0+K6zVtaoVum3J/Dd+cGDQwS16fK
yF+/EpV1XdsPv9oeEepWmz4UzzmjrDst2J06Z79Q79lh98IYT2XdY/3yF8N8
hPoJ9emjc2cp6x8a3uqp7i6+r8aLkgaOUNZjj9Rs9p4p1Pv/319/7xd0nXoc
6nmp10m9L+o6UNeNus7UfaHuI3XfqXVCrStqHVLrllrn1L6g9hG176h9Su1r
qg9QfYPqM1RfovoY1feoPkn1VaoPU32b6vPUXKDmCDV3qDlFzTVqDlJzk5qz
1Fz+1xc/x3/XqblP5QQqV1A5hMotVM6hchGVo6jcReU0MtcROZDKjVTOpHIp
lWOp3MvlZCJXUzmcyu1UzqfOBdQ5gjp3UOcU6lxDnYN+X4d/aj39o3O3b5Ry
mtbf0c1/dgHnAi3TeRoxossztVfMy8tl2e0TE6N6FQm63gi98mJTNisfFrwv
rV6xoJGV9sQtn1JZ1N67g1KvyQTPXwi8pVr0gk3Oa11hZiQXVL/tM3nNu0RW
mn/h3PvTpYJS2y4mXkuj2eQiV/MDsWWCRrZdF42rCGW5XdR8biYrBFWs+tfI
32wT3rf6FJNe1tX8+jlYpB7kkc6vt0zfYb4Zx/j1mRr/9lG9EH49x75q8EfP
u/z69zcIfdA6r5bvL88flW2kXsvv275b43DZgN93YXua95vhwO/T9Q0r3yaf
5/e1NLYgf3Qe3x/axRiYjdDn655t39tdmMP3mYtRWTUNTvP9KmmM+t0jhXx/
87naLGSbXi2/D268rsUHJ75Ptts7oqv9n3y/tX0Zf+lkd7E+dL7G5keXFMz/
c7+7q7uLfTvQoX247VBln18VE/OkpdjnEzf7ebyIKWPl0Xl3vN+L80J30dOn
uyeVscyar+6zn4vzxX5ii/cTJKXM4dlFw4QYcR5ZT7X63GBjKTNNG1G4N1yc
X0371dgFqJUyHQ+3GS6Bf/n+0a6fEvXTclZtt8ks+IA4H00d9gy3NZaz4PJ3
xx7vET/nLP1UeFI/voTZFozwc1gmzlnZ93bHi+aXsMdr79cbtU6cy512Pt/+
vVjGHk/0evLJQpzjDts7HDq3SsZcHsd/6tRRnPvhz7qlDGslY6YeC3wOGf7l
53m0qlxX3ClmKWZFXQ7aiLnCXtI833xxMYvdYrNyfn0xh3SaVydmc+Ni5l+o
endDH/Fz5sBFFY2cbivXa81dg46B4ufSsdOGu6XPk7LYyH42RsViXpKMOnwp
uYmUeU5W2NQfJn7ufX7Ws8i5kUXM9EX1/nf7xJ+ncpMcke+cV8RsPb+cvFAk
5rfy1k/nTGmqzGkLKrLOjRQ/h4/NDF12M1zCYoctarN7m/jzYMGn2qWcnaDM
kyZVOi6txJ8r8+1sv/95M2We7LsjtOXBaKHuejBs47MXyryaVJha0UnMpZpO
Hycc2l3Ico1XtElzvSVe/8DL2S4TCllsw8u+S1qIuTfpk/fJierK/eY/pq/R
RvH7HbERL26ve6nM5807GYf2FnO11Ycf0QX7lfvwWlrcu0VXhPoC6+0Hro39
r+/XjFwdcuycUM9+vzFzThPlf+8RWrwkP1jM273a9xuZr9y378peT9t2XFyH
Cb7P1txT1l9dS2aBh4T6N68f++cHKuuPTrxw1PYX149OfM0Jd2Xd2PJHs4ne
Yo6dJvdpskhZ940MGNhti3i/LAqfhUxQ1i2tV87VXyXU873DjrwZrayfuHjC
o5Xjv61Tj0M9L/U6qfdFXQfqulHXmbov1H2k7ju1Tqh1Ra1Dat1S65zaF9Q+
ovYdtU+pfU31AapvUH2G6ktUH6P6HtUnqb5K9WGqb1N9npoL1Byh5g41p6i5
Rs1Bam5Sc5aay//64uf47zo196mcQOUKKodQuYXKOVQuonIUlbuonEblOioH
UrmRyplULqVyLJV7/56TqVxN5XAytxM5nzoXUOcI6txBnVOocw11Dvp9Hf6p
QZ/UlxWekXKqLvCq935LAefhiLpGvsdFO3/8fitMM48l1/lY8LhaIhj4zWDi
uTZvWOISs6l6SVLB0IRhKgHH01hrb8+165bLBBOdN586di+FOQ3T2flVUiK4
+viINP3Dj5nj6ydn70wqFQxsMkb3fPNYFhzqPC9leZmg59s3K4ZV3GAe+/1O
71+sEAy+vebm9YMnhPdtq7Zl0t2D/PenNhU7SK658OcsrwIj2bM5tfx+04se
W3ua1/L91pWORXuX8uv59vfGN0IP1PI5g0vpLsmLWv5+wqgXe/vU5eue3113
FTJ+P1pofC1ftaGW/ZtaoD8qgd/vjw0839+uX8vnLQ2DZ1ZM5ftGUr+Wv3Ze
4vvP9AA1W/Vyvl/pnKwq22vM11sU3Bjo6cv3PZMM+8U93tXyc+A5X46qDuPr
6r1dhmft5/uwU8cbZ4tVxHr+2A9lzQIV7Hb4wKl/1BH7fKfeg57M6a1gFq4N
v8grxc/fSp/Paulzq4zZNljSK/WpOEdKz8+6UjVDWT+9+Ko0V5w7k1MP7O76
sZSltFLMSs8W51RAbLp04L5S5pLXLlFVIs41ycLQ2z+7KefdpuvJNfniHNRs
5S3f+UDOjA1tXrzOF+dmkF2LqHNT5cwns/vEzuninD2v+rXtpvISFuxfNmxQ
ljiX47ptOCndXcKW5Pfek5AjzvEoNRVWZVjCUrQ8g4oqxLlvNLF75cDbMlb9
tOC9d5KYE5w/JM9pOk7GWkTWdT4dKeaKbEfLlfHVxUynzlDNklIxh5R3beP7
8kQxm54xIKtJI7GuO6jlrx3WxSysmd33oO3i58YpO9N9Hv6UshYXjK4mfRU/
Z65su6jbzjBljlr3NT5ktZiXVPK2j6xaolz3iwKsXqiLn1e7131l+raNlDmo
a422dhbzmMr4OM8t//X54LqU7R4KMb/JTyuiY9cVseAe18Li7MTPz03vzW/2
SF+Z926Ujs1/IOZDpyP5byPeSpjO51W2Pjbi5/NhUZIJtlslzOXcVt/93uLn
+U8bNXfpMkTCcqcddpgw7L54HQ7vchvys5A55Mw9PaJM/Pmuq5uijXbGK3Py
u1lFY0PFnwcLzLB5b31AuQ+dOt9RuyXmZJU/o9vsm6msp8/JOhwg5upvswyf
XTFQPs7pBMXN++L3NezVapYnflXm9sWZg2MfiD/P1nHZsDVWT5RzxfKsxtc7
fwp1k8LGG15dUJ4LpAlrVnUMFdetj0P9Mx7K/X/Dd9rFlEviOj+ecOHJUuXj
d3Pp8GDURaGufva7ZewE5X//8uKbBt3Oi/d9w/qwPUz5vF5Ln/yoOvtv69Tj
UM9LvU7qfVHXgbpu1HWm7gt1H6n7Tq0Tal1R65Bat9Q6p/YFtY/IfUfsU2pf
U32A6htUn6H6EtXHqL5H9Umqr1J9mOrbVJ+n5gI1R6i5Q80paq5Rc5Cam/99
F7g5+7tOzWVqjlNzn8oJVK6gcgiZW4icQ+UiKkdRuYvKaVSuo3IglRupnEnl
UirHUrn37zmZytVUDqdyO5XzqXMBdY6gzh3UOYU611DnoN/X4Z8a+bLy7uiz
xZyJ2ybFmU8u5Nww9Kj3e40CwXEXO0SG5eYxrYtuVldsJYLhDU9o/WyawxJH
WX+qVJ7Df3t1QDtdvQ0ZLKz3wSmrIooFy11H1b364RWrvN1rqcMvmaDV5a8+
9+o9Z6ojNhm2NZMLZu/WVKzZkMjMb/SKDplXKhhxttJwslMMc94TP3DMsDJB
6bIn7g+Mb7JloWcaBmopBHXux1js23qOOap9ed1ZphBU6X9bNW+Ji3Cdqk06
FpZ0589fwTMrsxzH1PL3YV5YjkxYzK9bnYHnfEav59e5wYm8n5ejavn7Nllb
3stUavm5WdYuik3i99fC5gEDdx+p5ftczb4VzCmq5e/W9h8w+IItX5fbPH5y
4lwtv1c13sTzaCnfT/ZsTT/Z3I6vR9zXMEi9zfcrnxWNUx+3qeXv/ZZHaNTb
xPe96v2Lt494W8vnS3c3HLg3ha9/Cj24wyKslt+3umDia9iUr5vG9NQx3FbL
34/aeMgmvpyfC6NVLBI9HcT6j/afdX9UKFh1bEHW+vfi3Om5puyYZ4CCLema
6vmgXPwcz7WrTvJHU+X6s0vxnNX1Lz8v0fbgRfmHMmY6dPU5m8HiXHMLudNp
05YydrGdrWXkCHEOaupFxEZ1LWPG9g/zXtmJczPA8aZHYJJy/nqOGbpty1/+
7tzCkZbFLqXM9tu5IWMDxbnsXmV682KbUma0pGvCH5HiHNea79Q0NUrOTD/v
7dLqtTj3E7/0H+3mKGcuJVsvd1P5y+9t5cvmL1eXMwvj8evUtcX8cE9v/9Lw
qyUs841sZ2wfMW+4R5bGuFiXMCOLV++PmYn5JCV/UEzKNxnzGdL4XWNXMc+k
697IneYrY0dn3Lv+ZoaYf7Yb/Kl/w0DGLBQ3He6tFPOSZfWn6jrSYnbbaWFZ
/XgxX50/3/V+68vFLDjYbmbfHmI9bNe58gcOxcwlbFj4k3wxv8kGy0Yu1itm
/m0DJtSPFD/3dqw3p8+7D8r90zJdbrdCzIHW2a03DjkhZZ6jFizWbirmRqNz
hZOu2UlZ+ZBNJxdfFz9v/zF9nvfWzsp6tOTUzqNiLrW9M9r+TlER8z85Le6k
t/jzUabPG82fdl6ZhxsayCKYmG+t1rYJTHMqYp6Wy+sa6Ih52EFW2eGoWRHL
DYjbXT1W/H6BedT0xrtUi5hDyN3eoTpiru6/JnZirFy5n8c8PPrglJjDbQ+W
L1S7L2H+hTeq+0eK36dwrDqmsemU8r9PqbPYqZNYr7Fpnnl+v4SV77MyHpkp
5ny7Js7JZT4SFmbcpd7lq/++Tj0O9bzU66TeF3UdqOtGXWfqvlD3kbrv1Dqh
1hW1Dql1S61zal9Q+4jad9Q+pfY11QeovkH1GaovUX2M6ntUn6T6KtWHqb5N
9XlqLlBzhJo7//ri59TvOjXXqDlIzU1qzlJzmZrj1NyncgKVK6gcQuUWKudQ
uYjKUVTuonIaleuoHEjlRipnUrn07zmWyr1UTqZyNZXDqdxO5XzqXECdI6hz
B3VOoc411Dno93X7p4atlI4unCTntDKWN+t3R8JpUt70/uiJ+ZzmyQtqDgwv
FNS0WrYjRDeXfauWP5let0iwdZshZz5XZzPJrvxP6hOlglbzp3bJUs9g3+5d
NbuysliwdeLXoT/DXjOHNe5V5mtkgrln/Dv2CklhagMdR+2bWyKY+CBw+dmH
z9jkXo2ytHrKBdVrnhfPqfeIuQc3Vcn6LBfUH37tV7HJQ9ZpWaNPG2JKBS+q
Ht9noXqX6Uj6pzpYlQl6Dtrf1G15BDMsCC4yLS0TTDkus5A9uMRi38123bpZ
Iahi4jgnauxR4Xpnnumr7iblz2Unqlbe9+jH1+MHLghetLOWzw1GDDk9430t
/w5R4aO703X5uulT6zTH+bV8nzcwTG/jS37/dm/V9I/UkbX8ncDUmZ/bXOD7
g3TJrc6Xe/F1C7dXX1PP8H1mzfJm/kyXr0tPJ59dvZfvV5uGdbk6U62Wv1t+
MCpx3L5a/v2Ub8W7qpvy9UYXCxIUfnxfdcqR5nVqztdNPp5cvHw/37eDi5uX
jWjK1xf2OViUHVzL78m+sQnLMuTrVnPn7Pa6Wsu/dxPf1rmRAV93smmspRXH
z6/cmTb7Pgzg6+s7X+lxKaGWz/3eaPjW2NXyd8u1O4R6Z9UyZ386bzy9nK+3
uD1+1rCmYl1rmNfMEXeU6z/gaUEHG3G+B6856mu2QsH8dT2yQwLEPJDbZtdb
r04KFhZp1y3piZgrOukcjZuVVcYsbGuki7XFuuf5sHreu5Q5JHhI4xfTxHwy
qP/uq+NNy1gjlVl97gWLeabpRe/csC+lTOesbd+hJWL+GRTR/9rlS6XMZ+TW
8J7dxXpTrUkvV85X/vdm1rvbuok5KvnX96ifHUqZ56+1r2sSxNwVt3v826kp
crYkJ/p8eiOxHlJvRFX8fjlr1/j4Yienv/ycp57mKB0LOQu2v3XBNkLMgTll
bQZGN5Cz7mmRXnbNxHqnuOCZGSkl7HFRy0VavmKejFRJn9Vrh7Jep+0SeZKY
P8vDIroFTC5h06NG5Stsxbpn8eKNik4lLPbR9oj0p2KOTcxlWYnlMlZ+XVv7
4wyx7r/2TOL8RBmT/nG4vEoh5mG/9znW7QOU/ffa5ZExK8X60M4ekVkbZcz/
mbFF8ECxrm93avbt+cq+Pa2ZLKlKzNuqTy0Wj7eXsRZfB26Lzvv3depxqOel
Xif1vqjrQF036jpT94W6j9R9p9YJta6odUitW2qdk/uC2kfEvqP2KbWvqT5A
9Q2qz/z33eH60u861ceovkf1SaqvUn2Y6ttUn6fmAjVHqLlDzSlqrlFzkJqb
1Jyl5jI1x6m5T+UEKldQOYTKLVTOoXIRlaOo3EXlNCrXUTnw77mRyplULqVy
LJV7qZxM5Woqh1O5ncr55LmAOEdQ5w7qnEKda6hz0O/r/z+16brsD9sCpJxq
RoNTZnYu5DTMml0zdXO+4PChrg22PPzAAvyWjR37pUAwpFeuRhu/XJYe7OjS
vLNEcFOnpGsvz+Uw9yvT1G/qFgkG/KjOzj2Yzaxfnmrw6UWRoNYeHYWuv3I+
LHplM3mzVPSlTwvVHenMsyD0VpZWseikqszVf6YynaSukw4p9+Fvg48faWza
7jXLidwYrt9ZJrj0zZ7C3edeMruWLst7X5QJ/nj25701DVOYc3idbdOMSgRX
P/tcWZGTxN4eqrHMPlsi+GqTxogPXZ+yAO3qOvc6yQX3jOzzab/1I9a/67wz
v67KBZP63elbtyKOBRpP61Cne6mg49VPM782f8DKB+1cUBhYKhjrdGkquxfN
HJrUN41pUCboue7Fr0Z3b7HkyzM9X68pE1zyM/x7G+8b7Om8h6rab8sEddIS
Z7edfYXptDry+exAhaCKdfpXn+ozzLbRpHZFpxSCKqtOulypf0BYL16bN8mP
1NTy9+GDZ0+4so2v+5uZz0prydfDsuzLEwJr+bugS46reXTi6xbNnj7oconv
V7na+06dGF7LufKL1WK3aL4fnniof3epCV8PC9Jb/0NWy/fT0+q0eLSdry+5
FTLsogFfT5nZe9qwR3w/b6Tpf+Pxqlr+jn39KtOJqrV8/3GliZ7tDX6OuJxa
eDDKhq9vKlu0nn3m59TbG9IZj87wdf9zNu7lFrX8XLdZs5Z9Ffx8NFUZV23s
zddH+392uDqMr1/80OnEy1f8XH5r23ziwg18fYrdz8kP2tXyeePOzOoG1/k8
cHHO4sE3Hfj6p7dt5Bcr+LzxeGTT+XXDa/k9wXib3YfN+br0tkua59da/n1b
tVXfgg/z9aMmqyXnx/N1l8yo49EVfL7SmNvp0rMzfL1Fg50Fb6z4ukPLQ+o2
Knx9yfKCeavu1fJ3LzMPpT4K4OtL2uSYeE3g64163W9e2pOvT9lwt37h91p+
D6L9uWrtl3zdv9/VyYUP+PrFGJ8ON2/98zr1ONTzUq+Tel/UdSCvG3GdqftC
3UfqvlPrhFpX1Dqk1i21zql9Qe0jat9R+5Ta11QfoPoG1WeovkT1MarvUX2S
6qtUH6b6NtXnqblAzRFq7lBzippr1Byk5iY1Z6m5TM1xau5TOYHKFX/PIVRu
oXIOlYuoHEXlLiqnUbmOyoFUbqRyJpVLqRxL5V4qJ1O5msrhVG6ncj51LqDO
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
RtjAS5m8lvdXLQq/xxubYJ9kEcSbc//zmb0evOlFxl8C5/D6fzqaFGTO69fV
0+dcH16HZPmuoIa8pg26JhhWyjmzc2IfzZXwLvjV6NawNN6e197XrZvI6924
Q9uC+/9c6nGo56VeJ/W+qOtAXTfqOlP3hbqP1H2n1gm1rqh1SK1bap1T+4La
R9S+o/Ypta+pPkD1DarPUH2J6mP/6f4KIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYT/U/8vP1G+pA==
      "], {{0, 0}, {142, 
      141}}, {0, 1}], {
      LineBox[{{1, 75}, {141, 75}}], 
      TagBox[
       InsetBox["+5.37 \:041c\:041f\:0430", {3, 76}], "InsetString"], 
      LineBox[{{1, 69}, {141, 69}}], 
      TagBox[
       InsetBox["+3.49 \:041c\:041f\:0430", {3, 70}], "InsetString"], 
      LineBox[{{1, 66}, {141, 66}}], 
      TagBox[
       InsetBox["+6.32 \:041c\:041f\:0430", {3, 67}], "InsetString"], 
      LineBox[{{1, 64}, {141, 64}}], 
      TagBox[
       InsetBox["+4.66 \:041c\:041f\:0430", {3, 65}], "InsetString"]}}, {
    Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
     Automatic, FrameTicks -> {{{{140.5, 
          FormBox[
           RowBox[{"-", "180.198`"}], TraditionalForm]}, {105.5, 
          FormBox[
           RowBox[{"-", "90.099`"}], TraditionalForm]}, {70.5, 
          FormBox["0", TraditionalForm]}, {35.5, 
          FormBox["90.099`", TraditionalForm]}, {0.5, 
          FormBox["180.198`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "180.198`"}], TraditionalForm]}, {35.5, 
          FormBox[
           RowBox[{"-", "90.099`"}], TraditionalForm]}, {70.5, 
          FormBox["0", TraditionalForm]}, {105.5, 
          FormBox["90.099`", TraditionalForm]}, {140.5, 
          FormBox["180.198`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 35.5, 70.5, 105.5, 140.5}, {0.5, 35.5, 70.5, 105.5, 
      140.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
       TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -142.75933052895368`}, 
                    Offset[{4., 0}, {7.5, -142.75933052895368`}]}, {{7.5, 
                    1.9813389420926342`}, 
                    Offset[{4., 0}, {7.5, 1.9813389420926342`}]}, {{7.5, 
                    146.72200841313884`}, 
                    Offset[{4., 0}, {7.5, 146.72200841313884`}]}, {{7.5, 
                    275.38038127629125`}, 
                    Offset[{4., 0}, {7.5, 275.38038127629125`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -142.75933052895368`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.8\"", 1.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 1.9813389420926342`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.7\"", 2.7, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 146.72200841313884`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"3.5\"", 3.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 275.38038127629125`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6258614517139534`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.7517229034279066`", ",", "1.8`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8775843551418598`", ",", "2.7`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9894612011098184`", ",", "3.5`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7573140572167788`*^9, 3.7573142044947376`*^9}, 
   3.7573144824040785`*^9, 3.757314522943011*^9, 3.7573145900678573`*^9, 
   3.757314712985391*^9, 3.7573147664792266`*^9, 3.757315101988761*^9, 
   3.757315707182384*^9, 3.7573159732984886`*^9, 3.757316575430999*^9, 
   3.757323339208063*^9, 3.757323657278217*^9, 3.757327845657483*^9, 
   3.7573287387104297`*^9, 3.75732985770463*^9, 3.757393788850231*^9, 
   3.7573950030882096`*^9, 3.7574076971329093`*^9, 3.7574089269864435`*^9, 
   3.7574114424342356`*^9, 3.757415015828162*^9, 3.7576527929386206`*^9, 
   3.7576528504876537`*^9, 3.757660420586174*^9, 3.757663099806306*^9, 
   3.7576635469945545`*^9, 3.7576715608077574`*^9, 3.7576720855332975`*^9, 
   3.7576727140648603`*^9, 3.757672811968309*^9, 3.7576728462207317`*^9, {
   3.7576728962134356`*^9, 3.757672906257964*^9}, 3.7576729478089547`*^9, 
   3.757912025714458*^9, 3.757913618631504*^9, 3.757914646876298*^9, 
   3.757921012263347*^9, 3.757921253858455*^9, 3.757921429645629*^9, 
   3.7579215248576417`*^9, 3.7579254481082945`*^9, 3.7579273977266965`*^9, 
   3.757927646178288*^9, 3.7584308136011157`*^9, 3.758431088180815*^9, 
   3.7584314334840736`*^9, 3.7584318697736735`*^9, 3.758431982112193*^9, 
   3.7584320205871415`*^9, 3.758432081826498*^9, 3.7584323370425477`*^9, 
   3.7584326708139873`*^9, 3.7584328469083576`*^9, 3.7584338882698116`*^9, 
   3.7584347758401356`*^9, 3.758438980103737*^9, {3.7584414131798973`*^9, 
   3.758441434364583*^9}, 3.7584418814073935`*^9, 3.759059093908137*^9, 
   3.7592211797657766`*^9, 3.7592212681345587`*^9, 3.759221925903926*^9, 
   3.7592220675892887`*^9, 3.7592242964120607`*^9, 3.759224783325679*^9, 
   3.760780136277817*^9, 3.760781937805394*^9, 
   3.7607846965969725`*^9},ExpressionUUID->"38d81b7e-8c54-4423-86d8-\
05d0e75f09f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:0421\:043e\:0437\:0434\:0430\:0451\:043c GIF-\:0430\:043d\:0438\:043c\
\:0430\:0446\:0438\:044e", "Subsubtitle",
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, 
   3.750659590603606*^9, 
   3.750659634100629*^9},ExpressionUUID->"feb92d43-f673-4dd7-9b42-\
b50ab362b68f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"iterationStep", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "plotName", "=", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotDataList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"openingAtCheckStep", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "i", ",", "1", ",", "numberOfCheckSteps", ",", "iterationStep"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotList", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PlotMatrix", "[", 
      RowBox[{
       RowBox[{"plotDataList", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
       "plotName", "<>", 
        "\"\< \:043d\:0430 \:0448\:0430\:0433\:0435 \:043f\:0440\:043e\:0432\
\:0435\:0440\:043a\:0438 \:2116\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "iterationStep"}]}], 
         "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "plotDataList", "]"}], ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"folder", "<>", "\"\</opening.gif\>\""}], ",", "plotList"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.750657229716831*^9, 3.750657323541009*^9}, {
   3.750657442512285*^9, 3.7506577065181427`*^9}, 3.750657806502049*^9, {
   3.750657865720697*^9, 3.7506578660603857`*^9}, {3.750658171413033*^9, 
   3.750658171660262*^9}, 3.750659590604125*^9, 3.7506596341012383`*^9, {
   3.7592248138310814`*^9, 3.7592248170522895`*^9}, {3.7592248487311068`*^9, 
   3.7592248766307635`*^9}, {3.7592249197998433`*^9, 
   3.7592249455084496`*^9}},ExpressionUUID->"b0245563-8792-413f-a4c1-\
ff322b233949"],

Cell[BoxData[
 TemplateBox[{
  "Export","errelem",
   "\"The Export element \\!\\(\\*RowBox[{\\\"\\\\\\\"ImageList\\\\\\\"\\\"}]\
\\) contains a malformed data structure and could not be exported to \
\\!\\(\\*RowBox[{\\\"\\\\\\\"GIF\\\\\\\"\\\"}]\\) format.\"",2,150,3,
   23214467344293266001,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7607801366809754`*^9, 3.7607819378934135`*^9, 
  3.760784696636993*^9},ExpressionUUID->"e26b2976-daa1-4ffe-b8bf-\
ba02ff9d6534"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.750659652156084*^9, 3.750666699563397*^9, 3.750666774903749*^9, {
   3.759224797990833*^9, 3.7592248186298594`*^9}, 3.759224850386752*^9, {
   3.7592249324687567`*^9, 3.7592249472268243`*^9}, 3.7607801367149954`*^9, 
   3.760781937914418*^9, 
   3.760784696658987*^9},ExpressionUUID->"79b390b2-4746-4a88-82aa-\
d36af32cd5d3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:042d\:043a\:0441\:043f\:0435\:0440\:0438\:043c\:0435\:043d\:0442\:0430\
\:043b\:044c\:043d\:0430\:044f \:0441\:0435\:043a\:0446\:0438\:044f!", \
"Subsubtitle",
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.750659590603606*^9, 
   3.750659634101563*^9}},ExpressionUUID->"190e1697-5378-40fd-b7b7-\
68e948097639"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"openingDouble", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", "\[IndentingNewLine]", 
   RowBox[{"i", "<", 
    RowBox[{"Length", "[", "opening", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"openingDouble", ",", 
        RowBox[{"{", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"j", "<", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}]}],
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{
        RowBox[{"openingDouble", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], ",", 
        
        RowBox[{
         RowBox[{"opening", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", 
           RowBox[{"opening", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"openingDouble", ",", 
        RowBox[{"{", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"j", "<", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}]}],
        "\[IndentingNewLine]", "]"}], ";"}], ".", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"openingDouble", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"opening", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
    ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDoubleMatrix", "[", 
  RowBox[{
  "openingDouble", ",", " ", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.750358232133493*^9, 3.750358247083275*^9}, {
   3.750358316158638*^9, 3.750358512340169*^9}, {3.7503585544026327`*^9, 
   3.750358555974053*^9}, {3.750358591934741*^9, 3.750358599614847*^9}, {
   3.750358635248437*^9, 3.750358637785039*^9}, {3.750358703052411*^9, 
   3.7503588070893993`*^9}, {3.75035885757069*^9, 3.75035888174489*^9}, {
   3.750358931136982*^9, 3.7503589382940197`*^9}, {3.750359001423706*^9, 
   3.750359052574259*^9}, {3.75035919521389*^9, 3.7503592947409153`*^9}, {
   3.7503595831699047`*^9, 3.750359627071444*^9}, {3.750359720953223*^9, 
   3.7503598303588943`*^9}, 3.750360044553823*^9, {3.7503602219784393`*^9, 
   3.750360333147932*^9}, 3.750360417313128*^9, {3.7576716605038176`*^9, 
   3.7576716619096375`*^9}, {3.757672101273732*^9, 3.757672128470461*^9}, 
   3.75844198944094*^9},ExpressionUUID->"af6ea415-d276-4505-81d8-\
a9c6f689f1a0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    RasterBox[CompressedData["
1:eJzs3AdMlvnW93scFLtiV+yDY8GGXbFc2LCiqGPDhg1774qKotgdLGPBhg27
olixi2IDFVEUBKXe9KJYUfTMk3Pm8s3zdyWQnPfsN8/5TrLz2VnZgZurrP9a
v3uyq46Y0nu0sZGRUdlcRkZm//znv/77//1PuoaIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIj4v8ujn7bOrpmRlm1Djz082e9l9p0ac2yT37Xsa1bx
g3mZA9nX/eqT3js2ZV+jXaMHmq7/32dOP09O/96cXs+c3q+cPg//6ecXERER
ERERERERERH/80rfIwSZ5bnyMk7VpfulFVPuqVq6TKzT5Iyq3+XuxQ5uUw2f
fXzEcRfVAg1nDds8SbVpSuvBTv1/4aXUgSs7q3p7zaxeoaWq+6jGQ/M3VnUp
+/7vj3Wyr/RzpN8rfU7p75Kug3TdpOss3RfpPkr3ne+bEBEREREREREREf+z
Zs7tU6fg57Rsa9fGc0hKSPate255XYdT2beps8mZGUuyb5+0eh19u2bfKova
hD43zb5dr7nY5I9Izbbh40ul7PTKvg/Cl0yvuyb7Bq/8/vunsdm39f47KUY2
2Tc05Obxj42yr4dVv4F5K2bfzIMzehsKZt+KeR67T/mWomiz2LCw/ntVO++a
04pGqS4sdTpmcIBq6Xk2ZUdfU7UI//pwsKfqx889KmZsV93/Jjl+xHLVPhkL
G0ydpxqUaPzdeKKq5RCbzaPGqG5p9co9ZHj2lX6O9Hulzyn9XdJ1kK6bdJ2l
+yLdR+m+S89JTp+3nD7POX1fcvo+5vR9z2k/yWm/ymk/zGm/zWk/z+l5kdPz
KKfnXU7P0//0+Y+IiIiIiIiIiPj/plIONruiU43db1W7Xviy6nOg6i6n7pdD
vVXndw2uOWStaqj7m9/mjFMdGf8mo6q1asra1UvDyqkWyHUm1T45VbH6rBD7
kGuqU13HDnZZpXp14+dl37uqOtpdW+ZeStX0QoiheniKonlkUhXzI6pNC363
rzxL1fNr4oyy3VRLJ79YW6yqqnnq99DEXKqW2xesOfsmWbHEmzJ/2FxT/VjL
e6uJp+qWM/blw9epeju+mNRyjmrmO+uEoOGqV3NZBBr3Ui19/d163xaq6X1j
+1lYqG6KKDW5ZQXV89q087cLqVp3fh1a4UuSom3QgwmFElWjmzrsKflKNXNy
ldx/P1C1Gbbbdf8VVbeeFfKfOalq7dM/7dFB1alfrpqM2qFqt/X5hO7bVE/k
L/vbiU3ZV/o50u+VPqf0d0nXQbpu0nWW7ot0H6X7Lj0n0nMlPYfScys959J7
Ib1H0nsnvafSey31AalvSH1G6ktSH5P6ntQnpb4q9WGpb0t9XjoXpHNEOnek
c0o616RzUDo3+b4JEREREREREf9T7ndObngvNS3b1m04/+MJv+y7+nRMz8d7
sq/lsSZtwqZkX4fHi8dfs8y+R5d2HJjwPTXbptfoY/rlfvYN7XbW+/Xu7Jv4
vVe/FnOyr2P52YOX2mVfl7L7Xx5sln2f2Lyxa1M++65rvqjKid+yr+OsTUEb
k1MUI6Y6TmySoPoxeVenzfdVH6wxc6norXr+Xc/f+m1RLZF8so3DVNX5G2Z8
Hmun6lqgy8UdNVXDlxnfsPuRrJi5c8k5tzu/MMr0xbtdqu27dZ19fILqws4B
T4zaqR6tM87vQ27Vih0Od0x8naTo1Slm1bozqgEJH+deXa3aemXzgOeOqh4n
bV6d6KJ6Im/Zu1vqqiYuWtrwXjHVgPsVD678kqhYt8/l2LRI1QcNC+cN9led
sc3z8vaTqj5PR03vtUe16esdfx12VXXrcmnlilmqhfd4N7AdrOpVK6bz0B6q
7omWFx63VDXf+650p3q/cM+HRzsrqPr8tua3g4VVQ/3Nw+ZkJih6xs+uWyRV
1bjf0eq9olUbJfu8+vBK1WXJH2ZXnqs6VG69+MDT7Cv9HOn3Sp9T+ruk6yBd
N+k6S/dFuo/SfZeeE+m5kp5D6bmVnnPpvZDeI+m9k95T6b2W+oDUN6Q+I/Ul
qY9JfU/qk1Jflfqw1LelPi+dC9I5Ip070jklnWvSOSidm9I5m9PzOqfzQE7n
jZzOMzmdl3I6j+V03svpPJnTeTWn83BO5+2czvM53Rf+0/sNIiIiIiIi/meU
9sSuuUJGu4Wr2q11a1Txqmpw0vSGv+9QPb/ljP3DWapbtu2ssqyPqtXGlCIb
zFUj3FoH+39LVVwXO+jo6HuqVhuqVSiyVdXk6oQ70/ur2t0Km7uosqq7qfXG
RXEpig6NHoV9PKFqY7Q8yn+xquXsDV039VBtX6t+Skp11WCvTzduZCUr9qnm
N6pcqKqt77gXXy6oji/eruz3baouRadsruqsajfO+VXb0aq7Ohb760sPVfuI
PDcHNFItXatnvRcVVTMuFPXclUs1oNvjjxtTkxQd9lqGbQtW/di5tevii6oj
X3V6pu1SfXI9yxCxQPV8XNvCSxxUzWK8Rm1vr5re7O/ZH6qq+q2Zt7KX0S+s
6d3J91Wioo17meYnzqka+04Zvmqd6tWku6tHj1a1NM5bwF5TNU+b6uNXRrV9
fN1OJhkJiiNXWzdt+lDVZvm8Wa7HVS1eDO5tcFM1POzUy3mqqnn7M1dO/6lq
3PWJ25LmqiOdfBuFVFRdPSrsz8a5VRtVrXIob0K8ouWAOpsMgapePoV72F5R
rTvC+3LGTlWL6KWN2i5X3fT4wFSrmarz3d6+Pjb8F65/vyWX3S+M3pvs2FbV
PXfsyC4NVK/+UfNV7aqqZol5pi8qp5qxtIhVF1PV9mXnzS1aQHVT7vV/xppk
X+nnSL9X+pzS3yVdB+m6iddZuC/SfZTuu/ScSM+V9BxKz630nEvvhfQeSe+d
9J5K77XUB6S+IfUZqS9JfUzqe1KflPqq1Ielvi31eelckM4R6dyRzinpXJPO
QenclM5Z6VyWznHp3JfmBGmukOYQaW6R5hxpLpLmKGnukuY0aa6T5kBpbpTm
TGkuleZYae6V5mRprpbmcGlul+Z8aS/g+yZERERExP/zzdr90XFjTFq2rVJs
1PGyt7Jvllcz/8AN2TclsGWU0+Dsu6utV/7WVbJvabPqaw4npGbbhYGOZVIv
Zt/22xfdvboh+1rFmlVcPDr7Tlr7aVuZttnX27C4y/Dfs+/Ix7l3x+fJvoah
Zlc6xaZk24oBKcb9/VRvfK03vc1l1Ul1nsV67lCdUaRpr/aLVBNDBsyO6qf6
4FW7Vjsaq8549zjFrLDqlnF7p7i9TFZ0iSqXL+6oqtelC53LLFDt1yljQnpX
1f3dR1X+Vly14rUpfUdEJimOHLmw0PTjql6XHrl+XKJqlj/Pl5EDVM1rFGgf
2Ej1fAGndVGlVc2+DjR2zUhU3FJhYVTWc1X3Pvtct3irets9/s3HXTWicdLd
vPNUvdZ/K1JzqKrz9HyH1rZVvdr86aEZNVSHzP/tsUk+1aZFblX+9j5B0W7L
/s2rnqiOLBPauYyPasDgdp1+26Zqldb971tOqt5mc2/NHKRqdqOV08KWqlfb
Be6PKqm6acu5c20y4hVtTt5teTBA9YHv0nN2O1Q/+u+tUWaOqlf3A6m/9Va1
77GjyPo6qrZWea5n5latEtFAexEXp2i9on3epvdVuz53PTXqmOrx3tqg7htU
jW/8vj54uqp1s3Vf8vZXDfryKbBkW9VGLn8Xd6qlmjx0TWr3Yqqld/c4cSHT
oPhx4+O13SNUM6q4lm7pr5p5PMrryBnV2V4N/l6/R3XTp82Wn1apZkafn5Q+
V7XfES/7C+N/oV3+WVl9Vfe3HLpkRxdVvwIfG+3SVN1LLp1fv57qjBOr22VW
U+3qWcvDvaqq+8Y2TlMrZV/p50i/V/qc0t8lXQfpuknXWbov0n2U7rv0nEjP
lfQcSs+t9JxL74X0HknvnfSeSu+11AekviH1GakvSX1M6ntSn5T6qtSHpb4t
9XnpXJDOEenckc4p6VyTzkHp3JTOWelcls5x6dyX5gRprpDmEGlukeYcaS6S
5ihp7pLmNGmuk+ZAaW6U5kxpLpXmWGnuleZkaa6W5nBpbpfmfGkvkPaInO4j
Od13crpP5XRfy+k+mNN9M6f7bE735Zzu4znd93OaJ+Q4r8hhHvKfzm8QERER
/09XmqPmj7u18/gD1YpDT/V4cFzV+kmFzXarVc1mpa1tPlL1460y8aYtVA0b
prZ4lV+1z9rdA+uGpSq6PG+1ZvMh1UY7B9mNmqx6ws9pi1cDVc8KM44t+5ii
6Nar8cOGN1Xnu35IjFijeqNii4wvA1ULjAxs2rCe6sIGKZ9Xm6hmHB5a8dmr
ZEXPao4PYs6phv6eEr12s2qVZ5UbGuaqOr7I6lClv2qJcS+/bm2m2v5Z2JXz
lVUfFOrc2uRbkmLArBWjC0WruhS1dNp/R/X8sxPDbx1RjQ5ZaLJ/parb8IAy
5Sequg65HTO1p2rm4g2HKtdWNb+VUaNGHlXbM0ejbWMTFa2WBpQ766Nq3ju9
p5mb6oOmwabGI1Wnlr8SmNRENdGqQvtpBVRH2jud/fg6QdHbK6DegrOqRnkr
H/mxSnWd3Zeb7x1V3cv8Obm3ppqVt2HMh/KqEeaxNatmxqsaO9Q/+kzV4WKe
McdOqG7qOGd9wkrVG86t39qMVzWNul+hZBdVB3cjQ7qFqnNek7CChVX3Pzw3
pem7OEWrZRPWzn+p2sdnb6saPqqtQhp1vLRH1XOWTaS3s+pOf5vwFAfV0p5+
Ha93VPUJPnW4/R+q9nm3F7yXW9W02tHxQ+INin4tr6T73lLNSLG8M3+Hqse8
x/tfLlB9kNXR8qu9asZLR/u6rVVtPpX8u31xVfdpE222ZcQqVk9adrXHC1Wv
Ubsa57ms6vKn0bPqe1X7bSnSvNYS1Yl1D7Q9OU7V+XaLbo16q7bqsnzV+6aq
s/d9/VzXTNV+q9PLWz9iFK2a9DHrHKVqffPU2fP3VH0fr7l8xVs1YtL29433
qmae/fbXrjWqoT2qngxboOq9YUe9QuNUjavb7HIfqPok9k6oVzdV8/sLaie2
VZ19vIGTeXPV7gefhPg2Vq2ye0qzUQ2yr/RzpN8rfU7p75Kug3TdpOss3Rfp
Pkr3XXpOpOdKeg6l51Z6zqX3QnqPpPdOek+l91rqA1LfkPqM1JekPib1PalP
Sn1V6sNS35b6vHQuSOeIdO5I55R0rknnoHRuSuesdC5L57h07ktzgjRXSHOI
NLdIc440F0lzlDR3SXOaNNdJc6A0N0pzpjSXSnOsNPdKc7I0V0tzuDS3S3O+
tBdIe4S0d0h7irTXSHuQtDdJe5a0l0l7nLT3SXuitFdKe6i0t0p7rrQXS3u0
tHdLe7q010s5gJQbSDmDlEtIOYaUe/B9EyIi/k/yyR4737zf07Kt9QQLy66G
7Jt5dNqSNpezr2mZePNtC7Jv19Mf0mY2zL7O6zoFFvqYmm2P9hzc+8/L2df6
Qrn8DVdk31Cf2s0K/Zl9nRM6lbGyyL4RR07OyvqRkm3PD39lPSs4+0Zfqjy5
hVf2jQh2tNi7StX+c1jWg+mqmTXCd8R1VK24p4vPzjqq4XeeOfz+NVmxaXyN
lOmPVQtPn1LTdK/qwom7Oo+YoWo26kHkldaqXQ+Ps/rwI0nRZHjLQWcCVY0u
NJjqukW1X0TCrM9jVVubHZ38vJWqTcTbi6tKqK5zauwemJioWPjQoHyWN1WN
e+59Vn+v6q5RTSu9m6Fq1yx+bPFeqtad//I4ZaFq/MfWq26mqpalTj8uY0hQ
dHjq0LfMPdWR78+tMz6gOt6kW9nMFapuiUf9R45W9R2yMGVvT1X7J7P63qum
6lonfetFE9UhAdGjTobFKwaledUYclH16I1tLQ1LVYMGHhyYNUw1wLHJYKsW
qj5NB2z0KKLaZ/dk498McYqZK/rsKndLtXpEyRlld6juPHG/8tVZqk5eY6x9
7FS7N1s34oOlqtvIq2nr8qu61y8zyyzJoJh50T501G3Vwb3Xn/m8S9XRxDDL
aJGq4fpqV0sHVa+U4N5t2qk6fL5XOLas6oxGB8NafY5V9N1uGdk8QtWm2KSG
7W+qOj6v4DfJUzViypLr4ctVZ9dsFlZ1ompyiciD/bupBi2rNOOBhaqh7I7X
lvlUHVLKTw6KjlFcOypm74zrqpZ/B+T+vFvVrUE1tyKLVdt/Wt1r8zBVo4BD
x461Uj0+wGZ1/oqqblbhzX/7Ea3oU+r7iMaRqh6XBzg2vKM642L9ZZWOqZos
21Po2FpVt6wLLsOnqm6p7/6yaX/V8dMOt2rRTLXRzafnKtr8L75uPyWodLRW
ZUlcl8MOP7W7Vm2DcVqUZtQ/4UbyvGhd56y9ryvcj9L8elYqvdktWrffyqev
qx6K0gIqVKpV9kj0T5/1vjVoaZSWMq9zkVFXo3UrdtmUmDAySksYW27uyqBo
3b1RId2820Vp0fXG7ss0ROseuzSy0Mo/orTSf106VPVbtO7QI+OWBeSJ0r50
6lfoUrEY3fybF00aHxuptUjvMialSozukTLFYnc8itQG5p6/LKBpjO68L50v
PTwRqa3bO2R0+U4xuifWZcT1+ztSuxoZXiNP3xjd0XUbdZjrHKmVm3YwcM4/
z9G/Dgxe0dF/aqTmty7Nuc24GN1+x7a1+X1EpLb/9bVpkyfH6BY8M7yvvX2k
FhBbueSjaTG6tjWeRHbtK9elnyP9XulzSn+XdB2k6yZdZ+m+SPdRuu/ScyI9
V9JzKD230nMuvRfSeyS9d9J7Kr3XUh+Q+obUZ6S+JPUxqe9JfVLqq1Iflvq2
1Oelc0E6R6RzRzqnpHNNOgelc1M6Z6VzWTrHpXNfmhOkuUKaQ6S5RZpzpLlI
mqOkuUua06S5TpoDpblRmjOluVSaY6W5V5yThblamsOluV2a86W9QNojpL1D
2lOkvUbag6S9SdqzpL1M2uOkvU/aE6W9UtpDpb1V2nOlvVjao6W9W9rTpb1e
ygGk3EDKGaRcQsoxpNxDyklymrfkNM/JaV6U0zwqp3lXTvO0nOZ1Oc0Dc5o3
5jTPzGlemtM8Nqd57386n0bE/zlKfcZD2+ta9Juq25uD1R5EqWblsqhf4ZGq
z7bylap4qmbYR706tli1wKwTl6rZqFZsHfD0SnHVfo2WlXr5PFWxcF/TGgvc
Vf16t/ijta1q1ouIsXcKq3reePhm9MMUxaClEQ4n3FQTTWcWjvlTdWHVFdXP
VFQt7dT+3Y6UZEWvxX2rzPZR7XdymtEBN1Wj8HURgY6qDu93hx3QVG8U9Ho5
p6xqibTT0+ekJymOf+pdaM491S0Wn1u03Kdqc7JY0xULVa3nnahbZIjq1bIz
+xVuqRo6t/POiLKq83+8e1EoLVHxfL/e1bvcU51du2G+1J2qAasOzDSepFpl
w8T2+a1UW4/wNRQopDpk+Z0eKS8SFEvHJQe6e6r2mZlg/mS2qsV0f3ufTqpG
U09tOFBW1dV7zpSbifGKbr+XquB47Rfeudrhu6uqaXrMmcFDVC2a9jjw3ErV
5tEI+/rFVRu9yb/RPylOcf/90CDTANUnY7pUvXBYNXPwiEKTVqga1S3kPHec
qmtgRLVvXVSPnrMOGV1D1e7OrMH9TVQNrSbtOh5jUHQa4mP97rpqUC2XsClb
VT3nPoxZNkPVuc/poxPsVPs5t2vSqIaqXdOa7g5ZsYpd3UdYnQhRNQww71Lp
rKpx+0vVy7ip1unwZKiJo2qfroYp1Tqqes+wd51fVnXLvf0TBqTEKNrf/15r
3G1V9/0u76rsV51/yub2b0tU7UcN+/xskGp0cmTyn1aqyR4tvAabqTbd73Ui
KjNa0Sjw27z0MFVTn7rLxtxSNe9+Nv3RAdXqaXdMh69QrbPxhWXGOFXzU5e3
ZNqqBlSwCf7a/H/x2ZY2rhbRWvDJCh71+v702pdnRa2MorWRvtODP8/6aVJo
n2sFHkdpT47P/p65KVr33jfbpXn3RWk3xh/sP8srWjfizYpvPedEaSWmDbnQ
+km07sjgjIn7O0VpI+eUKmOSHq2b5D8s/GOZKM3k1bU1aUVjdGdfGH6ybHyk
5tlmrFFI/Rhdk30jF1tdjNQSxnbzvNk7Rndv1HrXcJdI7cQ14/IN58ToZg2f
/6KxbaTWJV+7lje3xOhuyKhQ43XFSM1w2OLLsEsxup6/WRdIT4jQjIyffBj+
PEbX+WunoinXI7RdDTzMw9JidP8+99eDJtsitPyOljt6FonVfevYbOvK8RHa
PPcbxX3rxOp2Kftm5KtWEdqM6ysHZXWO1Q2KOPPRpXiEljI8sJmHQ6xui9A1
Ayq/fqOZL3cb7jE/VnfL1B6vKrm90Qb++FLTa2usbkau4svTmr/RfIwCJzud
idUNylrrvTr+teYR/DT2xsNY3SpOK3pc3flaM3986K5/bKzulo35jmzv8Vrz
vOt05OWPWN1CR1YZzzb6p37etkRWKYNuobDSfvmuhWueBystrFrHoFuo6IGV
OxaEa/ah7t43NINuxtT6sVetw7UCjjdXTOln0I0OuDz29Lcwza/NqtX2Uw26
x9uPckg/GaaZxDnFrl9s0E3uuqpnnyVhmveANZ/+XG/QNXwYUi5X3zBtZNUO
hyw8DLrBOxoVcK4cpt3wKthr11HDT1PCCtU0CtM8Jhy+v/W8QbfKVZP9zcNe
aZlu/wwjPgbdErZlW1sHvtL6FO507NMNg67JS4vvZa/KdennSL9X+pzS3yVd
B+m6SddZui/SfZTuu/icCM+V9BxKz630nEvvhfQeSe+d9J5K77XUB6S+IfUZ
qS9JfUzqe1KflPqq1Ielvi31eelckM4R6dyRzinpXJPOQenclM5Z6VyWznHp
3JfmBGmukOYQaW6R5hxpLpLmKGnukuY0aa6T5kBpbpTmTGkuleZYae6V5mRp
rpbmcGlul+Z8aS+Q9ghp75D2FGmvkfYgaW+S9ixpL5P2OGnvk/ZEaa+U9lBp
b5X2XGkvlvZoae+W9nRpr5dyACk3kHIGKZeQcgwp95ByEilXkXIYKbeRch4p
F5JyJCl3knIqKdeScjApN5NyNimXk3I8KfeTckIpV5RySCm3lHJOKReVclQp
d5VyWinX5fsmRFXnMtXy3UlKy76L10f3H5p9Zxctn++kITXbpo/dOC10SfZd
OGNL+VXVsq/toZ3zEgNTsq3R9AFf2q7IvguDzqXfaKlqO8Pk7L0WqqZvtvrM
+ZismOWyo8Fwg2pQqe9NF+5RLRzuG9Bsqer59a/Dn7RUta1dq2akiWrXP17O
vHMrSdE4/VL8gGWqNm82Vd5no5pl8Hl8s6BqgXvjfN88SVRstHpRhxpbVO2+
xm593E/VcMk2+cofqrbrJs7ckpag6Fjie5F8N1Vdh499e3ydal23ZYGhI1X7
FPW/Pr+BaqMjg2vGFlHddaju/Rqh8YrpkSFGzc6pZvZPOHtlvmr1vC8Xu/VX
NewafT64hupIw5K2fr+pRod3KjM2PE7R+fLO9P3nVc3mdvrhtVo1NHNBhVmj
VSPajUyq1krVe/6P4ZElVL9N/d7keJRBsUK7viEnzqrur3RlmJuLqkO95pWG
DFCduDnhactaqu03+uevnhmr2Cqqz7mgQFXfoKmPih5Vdbrz2S1m4S+83yV/
4iDVoEFXGi9spDqxsueloYVUnTr0u/0wJEZx4vFD2+eeV7V+NaBFvr9Uk7/a
ZHScouoy9Gvjsp1VV7/ILFCyhmpiy1EXS5mouu1rH1I6PlrxuMWKb+/8VNt/
qfmq/2HVjKp3MnouVn1QaUSzZcNV/XxWbu7eUvX+PNvJ5t1+2uv+mtCuRaM1
j8HH/IvN+Knph+/dRwdFaZ6fp9a5syVa12RNv9Yvd0VpfX7zLOBxMVrX5ZtJ
etEJUVqLsqZ1D4VF6x55NaZVniZRWpXKXdYY/3M9/tWuV/FTmR8jtXkd8nWZ
VDNGt8v2GcUH+0ZqNulbhqf0jNHdsnVXSvmVkZphytwTK+bF6FYf8HDB2S6R
2qRBNwYU3ROjGz77TebYYpHakeOmw97cjNHNleX41jI8QrN7ne9RQESM7soz
77o+PBmhTX3a8VvSb7G6AzpszbN7QYTmW6DhpZnVYnVfpTVOtOsSobVYeur2
+46xukeufH5pWiZC27X6jvPfo2N1azmcWqg9fqP1WdnDpejyWF2TMSVnB059
o1Xf08fw6XCs7trf89iWzfNGK1E4YJ6bX6yu38ttG3scf62VOGhb9VZ8rK6f
aZmdlzq+1tYtuzzpbgGDrv30gPNH3oRrDumjGnatadCNqBc4tuqKcC3xe98d
DzoadNsbf6/rUS9cm29wLfZuvEF3U/cJD2tdD9NMDjQ8enylQTe5xNhcmaPD
tF3TF3o4nDLoWhxeUen121daAe/ajtOfGHSjDU4Bh9e/0iIqPbf4kGLQddjv
vLhK01ea16FCn/4sHqebni/ULNf9UM3ByXbzs4ZxuhGry7RfOiZUczlb1app
rzjd2VHuvYYUCtWCe2wfnzklTtepROMbpl4hmtnDGs9918bpeu9e6Xx24D/1
0sl9Ak7F6XpfbZl7W/pLzWeYxczBj+N0gyKc9ydueKkljqlZLjgpTrf9Pdez
C1u91Fw72C6dUihed2LDsvNOh77QshoOq/6xTrxugTFRayvOe6GlbLw98W33
eF2rTmcu1S73Quv6dP6DjmPjdc1X/eVR726w5vtwUofPS+N1z+8837DMnGCt
9YxzX+7vj9ft4vmm+L6SwVpGiQ/nG16K161+u8qrMc+eaylJRi86BMfrtmiV
Nb/BwueaXYelPlXex+uaNpr3ZJf5c81qQOeeuYon6Pb5VL34t/vPtBt2FRsU
rpPw08KHJ75c8Eyrm9TD0qVDgu68NiWmzG74TLMIrex+yD5B12WaR4P86UGa
yZuQeXVnJeimjJi+cY5HkOYz3qhH2JoE3aDr30tNGBykHe3kPzp5d4Kuca0d
j6zMgzTHKpvHvriYoBuwu73fvOdPtdDWud2XPkzQnWGT0WDurqea69liy+dE
J+hOinowdXvfp1rX8zMXP3qfoGsevnfJ5qpPNc+OrWq1/ZGgW7h+t2Wtfnuq
eX8+eSAod6KuoVRGseVvAzU3j5qNShRO1LWr5Oro91KuSz9H+r3S55T+Luk6
SNdNus7SfZHuo3TfpedEeq6k51B6bqXnXHovpPdIeu+k91R6r6U+IPUNqc9I
fUnqY1Lfk/qk1FelPiz1banPS+eCdI5I5450TknnmnQOSuemdM5K57J0jkvn
vjQnSHOFNIdIc4s050hzkTRHSXOXNKdJc500B0pzozRnSnOpNMdKc680J0tz
tTSHS3O7NOdLe4G0R0h7h7SnSHuNtAdJe5O4Zwl7mbTHSXuftCdKe6W0h0p7
q7TnSnuxtEdLe7e0p0t7vZQDSLmBlDNIuYSUY0i5h5STSLmKlMNIuY2U80i5
kJQjSbmTlFNJuZaUg0m5mZSzSbmclONJuZ+UE0q5opRDSrmllHNKuaiUo0q5
q5TTSrmulAPnNE/OaV6d0zw8p3l7TvP8nH5fkNPvI/7T359gzpTuo4vxjLa/
Bas6l2s44GwPVaMrk9cNep2qOOPR/EpdJqgaXq0IzpuWohg96HmTdUtVHbxs
/VaXVE0plNXY7HSy4sd0i4Qpg1T9qjXoFJhPtfSr88Ue+CQpPuhz1996turC
+XV8g5upzvc5s6t2VqLi7P3rQ6deV216dWYFbalqZrD90MIdVQNKF9/TObeq
R7/7b1x8ExQfrB45+OwS1RltF3Z06qCa4ZhreHyuX3jBvlvYjXhFn3sF9/Sc
rpp1Ifb5tsaqBdol1j70MU5x08GyawffUPWaXqtf+3Wq3UuO7rVvgKp38tIz
R2urmpXp/nLTZ4Oi1RWHAZ3vqQa//jBh9CZVp2ZjRh0fq2reot71aCvVQoUs
NuzOrTrD8cDhymGxik5/5Z2W4aVqvO7v8doyVd+av88/O0TVpbR9jwINfqHr
3texWTGKrh/jJ998oOqx4tpJm12qVjtKDBo5U9W6iWdqRgdVm+rRlTeXVTX9
WPB7nrRoRfvOZzsXfaDqcMi95apdqoaVRjvcZ6l+7Dg4ZWUX1eiIej79O/z0
2MlLY53KRWsJcb2OX5ry06rVli8c9zJKS0+dubv8jmjdbdvtNvbbGqVdMvcN
3HM9Wndc10Ed3RyiNOcBxfJUi4nWtf46+vP9WlFaLb/dIW6FYnRvBm+4VD0l
UgtqVOdkVuMY3fZnrs538YrU2r8+9DVkcIzujobLTC7NjNQaFdx/znZVzE+n
rJlSsGGk5rC809yTJ2J00y9s7jb/a4S27keSVdGnMbonjHbXSLgdoX1Mjbpa
MSNGd/322iP7bIrQhjRZ9rplmVjdD6daNKw+JEL7smjKxIFtYnVX3RwQPu/3
CK1cmmX643+eu3/1bjipvpvhjTbPuswLd9dY3U1tfObXn/hGC7XqU6Xf8Vjd
GT1N9mRlvtbqXi40vsfTWN15j0Jullz1Wsty3LH00ZdY3QIP687dXPy15rxn
T79FlQw/rVr127ID4Zrz8UeDPNsafpq5KblQy3DN3hDc/8BEg25G9wWfi/uE
ad67hsUV+Of9/ldD9cgub2zCtAjna4/XXjHoOiy87TbwwSttXeSubnMiDbr2
g6pXdB/0SpsRH3wkqECcrqfNgt+WvwnVIkoZslbWidN1uGZrMnp+qHbi5szS
+f+M08302XslxjhUM0pyufV2dtxPtZkXLXaEaC6Lqz4Ztz1Od/aSHX/dahSi
mUwYt+DttTjd5Gu+62r7vtROZBRcmRYRp5tZLWxMgyEvtT5BAxpm5YnXNXH9
MDZf6gutejOza4VrxeuutT99J3jZC21+xUHnz9nF6246lBr2uvALLdypvKnj
jHjd8atOPA44GKxZ11tR79Nf8T+dNX6mmV2wVqLj2g1vvON1/SwHdRse81wz
5I7rd/FZvK7t265fg5c816K7XmmRPytet1/lh71j8j3XIqJaRVpVTtB16N9l
cM99z7Tz36wiw9ol6Ibn7zl4XLNnmkm7Il4mYxN0U1o8T0u6G6S5P928stLq
BN1GK9s6HhgepFUvNnVn3zMJuuv8T1n8iH+q3XjjszF/SMJPHR53ip75VOvj
nXtEcr5EXRPD2xCr2EDN4p7xqmHmibouh96Pivw7UMuKzLUqV6dE3fz2maO+
WgRqJ4ZtWzltVKLul4imjseePtEcGof88XZZom7EiJnr60x7ojXav2BF3X2J
uo6l142bU+6J5prUKcP0bqJu6Hy77u59H2smQ6LGzIhK1A0NPO3W7fQjzeSH
3bK1+ZJ0Q/OYGc76B2hWXgfWfKyapOv52tyneeMAbWJR20eL2ybpTt/fwCLX
HH8t2vPss49Dk3SPl75t3MzvoRY67u2RDwuTdA3L+uduU+ihZmXU++DAnUm6
nt9LVDH0faCZ3VoxpeOVJF3HGYEjhm25r5WI63lx8csk3bV/VzmZK+WetnbV
ts2/pyfpnvGbuMxy2D3NZN08lytFknVDT1dP2nzorubSwuuZjUWybrLna+P+
v93Vkqvudd9jk6w7vXELh3YD/LTQJmPqO49K1jVc2Rz9/cAdzc+23K2hc5N1
7euOnXG37h3NUvswNGZTsm7EMmu/gytva4VScu+1P5ase2ZaVIuIr77a+Cla
yS43k3VdR7q4dpnrq4XOiciMeJ6sa7C8Wsnn2y3Nb+CxpMrvknXtY7/Os+5z
S7OaU77iw9wpup6NB/VqHX1Tq1u8UNTr4im67zde8PZbf1ObtCFtyu7KKboz
t45w6NLuptao1WH/2Lopuv5bijTelXxDs04z6zy3UYqu86ihPes9vKHZ7lvn
W+C/9u3/x8YNT46/fkSuSz9H+r3S55T+Luk6SNdNus7SfZHuo3TfpedEeq6k
51B6bqXnXHovpPdIeu+k91R6r6U+IPUNqc9IfUnqY1Lfk/qk1FelPiz1banP
S+eCdI5I5450TknnmnQOSuemdM5K57J0jkvnvjQnSHOFNIdIc4s050hzkTRH
SXOXNKdJc500B0pzozRnSnOpNMdKc680J0tztTSHS3O7NOdLe4G0R0h7h7Sn
SHuNtAdJe5O0Z0l7mbTHSXuftCdKe6W0h0p7q7TnSnuxtEdLe7e0p0t7vZQD
SLmBlDNIuYSUY0i5h5STSLmKlMNIuY2U80i5kJQjSbmTlFNJuZaUg0m5mZSz
SbmclONJuZ+UE0q5opRDSrmllHNKuaiUo0q5q5TTSrmulANLubGUM0u5tJRj
S7m3lJNLubqUw0u5vZTzS98LSN8jiN878H3T/ycaGjkMTOyYnG27/jEu1/hq
Sdk2vOuFlb5jExUjYuyzKg9Unb3kTwszrwTFjMVWwT+6qXrVajL5vVe8oueY
0o/GaaqD29p0CbsdpxhsW+xuvymq+5v2qdy0oGqd90fDG141KNqVTv0xcohq
lZ4ZTd+XUPXba5Q8xzdWcX5lU+eKK1UdLLaOLNFSdfCVe791yYxRdG1snLTi
uGrXPvF5ls9V9U4rlWdgfVXXFg8/vTVSXd1/1ZRpN6IVvf+uuvuHm6qbo9X8
xN6q/Z4f/hTR/affry9de7JQtJZ/cE3zoSt/+nZW+4fTvaM0m8RHixfejNbd
4tHlhu+QKG3LoJ4Nt3+O1t39cWVjs4JR2ir/bsaD68boNrAt8vXD5Ujtfmil
1q0nxugGXuhV7cCQSO3EqIumjvtidLPGJhkcC0Vql27+MajTyxjdcUM6fdp8
OULrk5A3s02eWF3j39+vrDr3nzk242y38KaxukU2Ti1ytm6ENtC/yrANI2J1
M9x3RXV7+UZLKLXk1oXNsbrtrzldfNn2jWZT0meM861Y3Tq+gfcWXXytVX+x
pUvix1jdtfNbmrct/1qzOvzW6G0Vg26fvLWz6uwK1zblrWF5tIdB1yZh9ZRc
JcO1da99xwTPM+jajzp7z2ljmGa0f0OvPicMPy3TraDJ51ea9bmBC7NCDD+N
eLci7/RX//SJsemWeeN0u4+6W29SYqgWfa3qiuoN4nT7+bqPXzsxVDvxcvPg
wGFxupmz2iauiQjRSkz+u/jB5XG6fue0e6ZTQrSFPdqV63khTnd1yRZni4e+
1D6GLl9Q5k2cboUpk9ddGvFS21Ugys+8eLyuRcTAY5vvv9CCrC7Fn24Zr+va
81nHxO4vtPTT9yvPmByva5m4z8PzbLDmWKPI0Gnb43UDVj2PPdYoWHO+lFni
4J34nwYVvW166rmWvqhSvR4f43UtXQ7MKlXxuebbMrTB6uoJuue7Txs/fO0z
7UG7LPPkXgm6+5vl29yywDNtXbM5w5cuStAdOND91dxlQVrQzu2trp5I0HWt
1ajrvY9PtcLNx88zMiTohvS/uem77VPtfJ/uq9aWTNQNz11+lP2tQK1wl7OW
C1om6oZUi5603jZQm9/xVbvmQxJ1N9Wf3Kx//BOtT+mRGf6uibomV4P/2D7h
iebcYkjZSocTf9on/vzBvE8024WTXdKeJuo2NB2XNKLIY63RNqvnyz8k6vpP
9jAKb/NIOxHaqWx+syTdd2/sJt8fGaA9+DzkxW4tSdemtn+GzVJ/rcrX4271
xifpWld8tyN+6UPN6EGJgiPWJ/20w6qr3kceaHaxnTuMvpCkW8Wjq6OH933N
48rx2pMiknStN2d8mXr1ntbIO3evV7mTdf39o8uFRd3VvNt533Kvk6zrP8V/
yrD3flrTu85D69kn6/r8+fVeQtQdbe2i/KmbnZN1z+S7O2Hpt9uax8fwyDcH
knWtm/ufvfH7bS0gpNWD4Y+SdRvHbmx3rpavZtS5wpdDX5N/atevlqnZLW28
ufNKJ/MUXdfaP/xL1r6phb4pOHS8bYqu4cbFh0vq39DqXpjScfrsFN34cb7X
Dky/pjX9Me6h0+4U3Zn5882pvvGKZnU97JDTrRTd7vkPVa0Z5aNtmjf02c74
FN2ythsLepa9pPnUDT71e6FUXbtXH24Om3xBM/jOneLUNFXXMrCfn8X0c5pP
Dauvawem6tqZ27QYFeCtGd19+H3CwtSfHp9eJL3SGc1wuOAd7wOpupalZvpu
7OSlnZg9ofGz+6m6T94klypf8oRmdKmjY4e01J8enj1uy4YjWun9y53+KJmm
G3Fubh+nCp7appKW9b63TtO1LL7oWG3LfZq7a3T78kPTdK19+3WMtt+tpTw8
X7yjS5quh++lhYVGbtVOXExt2d0zTddjWGvfs4Fu2o2H752/+qfpGm1rdOBU
VRetvdnD1vPep+ka7RjQ07zrcH1eMzVa5nc7+t85+N9/0jXnZcV/8z2p1j8/
qZW3kKtadwtaNK9ZH7Vume6bmP67Wr+xMLhXpc+pSv398bWdy95T68e9j+6M
3K7Wn7z7e/aAsWrd6fne3MvbqPVvy/4YM72oWr9XwnbH9KgU9fM/KdTB/Ixa
79zcUNR3xS/+9+WKPMo3WK0fP3956c56an1z88KvbuVS66YBjy/Wep6s1Ct0
n/Rt2V61PsCvfJPxi9W63YNljf78U607l510vVcDtT63zBTra8XVenpU7R0f
0pOUunVQYZOLgWq9+8cVF46eUOsOTc6WNN6o1sO+ThnsuUCtW65I23DdXq2f
3ePfcX83tV5ljM2DQo3V+rb2p6ymWqj1sZOeD/mravbr0s+Rfq/0OaW/S7oO
0nWTrrN0X6T7KN136TmRnivpOZSeW+k5l94L6T2S3jvxPRXea6kPSH1D6jNS
X5L6mNT3pD4p9VWpD0t9W+rz//1ckM4R6dyRzinpXJPOQenclM5Z6VyWznHp
3JfmBGmuEOcQYW6R5hxpLpLmKGnukuY0aa6T5kBpbpTmTGkuleZYae6V5mRp
rpbmcGlul+Z8aS+Q9ghp75D2FGmvkfYgaW+S9ixxLxP2OGnvk/ZEaa+U9lBp
b5X2XGkvlvZoae+W9nRpr5dyACk3kHIGKZeQcgwp95ByEilXkXIYKbeRch4p
F5JyJCl3knIqKdeScjApN5NyNimXk3I8KfeTckIpV5RySCm3lHJOKReVclQp
d5VyWinXlXJgKTeWcmYpl5ZybCn3lnJyKVeXcngpt5dyful7Ael7BOl7B+l7
ipx+35HT71P+nd/+/6J0HXy7F2j76Z/z5r9rkTym2pZXcYqFHm6xmmswKFaZ
OzLvtuaqlk6h0+6ui1V8MHNhKaO3MYoO0ytvHDNE1b1fssvUN9GKwfGFT28b
oxqS/uyPwuN/emmLdafkiCht/1/VRz8LjtZdU9Nm7M3W//Srp5deObWK0V3U
Ydz5Dgf/6ZNb/a9d8YzRPV0hIDImT6Q2rlzEH7b/9IN/jQyp32ntygity7td
Fil2sbobSpaw3mkSoVWZedkzck+srsf+gIKDqrzRMru73Ih9G6tbotzsaz0s
Xmtu152mDrAy6NrdXHXyo124ZrGqyrXQ5QZdl1G770yZHKY5t7p8wPy54add
HxX72/mVFrzpeMl6ZeN0nTpk3px1IVRLqdi3oPfAOF0rT6PXhnchmvHhrFzN
d8TpfsybN7N/vRDNeej4y5ahcT+NuREwadpLLetWba/OleN1C1xwSvtj3z9z
RcX4fbFD43UtDnUq0zM6WLN+3KPRxr3xP91YwrFL+WAto++joUXD43Wrf98c
HTj2ueYZ2X3k5aoJuoUHlQsOcH+mZfT3T80zIkG3+mf3RqkhQdqNfbOP3fNI
+GmZnVkHKwZpzs3vWUxNSfhpv0OLTzV7qlnfLv/5Uo3En3ofL/N0ZaBm++D1
gTX2ibrl9o4sNiT9ieZQo3vaRLdE3YhV5Rte6vFEM1q1/7XZncSfPrC4N3T4
Y63K9T9+WH9O1LVeXjHP/HqPtEaNBzVIq52k6+8X9mLUZ3/Nr3qxT3kGJena
l9neJCz8oea5sX1Lh7VJumZu43deO/dAcz3+wCfEN0k39L22J3bsfW3wKueF
X5OTdJ/e/Vak/PR7WqNbb84P+j1Z13/6zfMhDe5qnq4nPF72TdY1e5naMvnb
Hc29suflgBXJuo7tyrvXDbyt3bi/Kmvl+WRd5453ijy46KuNtN3aJSk5Wfd4
/Zk2TtNvaSc2vkmpWDFF9/1ftyZ273VTy6j3tL6DXYpud0PxyGsVb2jhVn/m
2eiSonu4deEbNZ5f1WzK5yrU6lyK7tmL76bUX3JZS+k4dFG5Nym68Rc3l3i0
+pJWYu9f206USNUtO6NDSFiJC5p38gOjuA6putvinD7WvnNWs40c9NB0Rqru
2Kmn5zTdcUYzdJ++JskzVddy9IHZH+p4afMLNDY99CxV1yN35QX9TI9rAe9u
R403SdN90mrV1czRhzQPk9rLzrdI0zUa/mlH9JZ9WsTjx+9uj0rTNTLJP694
+V2aeaf7O9/9nabrcKSd+9KoTVrE6TsNFvum6Rp1D+9r6+WqmXXe+vemd2m6
RqEldu35fZR+DpR1q5o8LFTNMeq88CjYcrda92geUM19hFqfa7rMKLqmWt9W
tmjGnhQ1h3np0qKu2cVf5DatS+WpuUCt+9u7Vctor9aNOrfwqpdHrf+5bYlL
DX81jzo7+Pm0Vht+kRtXreXQq59ab5V+etjI8r/IxwbvKHMxVM3fOtt+u7rC
Ta0fGNOy5V/9f5Hjfe7kvPp3tf75pMXl17Fq3vgyNV+bIcfU+rMNrvm2z/5F
HrslOn13c7V+ZUXfoXO/Jyr1tV1bp53wU+tVMlvkubBRrZtO/ry81xC1njvq
vElyDbWeXH9vyeJvE9T8bbzHoYLX1HrzXUl9fJardYcjDgVM+6p1620zz5Su
qNY7J9bYF/pf/z/1/61ep069Vmbn1Hr61fh9iSvVenJU11qBXdR6hwZrXNPK
q/WSLn7Gx2Pi1P99t7Xte59S69/yRD5uNletzz3RNTK9g1q/96jF8wYF1Pqz
sNY9bIIM6v0al+/7it1qfeyA6R9cp6j1mYUG9S7cWq3fCKpnccNErX/2nr3S
MiJWvb/9P2xudVytX3F4UfbWfLV+uN+jquVt1fqfS/sVGWqm1iOyNt5t8M+8
+N/rjef1L/L9llqPH+9Z5uwWtT4235/+ncap9Xz5997b1latx5RIHZtQWq17
XN5x08kQreb5XZrMWn9DrTd36OB4fptaXzl07h/mE9X6gKbBqU07qXXTUotu
u1dV650Deh44aKzWP8/TNp0Mj1Lfd6OBa4deV+sORsEdVuxS6052eR9YL//F
zylneXrTRLW+7NGkij791bpH4+4PG3VX62WLnWu5tV3269LPkX6v9Dmlv0u6
DtJ1k66zdF+k+yjdd+k5kZ4r6TmUnlvpOZfeC+k9kt476T2V3mupD0h9Q+oz
Ul+S+pjU96Q+KfVVqQ9LfVvq89K5IJ0j0rkjnlPCuSadg9K5KZ2z0rksnePS
uS/NCdJcIc0h0twizTnSXCTNUdLcJc1p0lwnzYHS3CjNmdJcKs2x0twrzcnS
XC3N4dLcLs350l4g7RHS3iHtKdJeI+1B0t703/csaS+T9jhx7xP2RGmvlPZQ
aW+V9lxpL5b2aGnvlvZ0aa+XcgApN5ByBimXkHIMKfeQchIpV5FyGCm3kXIe
KReSciQpd5JyKinXknIwKTeTcjYpl5NyPDH3E3JCKVeUckgpt5RyTikXlXJU
KXeVclop15VyYCk3lnJmKZeWcmwp95ZycilXl3J4KbeXcn7pewHpewTpewfp
ewrpew3pexDpe5P/qd83Ff5zo/XHZcnZ1rl50Ty1DyYqRtSPelx4TJxisEXN
NfmaGBR9zhw3ftUqVtG+0sPmcbYxiolGE1yTvaMV5z0JOrtk8E+7dLo1tfWH
KM2hm/e7PlHRuulFMkosrROlHXluPjxzaYzuEq3r5JUtI7WUO0s8xv2I0a3Y
v/Vfkc4RWsSWvFc/LY7VdWiZcK+s8xutelEXE8f3sbprn85ODvj9tWbt/mRc
l3GGnzZYf8v8dpg2Y1h091X/7AP/6hnZt9yo5a80Q/jz3v1axul2d1yUN8s2
VLNZc23lZLc43TpDb48+2yNEO+H2olfp1DjdTNt5Ba42+aeP/T3Tal/beN2P
1vvsyrX8p+8lftsavjX+p9b5m49pHqy5v5l1Ni4mXrfR8N1RnXs914yODPIb
1irhp3lSjkd0fab1O7l32qp/5vJ/zXpvdmzklCBt09QpL5rGJ+janDw9b1Cn
p1rdhVut+tRL1J23soWdyaxArf3dsxc/zUzUbXo08nnZvf+cO7277x97JlHX
uXjTOmsDH2uultdOj89M1A0NW/18cdVHWvXGT0w+N03SNbtb6UX98/6a2Zw7
OwbNT9J1bDJsYGjVh1p359uNpvok6Tb8Pur+0L33tfY124Tcy0zSnVhkTXzX
yve0TZ1K3DVunqy7tvfavgmn/DTHMbn6fZmXrOu+6dPXGtXuaNUz/jRvfzZZ
18z2tzqT/Hw118ZFi6d8StYNvX1g0zTLW1qJCZ6Os5qk6K5dWG6bdv2GduP3
Z18aTkrRNRpWpOvOyGvayIbO1YwOp+gO2J/V5XvlK5phRokuHq9SdBtvKL3J
6ewlLXPLrvOTSqXq2iXvnPrq+3nNI8jizM3uqbrOJb8fTHI8qxlNaHhn/+LU
n37bd7N37jOau1W1oOc+qboeS9wbv19wUptaIWRy9X/m7H917ntwx+jbRzSj
s5+31TdP+2mVU4dXeR/QZsz1W3q8X5quw/j78w9d36P5ZGXMD3NL07WeZP3u
cPBmLbxvnc/n76TpWgcMSxvxarmWma9651zf03SN7DY3253eTO9nppeDnyy5
oc7tU40XmYxY9Is5/7vpl3mtfvHviz49ueX3DHWPyFf17axxp9V6tXfll0yc
qNadpzacU6OWWp9qutXYN0bdj555vurWePcvvqcYZ7BeN0CtO0xaMeV0cbU+
2K99fPR9db8bu7dM3tClv9gf8/81aVerX/x7y1XPTkjPUvfQxrVCMnx91Xr8
lwC7c8vV+sWb598vaqfW/Y8P6PY+t1pfFjp8eN1b6n59u+PaHYfWqvUnld6F
hPRS62V7DpgZWFqtf7M18576Us0NvEqmdO6z9xf1u4tKFhv9i3qpztataqr1
b4cWhhdKVfOQ3CXH/D38xC/ylkZb7n9yUuumK7dcWNZcrW/7wzih6Qc15xlV
xz29/C21Xu3KyxllFqv1A8vrND7eTq1v8y5RI9hYrR9/bZOnyTU114qYGVBs
p4ta92p2bl9gN7Veremre7NKqfWXW04+io5W87qS2/pWtjqs1lt9sTi8dtIv
vkeItjSYNFfr8WtN+u7J9YufU2nCxDn+aj5ZpfDikos2q/W5oyObHxum1o0a
DDHNVfMX+eqyTumeaWoeG/F5SPtKPmo9zKJ+ZsRytZ78V99397uq9ZpPy674
UfwXOfC8pdsuvlHz6rnbTgxufVit17SsUWLslF/k86sH/RjSVK2bGrdsPCPP
L3L7ltu//fU0Us3T1kYV+7+Ye/eomP72/z9KkiRKklNEOhIlSbyGElGKqETk
lESUSKIa0kFCyiEpyiEd6YRKmA46qaTSSTSppplpDnkjSfHd7+/9ee9X695z
rfv+rvVZ6/frn2ut59prz7QP13U9H9fs194aTdVNubO7+vZT9XzNkcmr51P1
+g0lVy3EqDrdz09Wq5RJ5UiH/LQWRFD1sF8Pdi7YR9Urr1iM8zWi6ntVBquP
S2Fd+jY9bD1biJQurGzLL24j9TyftJzTRN2qycyoeuaG9b5cv5/37gsRuyZf
eHMq1h08GxJYvkRdVFGKZ+R9InX3iZs5H52I/c/fVKp5FOtu1otTA1cJkZx5
4PwNalinG3q26qoQ9XKcyjyfmo+k7vXxZ9d8CSFKTOpdcTwU6yYfdZSqPwuQ
etJRY/ElWGd8ch7cUC5ATO0RJ1b/aCX1WHPa9AlJAiSVo1KenIB1h6nPJ78L
FyCnYpvn0q5YZ86VPbH0lACl77iXNF4f65Eb1yQ82iVAvesz7+h/+0Dq10s2
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
/L/Og/65X/7bCO3HMdx3roMTNZpZPZi7jrhu/j0mHIw6fD2ymxK3j9/N/vym
ixLld9FjN0h3UuKU+quzX5zpIGNzgYrF3hef0Udx3pu3+Z1kXDwwfUNZJxOZ
9d8z3vygi4zakxXWicu1oaw7jwvUYllkZKl8ybug3ooY11ZU2Dt347jCNP57
ZTOyHrPB+asmm4xynZOq5vo3Ikut3LacWjYZp/jVO70Pfo/WPapM7LnMIaPq
95ujllvXobQxVnneS7hk/Pl54rtrW98hOdt62skiLhnjfo06pX7wLfo6yT4p
bXUPGS1OC0cLHCuRzYgM5oHyHjLK9Dc/P7emHK27/zEnbTmPjGZq1cn8iyXg
erANznvcZ2rwyThwPcXRZEwBcmvarzA/mk9GdsussY2v81E61++09BCfjIw/
MppnVXNQ7+C1TtZOARkZc/rX6pzJQjQvmd1vXgrIKMatrxZMe4TChWfbHk8X
kpEemjs2YMkD1NK/9Jatl5CMNLtZXYVvb6KEc+5FV+uEZKSvrH5ikEgnr1P7
coahchm1LjAf2atHOVB1lWfHHIuF1LqjnvpgcnEIVd+uqifmNY2qh0cz2PPS
qXXQuyRncdsaqs5wWbaa3k6tv+wIq0LrE1Q99af2lUBlqt660PLmUJaI5+hz
Zx2WtBPxHmr3HYP3flH7kO0nrOxqk6i6+szH9W+tqHp6lmpj3E9qX3RIb+UI
52Sq7lJinmBnJ2J9cq1xPyL/UPs3Mclt0nlJIvS72b0Fm6k6+2LhPYcxVL2s
WHZ3ex61z9SevVCxYC9VbxqpXGc5XsTvxKSbA/UyqX3vVabD10JXEb9De9bq
tElVxHr4Ix578GpF/C5OLSVMJ5SqO8U1vrQypur1vvcMF3wT8Xu/K2LX+xOo
+mD4Ue9rjlRdYibzWKuCCD+SZumhWkn1QfrdDfIr6FRdSfb4Mm1Dqh52vNlu
RI+I903YlBkw7lB1CbEv1ydvoeouN+efXiUrYi6TtvQXs5zqK9Ut8p5dC6Dq
MhmngpKQiOdWrH6/XtVL9b+bTRbf5yVSdaXosRU2+0U8t3LzlTtLA+vXz+bJ
NQuEyNusNmnGe+zflXMmddc/I/KaxdOVV9djPZrv/qKGTuSpTdHNYwoxHyip
Uku8vUGI3Efuuh9minXPs6OLO5WFSKVkIndZEeYPljuLgvd1E/n2sEud76ph
vMLYfz0rS4CsFV/mvyrAfIP1fXdaVgCRr51PLFxpjvW0EX/V7bIUIF2Jj1eO
FWB+onNGzqByEpHnV2kE+xkMm7M8Cqjb0knUBf3y8IY8zG2eLo/qViby49ro
wVUmhlinrdO5vPYEH8Ut/bJvcTLmQpFmLWmuZnzknh6fKa2LddfXkkvnKPNR
CD/8kkMB5k6RkazjURwe6nVnqA2tGTY3GT9VoPWKh+wfmtTxPw6bm0g2sUZE
8FCN3LQCCbdh+tDVtsa9PGTt8+3R1EHM0ypcPscOLeGh/lFPpQcuYN020eHi
rTE81HR/d7uEEta9gg0nTPjYgxI3jUtJTsQc77qz4rWg9B7kLZZzzHop1g0m
q6Xlne1BUkZt6bUlmB/axjj1Odv0oKagL/vPWGN9SPfKF7d5xH4GuB8iPmM+
mfC6gHeMyO8qhzut7h/DuuSJxkD1N1wUnhS9oesX5qL8wcnWm29ykXX/srJN
/liPvGA7ge3GRb3b7bWKJ2LdqIirfwgR/Ql73blLtzGP1XlVIOY4mdjesfOM
ixHWVZ5HVVoKOaimztd/VQPmw71H8g2ml3NQ0+RGqXIvrNN+StfujecglSNT
x52Wx3pR5+APWR9iPyd6G9ftHjYH+VXEo20mfAS37o7pA8y3LzI+/7HV4SBG
odufzM+Yk9sEjpB3k+SguOjRO2epYP3FdvnPwlY2Sn/r5PrYGnP4e0/vT5fO
YSPdK0uuLorCPN9Mc7bD5Mts5FSXXHjsDZ4XuE1V0by4i41UzsfVFnSXk3rH
7gbGrlVs5C5YUMxej3UHm8+5aipsxIg7GF8QV0bq4hv5H7IkiP7y2t31AZOx
nvrD0mkhqxs5NQS29/mVknqcxKbJn0q6kcrk6GO2n0vw9TbBtjr0YTfqtXs0
+ulqrD+9wQ+XDesm/PK9+rX5r0m9rqTlyVk3Yj+fV1+8qIp1a19L9xYrYvuj
AQtNLxeTemWoa9nKxUS9fKrAXSuN9dDCQx4ZM7pReuXMJSduFpH6OgvlthEj
u5G7b8C2MdLDdJttYn3dLOQeVzaiOrgQ6xlmr37WELrXrnymwjDddvBQZi6h
P+arnI4rwPepWjDnr3ss1Ftw7/JLPawPVFuuD7vMQkzpQO8XVQxS1yx/5SF5
nIVq+C8NVcyxTkt1aZ+0n4VojmP3u4ljvW6P8dlYO0JnbVOcd+jVf9Sh/UCf
C31P6P+CjgN43KDjDJwX6DxC5x26TqDrCroOoesWus6h+wK6j6D7DrpPofsa
ygNQ3oDyDJSXoDwG5T0oT0J5FcrDUN6G8jxUF6A6AtUdqE5BdQ2qg1DdhOos
VJehOg7VfahPgPoKqA+B+haozwH7IqCPgvouqE+D+jqwDwT6RqjPhPpSqI+F
+l6oT4b6aqgPh/r2f/1R+/x/dMgXQD4C8h2QT4F8DeSDIN8E+SzIl0E+DvJ9
kE+EfCXkQyHfCvlcyBdDPhry3ZBPh3w9xAEgbgBxBohLQBwD4h4QJ4G4CsRh
IG4DcR6IC0EcCeJOEKeCuBbEwSBuBnE2iMtBHA/ifhAnhLgixCEhbvnvnBPi
ohBHhbgrxGkhrgtxYIgbQ5wZ4tIQx4a4N8TJIa4OcXiI20OcH5oLQHMEaO4A
zSmguQY0B4HmJtCcBZrLQHMcaO7zvzVvshw7w4K7lk+JPh9b5I6Ppcaib/ud
605zKTFBGBDx/T2LErffcNpsrdZFiXIxtdOlj3VQosbY0AbmnE4yrhTqvnxU
1o7cdj07bmHfRcbcD823lX+0oRranIv37FlkDF8eaT+prxXl5TuYCDZ0k7Gu
XLh4sXwLumibVrN0NpuMDoM/Lm662YiUZ+2X7uSwyZgVU8G0WfUe5e1WdF2X
ziFjXWN+gYqwFmUtef/DcT+XjCx7uhKrvAb5HMszKpPoIaPa6vg7GzqqkANP
Idw6ooeMrONn70yLqEABJqaHJ8zkkZHn6ux6Y3UpYs2PfVB1l0fGaJb1jPkL
ilFVxXjlfC0+GfVR/J4bPxmIMfWKzswEPhnFshZ9PG+Qj7KsJejR0wVkjFpS
+acg5ilap5DNPk/kx39iuMzlyedvZiA+/Xau7zcBGWs4qjcNFJKQDnfnqwNE
fvwnxk2WmKEtcwelSWz3/fpSSEYa8htK3xtCXl/F3/ec+dRAzav0lbnGH+yo
ulMMt3RPu4j1dSWVzYKPUPX6W0Mux/qpdSFxZHR2aSBVr3yoeNdgElU35X6v
qLwmYr21DVGGm3SoetTqRxJjyql1UOXX1MsNO0Q81/OgZeLzfmqdtT+76n5z
LFVv9bk0c8dyqs4bueebM5Na9/tDl5QfCRCxTtrU27uyF1D1MBu7l/PrqX1I
fT1zdd0ZEc/XHw18+EpVxHraWntXSZeLWN9bbK5pgwdVjxM41qorUXVrVkBe
WLaI/m3b6JRl+6m6dXb8n7uTqbpCyAavQ0XUftL+86JR949R9c6JNZcK1EWs
k1C1fX17A7W/VV+JPLLOi+iTCyPWma0Q8X4WFesGGa6Ivj3qeJ1LrIj1KCbe
HXXBiqornL2plj6CqrNnHCq4nClijpP7Kjt+p4j1MRyUtCfJU/WcFR7PNlSK
eL/JSPcb/n4i5jjpElue6lL1Tgm/vh3dInyZ4o+AlVFU3TvGXIC2UPU4r9dG
W2Wx3hI9aciSyCMq4k/7C29gnzhkxZx09a4Q9ZemGxxVxLqe6tVv9e5EfrE/
ukcheth6LLdvzWozFCKmzKh6HVmsh399u2zLCCFiM4MnbQnAPlev4syjZW8E
iH7SVH/SIPbLQb3d290jCB/dbMJWOox1vc1yk5S3EdvXJuoXdGA/rrfj+rRL
swm958SaPbZYd+JGS0ry+ajXPEDucg32++PunJptkctHceMW266wGrZ+znx/
zSE6H3l/X871LsQ8oW7sMoGvJR+Fx0bW5a3EuhjtbnP8DCLfxU2Ku1qJeUXJ
3Q+xO3t4qFfxgfQRC6z31pnzyvN5qOlKTnV/I+YhvdoR9h/CeMje3c1xjhPW
naebegVsI/pI8+SHZZ2Yt3yd39TXpsVDTsencR67Yd1dPOWHw2APigrROtjR
hzmPmZZOl0RVD9Ll9RqH0bHe4Bme8jaW2H4WRztYGutiq9zZJm5Enn2g9Frj
CuZLH80n+1ks60GJhkbLkALWW2j1XrNle5DK3Ykatvcwv6rIH1vr08pF/XbT
x+nNG7Z+14Nm1TEpXOQ0Pa75egrmYw0HKo9reHNRlJR/wn5trPd9+bPt8lou
Yrf+2ef8BHO5oWmRQ1OmcZF3mfAnzQzrsad+WLt94yCpJ67rJnRg7ueG+t+0
VnJQ+G3e0Dw61q8n2vRvu8NB3nPf8fbJYn0ge7xrpBcHMUM2TGy3xhzSUcFn
hbMFB9Xs2234xxdzy5qrJcf5qhwkx2Za3MvCnLNvQ8uoMQNsVBNqMl3nM+al
F/No+zjv2Ihx32Tg0hSsi+lHFa96QNQDiZ8NlkaYuwZUvF/fepyNwr9pn7K0
xJzW5t19nzBzNopTNNz38gjmupHtntlv1NiIud8kaKAA82H5OXLegSPZyCnb
2v6WDNZ5T3dfyP7UjeIi+DlBWzF/zqrVMm4hfDt9+gdtkwTMq7NCnRxCbxD6
k89FWd8x945ZFqOXfbwbyWmOGxlogXXmzNT4gxu7kdOd7erKNzBXD1jpNyVq
fjcKX3PCv5+N+bzuDTWjkzLdqPcrY/aOFVhPCF6kt4LLQrSEwT8GkZj/y1gd
C299Q+gXVtdu+IXnCAaeWxILE1lIjpZiXrUe6yYBtgfOBLCQdXi6bPAVPKcw
Wpp+dsYuYj/Gn5UXvsFzkBox6R8dq1lIRWpvQnfeS3zcguJz92sS26+2oo1L
fEHq4sWRIapyxPaJr7fsic8n9dPv0pmh37sQcz675NCN5/h8bT3QfKStCzH8
p/vtyMvDn7vvepZdaRdSGWgTdyvPJfWnY1bbDqX/vd5E5o4uTg7W9+tOGhFN
6OM666QlsJ5/1e1QcVAXcnq7xjjV5Bmp54VXPQs72oVoD0fP9z/5FJ8X8S7/
wF3EflT/+m3w9gk+75tHmI5fR9R1q3GJUZ3ZpF609+nz0SZdKE44c4vlbazb
euoP3DYgPveMTMni2f9Zh/YDfS70PaH/CzoO0HGDjjN0XqDzCJ136DqBrivo
OoSuW+g6h+4L6D6C7jvoPoXuaygPQHkDyjNQXoLyGJT3oDwJ5VUoD0N5G8rz
UF2A6ghUd6A6BdU1qA5CdROqs1Bdhuo4VPehPgHqK6A+BOpboD4H6ougPgrq
u6A+DerroD4Q6huhPhPqS6E+Fup7oT4Z6quhPhzs24E+H/IFkI+AfAfkUyBf
8z9ngeKD/tEh3wT5LMiXQT4O8n2QT4R8JeRDId8K+VzIF0M+GvLdkE+HfD3E
ASBuAHEGiEtAHAPkHgAngbgKxGEgbgNxHogLQRwJ4k4Qp4K4FsTBIG4GcTaI
y0EcD+J+ECeEuCLEISFuCXFOiItCHPXfuSvEaSGuC3FgiBtDnBni0hDHhrg3
xMkhrg5xeIjbQ5wfmgtAcwRo7gDNKaC5BjQHgeYm0JwFmstAcxxo7gPNif65
3v7bCO0nsvt84bImLiU6nrl+buEGNiWqmtySvT2ORYkObj+Mw3d3UmLDhAJ9
w4sdZFyx71O6VupnlPTIaemvN51kHDEg0BhdzUS+ZiP2XR7BImOo9mDNxl8f
kdNGk/WHxbvJyBxrMOPJ9xZkYhdkP2Owm4wGA4f67o9tQvJfmroOvGWTsUT7
+IbCK++R82GbBXn5HDJWZY86+q68FgU0NJ07eYpLRq/Txz0iL9aguM/ZewZ0
eshISy9MmsWrRHtmRifsfdNDxlSTPUr3l5UjtSyN4E8HeWRUrhr1vsz7NaoK
a3pnMMQjo34WT+GZXCHqY0ueV4vkk/GYQlrkQuUX6KPPqfXPxgjImLjcwMvl
wjNk0qP0ZfoVARmb+uszoxYReSBWpnGEhJCMukveNdTdeYgSav01fE8Jycig
SxmGNEWhkgKOsxRPSEYxW8f4fV/dyOvFsHnW4oWXqPkt5tPpoY9SVH2wo/F1
aICI9zauUhrMEqPqm5U6vpX4U/MwbdGOhK0SVJ0XGF3m4Svi9ww8A4XX0lS9
t9xx9shoan1Zu/3LZI05VJ2ZXRRTkStiHeDZe7UO2lF1MWWfH7O+UutmTbql
WEs4Ve90kDn3UlPEc0M29n9WVVDreA1bQk96L1VvdW8eLT9axLrKZ1WVFyWK
WM/ZdFN24TqqztS2M03tovYz6ps9Oh4FiniP7cqKCdoLRf3OJy7qzUdqf0Vr
dIq+ESTivTZjret36oqYByEkq94i4j2/i42m1p6j6v1xr7j7Fop4r825Kc+y
mNT+k+HiGTAinKpHqYrRZq0Qsd7aKX52AEvEegupYQWBV0Ss2+AcP/a2kYg+
/K+MADWuiPdBuzbSz8ZSde2W6viHVlT9Kkvt1PhBqo849kNi4dgUqu5+8Oz8
4p1UfVqz9Q/5yVg3qO2qtGoSopCLK+ilMcPWSTNrjU29LUTq6Qmhj2WGvdd7
gq/MFBchcRwM76w4h32WvH5lIH8+kXfO+lVv/I79Gv9Mb5X5D6KPMW0+a+iK
9ZbrNiuuvBQglZ81Uw+2Yt9XlPL0UVOgALmklWXHbsC6a7DdixPrBCik1mGr
Vh72leFLVIcujRMgtnSTd9csrCtnaWrefE/0P69cOb+vYd+aMH+R3b1Ywuce
G9qqJI31qrN7Hf/aTeSdNac4jiewL/ZMZ7ixF/CRSu6uia9/DFsfZgr7N2ME
H9WsMPXdfQ7rVXV5m32qCL8/oa4uYwTWfT6vSDkfw0O6BtO17YOxr1eLVtp7
3oWHnM4s97EbNWy9mib3h1sNeMhwWvRsZjDmBkHcr1PvjuQh64r21dcksZ5V
mn7gaQ1Rn74ulSo7j7mEY82qoE1xPYgt9dCqWg7rQTbbb8Ye7EE1Nc5/xlzE
PERv5PpT7oY9iB64TH/KOKzrlM6rCB/Vg3o99vzkXBy2vlCYxJSMWi6y33Hh
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
AsS0CI2dIIv1gAt7LE5dE6Cy1v4V2cexj+htPv57gT3hI+LUBk+0Yj/Cd93o
tlRZgKwvrL9yeSXWS17uF0p95qPe7QG2ik+wr1EJlp+vkED4pne6notmDtMP
xv7JcSb0C2P8q+nYN1k6akQxF/ER7cD+0wv/YP/Vctm90UCMj+L231Q+Tx+2
DsaCzZdWveEh+onaPWqD2N/FdU6f/v0aD4U/ryjr9MK6pPu0IP5uHpJTWvN2
4w/sH800us3E5vOQbvfKDDFPrLcsOJJX/bMHxf2YVHuuF/tTX8c3FcUlPSjn
wOBAj/uwdfW/VIzjRvSgqG2nZpsLh6075/NuT/4uoo5kXPhpewzrX9vEX+vN
J/z14/OHznzF/tr3QbVv6ncuyok9Z7TAedjzR1En5nQzuIgxqPlh5Wfs3z9y
c2arBnOR+vrqhsaNw55L+mplkLKJi3rbS0enVg9733fQtkv9alzkXtO5x20X
1lmtKd0d/RxES9QpWirA/MFsmgzDoZSD0s1mMHcfHcYlqka9v3STg5gjp2tU
/Bn2/BH30vuuQ0TejKjQ8lXBuo0R/5sj4qA41btl740xJ6HnTD7UO56D6NFe
0zKthq1TN8pX8OgzG6lM90h0dcMcJqhrbevpdDaKO3XI0v3osN8h7z67fvAM
oXMvnOSfx5ynpbrY7+IGNqJJN50sCsFcqLfi3AvuHDZK77uRdS1n2HNGfudH
0Qe7kZP346l0AeZRLeFLMjTruhGtfpLX+5lY1w76o38ttRsxbw9JcXdgrhU9
d46a+Fkiv+dnvxwfijlY3qhRa/UciP5z2hQXsSLM03zuLlQ7tZD4XO3+l/t/
YP7Wq+5+47hUN0qv1P2+XhPrZt89eBOYLORUsfT2VifM8SL7DD9tyGYhZs00
u9BAzP1qsi0Ul5xnIbkQ/yPyjzAn9DG50FjhyEKMu+4HeUl4PSi17G+nFy1l
IfqYy+39yzCHzFPZ4VM1iYVoa9JKJVvw7/O5Mpuyb3/pQipn9MfquWPOmf5h
h3FMdRdiXs3epjwRc9Hk7cUKn5K7UNztlLepqf/5PT7TPk78cW4Psf97+QkL
O/DzCDaDzcusl3Uh2ocA29kbMdfVLZD5qT+d+NwL/nkT5mAOrDj9vnvxCEKf
fcA5dQLmxusClzFzP3cipr5N4aoPmD+fjp0eWlXciRiW1hWyTvj5C+5d1VFS
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
9c0zD39h3jIw+bOefQ0bMU+4iudOGPa+8s+l5v632UjucLf7aSXMbVitZyz2
H2QjuvV5P4kpmPPQtz5/zjIm9FeJyWd0MRdSPGNd/kaBjdwDIwQD+zFHSk3s
akjndSOn9acXHbuDuVM4y2VjR3E3qqHL3HBvwvzqa7/i0EUivzNaj355PQbr
TsKuC2OPdSNmqu/zpaaYg1nkta0fsb4b0e/tOCV5YthzTGfb+2tUif2E7W9V
yMKczWKmbKMS4bvoMWZ6p7sxr0voGa/9pJaFaNFWreenY108Z8KZjcksJBdl
H3jDBnM/WlmNr/LJv9dNkj9+zhFzQvrHSzYTNxJ15eFVk2eamCumn6wqHTGf
hZgMyeoJlfj38Nu5Bm4HxrBQ3Ly5pjN2YG4ZqvPedB27CzmV2qSzJg7jnFPK
/aYWdyHaiA9fJybh3+frlYirdcUTdejl3NNfN2GOqr3mwG81vy7EKJ3WG8jH
v/8Pa8+1LNvchehvV42ps8Kclquxsylk4d/89pmnvRDz3hLBlWtu8sR+bLIa
1xRiPpyQVbxp03eiX5d4vGzJNfz8gsPtD/PbWgh9wdX6Z2GYM4c5Tjfu/NuH
W63PrOfg990MjD05ZfxdYnvhsSGdJPx+HOe8+r6lgcT24bfXBrtg7t1370/B
nf2diPa2f94pJczJxXdveem79m9OnvKpNgmvY+bMUKzJVCf2I1W6sl8Hc/h1
/SN4l+Q6EWPfPHfN9Zjb6+2qkHf+SdRR3TuTv/64Teox3/dLv+7oQHSnFXHl
1/H6bCrz3fWzK4jtFwcvVE+9gfOMs/eOexmEPqamMKgArxfXmk2/EHyb2M+q
aZU6r8PxfeSgZ3vqErH9PJne0KAwnP/54z0n0f+edwx8y5LEc5BQOu/yY4+/
5xfsn61BAaSen7hpd7szoT+vzz2shucsX2ty9OW3E3rU2a9iYSfxeb/0aPn2
TYS+acrFhJOepM60uG/2YC2hKzlZRlW74nw4JyPYZDWhJ7rFHrjqjOtRDfvn
Vhqh10vs8XZ3+o86tB/oc6HvCf1f0HGAjht0nKHzAp1H6LxD1wl0XUHXIXTd
Qtc5dF9A9xF030H3KXRfQ3kAyhtQnoHyEpTHoLwH5Ukor0J5GMrbUJ6H6gJU
R6C6A9UpqK6BdRCom1CdheoyVMehug/1CVBfAfUhUN8C9TlQXwT1UVDfBfVp
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
Iz3zUrgG7od+0RfT6cL73sqRtKxlkbhvKF8uGGSO+z0KTwR+iOG+m4fV15h0
vD8fEHOY8uw47j8TGN0vpkX6tTnRYmrfOUi0+aKc85cJz5n63m4dms1Banuf
19G2kb5vQu6eFxe5+UXZ9kBm8YTnTEl/9JI146AsLYl4tJb0N6dXZmXJcNCq
/L9VVbkT5ll9c0Yluri5qWDbt9jlpO9S22QS84K7vgTKZwq/JvOUr8CKG9/P
ctfHq0J2e1eRvm6F1MiWTWwkOraIafCSzGv5+jppx6TYqDNcYPXsRaSvfDzp
ZXYHC9VGP1lr8YLMg7PW+Kw2f8ZCq+48m/F+CekHH2eLrzjOQp3yDfeF7k24
D+vuwZZ4xEJSvwXmKcwh/e7Dm+0p07nHEdenh6aQubU8m9J3vIeJfGqnFSqs
Jv3gV/tiVmczUedGjvDMGjIXj0o/az4Yws3dy1LuCzqTvvboxUdODkzkf7xE
+tfAhH3m/6jHFS9notAx1t2Bc6Rv+GL121Ehbt3SndlwYgrpJ5TVPZzd2I+U
fYKmrr47YV9B6qmUC4n9yPC9us6GBaRvVLQt7dS5fqTmvmm1es4EzuB6QvfG
tn5kIqQk2mY8Yf71/f7S2Urc43SIDetVTHhOdG3gXOoAA1kENFsj2wn7Ct4+
P+19AbdeD717+pVKcpLMxa8EM8IZqJSxYXLBUdJ3GaWsX2jPXa9PhKt+pZEc
JuGAsIyXNgMp/5m6Jtaf9KXtPiV8E2cgLZeZc9sUJ9znFe8od6OXjijRQ+9b
cyc87+Br/0yDt3Rk+LoqU2Y76d8ZS1a8HUFHA+ydt+hdE56bMGfHmOwRbj8V
k8S6MHvCPoTf9snkGtGRx+uO02lWJL/KtStiTZajo9SalvhlF0neZfxJc/cp
bl/rsLg3d/trko8pl0w3UqugIUq3/bay4QnPJa/67seMpSEt/ncnHywhfcHH
3zNLPLn9pV5uOHU9yeuUJbzPsrdwj7Nu69HEMyTfM48ryDy8iIb8tarCZtaQ
PFC56eLgbFHu67VD3p9SI32z3MuDJ3v6kP/Lu+/NvUmuqJ11yUaygFuHosLf
bCon+WQme3Vi14M+FJqkbuoqR/r5556vOHeuD+WfdppyyofknA6bm5/vsO9D
nZ56B559JLko469GrTDiHudvp9S81aRfO7w8slehD0k1/Rk5E0pyV7eUkKKk
cSpSdi1rtfhBclq3J/ci77Vw/Y1ivydvJH0LHfVZ03OoKHRS81HbZyTvlV66
TnTtPSpy6N+4SFeU9JW1DmTZnaIiysCvqJrtJE+eEi+Zuc+WivxdwxVyr5H8
Wf/mbs0IQyoyjDxflHeF5NX+Xcv3Bi7k1t2asef2N8j7HVrWy2xomfav/am+
J159SXLv/JGYW59/9SL/13OrzxeQnHxzuv4Sh95e1Mm3pfr9T5Krd9+JdZKo
4vo9u3uuCJB+8aJzQ9K5vSj/EYtS4kjy+fQ/kx9nPOHW70GnE5LBJM9nqLl4
93LrvXLU+MMhNsn/ve1SEhsDehElpuaOow3pm91QKQw5yz3OcaeHEV/I+0ek
HyZmTOLmgXzdO5J6ZqRfafMqduZB7ut9Zu5pFib9+pYB3VC7XmQY5Log9j45
j2AOFAdl7ub6h4rOz70wYR+zkcQNSTu5x0+LSolx/M8+dBzo70LvE/p/QZ8D
9LlBnzP0vUDfI/S9Q+cJdF5B5yF03kLnOXRdQNcRdN1B1yl0XUPrALRuQOsM
tC5B6xi07kHrJLSuQuswuG4D6zxUF6A6AtUdqE5BdQ2qg1DdhOosVJehOg7V
fahPgPoKqA+B+haoz4H6IqiPgvouqE+D+jqoD4T6RqjPhPpSqI+F+l6oT4b6
aqgPh/p2qM+HcgGUI6DcAeUUKNdAOQjKTVDOgnIZlOP+5x+e+/7xoZwI5Uoo
h0K5Fcq5UC6GcjSUu6GcDuV6iANA3ADiDBCXgDgGxD0gTgJxFYjDQNwG4jwQ
F4I4EsSdIE4FcS2Ig0HcDOJsEJeDOB7E/SBOCHFFiENC3BLinBAXhTgqxF0h
Tgtx3X/nwBA3hjgzxKUhjg1xb4iTQ1wd4vAQt4c4PzQXgOYI0NwBmlNAcw1o
DgLNTaA5CzSXgeY40NwHmhP9c578twodp/Go69sZyXRMLzFm5Iue6cNUo+5g
cYlnL6ZO32XXDXR3Y1rL/H4hbZDU0hjp3JPTv6J892vTzFR7CXVozegNNu5E
qYYlB0qsqIQOGCRXJ4l8QeYzBjfvNOsjVK5Qdc64XAs6LPlzwdq1NEILG5RD
Nm5sQvopnK07peiEWv/Ukh6vbkASL8JLWofphH7+vinJTeYjMi79a6oXxSBU
8wnfvO06tch/1ezDCQb9hPI997okG1KJrEdn9tg09BM6Zd7ZJ4xJZSghFN28
dIhJqFzMxXjG1SI02D1N5A6HSahZ4q1PZxwLUL741FRlLxahfJ5b8k6FvEO2
ekGUll4WobXb3E/n62UjT3rAuLodm9BIyduKA8/TkbbTXnPZYjahWumqeRT3
58hDdLJbyDIOof4rFnY8to1D0Uv70xZEcgg1lO6LY/tEoOK/82yf/+YQymfD
v6SbY0qeT+oHPviH4evVmjVmSwdn4r7Q2jce5XE89gXNfOl1Qxv3c35WMPzz
8XXVbEWvg7c57gu1ji2obMfX7ZGIvwe2uuH+qsLnm1/x4/6Piit6hQ/wemFh
KiTfsBr3nxVfHOtp5vF8wLXz2B5+uP8j833H2Fzc12mwNhcpx+tjhlDdirVH
cb+zpvQSUxr3S6992nk0F6/XzXs+229wxX2zhIMLhWbi/llv/0WaeXj/YFYr
ecjtIO6Hqh578GMK7s8IfbM1KQXvW8wKI3yvO+N+j9uw6w4F3L9cS9eOKsP7
KKHLoRXu/jx8/l8PrXVw3yTMjHOgB+/rVvUlOfyMwX03i+9maZa4n/GwO6RL
EvcVHioLXSjgMZ86GXrouxfub1+w+LPYUtzXKp9VpNSD98nPRnzYJndxX+tu
5uPBrTz67XmTvx4Xw/3m3ac+FBbweC7qj8vsj/64b9O3rinUAPe1Tu3zCfuB
547a/U/PS6bg/q0Xd6pN3Hnct2W7VL1qOelr0q66GP3krlcbLP3Vesl8lP74
ENW0gLtOKYnmZx0g/fyVp+6WBnOQg3iy78mvE3JZyhO0bi83l+mozIk7Qvrp
vwRkl2tyj+Nxbe34AJnvIvaY0wX/sNGA87qSyWdIfyCsgGFexUbNbtTy9fyk
T6U4FrVFsZFhuDfrif+Efc5bm44OHmQj13j5252CpE9JeiuTv4yNpNQ+GTic
JXNr99kH994KsdGqVVMmfRIn/YRy0Zku9SxEGb2tcz6UzMUuMp4hUrHcdTB3
jvOimaRPsfgpz3JnoVDT3qLacDJ32zo+SvdYx83jJ6XfR6mQvu9trVVrZFgo
9eTpoDs5ZK6PLs3LEeHWJ/+THbsidpC+7bTV0b8KmMjhaQS/R9+E/Uau3DD2
jGQi0Wo7LWU/0vduFBBJOMZEajLXps2ZTfq18aO267h9oWjMCae4xySvEPsc
ypgjw0SRSofLt60h/fwuy6fezH7kkGH2TK1mwvOz5rc1BxT0Ixk7VaWdLqTP
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
CC2zlHrlW/AJGdY8eC21hU5quMrnKqUGxLrY/ij1KZ1QvVPOcuwxbv576hTu
rsEg9W+DyWvfOiSY9pPjfJpB6BBTSasuohZpr4kz/tLMILTyjoZNLaMaKR+s
HfRU6ifU8LaiqYlpFeoMD3q0/2Q/ofkhGbqZqAKZ1Z29O+VdP6HLZaQ9M26U
IYfbjsYFYkxC88+n7j6RV8LN4fxmvluZhOaX/1o5b1ExGlPf21QUwyR0+kj5
oJ31B7SZSWGfa2MSauyt7yr8qQDpyzWd3KjFIjTB8eeafe35iG/+h1MvD7NI
tah2jP37Dl2/fW+eahaL0KDxDAfdvW+R4M2gb1ncXPOPNm859Hz70yxk7dZ5
cIYem1AZpu9ccetXSOLg+wxVDzahruqcq0vfvUSd50rEkl+zCeWTNxuXLE1B
hWlOKZbf2YSm7niSsMskCQ1Nk+g5uYJDaKdF8YPvY7Eof2PkmcluHEL5mCfq
V727h/g41PifzzmkOrgs+loYggpNUPV9KodQf/dAi8eTPYnrUmrD9+zwj3i9
C5Cv/PXnOu5n3bm8SB3hPm0krj9sFK+zblMtvec+w32tmjllmc64n7G04aiV
LI/jlO8WP9SG9wMj1L36O4Jw/6xq8Y3O9bgfLy9o7/8L70/aygPW3cnk0ecE
Xtu26TDuJ36bEzlpMe5rDPfdk6PxeG5j07S2gEQe91mLnH59ywn3PZrepcWo
8pi7aYTEGlDxfk/N6Vf+nTTct4k/8EHQA/dpT27kLFyF+50baR9pf3jsY6zi
Zx9bgvu3+CmumwN5PEfspVvhSlse+x5/+zGUOwv3HYx7AjZSeTxH7OTG43vi
cN+m1FBG/Azuh9pN8onWx32TI5eo0X/xvJD68/63eRU87lP7FHbpfDiP543K
6tHu2fF43uiNucvs5uO+g0nDxRn9eA4yPH7NJ+wp7sf4ZO+y9+V1v1sSPckY
9z+8k52VLMsjl2VIzRFk4vmuc2ljQnc6j9/1FaSfiLjM43eA115d9LPicZzD
hREhc3A/UrNSOI/F4/eH8lZLmnJwn7bkBtX1Go/75g6W3PC24ZGjN+oPKi/A
fZvpc/vW/cDz+BqL4cHeD7ifOD2pcfItHs/V3fkrWXYfj33XT5ld3afB4/ec
shds7g3zuD+u6v21Px9wX21l2v4rIbifqOPmJmfHY994hXl+1Qtxf9VN1vb9
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
7WZjenUc3R16zcDUyFPAKNqWhqkta4Bu+oyKqXe4V4FCVi+mi3d+cswI7MH0
mYr86hdj3ZgadhX4qq7FVbnm3nHKDVItTO/suJnyFSlr7tG8MK+HUIs1w6vX
VnahBBO9gyVnewgVll7c27ChC+0uLjvQPNRD6OmdlgffBnci81X5nddX9RIa
/LQjZal6J2oM/HRx0YNeQs86nj91aUEH0t7idGtaWy+hLkqN6yuOtCOHBae9
xFZQCe28eSu20+ELSjZ5LXruIJVQQdWW3itlbUjzvKKkRh6VUN+LTz6dKWhF
Bo1pjdYMKqGb/RhnhNa1Is0X2nmTdfsI9f3uXPDVvgVVzTF5992+j9BoysKi
hdTPSD+12+ccpY9Qa87225eVuP48cSPx0j5CraPaddufNKM3a/8mp4vSCK03
Evjb09uENMVfVcXq0gj1be+8M9uuCfnOi7145DSN0IhIWZ/ciEb0xq9psk0i
jdD6q6e/Dgs3Ij47zhqDLhqpzGWmJnaf0HPZoiMls+mE/nqZmpOU1YASbq94
8m0HnVAJtE9M/U89Uh5wfr73Gp1QytK64e5D9chWXi52YRmd0MHnabKB8R9R
ofOuZWliDEIz634dYXbUIdV3ZeVpBgxCg4tiHzKM61CCzznRXkcGoRJ3LlMt
mmqR5459AofuMAhN+Ns18mFNLfKfLko9lMcglC+s5t7lSzWomN4Z6zvIINT2
ypslyluq0ej9a/PeyvcTqmr2Uev+7ipU623Z1761n1DllbNvFatWotGHp5T3
ePYTqmq43ODLlgp0NY+zLSOxn9CWi/uVi8XL0ZoUkxcKdf2EhjO29FjLliGL
nnvqAX/7CVVOsBmtFihFLnl/tMoWMAmNviTSYqJYghSO1bwSt2ESanVAJTeb
U4SSb3UYvfVjEip8ucA1RqIIJZxxY2slMQmVkzt5qEX0Ayr+Pm/zp0omobbb
lhjxaRciudWmYZ/4WIS63DeJ/DP6HrXUfX5zbQGLUOqM3gd1Su+R7f3jG2ut
WIRSt+3cpzQ1H1lfTbZ44MMiVCaDf9Utm3eonu/6qc2xLEJlhq4duOicg1Sj
xJOmFrMI1fnoJb3h9RuUXLDcbQ6TRahU5wPWVXYWoqj0VH3l9sH/qP/2rbv3
7n6NFtOOXJ22mk2olNK3l5qrXyF7lkdI3S42oYkdGVaaX9ORf4Tk8HFuf/yP
8s2yPJLITkMGe8wDnGPZhKpl74sxdUpFxtbhJsEVbEIdlpksf894hmr3X0qT
oLMJ9W9I2fNaNRlJFe2sL5rGIdT/6pelXjsSUG7pts9XtTmEWiy5QtmjHod8
d7NLi2w4hBrqbbNm2D5Em+OjtRJ9OIQaLufv9naIQuZHf1+4SeEQSrFspczu
DUMSbLer03M5hBq+Vb0rIRuINI9N2/Wgh0Oo/wPmy7WBXkRdUg5Rrdb7hfft
kTq7OVKVuO+/L6DUMQ73zZKj5ctP4D5lutUHWzPc73TuDp2qhPupcRUJwX/x
PGJYu/F3YRXuf6hjlH17jPsWlruk9nvz+P3YYOeA/3bcb77yLkdrAe7HsAxH
Cn/jucww2Uf6bC3uC03/vXXqEx6/ozsprjfNh0cePDU4xdSKx+tfLH25UwX3
RX9fMYv8iefQTsuvfjUFPPZbUDrR1R3OY//tqlWmrQd45GUBlbVr1+F+ludi
6gwZ3KdsPBnxhsXjd48ehldEcnk8L6+6QOHeHdzPyQp/JujKgw/QhOw7EO5v
6N14ImAa7m8PMDW51Y9zidL934OCcnFf6PMTtax7PDjG6a2+k47ivk7sXb4g
M9xX0LiPxufzOM4xizfj/Dzez7R1xvKfcG5juKZB+EQG7jdI7dnZegP3pyhv
e/XmEO6rha7/GGLE4/5Ko92uosq4r7CyNuD8CM6vvDbd0jBq5TEn9ZRvPv6S
x+9733KEWRG476+3POOEJw/+xlcT89cc98345W3WaPHYb/9xsobkbB6/T1YW
sqlg4jww8W2/rW8jD36omjSck4X7Qq6n9hfcx32fA56cVRdwX4G603XXEdy3
WXHniqIVj+dKnzblb9HDff/3fReM5vHYx0alhYZm8pgXD4uoevHjfkNvoOnq
EZzH+u/OKvWl8fiduZGc791WHq9vDJH98gn3t4uXLmbU4r6bzRO+V1X/vQ8d
B/q74PsE/l/Q5wB9btDnDH0v0PcIfe/QeQKdV9B5CJ230HkOXRfQdQRdd9B1
Cl3X0DoArRvQOgOtS9A6Bq170DoJravQOgyt29A6D9UFqI5AdQeqU1Bdg+og
VDehOgvVZaiOQ3Uf6hOgvgLqQ6C+BepzoL4I6qOgvgvs04C+DuoDob4R6jOh
vhTqY6G+F+qTob4a6sOhvh3q86FcAOUIKHf8e06Bcg2Ug6DcBOUsKJdBOQ7K
fVBOhHIllEOh3ArlXCgXQzkayt1QTodyPcQBIG4AcQaIS0AcA+IeECeBuArE
YSBuA3EeiAtBHAnkTgCngrgWxMEgbgZxNojLQRwP4n4QJ4S4IsQhIW4JcU6I
i0IcFeKuEKeFuC7EgSFuDHJmgEtDHBvi3hAnh7g6xOEhbg9xfmguAM0RoLkD
NKeA5hrQHASam0BzFmguA81x/qlT/39R6H3u/HvhlgG3H/p3jXgsQ7t7jIFp
1X1bvvpZNEzdPF/622n2YRp0uEtRSpuKaeje8X4n7nn27ypdG2WuPAnXmCc+
PfTQHkwTbC5csZ2Pq3KUWYFVYzemMdfc9A+H4KrKoAws3YJrumxYnsdeUj13
J3Tu/P4VSV320jaN6iaUple3fHr0V+RuKOgmUN1NqP2c3/Zjm78i3Zuzasb5
ewhdsmivqeB4F+Jb0VAj+q99gf9X/VPXlZ5I7kLS3dN1DQ/2EOr0tDtlzgHu
9YISmu7c6yHU4tHVnPuzulCh8AGvm8U9hLaedK1Ta+xE3Vvi4weYPYSqh0ye
fDemEzkZbmmdIdtL6JE5U1872HYil8mKRmlGvYRSj2+X95bjXu/J43dkPHoJ
HeQTWZ35grs+bGlnnI/pJVRW6QDyX9yBJBZFtAvW9hL6+bKx84+b7ahc2OTj
NUEqoXH9CwNdf35BoxGmu/cspRIqvUHlB+v4F6Tq89Nv7V4qoUF351zd0NuG
lP/8stIOoxJKmTRdxMWsDd1/UT/0oohK6OJvl+UHUlrRVbeIgxsGqIS6vdlY
tnxpKxoU8Pt6npvn/1HV4QAb/8gW5Jm7TDl9Ux+hCSWHH1LVWpC7pZRrsFcf
oW/Ea0p2xX7m1tVVWQti+0g139kUIvsZBc+bUvWgrI9Q28jWSJW4ZpSvac9g
/+gj1ZtmqD23GQ12CR5eqkgjVNX2x/vjiU1IOftce/kmGqGUhkvOD9WaUJXz
/MvtHjRCo+vCPZ2fNyL/x2qJC7l5m9CpV0UCjRuR7q0LIqFvaYTaG52hb6v6
hKqis1ttummERi2td/u54xNyGLlnvkySTmjnLI3Zbp8akLvphWTXFXRCs1XO
8hXva0De0S4iFDs6ofe1KulzGPVI2uD7ssoLdEKLTRYdvudbj9J11UZFkumE
Uvdcm0bjr0eDCV819zfSCVUVt/FuO/sRpUcpVFuKMAilLk++LcaoQ1pJ6jU+
CxiEegj5hd++WYeeu9wUzzNlEPqrwvJLwbw65H82rJbpyiD1+pYQvaJaVJ/r
6hwbyCD0anHRRxmnWlTlUXTd+DGD0KjnL/ZpSNWifLW512XLGYT6i+sVuhhx
+ysBy0LLXgahZt9k3WZSqlHClB3xhuL9hMpl8KuezalCDqpoVFq1n9B82Svz
AuSrkMLdetaQUT+hVifF3HVdK5FqXdSCv479hMrJHlCalFKBtMQd7EUu9hPa
mZNXUz9YjlpepxRlUfoJpab22T9dXY6EQz+OfcvvJ7TloZT0dt8yVH+pofjD
l35Cp9CFdjlVlSKVnzvn8w31E6qxbmjB39WlyIFyf1hsBpPQfIOty99dK0GU
LT3lM5czCTXUT1jrV1+MpkyZzrfHkknoy9cRf7/MLkb+lWgFxYNJKN+KC/lr
7YqQ7w8++VtBTEJVN47aX8v4gAYHmMv4njAJNbM90fBn5gek/VipbeUHJqGV
yiZNqS6F3PXb4uqxLiahZn2KLY6vC1B5Uam5sCCLUGP7LZotrPdIRXP9mqPy
LEI1vp24c3jPe0Tp8hDsQixCDTNt+7P981G05NwrwTtZhFZaeBbYf8tDxaNS
h+Z4sAjNWKsjfe3dOzR0a0dA7U0WoV5C4/f01ueifIcDip+SWYTynUIPBf68
RcL8lG7LDyxCMwbPb19U+QbVKu0xWPmZRej/096dR2s57/0DLxWnAYUQUR3K
TJQckavMdUodDShzCeGUKUOcEPEYEh1FJ5SUBkNpoBSdExGlOQ2a29VOo6hT
RzzPP7/7+a3ft89a9/3Pc57fWq+/Xmtdy9r73tfwGd7X3mnYa2K12+dMyPq+
+tmB7fZszrltUel2n1z0cXbcnV//q8IRW3JeveWJszr8MD4bteHkph/U3pJz
yhF77/rqo3HZtstH/ty7yZacU/76z251Hx+bnVZi4flP3Lol54a9u2oW1RyT
9W5+Z+Mze27J2fCSTb1GjRuddanao/jygVtyThmx5MBXHhmVza58z863pmzJ
+dhPzYo+3vZeNub5VX1v+X5Lztqzlix5qM3I7NAzau0/aveWnLX73nFn937D
snvndLp/z+Fbc9a+7pe9Ty4akm3+y9sdsnO25pxd5a+9D5r7VrbuyrGNlzXf
mvPG+kce0ajHwGxJ/xZP3/PnrTkb7lo9sGeTv2UzV2/6/IAXtuYc+NArhz7X
65WsbdmhlVsP25qzYbZ8W/kuvbOOHy6fe+5XW3M+VuXRTS02Ppk9dsIlrf6x
amvOEjf+fkbD97vm5rWP3/qs03m/7uPvOhv1GTNyeXr8n70/POO5cfvIVc4p
8+Plr6bHPz+iSs3nO6fHz7/w3aLVV+zj33e9Mxt67unp8W3d6pSpUmEfn/Ow
1wcdtGEf/z/EU1p2v+TrfeRXrX76btiw9HjFWz7ududz+/h91A8a9B538z7y
rrW1Li59+T6+7+Cnzr79lPT4MyvfXbnigPT4fbv2vrL3hzR/qzrghU6z5qbH
n3l4+Qe13t9HXld52ocL+qXHK1xx0J+/7JYe/+nHbtWe7biP3weeM6LR3EvS
4yWywdnndfaRN9ar1G1GtX38/nDHxd2uLb+P98gjn9915I59/J5zhe7XV163
j7+T3bVuvxO/S4+P6ry8fZkZ+3hfvGdKdvDk9HjtOed0/W1MerzFmcdvLDM8
PX58x+v+dcjb+/j73P59K1R/M//j0deJvm/0OaOfKzoP0XmLznN0XaLrGF33
6D6J7qvoPozu2+g+j56L6DmKnrvoOY2e66gORHUjqjNRXYrqWFT3ojoZ1dWo
Dkd1O6rzUV+I+sj/23eiPhX1tagPRn0z6rNRX476eNT3ozkhmiuiOSSaW6I5
J5qLojkqmruiOS2a66I5MJobozkzmkujOTaae6M5OZqrozk8mtujOT/aC6I9
Ito7oj0l2muiPSjam6I9K9rLoj0u2vuiPTHaK6M9NNpboz032oujPTrau6M9
Pdrroxwgyg3CnCHIJaIcI8o9opwkylWiHCbKbaKcJ8qFohwpyp2inCrKtaIc
LMrNopwtyuWiHC/K/aKcMMoVoxwyyi2jnDPKRaMcNcpdo5w2ynWjHDjKjaOc
Ocqloxw7yr2jnDzK1aMcPsrto5w/ei8QvUeI3jtE7ymi9xrRe5DovUn0niV6
L/P/y/umyOjzR3Z6f8zej2f9kLfl7j9ox7j/6jf52vv7d986rFr+HnX16n+8
+UZx3vYtuuaHxo3yt/or9V/4+5YNeTut+jW3Pjcof/fOuPSUmzrk712XLJ/4
xOn5O+PB6pe027M+b5suPe7dS+ek7nij8fcnjU0t8c6nGz98MvWRakWbnmif
2vDotqWGnpO68vFpvWdXTh3z6tF9Pl22LnHPks+WV5iQ+kurT8oe2TO1yaLi
xvd1TP1+Y+szTzoz9drzBo7bVj71xl/vKF9rdVFiy5W7etT4InXKwFl1/qNf
6ogLhrS6v2vqznHzBk9qnrqj4tDPB52W2uSgNo//pWRq1a4H3DTj+7WJHWuX
7tBqdOpxpRb0atg3tXfLy65++u7UGTfvOe/K1qkN12UV+5yaWq5+82v+VDm1
05a7ZtTdsSZx4Ma7Hx67JPXahTdOfm1iatsHDyw3Ymjq9xOHz2z/ROrKk5fP
7HdX6vMNR3+3vXlqj6WTflteJ/Wa25e2G9P8v929qt7Oe363Jtt/4vAL29zy
3+68reSAX9evziZs7FHljR5rchZXm7j45Ymrs4cqLzvgiDfX5Jx+Q937rnvp
v/77dy/bfuW4NTmLHzmsb6kuq7Nt/YYOv/XrNTmPrNrz8Q4tVme759y5qnPx
mpxlv/j+tEU1VmevjWh72MW/rslZpcSDq17bb3U27ZT579119NqcbT5t1G3p
wlXZ3uFVPnj+zLU5yzx+ze53x63Kpr9+9EM3XLE255/6tPm6y7OrssY3rK9/
SYe1OSttf/uEV29flfW8adHIG55am3P8Xef9Zds5q7KHvrx87dOvrc05ff7L
J42tsiq7/dpBTS75aG3Om34+sOKRm1dm9+4Y/pcx09fmnHdIyX/cM2dldtfn
U6b1W70253WLl7eu+u7KrPHj9Xt+99PanJUuGDZ+Uu+VWdly/W56umJRzu1d
Xt9c99aVWcsJJb+pXKMoZ6lOjza/4YqV2XsP1LzqhfOLcj4647K9p9RcmTU4
dvTw7lcU5RxyZdfHG5ZbmZ37Vvnp591WlLNllWVvN/1yRVb2n6M/LfVAUc41
R2yc+lP/FdmEgx+4+5iXi3LOm91/5DuNV2Qtj/vqyz1Di3Lu3/edYQeXX5H1
n7pfrwemFOWsM25X69c+XZ517Pbq+n8tLMo544V6jSt0W56N+vzEirdvLsq5
bfRTsz4/Z3l20RvHH/FzmXU569V8eWL1Lcuy2VOXTH+66rqcvcd2fuu2Ecuy
Hc/8vPXq/6qL/8dat1Sr/fMdy7Ixkwd+/WHjdTnXTTtm4PrfL8smtr53zaQb
1+Wc9+uQ1tOXfZ/1f6hujbWPrstZp8/NA1r2/D5rNq3me8v7rst51Hu9/tn+
vO+zUbd1qnrS2HU5t30xZcSTa5ZmS/pXemHaN+ty3nvGN1e/O2BpVn/dyOtL
rluXs2WzX9b8q9nSrG2XVSe/vnddzh3vt+t+4gFLs5Y/XvLHtlXX59z/pNOP
3T5iSTZx0+blDc9Yn3PeufXaN7hnSXbah+VGXdB4fc6Hi1dsvej4JdnQry9r
U/nm9TkrDDxx72eLF2d1+rcp2/Lh9Tk7nvnLmv1fWpy13PPQc1f3Wp9z/0ov
X7ez1eJsW/9xS28bvj5n7TNW3PlFqcXZwxtuXXTa5PU5+1z6VdeuXy3K5u1X
8427Fq7P2XNX75ofPbIoO6psyU2bitfnHLP2l/POvXBRtmbJfp90KL0hZ5vO
u76d8+N3WZ1Jzb4ddtSGnB2/OfyVMqO+y6ov2O+3RnU25Bz42K796nf8LiuR
Ndo6qcmG//ai88+aXu27rOeaDrPvuWlDzjtbz+n1ztKFWb23Kp910AMbcl5b
5bPbF/RfmDW4r/SqJs9uyNl48I/XVrtpYdZ2XJ9Xn3pzQ84dKy6u17nGwqzP
jxWH/+nDDTkvPXFm6fLFC7ISDRdXqvT5hv/L+76eMWZB1mfJjh47lmzIeWmX
4++r2XlBNv6Dbl9cvnVDzmXbnv+g5lkLsj31Bt3ar0xxzkPbVZ1+7tb52cSd
A6beVKU457yjTxq3ZMz87Kg//Pb4QWcU5xxz1X4Pz79nfjZ095sVXq5fnPPA
Q6svadxiftZ+/nUHPdK8OOfCJ9bNf67S/OzeW+5dv+z64pxDZw1p3HHNvGzw
0Mm92t9dnPPwCl+2XDByXrbnp/qVrupWnPPQGs1n7HlhXtZ7wo4jb+xVnLPF
vOPHrWg1L2u2+JQz1rxanLPKfY/c0+bseVmT6UPaDXm7OOdxbx+0+eBD5mXv
/a7D86eMLc65u2he20fXzM0ebvrAW1WnFOfsc1T/I0d8Njfr2mD+HXW/KM75
+mU9Jt08am72bOc1E96eVZyz/ejWcyu9NDfrfcSLf7h+XnHOFhOubFP01Nzs
xrm/VHhjSXHOlc+UXVyzy9xs3hmVOq/5vjhnzy4zPmx9+9xsxx1r9ixaWZyz
1qTWB99/XXw8+jrR940+Z/RzRechOm/ReY6uS3Qdo+se3SfRfRXdh9F9G93n
0XMRPUfRcxc9p9FzHdaBoG5EdSaqS1Edi+peVCejuhrV4ahuR3U+6gtRH4n6
TtSnor4W9cGob0Z9NurLUR+P+n40J0RzRTSHRHNLNOdEc1E0R0VzVzSnRXNd
NAdGc2M0Z0ZzaTTHRnNvNCdHc3U0h0dzezTnR3tBtEdEe0e0p0R7TbQHRXtT
tGdFe1m0x0V7X7QnRntluIcGe2u050Z7cbRHR3t3tKdHe32UA0S5QZQzRLlE
lGNEuUeUk0S5SpTDRLlNlPNEuVCUI0W5U5RTRblWlINFuVmUs0W5XJTjRblf
lBNGuWKUQ0a5ZZRzRrlolKNGuWuh+W2h+XCh+XOh+Xah+Xmh+Xyh+X+h7xcK
fX9R6PuRQt+//LvfF5H/Ew6tOPfoV+ZtTWzx4BULzh2xDw9p+lOdB/dh2zeu
aNY0dUeHm24599jUvvcd17rV7i2JS244plSfOanV/3jE6DnDUze+fnfjB7qn
jn+txsUHXrkPKzfqd+3p+7D++KYDDkgdcfuWUY2Xbk58/dJuLQ4fl1pqQre3
Hn45dfOed5qeeMs+/HXWrL1Z6sb9/nnlvKNSG2Tz27/206bEirtr/+6r6anN
Bp7a4dT3Ust9Mazl7udSpw7redv5f0597OyJKzo3S/36gzePffr01L7vlNm+
f/nUr38e2/7WTT8klri4w8IvZ6buWVmpyfBRqTtrVa7erXfq3peaXPbYPaml
Rs4f/nbb1J0Dnu08qFHqxl4Nz37jxNQG678c9cPBqb2z5qeeu2tjYrN+94+4
amXqga9uf7bjtNSFvzbod9bI1Ncn1W10UJ/UPc8P6HJyt9Q2+7fd75wbUwdf
m53V+/LUbR8ef3Nx7X34RY853aqkdmnTfn7XvcWJJb44Zua09akHjr76mu4z
U0tNHfJ0yY9THx5+zPp/DUx9/ZXd//Huc6kN25S4fsF9qV2PP/yZD25Ifa/x
wuavNUt9fXr1Hb/VSX1h12dznqqe2uCrrXMOL5fa6fOfBp7x84bEFk992+3r
5an1Lh3W5pavUjutnPz3v49MrT502L+G9E4t1/zUm0Y/ktp1xpJddW9NbXnN
HX0vbppa+68tutx7TurJQ+ZNuOaY1Fo3vHtL7RKpXaYcXLn15vWJ9d/ccdXq
Bam9Gz1w5ORJqR0Pnv1OtSGp00Z1HlH+xdShteov7/xA6pQrb2u4+trU70/9
Ydm9l6eu7Hva23Xrpq4b/sWMoqqpl3Z5sOG5JVOHnnfyC59sWZc44LArejaf
l9rn4qrH7JiY2nT9K2d2eDv12evrP9Ds+dR6j25tX7Zr6rofr9gy/+bUnmOL
Zqxqmnpy10dGbqmXurNu02WfVE29qOvfulU/ILXW2RU+L9pelPjszKGHX7k2
tepJdSv2mJU6aukd70ydnPr8db1K/eXd1E4rRt3wh7+lDu16w6BHn03tuPoP
h533YGrbN448pvptqTOemvnT89ekTvrjzRPqN0s9dV2ND27MUhcWN9/e7IzU
ElVa7je1eurUmZcc8/FhqeXeP/CAs8ulHtf/+CH1flmbOOl3n3ww68fUqVPG
XD5sY+q0WW269y5KnTK7RPsvl6dOnDPi0l+/S730vr5rP16QuvDwJ564d17+
Rl8n+r7R54x+rug8ROctOs/RdYmuY3Tdo/skuq+i+zC6b6P7PHououcoeu6i
5zR6rqM6ENWNqM5EdSmqY1Hdi+pkVFejOhzV7ajOR30h6iNR34n6VNTXoj4Y
9c2oz0Z9OerjUd+P5oRorojmkGhuieacaC6K5qho7ormtGiui+bAaG6M5sxo
Lo3m2GjujebkaK6O5vBobo/m/GgviPaIaO+I9pRor4n2oGhvivasaC+L9rho
74v2xGivjPbQaG+N9txoL4726Gjvjvb0aK+PcoAoN4hyhjCXCHKMKPeIcpIo
V4lymCi3iXKeKBeKcqQod4pyqijXinKwKDcLc7Ygl4tyvCj3i3LCKFeMcsgo
twxzziAXjXLUf3e+S5L/243qZ2StE1t8u2tA/s5cettl8+/I34pVDpq4o0H+
XtevQY0alfN32QVnXfTPH7fk7eyjP1v9+Yz8HT/hr6VGj8zfei+v/+jXJ/O3
3OAtu8+/Ln8v2pF9/FKD/C1x0vSXxlXJ32aD3589Y8/mvH2s/5ghxyzO30dX
ju+29eP8LfHtHQc//2b+dn2x2Wlzu+Vvk1tan//M9flb7uATuj/dKH9nHzt9
80XH5e97U9tdsahs/u65Y9OFh2zalL8PNV18/zf5W27ymaUuGJu/JR6c32fU
3/J38ItPlSl+On/bnjXtxvPuzt+vlxXNPema/N2zeOOgCy/O3+s6b32v9an5
2+eja1rNqZzaZtbilmdWSp3yRp0PXvn5h8Tabx82qN2G1HIrdj/87LzUSw+4
vUf3z1KnbDr812WDU3t0L/3QsF6pzQ644Nha96VedGiFoeXbp/avUL/0zqap
JUZObTv07NSV1Xv1Kndsao9dv6tRXDa1evMKV67ZtjHx8CGzT+m+PPWYmz4d
X/3z1AZftut6z6jUgWs/fnpBv9T+7/Q98tYnUyu+++LKJzql3tX5mDKXtEqt
dUi/KuMbpK585pgrWpyaeuAje+948rDU3jX6lFxcMnXUR60qXb+xOHHoslZ1
uy9O7Trg+I5NP0vdeNLwvtNGpzabfHHF0n9Lbbnx9AWtX0zteNT63359MLVh
8W/Xv9Yp9fWs2aZvrkptX6v+s9Mbpw7ueMHpv52del27yavvOjF19g9fVv3m
8NTTvqq7+psKqUedU61sp70bEt8b+tqc7dtS25S8Z/SWNakDn1t65PGLUjs2
/LZOlRmpAyd0/vu7X6RO/qX23skTU5ddecX3w8akrhkz4Lu7h6VWf2ThmMWD
U/sPa93x1TdSx5+z7bRHXku9dMnSb+r1y9/o60TfN/qc0c8VnYfovEXnObwu
wXWMrnt0n0T3VXQfRvdtdJ9Hz0X0HEXPXfScRs91VAeiuhHVmaguRXUsqntR
nYzqalSHo7od1fmoL0R9JOo7UZ+K+lrUB6O+GfXZqC9HfTzq+9GcEM0V0RwS
zS3RnBPNRdEcFc1d0ZwWzXWFzoeFzp+FzreFzs+FzueFzv+F7heF7i+F7keF
7l+F7neF7o+F7qeF7r+F7teF7u+F5gOF5g+F5huF5ieF5jOF5j+F5kuF5leF
5mOF5m+F5nuF5oeF5pOF5p//7ryWJEmS/J/wok0jai/avTVx/9Kn1P7Dz6k7
zlh9xFUrU9svP/LOA2envv7BsoU/fpy68LG3Gi0alHrUSxVblH8mdclxv369
4J7Ulm3euvywtqlNxh79ypILU2ufMLtqqZNTD7188YomR6TWb3JSo9GlU6/7
+dvSv9u6JbHNTxsa/nVx6sxjF/1x2Bep25ZWG152XGrFCyff1m5Q6gu1u3x1
34upPQcM/mTng6nt615b6cybUhvMOOzWOxqn7nztknMrn5dap2jnGyecuA9v
+OiWnw5NHdNu16tXl049uc3vN2/fvjlxYItmjZ5bkXr40yfM//nb1ANfPvXV
RZNSD630jxrlR6b2P+S7Ixa8nrpj3FHD1r+Q2mxk2b1LHkg99OWd/Rfdnrrk
wTV/WNgu9dALXzh2ctPUFuXPKf12g9STJ327p+pZqT0avfT7g2qmHjq6/A+v
HJlaa3CZ6uMqpt57WuenN5ZOnfzRoi3Vdm9KfLjMkPdO2Z5ap+Xdd55TnLpw
fvujRqxJfbhNm6+qLk8d/2XR/vcvTO36yU+jO8xL7TPo3COunpN62rXD35s6
M3+jrxN93+hzRj9XdB6i8xad5+i6RNcxuu7RfRLdV9F9GN230X0ePhfBcxQ9
d9FzGj3XUR2I6kZUZ6K6FNWxqO5FdTKqq1Edjup2VOejvhD1kajvRH0q6mtR
H4z6ZtRno74c9fGo70dzQjRXRHNINLdEc040F0VzVDR3RXPav3t+JEmSJEmS
zNco34gc1X/Vk72K83fz5D+NbTUjf0+r2enGfuPyd+jwCW+N75u/z1b988kr
Hs3f2gMuqPZ+x/yt9ber29X/U/42aTloxZ3n5O/URq2ynjXzt3qZ1e0vPzh/
2/66vvTD+xXgrCtvb7N9S97Orn5iu99W5e+0U06rtnpW/s4sedelx/89f4fO
fmrIpx/m710f3XPRpLfzd+h306Z9+Gr+PvbM9ZNPeSF/Dx10+obBj+bvjU9c
uHnDffl71AkTGpfukr+T/1Sy7a235u/eKufVm3Vz/vadP2JG/Rvyt9CvX+jn
L/T8FHr+C72+hd4/hd6fBd//BT5fhT6/hdaHQutPofWt0PpZaH0utP4X2l8K
7V+F9sdC+2+h/b3Q+aHQ+aTQ+afQ+erfPQ+SJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEnyf5f/CRgBQsg=
     "], {{0, 0}, {282, 
     280}}, {0, 1}], {
    Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
     Automatic, FrameTicks -> {{{{279.5, 
          FormBox[
           RowBox[{"-", "179.559`"}], TraditionalForm]}, {209.5, 
          FormBox[
           RowBox[{"-", "89.7795`"}], TraditionalForm]}, {139.5, 
          FormBox["0", TraditionalForm]}, {69.5, 
          FormBox["89.7795`", TraditionalForm]}, {-0.5, 
          FormBox["179.559`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "179.559`"}], TraditionalForm]}, {70.5, 
          FormBox[
           RowBox[{"-", "89.7795`"}], TraditionalForm]}, {140.5, 
          FormBox["0", TraditionalForm]}, {210.5, 
          FormBox["89.7795`", TraditionalForm]}, {280.5, 
          FormBox["179.559`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 70.5, 140.5, 210.5, 280.5}, {0.5, 70.5, 140.5, 210.5,
       280.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
       TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -142.75933052895368`}, 
                    Offset[{4., 0}, {7.5, -142.75933052895368`}]}, {{7.5, 
                    1.9813389420926342`}, 
                    Offset[{4., 0}, {7.5, 1.9813389420926342`}]}, {{7.5, 
                    146.72200841313884`}, 
                    Offset[{4., 0}, {7.5, 146.72200841313884`}]}, {{7.5, 
                    275.38038127629125`}, 
                    Offset[{4., 0}, {7.5, 275.38038127629125`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -142.75933052895368`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.8\"", 1.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 1.9813389420926342`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.7\"", 2.7, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 146.72200841313884`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"3.5\"", 3.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 275.38038127629125`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6258614517139534`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.7517229034279066`", ",", "1.8`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8775843551418598`", ",", "2.7`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9894612011098184`", ",", "3.5`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7576720557274957`*^9, 3.7576721292201605`*^9, {3.7576723141476855`*^9, 
   3.7576723329134703`*^9}, 3.7576724505142345`*^9, 3.7576727564265985`*^9, {
   3.757672861560854*^9, 3.7576728788581305`*^9}, {3.757672915316574*^9, 
   3.757672918643919*^9}, 3.7576729659824295`*^9, {3.757912154515978*^9, 
   3.75791218511029*^9}, {3.757921480602399*^9, 3.757921493958638*^9}, 
   3.75792154140067*^9, 3.7579215938773108`*^9, 3.7584308403021417`*^9, 
   3.7584389878143835`*^9, 3.7584419896438413`*^9, 
   3.7607801371630836`*^9},ExpressionUUID->"ff45f4d3-7e2e-43e5-9af4-\
78bf810df4c4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 457, 7, 101, "Title", "ExpressionUUID" -> \
"5040d5b2-880b-45cc-a231-0e6954975e21",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1040, 31, 932, 17, 47, "Input", "ExpressionUUID" -> \
"9e617440-68c8-4c7d-87fe-cd9d2efca97f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1975, 50, 450, 7, 56, "Subtitle", "ExpressionUUID" -> \
"e25394e1-9c35-4f6a-8495-86623345b352",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2428, 59, 557, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"0fcc0597-25c9-4843-be60-e01aeb713b6b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2988, 70, 1773, 36, 66, "Input", "ExpressionUUID" -> \
"100d6a29-6bda-47fc-8ee9-d0d4d8524fab",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4764, 108, 491, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"a26e5cb8-621f-473e-9817-1af4aa08599c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[5258, 118, 2909, 66, 200, "Input", "ExpressionUUID" -> \
"10ceb89e-20df-48f1-a321-ff7ea6718edd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8170, 186, 542, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"d7ba3c85-2ecc-4633-b74f-86fb15d632b7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8715, 196, 1586, 32, 87, "Input", "ExpressionUUID" -> \
"2132100d-0f03-4edf-8750-0a4cfeec3cf8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10304, 230, 499, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"a1f5bcd3-ad1c-4608-8d2e-184dd5d3b14f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10806, 240, 6861, 183, 632, "Input", "ExpressionUUID" -> \
"064c7d03-91ae-4e2d-a5a1-1e6c1a61dace",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[17670, 425, 541, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"ba1976cb-53a4-4ebe-af03-95fcd4651050",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[18214, 435, 3041, 74, 497, "Input", "ExpressionUUID" -> \
"98de9a1d-6124-4724-8226-daf84a86a835",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21258, 511, 604, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"36014964-da04-4894-82b2-12a8ee0727f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21865, 522, 5582, 133, 794, "Input", "ExpressionUUID" -> \
"01047cc0-f16a-427d-b7ce-0c29435e4e64",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[27450, 657, 726, 11, 33, "Subsubtitle", "ExpressionUUID" -> \
"21ae29e2-a91d-4224-a123-209e3951a365",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[28179, 670, 5232, 118, 366, "Input", "ExpressionUUID" -> \
"b438da06-2c58-4df8-acea-37ef3435337f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[33414, 790, 965, 14, 33, "Subsubtitle", "ExpressionUUID" -> \
"f292807d-09b1-495c-8b9c-9b6b00df497f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[34382, 806, 1367, 35, 47, "Input", "ExpressionUUID" -> \
"72bf3732-c3a2-4f97-80cb-c1e43b95ecdf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[35752, 843, 1052, 17, 33, "Subsubtitle", "ExpressionUUID" -> \
"b0004f69-f221-4be9-a8c1-e15c829973e9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[36807, 862, 2409, 52, 385, "Input", "ExpressionUUID" -> \
"88e4f2ea-e727-4648-a92f-4e85f1dbd17f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[39219, 916, 854, 13, 33, "Subsubtitle", "ExpressionUUID" -> \
"394e299f-9abe-4d8b-a9b5-36a2d37636ef",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[40076, 931, 10499, 241, 1075, "Input", "ExpressionUUID" -> \
"de53eaa8-5f9f-4f21-90ff-43a6ff9125cd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[50578, 1174, 547, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"1a670f20-a3b6-450a-ad8b-342673b49f03",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[51128, 1184, 1737, 41, 236, "Input", "ExpressionUUID" -> \
"22d0e063-4a2f-4302-8b76-c318fb3d02c1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[52868, 1227, 506, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"573585d3-2ab7-4012-9bde-ee091976122e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[53377, 1237, 1470, 34, 158, "Input", "ExpressionUUID" -> \
"dbe4cd76-4469-4ba0-8820-019c7d484c1a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[54850, 1273, 1773, 44, 140, "Input", "ExpressionUUID" -> \
"a97292b3-e790-4763-b444-aa3c9e960ac0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[56626, 1319, 558, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"5f65bd77-40eb-4e12-b562-42a327fbbec3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[57187, 1329, 1256, 31, 84, "Input", "ExpressionUUID" -> \
"38a1c404-a80a-4f37-b880-ecc92f0fda32",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[58446, 1362, 5140, 78, 36, "Print", "ExpressionUUID" -> \
"49e89a3f-160a-45be-bb95-73296d576db0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[63589, 1442, 458, 7, 33, "Subsubtitle", "ExpressionUUID" -> \
"c9835767-2b4a-4bf0-9d05-9ee1c3d7ac31",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[64050, 1451, 9440, 225, 1150, "Input", "ExpressionUUID" -> \
"d92d7a12-ebcc-4f18-83e0-f681f54b8eec",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[73505, 1679, 2453, 42, 72, "Print", "ExpressionUUID" -> \
"571b18dd-b70d-4874-a6bd-c95d6d245811"],
Cell[75961, 1723, 49842, 895, 1133, "Output", "ExpressionUUID" -> \
"a7769b9f-372c-4fea-9038-cf2a26ffc08b"],
Cell[125806, 2620, 21044, 364, 191, "Output", "ExpressionUUID" -> \
"da615488-3f91-47fa-88a2-3d5171c0286f"],
Cell[146853, 2986, 19625, 425, 449, "Output", "ExpressionUUID" -> \
"085c623f-ffde-4e35-bd78-508d6e7db57c"],
Cell[166481, 3413, 3299, 73, 241, "Output", "ExpressionUUID" -> \
"fe58815a-09ca-4268-9b73-f27da7caba55"],
Cell[169783, 3488, 53365, 988, 1538, InheritFromParent, "ExpressionUUID" -> \
"bba36125-659f-446f-a365-4a9c4df427b0"],
Cell[223151, 4478, 54588, 1031, 1538, InheritFromParent, "ExpressionUUID" -> \
"f270070e-3d12-44cd-b902-20d68dd1b2ef"],
Cell[CellGroupData[{
Cell[277764, 5513, 38308, 692, 602, InheritFromParent, "ExpressionUUID" -> \
"aa956dd2-8049-46bc-869d-1ab93a5016c6"],
Cell[316075, 6207, 39973, 715, 602, "Output", "ExpressionUUID" -> \
"38d81b7e-8c54-4423-86d8-05d0e75f09f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356085, 6927, 519, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"feb92d43-f673-4dd7-9b42-b50ab362b68f"],
Cell[CellGroupData[{
Cell[356629, 6939, 2002, 50, 252, "Input", "ExpressionUUID" -> \
"b0245563-8792-413f-a4c1-ff322b233949"],
Cell[358634, 6991, 495, 10, 21, "Message", "ExpressionUUID" -> \
"e26b2976-daa1-4ffe-b8bf-ba02ff9d6534"],
Cell[359132, 7003, 384, 7, 30, "Output", "ExpressionUUID" -> \
"79b390b2-4746-4a88-82aa-d36af32cd5d3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[359565, 7016, 568, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"190e1697-5378-40fd-b7b7-68e948097639"],
Cell[CellGroupData[{
Cell[360158, 7029, 6756, 170, 758, "Input", "ExpressionUUID" -> \
"af6ea415-d276-4505-81d8-a9c6f689f1a0"],
Cell[366917, 7201, 104275, 1769, 602, "Output", "ExpressionUUID" -> \
"ff45f4d3-7e2e-43e5-9af4-78bf810df4c4"]
}, Open  ]]
}, Open  ]]
}
]
*)

