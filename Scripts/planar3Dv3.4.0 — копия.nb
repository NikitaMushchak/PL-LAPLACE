(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    400287,       7547]
NotebookOptionsPosition[    393082,       7396]
NotebookOutlinePosition[    393426,       7411]
CellTagsIndexPosition[    393383,       7408]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Planar3D v3.4.0", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660668673644*^9, 3.7476606793673363`*^9}, {
   3.748934775835075*^9, 3.748934775947117*^9}, 3.748969785632721*^9, {
   3.7503603825095043`*^9, 3.750360384337364*^9}, 3.75103985134317*^9, 
   3.756183760446571*^9, 3.757328984108018*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"5040d5b2-880b-45cc-a231-\
0e6954975e21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "folder", ",", "parameters", ",", "size", ",", "middle", ",", "cellLength",
     ",", "showAllBarriers", ",", "textPadding", ",", "ticks", ",", 
    "barriers", ",", "concentration", ",", "fracture", ",", "opening", ",", 
    "pressure", ",", "openingFilenames", ",", "openingAtCheckStep", ",", 
    "numberOfCheckSteps", ",", "measuredTimes", ",", "totalTime"}], "]"}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.750653482361023*^9, 3.750653486415388*^9}, {
  3.750653571387208*^9, 3.750653605937574*^9}, {3.750653638308257*^9, 
  3.750653669910097*^9}, {3.750660681648044*^9, 3.750660692605433*^9}, {
  3.7579120167949066`*^9, 3.7579120214810743`*^9}, {3.757912589794462*^9, 
  3.757912590809856*^9}, {3.7579216351176195`*^9, 
  3.757921637429574*^9}},ExpressionUUID->"9e617440-68c8-4c7d-87fe-\
cd9d2efca97f"],

Cell["\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0441\
\:0435\:0442\:043e\:0447\:043d\:044b\:0445 \:0433\:0440\:0430\:0444\:0438\
\:043a\:043e\:0432 \:0432 2D", "Subtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660650798229*^9, 3.7476606629055977`*^9}, 
   3.748969785633028*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"e25394e1-9c35-4f6a-8495-\
86623345b352"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:043f\:0443\
\:0442\:044c \:0434\:043e \:043f\:0430\:043f\:043a\:0438 \:0441 \:0432\:0445\
\:043e\:0434\:043d\:044b\:043c\:0438 \:0434\:0430\:043d\:043d\:044b\:043c\
\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.747660720326604*^9}, 
   3.747661032741356*^9, 3.7489697348519917`*^9, 3.748969785633336*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"0fcc0597-25c9-4843-be60-\
e01aeb713b6b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "folder", "=", 
   "\"\<C:\\\\Users\\\\Nikita\\\\Desktop\\\\Planar3D-master \
(2)\\\\Planar3D-master\\\\build\\\\Results\\\\\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747656893552808*^9, 3.747656906633217*^9}, 
   3.747661032741767*^9, {3.747664018501865*^9, 3.747664019128312*^9}, {
   3.747664057817404*^9, 3.7476641073677397`*^9}, 3.747665488148735*^9, 
   3.748933628112026*^9, {3.748933678444969*^9, 3.748933682795598*^9}, {
   3.748967116456512*^9, 3.748967124377589*^9}, {3.748968117085099*^9, 
   3.748968118090468*^9}, 3.748968199603396*^9, {3.748969393672985*^9, 
   3.74896939903098*^9}, 3.74896973485242*^9, 3.748969785633741*^9, {
   3.749002313128289*^9, 3.749002345037242*^9}, {3.749002429317358*^9, 
   3.7490025155955677`*^9}, {3.7490032762745247`*^9, 
   3.7490033047957563`*^9}, {3.749195504804994*^9, 3.749195505707028*^9}, {
   3.7497457636414347`*^9, 3.749745764379126*^9}, {3.7524855357661276`*^9, 
   3.7524855374845*^9}, {3.7546389669086523`*^9, 3.754638975297113*^9}, {
   3.754651973510044*^9, 3.7546519738226357`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}, {3.7607801304205627`*^9, 
   3.760780131826845*^9}},ExpressionUUID->"100d6a29-6bda-47fc-8ee9-\
d0d4d8524fab"],

Cell["\:0421\:0447\:0438\:0442\:044b\:0432\:0430\:0435\:043c \:043f\:0430\
\:0440\:0430\:043c\:0435\:0442\:0440\:044b \:0440\:0430\:0441\:0447\:0451\
\:0442\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, 3.7489697348525867`*^9, 3.7489697856339073`*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"a26e5cb8-621f-473e-9817-\
1af4aa08599c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"parameters", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<parameters.json\>\""}], ",", 
      "\"\<RawJSON\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"height", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"length", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<length\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"middleH", " ", "=", " ", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "height"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"middleL", "=", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "length"}], "]"}], "+", "1"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"size", "=", 
   RowBox[{
    RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"middle", "=", 
   RowBox[{
    RowBox[{"Floor", "[", 
     RowBox[{"0.5", "*", "size"}], "]"}], "+", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cellLength", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<cell\>\"", 
     "]"}], "[", "\"\<length\>\"", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747655287287675*^9, {3.747656648179721*^9, 3.74765664850766*^9}, {
   3.747656733330495*^9, 3.747656752436288*^9}, {3.747656912578596*^9, 
   3.7476569586085052`*^9}, {3.7476569957355824`*^9, 3.747657000350354*^9}, {
   3.747657434800095*^9, 3.747657435013611*^9}, {3.747657489717287*^9, 
   3.747657567951728*^9}, {3.7476576237958593`*^9, 3.747657744332275*^9}, 
   3.7476579502511377`*^9, 3.74765802117413*^9, 3.747659478052923*^9, 
   3.747659922966485*^9, {3.747659991785955*^9, 3.747660041283514*^9}, {
   3.7476600785009727`*^9, 3.747660104489366*^9}, {3.747660507830991*^9, 
   3.747660518100801*^9}, {3.747660570048667*^9, 3.747660584277534*^9}, {
   3.7476606203847427`*^9, 3.747660620713311*^9}, 3.747661032742475*^9, {
   3.7489336188607807`*^9, 3.748933619107676*^9}, {3.7489338681042213`*^9, 
   3.748933945735607*^9}, {3.7489340816532583`*^9, 3.7489340850716543`*^9}, {
   3.748934703289136*^9, 3.748934761141674*^9}, 3.748969734852895*^9, 
   3.74896978563422*^9, 3.7506535748684483`*^9, {3.7524857559405956`*^9, 
   3.752485761689149*^9}, {3.754653259405737*^9, 3.7546532596400566`*^9}, {
   3.756111089452158*^9, 3.75611109843443*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}, {3.75844143024053*^9, 3.758441430842722*^9}, {
   3.760851372604673*^9, 
   3.760851372748702*^9}},ExpressionUUID->"10ceb89e-20df-48f1-a321-\
ff7ea6718edd"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:043f\:0430\:0440\:0430\:043c\
\:0435\:0442\:0440\:044b \:043e\:0442\:043e\:0431\:0440\:0430\:0436\:0435\
\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, {3.748934769874744*^9, 3.7489347748029413`*^9}, 
   3.74896973485305*^9, 3.7489697856343813`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"d7ba3c85-2ecc-4633-b74f-\
86fb15d632b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\:0415\:0441\:043b\:0438", " ", "True"}], ",", " ", 
    RowBox[{
    "\:043d\:0430", " ", "\:0433\:0440\:0430\:0444\:0438\:043a\:0435", " ", 
     "\:0431\:0443\:0434\:0443\:0442", " ", 
     "\:0432\:044b\:0432\:043e\:0434\:0438\:0442\:044c\:0441\:044f", " ", 
     "\:0433\:0440\:0430\:043d\:0438\:0446\:044b", " ", 
     "\:0441\:043b\:043e\:0451\:0432"}], ",", 
    RowBox[{
    "\:0440\:0430\:0441\:043f\:043e\:043b\:043e\:0436\:0435\:043d\:043d\:044b\
\:0445", " ", "\:0437\:0430", " ", 
     "\:043f\:0440\:0435\:0434\:0435\:043b\:0430\:043c\:0438", " ", 
     "\:0440\:0430\:0441\:0447\:0451\:0442\:043d\:043e\:0439", " ", 
     "\:043e\:0431\:043b\:0430\:0441\:0442\:0438"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"showAllBarriers", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"textPadding", "=", "1"}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748936129152269*^9, 3.748936131996414*^9}, {
   3.748936437491951*^9, 3.748936446079194*^9}, {3.748936835688491*^9, 
   3.748936836198721*^9}, {3.7489370016931553`*^9, 3.748937002355495*^9}, 
   3.7489687346210823`*^9, 3.7489697856346483`*^9, {3.748970588914028*^9, 
   3.748970589224121*^9}, {3.750355327100403*^9, 3.750355327233083*^9}, {
   3.75035545494031*^9, 3.750355455090455*^9}, 3.750656912157938*^9, 
   3.7516154744310207`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"2132100d-0f03-4edf-8750-\
0a4cfeec3cf8"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:0440\:0438\
\:0441\:043a\:0438 \:043f\:043e \:043e\:0441\:044f\:043c \:0433\:0440\:0430\
\:0444\:0438\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, 
   3.747661032742928*^9, 3.748969734853208*^9, 3.748969785634802*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"a1f5bcd3-ad1c-4608-8d2e-\
184dd5d3b14f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ticksSetVertical", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"height", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"height", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ticksSetHorizontal", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"length", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"length", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ticks", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ticksSetHorizontal", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ticksSetVertical", ",", "None"}], "}"}]}], "}"}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"createTicks", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cellLength", ",", "middle", ",", "size"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ticksSet", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"-", "cellLength"}], "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"size", "/", "4"}], "]"}]}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"-", "cellLength"}], "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"size", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"3", 
                RowBox[{"size", "/", "4"}]}], "]"}]}], ",", 
             RowBox[{"N", "[", 
              RowBox[{"cellLength", "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"size", ",", 
             RowBox[{"N", "[", 
              RowBox[{"cellLength", "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ticksSet", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ticksSet", ",", "None"}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ticks", "=", 
     RowBox[{"createTicks", "[", 
      RowBox[{"cellLength", ",", "middle", ",", "size"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.74766059129346*^9, 3.74766061456117*^9}, 
   3.747661032743846*^9, {3.748933853433467*^9, 3.748933890369454*^9}, {
   3.7489339519881077`*^9, 3.748934022178279*^9}, {3.748934089035924*^9, 
   3.748934096639612*^9}, 3.74896973485367*^9, 3.748969785635269*^9, {
   3.757672639256096*^9, 3.7576726982404222`*^9}, {3.7576728052825923`*^9, 
   3.757672817092346*^9}, {3.757672891902179*^9, 3.7576729030401917`*^9}, {
   3.7576729381237707`*^9, 3.757672945169193*^9}, {3.757921512969803*^9, 
   3.757921520186861*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"064c7d03-91ae-4e2d-a5a1-\
1e6c1a61dace"],

Cell["\:041f\:043e \:0440\:0438\:0441\:043a\:0430\:043c \:043d\:0430\:043c\
\:0435\:0447\:0430\:0435\:043c \:043b\:0438\:043d\:0438\:0438 \:0441\:0435\
\:0442\:043a\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660845455511*^9}, 3.747661032744216*^9, 
   3.748969734853849*^9, 3.7489697856354237`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"ba1976cb-53a4-4ebe-af03-\
95fcd4651050"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"createLines", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "ticks", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lines", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lines", ",", 
           RowBox[{"{", "}"}]}], "]"}], ";", 
         RowBox[{"leftTicks", "=", 
          RowBox[{
           RowBox[{"ticks", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "leftTicks", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"lines", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"leftTicks", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lines", ",", 
           RowBox[{"{", "}"}]}], "]"}], ";", 
         RowBox[{"rightTicks", "=", 
          RowBox[{
           RowBox[{"ticks", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "rightTicks", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"lines", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"rightTicks", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "lines"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lines", "=", 
   RowBox[{"createLines", "[", "ticks", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747661032744575*^9, 3.748969734854225*^9, 3.7489697856357327`*^9, {
   3.757672495233093*^9, 3.7576726309613447`*^9}, {3.757672685223899*^9, 
   3.7576726858954177`*^9}, {3.7576727860678577`*^9, 
   3.7576728004399943`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"98de9a1d-6124-4724-8226-\
daf84a86a835"],

Cell["\:0421\:043e\:0437\:0434\:0430\:0451\:043c \:043c\:0430\:0441\:0441\
\:0438\:0432 \:043b\:0438\:043d\:0438\:0439\[Dash]\:0433\:0440\:0430\:043d\
\:0438\:0446 \:0441\:043b\:043e\:0451\:0432 \:043f\:043b\:0430\:0441\:0442\
\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660912488222*^9}, 3.747661032744845*^9, 
   3.7489697348543863`*^9, 3.748969785635898*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"36014964-da04-4894-82b2-\
12a8ee0727f9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lineBarriers", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nominalStress", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"0", ">", 
      RowBox[{
       RowBox[{
        RowBox[{"layers", "[", 
         RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", "]"}],
        "*", 
       RowBox[{
        RowBox[{"layers", "[", 
         RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y2\>\"", 
        "]"}]}]}], ",", 
     RowBox[{"nominalStress", "=", 
      RowBox[{
       RowBox[{"layers", "[", 
        RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<stress\>\"", 
       "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"barrierCoordinate", "=", 
     RowBox[{"middle", "+", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"layers", "[", 
           RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
          "]"}], "/", "cellLength"}], "-", "0.5"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"showAllBarriers", "||", 
       RowBox[{
        RowBox[{"1", "\[LessEqual]", "barrierCoordinate"}], " ", "&&", " ", 
        RowBox[{"size", "\[GreaterEqual]", "barrierCoordinate"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "barrierCoordinate"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"size", ",", "barrierCoordinate"}], "}"}]}], "}"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"barrierCoordinate", ">", "middle"}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}], "[", "\"\<stress\>\"", 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<stress\>\"",
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stress", "-=", "nominalStress"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"stress", "/=", 
        SuperscriptBox["10", "6"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"signum", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"stress", " ", ">", " ", "0"}], ",", " ", 
         RowBox[{"signum", "=", "\"\<+\>\""}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"signum", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", "stress", "]"}], "]"}], "<>", 
            "\"\< \:041c\:041f\:0430\>\""}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"2", "+", "textPadding"}], ",", 
             RowBox[{"textPadding", "+", "barrierCoordinate"}]}], "}"}]}], 
          "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"barriers", "=", 
   RowBox[{"Graphics", "[", "lineBarriers", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747661032745192*^9, {3.748934559310659*^9, 3.7489346973352013`*^9}, {
   3.748936028834214*^9, 3.74893640178518*^9}, {3.748936537538189*^9, 
   3.74893659455238*^9}, {3.748936626625805*^9, 3.748936705526024*^9}, 
   3.748936851846299*^9, {3.7489369647365932`*^9, 3.748936969645989*^9}, 
   3.7489697348547573`*^9, 3.7489697856362667`*^9, {3.749746386574204*^9, 
   3.7497463871546*^9}, {3.7497465169733543`*^9, 3.7497465172756653`*^9}, {
   3.749746575601492*^9, 3.749746575932219*^9}, {3.7497467735023746`*^9, 
   3.749746911372019*^9}, {3.750355373538177*^9, 3.7503553959537697`*^9}, {
   3.750360862816245*^9, 3.75036091965701*^9}, {3.75065554275772*^9, 
   3.750655545907774*^9}, {3.750655612889615*^9, 3.750655613558167*^9}, {
   3.750655741547908*^9, 3.750655792393737*^9}, 3.750656931278842*^9, {
   3.7571468034507365`*^9, 3.7571468366775255`*^9}, {3.7571468766358757`*^9, 
   3.7571468862076864`*^9}, {3.7576635407774744`*^9, 
   3.7576635425425215`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"01047cc0-f16a-427d-b7ce-\
0c29435e4e64"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:0438 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:0442\:0440\:0435\:0449\:0438\:043d\:044b \:0438 \:0446\
\:0432\:0435\:0442\:043e\:0432\:0443\:044e \:0433\:0430\:043c\:043c\:0443", \
"Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660953767308*^9}, 3.7476610327454557`*^9, 
   3.748969734854912*^9, 3.7489697856364202`*^9, {3.750660427182559*^9, 
   3.750660432292466*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"21ae29e2-a91d-4224-a123-\
209e3951a365"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "LightBlue", ",", "Green", ",", "LightGreen", ",", "White", ",", 
           "Yellow", ",", "Orange", ",", "\[IndentingNewLine]", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "White", ",", "White", ",", "White", ",", "White", ",", "White", 
           ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0.6", ",", "0.6"}], "]"}], ",", "Yellow", 
           ",", "Orange", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"myRainbow", "=", 
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"0.5", ">", "x"}], ",", "White", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"\"\<Rainbow\>\"", ",", "x"}], "]"}]}], "]"}]}], "]"}]}], 
     ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myRainbow3D", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"ColorData", "[", 
        RowBox[{"\"\<Rainbow\>\"", ",", "z"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GlueMatrix", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "matrix", "}"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"TakeList", "[", 
            RowBox[{
             RowBox[{"Reverse", "[", 
              RowBox[{"Transpose", "[", "matrix", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"matrix", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}], "}"}]}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Transpose", "[", "matrix", "]"}]}], "]"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PlotMatrix", "=", " ", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"matrix", ",", "matrixName"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"GlueMatrix", "[", "matrix", "]"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "matrixName"}], ",", " ", 
           RowBox[{"FrameTicks", "\[Rule]", "ticks"}], ",", 
           RowBox[{"GridLines", "\[Rule]", "lines"}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", "myRainbow"}], ",", 
           RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "barriers"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7476531195786133`*^9, 3.747653120240994*^9}, {
   3.7476534505006332`*^9, 3.747653485458448*^9}, 3.7476535222351294`*^9, {
   3.7476535950633698`*^9, 3.7476536054617443`*^9}, {3.747653655142853*^9, 
   3.747653656807279*^9}, {3.747653688090948*^9, 3.747653739282906*^9}, {
   3.7476538118536386`*^9, 3.747653827707106*^9}, {3.747656704788455*^9, 
   3.747656729694378*^9}, 3.74765701664755*^9, {3.7476584586379547`*^9, 
   3.7476584675487127`*^9}, {3.747658699447795*^9, 3.7476587124774933`*^9}, {
   3.7476587568371267`*^9, 3.747658782431654*^9}, {3.747660465335277*^9, 
   3.747660479701996*^9}, 3.7476610327461433`*^9, {3.7489348068714037`*^9, 
   3.748934817133738*^9}, {3.74893485538281*^9, 3.7489349552592983`*^9}, {
   3.7489349950905046`*^9, 3.748935017743618*^9}, {3.748935079617112*^9, 
   3.748935148106749*^9}, {3.748935208873681*^9, 3.7489353309778967`*^9}, {
   3.74893543472754*^9, 3.7489354449637127`*^9}, {3.748935604513166*^9, 
   3.748935774112791*^9}, {3.7489358857234097`*^9, 3.748935920285569*^9}, {
   3.748937178914475*^9, 3.748937196849533*^9}, {3.748937233907132*^9, 
   3.74893723762293*^9}, {3.7489372857884893`*^9, 3.74893733649858*^9}, {
   3.74893736830401*^9, 3.748937501097311*^9}, {3.748937550591075*^9, 
   3.748937608682899*^9}, {3.748937665178151*^9, 3.748937688168676*^9}, 
   3.748969734855296*^9, 3.7489697856368*^9, {3.750658527075471*^9, 
   3.750658533734511*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"b438da06-2c58-4df8-acea-\
37ef3435337f"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:0433\:0440\:0430\:0444\:0438\:043a\:0430 \:0445\:0430\
\:0440\:0430\:043a\:0442\:0435\:0440\:0438\:0441\:0442\:0438\:043a\:0438 \
\:0442\:0440\:0435\:0449\:0438\:043d\:044b", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.750666372371853*^9, 3.750666386564352*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"f292807d-09b1-495c-8b9c-\
9b6b00df497f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotCharacteristic", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"index", ",", "valueName"}], "}"}], ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"fracture", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"fracture", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "index", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{"Length", "[", "fracture", "]"}], ",", "1"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\:0412\:0440\:0435\:043c\:044f, \:043c\:0438\:043d\>\"", ",", 
          "valueName"}], "}"}]}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7506665343051243`*^9, 3.750666577544717*^9}, {
  3.750666634387631*^9, 3.75066664314911*^9}, {3.7579216351176195`*^9, 
  3.757921637429574*^9}},ExpressionUUID->"72bf3732-c3a2-4f97-80cb-\
c1e43b95ecdf"],

Cell["\<\
\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\:0438\
\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\
\:0438\:044f \:043a\:043e\:043d\:0442\:0443\:0440\:0430 \:0444\:0440\:043e\
\:043d\:0442\:0430 \:0442\:0440\:0435\:0449\:0438\:043d\:044b \:043f\:043e \
\:0433\:0440\:0430\:043d\:0438\:0447\:043d\:044b\:043c \:044d\:043b\:0435\
\:043c\:0435\:043d\:0442\:0430\:043c\
\>", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.751040043497757*^9, 3.7510400775702553`*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"b0004f69-f221-4be9-a8c1-\
e15c829973e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotCircles", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "distances", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"step", "=", "16"}], ";", "\[IndentingNewLine]", 
      RowBox[{"margin", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"color", "=", "Orange"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"color", ",", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Circle", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"i", "*", "step"}], ",", " ", 
                RowBox[{
                 RowBox[{"-", "j"}], "*", "step"}]}], "}"}], ",", 
              RowBox[{"4", "*", 
               RowBox[{
                RowBox[{"distances", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
             "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "margin", ",", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"distances", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "margin", " ", 
               "+", " ", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "margin", ",", 
              RowBox[{
               RowBox[{"Length", "[", "distances", "]"}], "-", "margin", " ", 
               "+", " ", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7510400351290483`*^9, {3.751040082955327*^9, 3.751040201282288*^9}, {
   3.751040352870755*^9, 3.751040354389183*^9}, {3.7510404023651247`*^9, 
   3.751040408893008*^9}, 3.7510404920256357`*^9, {3.7576533191945534`*^9, 
   3.757653335925003*^9}, {3.757653431925517*^9, 3.757653449333905*^9}, {
   3.7576715103027487`*^9, 3.7576715560901613`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"88e4f2ea-e727-4648-a92f-\
4e85f1dbd17f"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:043a\:0430\:0440\:0442\:044b \:0441\:043b\:043e\:0451\
\:0432", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.751040040004345*^9, 3.751040041480859*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"394e299f-9abe-4d8b-a9b5-\
36a2d37636ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotLayersMap", "=", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"stressLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plainModulusLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"carterLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"minY", "=", "100000"}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxY", "=", 
       RowBox[{"-", "100000"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"layers", "=", 
       RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"i", "=", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "<", " ", 
         RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"y1", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y2", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y2\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"plainModulus", "=", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"layers", "[", 
              RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
             "\"\<Young's modulus\>\"", "]"}], "*", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "9"}]], "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Power", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"layers", "[", 
                   RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                  "\"\<Poisson's ratio\>\"", "]"}], ",", "2"}], "]"}]}], 
              ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<stress\>\"", "]"}], "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "y1"}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<stress\>\"", "]"}], "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "y2"}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plainModulusLine", ",", 
           RowBox[{"{", 
            RowBox[{"plainModulus", ",", "y1"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plainModulusLine", ",", 
           RowBox[{"{", 
            RowBox[{"plainModulus", ",", "y2"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"carterLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<Carter's coefficient\>\"", "]"}], "*", 
               SuperscriptBox["10", "6"]}], "]"}], ",", "y1"}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"carterLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<Carter's coefficient\>\"", "]"}], "*", 
               SuperscriptBox["10", "6"]}], "]"}], ",", "y2"}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"minY", "=", 
          RowBox[{"Min", "[", 
           RowBox[{"{", 
            RowBox[{"y1", ",", "y2", ",", "minY"}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"maxY", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"{", 
            RowBox[{"y1", ",", "y2", ",", "maxY"}], "}"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"minY", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.5"}], "*", "cellLength", "*", "size"}], ",", 
          "minY"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxY", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "minY"}], ",", "maxY"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plotStyles", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dotted"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Green", ",", "Dashed"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Purple", ",", "Dotted"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plotLegend", "=", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\:041d\:0430\:043f\:0440\:044f\:0436\:0435\:043d\:0438\:044f\
\>\"", ",", 
             "\"\<\:041f\:043b\:043e\:0441\:043a\:0438\:0439 \:043c\:043e\
\:0434\:0443\:043b\:044c \:042e\:043d\:0433\:0430\>\"", ",", 
             "\"\<\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\
\:0442 \:041a\:0430\:0440\:0442\:0435\:0440\:0430\>\""}], "}"}], ",", 
           RowBox[{
           "LegendLabel", "\[Rule]", 
            "\"\<\:041a\:0430\:0440\:0442\:0430 \
\:0441\:043b\:043e\:0451\:0432\>\""}], ",", " ", 
           RowBox[{"LegendFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Framed", "[", 
               RowBox[{"#", ",", 
                RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], "&"}], 
             ")"}]}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}], ",", "Right"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"commonPlotParameters", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Tiny", ",", "Medium"}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         RowBox[{"AxesStyle", "\[Rule]", "Transparent"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"minY", ",", "maxY"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"False", ",", "True", ",", "False", ",", "False"}], 
           "}"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"stressLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", "None", "}"}], ",", 
           RowBox[{"{", "None", "}"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "plotStyles"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "plotLegend"}], ",", 
         "commonPlotParameters"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plainModulusLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"plainModulusLine", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"plotStyles", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "commonPlotParameters"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"carterLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"carterLine", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"plotStyles", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", "commonPlotParameters"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Overlay", "[", 
       RowBox[{"{", 
        RowBox[{
        "stressLinePlot", ",", "plainModulusLinePlot", ",", 
         "carterLinePlot"}], "}"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.750355499782115*^9, 3.750355793596572*^9}, {
   3.7503558631512537`*^9, 3.75035595668403*^9}, {3.750356028597644*^9, 
   3.7503561318033533`*^9}, {3.750356194818742*^9, 3.750356208887875*^9}, {
   3.7503563618567467`*^9, 3.750356363361658*^9}, {3.750356423863585*^9, 
   3.750356473236062*^9}, {3.750356504013914*^9, 3.750356817174099*^9}, {
   3.7503568624727697`*^9, 3.7503569686281157`*^9}, {3.750357008792891*^9, 
   3.750357226835019*^9}, {3.750357435011059*^9, 3.7503574352471*^9}, {
   3.750357508025413*^9, 3.7503575160456057`*^9}, {3.750357547885824*^9, 
   3.750357583085084*^9}, {3.750357887241557*^9, 3.750357889461896*^9}, {
   3.7503579481465197`*^9, 3.750357984969563*^9}, {3.7503580226450663`*^9, 
   3.750358024481966*^9}, 3.750361185626094*^9, {3.750658720102997*^9, 
   3.750658726408321*^9}, {3.7506587623250723`*^9, 3.750658810269313*^9}, {
   3.750658848101965*^9, 3.750658944354722*^9}, {3.750658984747673*^9, 
   3.750659069691119*^9}, {3.7506592334858294`*^9, 3.750659554818267*^9}, 
   3.7506595987503633`*^9, {3.750660239574378*^9, 3.750660403592054*^9}, 
   3.750660460234714*^9, {3.750660513265897*^9, 3.7506606132287827`*^9}, {
   3.757146186440631*^9, 3.7571462480997224`*^9}, {3.7571463308534384`*^9, 
   3.757146374077917*^9}, {3.7571464264808116`*^9, 3.757146456638303*^9}, {
   3.7571467048801203`*^9, 3.7571467219542065`*^9}, {3.7579216351176195`*^9, 
   3.7579216374451947`*^9}},ExpressionUUID->"de53eaa8-5f9f-4f21-90ff-\
43a6ff9125cd"],

Cell["\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0443\
\:0434\:0432\:043e\:0435\:043d\:043d\:043e\:0433\:043e \:0433\:0440\:0430\
\:0444\:0438\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.7579216318215137`*^9, 
   3.757921647114832*^9}},ExpressionUUID->"1a670f20-a3b6-450a-ad8b-\
342673b49f03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotDoubleMatrix", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "matrixName"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"doubleTicks", "=", 
       RowBox[{"createTicks", "[", 
        RowBox[{
         RowBox[{"0.5", "*", "cellLength"}], ",", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"middle", "-", "1"}], ")"}]}], "+", "1"}], ",", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"size", "-", "1"}], ")"}]}], "+", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"doubleLines", "=", 
       RowBox[{"createLines", "[", "doubleTicks", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"GlueMatrix", "[", "matrix", "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "matrixName"}], ",", " ", 
         RowBox[{"FrameTicks", "\[Rule]", "doubleTicks"}], ",", 
         RowBox[{"GridLines", "\[Rule]", "doubleLines"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", "myRainbow"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7579216318215137`*^9, 
  3.7579216374451947`*^9}},ExpressionUUID->"22d0e063-4a2f-4302-8b76-\
c318fb3d02c1"],

Cell["\:0417\:0430\:0433\:0440\:0443\:0436\:0430\:0435\:043c \:0434\:0430\
\:043d\:043d\:044b\:0435 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\
\:043e\:0435\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 
   3.7489697856369534`*^9},ExpressionUUID->"573585d3-2ab7-4012-9bde-\
ee091976122e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"concentration", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<concentration_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fracture", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<fracture_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opening", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<opening_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressure", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<pressure_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748933665070517*^9, 3.748933667635915*^9}, {
   3.748967897373295*^9, 3.748967952408773*^9}, 3.748968045615181*^9, 
   3.748969785637787*^9, {3.748969873450966*^9, 3.7489698881760197`*^9}, {
   3.748970008078432*^9, 3.748970029339315*^9}, {3.749002589036405*^9, 
   3.749002591800912*^9}, {3.749197428231081*^9, 3.74919743718463*^9}, {
   3.750355267359632*^9, 3.7503553082320023`*^9}, {3.750361141233561*^9, 
   3.75036114372082*^9}, {3.75036139017474*^9, 
   3.7503613910997057`*^9}},ExpressionUUID->"dbe4cd76-4469-4ba0-8820-\
019c7d484c1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"openingFilenames", "=", 
    RowBox[{"FileNames", "[", 
     RowBox[{"\"\<*_m.txt\>\"", ",", 
      RowBox[{"folder", "<>", "\"\<Opening/\>\""}]}], "]"}]}], ";"}], 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"1", " ", "<", 
       RowBox[{"Length", "[", "openingFilenames", "]"}]}], ",", 
      RowBox[{"openingFilenames", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{"openingFilenames", ",", 
         RowBox[{"ToExpression", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringSplit", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<=\>\"", ",", "\"\<_\>\""}], "}"}]}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "]"}]}], "]"}]}]}], "]"}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"openingAtCheckStep", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"openingFilenames", "[", 
        RowBox[{"[", "t", "]"}], "]"}], ",", " ", "\"\<Table\>\""}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numberOfCheckSteps", "=", 
   RowBox[{"Length", "[", "openingFilenames", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7503554730398903`*^9, {3.750657168634218*^9, 3.7506572226324253`*^9}, {
   3.750657269550213*^9, 3.75065727758918*^9}, {3.750657360637339*^9, 
   3.750657373821903*^9}, {3.7506574159365473`*^9, 3.750657416799019*^9}, {
   3.752485685149294*^9, 3.752485723856041*^9}, {3.753164422442254*^9, 
   3.75316447320899*^9}},ExpressionUUID->"a97292b3-e790-4763-b444-\
aa3c9e960ac0"],

Cell["\:0412\:044b\:0432\:043e\:0434\:0438\:043c \:0432\:0440\:0435\:043c\
\:044f \:043f\:043e\:0441\:043b\:0435\:0434\:043d\:0435\:0433\:043e \:0437\
\:0430\:043f\:0443\:0441\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}},ExpressionUUID->"5f65bd77-40eb-4e12-b562-\
42a327fbbec3"],

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
    "\"\<\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\:0434\
\:043d\:0435\:0433\:043e \:0437\:0430\:043f\:0443\:0441\:043a\:0430:\>\"", 
     " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"DateString", "[", "]"}], ",", "Orange"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.749195512564392*^9, 3.749195545569838*^9}, {
  3.749195598370927*^9, 3.749195681354604*^9}, {3.749197676357965*^9, 
  3.749197687499799*^9}, {3.7491981127205763`*^9, 
  3.749198119614801*^9}},ExpressionUUID->"38a1c404-a80a-4f37-b880-\
ecc92f0fda32"],

Cell[BoxData[
 StyleBox[
  RowBox[{"\<\"\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\
\:0434\:043d\:0435\:0433\:043e \
\:0437\:0430\:043f\:0443\:0441\:043a\:0430:\"\>", " ", 
   StyleBox["\<\"Wed 6 Mar 2019 16:50:09\"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0.5, 0],
    FrontFaceColor->RGBColor[1, 0.5, 0],
    BackFaceColor->RGBColor[1, 0.5, 0],
    GraphicsColor->RGBColor[1, 0.5, 0],
    FontColor->RGBColor[1, 0.5, 0]]}],
  StripOnInput->False,
  FontSize->24]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.749195659419508*^9, 3.749195673211211*^9}, 
   3.749195717683158*^9, 3.7491976880563498`*^9, {3.74919811272084*^9, 
   3.749198124508636*^9}, 3.749198547581563*^9, 3.74974577318449*^9, 
   3.7497458945699177`*^9, 3.749746363493379*^9, 3.749746523405265*^9, 
   3.749746676390993*^9, 3.749746717948832*^9, {3.749746796696604*^9, 
   3.749746814039156*^9}, 3.749746914039852*^9, 3.750355233686296*^9, 
   3.7503554477398863`*^9, {3.750360556216104*^9, 3.7503605666632433`*^9}, 
   3.7503607801969137`*^9, 3.7503611476314583`*^9, 3.750361263438398*^9, 
   3.7503613949006863`*^9, 3.7503614744322433`*^9, 3.750655374338236*^9, 
   3.7506554082503853`*^9, {3.750655458531261*^9, 3.750655464638625*^9}, 
   3.7506557512823467`*^9, 3.750655795952038*^9, 3.7506560265283737`*^9, 
   3.750656136604802*^9, 3.7506564375125713`*^9, {3.750656915409037*^9, 
   3.750656934849925*^9}, 3.750658504368836*^9, 3.750658566935512*^9, 
   3.750659695607489*^9, 3.750660462939427*^9, 3.750660582327619*^9, 
   3.750660616680229*^9, 3.7506663258812857`*^9, 3.750666757135747*^9, {
   3.751040182747201*^9, 3.751040192950671*^9}, 3.751040360329432*^9, 
   3.751040412204547*^9, 3.7515227620073433`*^9, 3.7515261687620907`*^9, 
   3.751615377030303*^9, {3.751615463201515*^9, 3.751615477707189*^9}, 
   3.751615682300685*^9, 3.751615917177168*^9, 3.751615995074151*^9, 
   3.751616095693368*^9, 3.7516183414337597`*^9, 3.7524855465523653`*^9, {
   3.7524855804109573`*^9, 3.7524856094127126`*^9}, 3.7524856461426153`*^9, 
   3.7524857590646477`*^9, 3.753164440016218*^9, 3.7538625516409483`*^9, 
   3.7538626010512495`*^9, 3.7538627623884706`*^9, 3.754638725719348*^9, 
   3.754638979218073*^9, 3.7546391083282213`*^9, 3.7546392253821335`*^9, 
   3.7546393299616723`*^9, 3.754639792915779*^9, 3.754640136856781*^9, 
   3.754642428063615*^9, 3.754646200280037*^9, 3.754649657661769*^9, 
   3.7546504264040556`*^9, 3.7546505727445335`*^9, 3.7546519768998513`*^9, 
   3.75465208037519*^9, 3.7546523291861*^9, 3.7546525047837963`*^9, 
   3.7546531259332304`*^9, 3.75465323619244*^9, 3.7561110952789073`*^9, 
   3.756183767554145*^9, 3.7561838191099224`*^9, 3.756188248790681*^9, 
   3.7561882858664894`*^9, 3.7561959488481665`*^9, 3.757146255714679*^9, 
   3.7571465394105883`*^9, {3.757146679426608*^9, 3.7571467254847383`*^9}, {
   3.7571468087151065`*^9, 3.757146839098605*^9}, {3.7571468791351013`*^9, 
   3.7571468881290636`*^9}, 3.757147012508487*^9, 3.757147053309069*^9, 
   3.75714709071288*^9, 3.757147139474738*^9, 3.757147282024349*^9, 
   3.757147439329136*^9, 3.757148048138564*^9, 3.757148390117943*^9, 
   3.757149543401328*^9, 3.7573124901220355`*^9, 3.757312806925419*^9, 
   3.757313095773717*^9, 3.7573132106623006`*^9, 3.75731326216355*^9, 
   3.757313384022509*^9, 3.757313518103788*^9, 3.7573136926188917`*^9, 
   3.7573137480517673`*^9, 3.7573138330349555`*^9, 3.757314482294738*^9, 
   3.7573145228180227`*^9, 3.7573145899272633`*^9, 3.757314712860545*^9, 
   3.7573147663542857`*^9, 3.757315101863775*^9, 3.757315707041792*^9, 
   3.757315973157895*^9, 3.7573165752591634`*^9, 3.757323338833152*^9, 
   3.757323657121977*^9, 3.757327845501257*^9, 3.757328738569846*^9, 
   3.7573298575505896`*^9, 3.757393788709646*^9, 3.7573950029163485`*^9, 
   3.7574076969767027`*^9, 3.7574089268359537`*^9, 3.7574114422623997`*^9, 
   3.757415015625086*^9, 3.7576527927824078`*^9, 3.757652850347029*^9, 
   3.757660420367476*^9, 3.7576630996657834`*^9, 3.757663546775882*^9, 
   3.757671560698409*^9, 3.7576720854083395`*^9, 3.7576727139398627`*^9, 
   3.7576728118433695`*^9, 3.757672846095731*^9, {3.7576728960884647`*^9, 
   3.7576729061173906`*^9}, 3.7576729476683617`*^9, 3.7579120251677094`*^9, 
   3.7579210121227283`*^9, 3.7579212537288756`*^9, 3.757921429520739*^9, 
   3.7579215247170496`*^9, 3.757925447983324*^9, 3.75792739758609*^9, 
   3.7579276460377007`*^9, 3.7584308130387497`*^9, 3.758431088071436*^9, 
   3.7584314333747234`*^9, 3.758431869639453*^9, 3.758431981983164*^9, 
   3.758432020462161*^9, 3.758432081701499*^9, 3.7584323369175463`*^9, 
   3.7584326706889896`*^9, 3.75843284677746*^9, 3.758433888144831*^9, 
   3.7584347756995645`*^9, 3.7584389799787865`*^9, {3.7584414130548944`*^9, 
   3.7584414342552605`*^9}, 3.758441881257159*^9, 3.7590590926429453`*^9, 
   3.7592211796408396`*^9, 3.759221267962756*^9, 3.7592219257789297`*^9, 
   3.759222067464307*^9, 3.7592242962870893`*^9, 3.759224783216329*^9, 
   3.7607801356086664`*^9, 3.7607819373382883`*^9, 3.76078469609286*^9, 
   3.7607864994541593`*^9, 3.7607869462270975`*^9, 3.760788424411932*^9, 
   3.7608491225452085`*^9, {3.7608513580155697`*^9, 3.760851381493911*^9}, 
   3.7608544013401165`*^9, 3.7608641127726154`*^9, 
   3.760869009693731*^9},ExpressionUUID->"eee42368-8a64-48c9-8ebd-\
3178d3bd7389"],

Cell["\:0421\:0442\:0440\:043e\:0438\:043c \:0433\:0440\:0430\:0444\:0438\
\:043a\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660984637878*^9}, 3.7476611498754272`*^9, 
   3.747664166427878*^9, 3.7489697348559017`*^9, {3.749746711959444*^9, 
   3.749746715762725*^9}},ExpressionUUID->"c9835767-2b4a-4bf0-9d05-\
9ee1c3d7ac31"],

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
    "\"\<\:0414\:043b\:0438\:043d\:0430, \
\:0432\:044b\:0441\:043e\:0442\:0430, \:0440\:0430\:0441\:043a\:0440\:044b\
\:0442\:0438\:0435 \:0432 \:0438\:0441\:0442\:043e\:0447\:043d\:0438\:043a\
\:0435 {\:043c,\:043c,\:043c\:043c}:\\n\\t\\t\>\"", " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "Orange"}], "]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotMatrix", "[", 
  RowBox[{
  "opening", ",", " ", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotCharacteristic", "[", 
  RowBox[{
  "3", ",", 
   "\"\<\:041f\:0440\:0438\:0437\:0430\:0431\:043e\:0439\:043d\:043e\:0435 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:0435, \:041c\:041f\:0430\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"0", "<", 
    RowBox[{"Max", "[", "concentration", "]"}]}], ",", 
   RowBox[{"PlotMatrix", "[", 
    RowBox[{
    "concentration", ",", " ", 
     "\"\<\:041a\:043e\:043d\:0446\:0435\:043d\:0442\:0440\:0430\:0446\:0438\
\:044f \:043f\:0440\:043e\:043f\:043f\:0430\:043d\:0442\:0430\>\""}], "]"}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotLayersMap", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"opening", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"middle", "-", "i"}], ")"}], "*", "cellLength"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "opening", "]"}], ",", "1"}], "}"}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", "All"}], "}"}]}], 
      ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">=", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              RowBox[{"opening", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"middle", "-", "i"}], ")"}], "*", "cellLength"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "opening", "]"}], ",", "1"}], "}"}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"FileExistsQ", "[", 
    RowBox[{"folder", "<>", "\"\<times_v.txt\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<\:0417\:0430\:043c\:0435\:0440\:044b \
\:0432\:0440\:0435\:043c\:0435\:043d\:0438\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"measuredTimes", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"folder", "<>", "\"\<times_v.txt\>\""}], ",", " ", 
        "\"\<Table\>\""}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"totalTime", "=", 
     RowBox[{"measuredTimes", "[", 
      RowBox[{"[", 
       RowBox[{"Length", "[", "measuredTimes", "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{"Length", "[", "measuredTimes", "]"}]}], ",", 
      RowBox[{"++", "i"}], ",", 
      RowBox[{
       RowBox[{"measuredTimes", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "/=", 
       RowBox[{"0.01", "*", "totalTime"}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Grid", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
            "\"\<\:0420\:0430\:0441\:0447\:0451\:0442 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:044f\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<\:041f\:0440\:0438\:0440\:043e\:0441\:0442 \:0440\:0430\
\:0441\:043a\:0440\:044b\:0442\:0438\:044f\\n(\:0438 \:043a\:043e\:043d\:0446\
\:0435\:043d\:0442\:0440\:0430\:0446\:0438\:0438)\>\"", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\:041f\:0435\:0440\:0435\:0441\:0447\:0451\:0442 \:0440\
\:0430\:0441\:0441\:0442\:043e\:044f\:043d\:0438\:0439\\n\:0434\:043e \:0444\
\:0440\:043e\:043d\:0442\:0430\>\"", ",", 
               RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             "\"\<\:0418\:043d\:0442\:0435\:0433\:0440\:0438\:0440\:043e\:0432\
\:0430\:043d\:0438\:0435\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:041f\:0435\:0440\:0435\:0441\:0442\:0440\:043e\:0435\:043d\
\:0438\:0435 \:0441\:043f\:0438\:0441\:043a\:043e\:0432\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<\:0421\:043e\:0445\:0440\:0430\:043d\:0435\:043d\:0438\:0435\
 \:0448\:0430\:0433\:0430\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:0418\:0437\:043c\:0435\:043d\:0435\:043d\:0438\:0435 \
\:0437\:0430\:043a\:0430\:0447\:043a\:0438\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:041c\:0430\:0441\:0448\:0442\:0430\:0431\:0438\:0440\:043e\
\:0432\:0430\:043d\:0438\:0435\>\""}], "\[IndentingNewLine]", "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"measuredTimes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{
                RowBox[{"Length", "[", "measuredTimes", "]"}], "-", "1"}], 
               ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
         "\[IndentingNewLine]", "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "All"}], ",", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"totalTime", "/", "1000000"}], 
       "\"\<\:0441\:0435\:043a\:0443\:043d\:0434 \:0432\:0441\:0435\:0433\
\:043e\>\""}], ",", "Bottom"}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.749746711959631*^9, {3.7503604496962852`*^9, 3.7503605102226467`*^9}, {
   3.750658187684452*^9, 3.7506581966759377`*^9}, 3.750658599559669*^9, {
   3.750660410623929*^9, 3.7506604108938932`*^9}, {3.750666592966673*^9, 
   3.750666609429427*^9}, {3.750666647089669*^9, 3.750666650063033*^9}, {
   3.7510398594727287`*^9, 3.751039878653421*^9}, {3.757313894301865*^9, 
   3.7573142039637947`*^9}, {3.7579135982458677`*^9, 3.757913608602586*^9}, {
   3.7579142495638924`*^9, 3.7579143338119197`*^9}, 3.75791440434883*^9, {
   3.757914587589645*^9, 3.7579145929167037`*^9}, {3.7579146284265175`*^9, 
   3.7579146349248953`*^9}, {3.7579213280693846`*^9, 
   3.7579213309280586`*^9}, {3.75922430234816*^9, 
   3.7592243128300653`*^9}},ExpressionUUID->"d92d7a12-ebcc-4f18-83e0-\
f681f54b8eec"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"\<\"\:0414\:043b\:0438\:043d\:0430, \:0432\:044b\:0441\:043e\:0442\
\:0430, \:0440\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435 \:0432 \:0438\
\:0441\:0442\:043e\:0447\:043d\:0438\:043a\:0435 \
{\:043c,\:043c,\:043c\:043c}:\\n\\t\\t\"\>", " ", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"322.532`", ",", "49.2443`", ",", "4.74167`"}], "}"}],
    StripOnInput->False,
    LineColor->RGBColor[1, 0.5, 0],
    FrontFaceColor->RGBColor[1, 0.5, 0],
    BackFaceColor->RGBColor[1, 0.5, 0],
    GraphicsColor->RGBColor[1, 0.5, 0],
    FontColor->RGBColor[1, 0.5, 0]]}],
  StripOnInput->False,
  FontSize->24]], "Print",
 CellChangeTimes->{{3.7573140571074085`*^9, 3.7573142043853965`*^9}, 
   3.757314482310359*^9, 3.7573145228180227`*^9, 3.7573145899585056`*^9, 
   3.757314712876047*^9, 3.7573147663857603`*^9, 3.7573151018793845`*^9, 
   3.757315707057434*^9, 3.757315973173514*^9, 3.757316575290423*^9, 
   3.757323338833152*^9, 3.757323657121977*^9, 3.757327845516865*^9, 
   3.7573287385855427`*^9, 3.7573298575609694`*^9, 3.7573937887252316`*^9, 
   3.757395002931969*^9, 3.7574076969767027`*^9, 3.757408926842561*^9, 
   3.757411442278022*^9, 3.757415015640706*^9, 3.757652792813685*^9, 
   3.7576528503626814`*^9, 3.7576604203831*^9, 3.7576630996657834`*^9, 
   3.757663546807126*^9, 3.757671560698409*^9, 3.7576720854241066`*^9, 
   3.7576727139554834`*^9, 3.757672811858959*^9, 3.7576728461113534`*^9, {
   3.757672896104086*^9, 3.7576729061486063`*^9}, 3.757672947699605*^9, 
   3.757912025198925*^9, 3.757913618506505*^9, 3.7579146467513285`*^9, 
   3.75792101213837*^9, 3.7579212537429314`*^9, 3.7579214295362797`*^9, 
   3.757921524732671*^9, 3.7579254479989767`*^9, 3.7579273976017113`*^9, 
   3.757927646053316*^9, 3.758430813069991*^9, 3.758431088071436*^9, 
   3.7584314333903723`*^9, 3.758431869655073*^9, 3.758431981983164*^9, 
   3.7584320204777665`*^9, 3.7584320817171535`*^9, 3.758432336933195*^9, 
   3.758432670704612*^9, 3.758432846793081*^9, 3.7584338881604366`*^9, 
   3.7584347757307854`*^9, 3.758438979994408*^9, {3.758441413070539*^9, 
   3.758441434286497*^9}, 3.7584418812727795`*^9, 3.7590590926740355`*^9, 
   3.759221179656455*^9, 3.759221267978345*^9, 3.7592219257789297`*^9, 
   3.75922206747991*^9, 3.7592242963027105`*^9, 3.7592247832319508`*^9, 
   3.76078013566068*^9, 3.7607819373562927`*^9, 3.760784696106863*^9, 
   3.7607864994661617`*^9, 3.7607869462441015`*^9, 3.760788424428936*^9, 
   3.7608491225662117`*^9, {3.760851358025571*^9, 3.7608513815082045`*^9}, 
   3.7608544013541183`*^9, 3.7608641127876186`*^9, 
   3.7608690097097344`*^9},ExpressionUUID->"10360ff9-d689-4efe-9df6-\
0d40318816a0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1:eJzs3QlUjW37P/xMmYrILCSRKZokiTMioYhEUpQMSZEiZEppkChTkimVSKWI
SqKISkRzadK423u39y5lKuHd9/v8XNe97rNjPc+7/u///3t/6z2s9azPs45l
7eq6rvM4vseu3OM37169tYeEhMQj8f8SxP/76///608LQVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
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
6pJs6XpLuduCa+PoekpYuNGSj3TON97Abc/0ouvRdYk2moSuc+Mr7dU76X1k
8v2bynoxXezRZ091T9lI1+Nutaa8G0HXh7hnhr17Qe9ZLekdXz960nWriS3S
GRp0XWt/43QTAb0nuj2uNvGOpuvyVWOU1hjSdcHknLzUoXT9c9UX/QlveFT9
an/Jn55n6Xqhx0h1JUO6Hrdi4PAzA+m63OiAkpMFXKoecnZJpdpVuv7Wbc3N
Qevp+tUXerIJY+m6jLpMCKe+kb6PurOPet2m6/U3dPsJnOh60L6Vu91m0PUD
Tsq3LX5zqLpi+QNfuTy6zh1tt22xN10P2nD7oL49XQ/PunA2SJOuV2+rMh01
hK77DDyUGSFooOovp7mo/86i6z03r/8l/4yux101O/E48T+vQ68DfVzo84S+
Lug6QNcNus7QfYHuI3TfoecEeq6g5xB6bqHnHDoX0DmCzh10TqFzDfUBqG9A
fQbqS1Afg/oe1Cehvgr1YahvQ30emgvQHIHmDjSnoLkGzUFobkJzFprL/5zj
0NyHcgKUK6AcAuUWKOdAuQjKUVDugnIalOugHAjlRihnQrkUyrFQ7oVyMpSr
oRwO5XYo50N7AbRHQHsHtKdAew20B0F7E7RnQXsZtMdBex+0J0J7JbSHQnsr
tOdCezG0R0N795/zjv4/0znk0qkLUc2Uw7qHhW8YJqB0vLazVtqfT9kR3Kd7
/RcupazVguTZYY2UOrwefodNOZQpp7nWYfMaKAUbIzMn9qunlPf29DtsU8do
/Gi28it+LRk5bE/Vkvn1jB82rlW7EFpDHPonjxvXr4GxUmRrnOdYTQry9FOd
cxoYvXynvQi/VEXij/rt+hzEYeR4mD9UmFVBkjVCCy8ubGQssB7pPl+rjJgb
rdy9QNDI2DZ88IO5c0vJz8c1kxRcuIz98s1PXb5WTEy2PHfu1Z3HKFnwJLy5
vZDInAvyGuvLY8xdqmkfbl1AHJ9E9Nzah88Yl9O/NZeTR3QX3rTf7stnnSOX
/Noql3itznFI6eQzlsmoOFyUfUc6hG1FY7ybGCfZG3QaFmWTiiuy+m8+NTHm
m/lu0DHNIvbdPddfNBcwOn2q4RyrfkWSJ1zzU88SMEZMWfUwe0U6Ud7YMs19
tpDxc7bl99YHacSozKKSc0HIaPvy1g3lXk9JjnXIcmGLkNHW7tDe6odJRD4m
xrbGTMToVls+fHdRPDG5oq+kEytiVHG0XmVxLpa4BTtNHt+/mVHixIJZ9Z8j
SL8Z80xvmjYz6m707pn26QaJOfjiZ2JsM6PupsElEqPPMOfDcZGEbuJnOleo
RM/hrD5H1+15fSbNkqPrd4b3WXk3nc4zUh2NNuomdH3EsZZ9EzvpHGUgUX/5
+jW6Lr/M+U2LHl2fHCAckF1L57pCqeOBm9zpesgmv3FSM7vY95eunjkqt4u8
OriyqXMfXf9MCqael+ti33dXlohP7SInK24ZKGlC1/em2OW396frhgNalw98
ROd2ratqhaJtdL3CM/TRqpF0Xfe2juWvdHq/OFBXtnWhM12XWBWxa6RSF3+/
9oXH4hJ6D1p0S+pyTz+63tmu+OmHFl3vM1g4OExE72stnfd27wqi6zKhBfxp
JnT9u/mYy+0/6T3UbeGizSaRdF0j8VD/O1vpekvrwE0Wo7rYfx8WbTnxpp7e
K4d79rx6kq5X9/xy/fYauq6hREZ9laXrnQsyM0ZX1NH360YvgxchdF1wbGJg
kSVdt50j/UZyOl0PcvZqvCaqpc/XvYMbdZLpuuKxYWX33Om6httoo4WGdF3L
tXT5QyW6bvv1p7eOoIbeT1t+HDuZSdfDI5feCo2k60lxW00fe9F1FWFPYcJu
un4hVPQi0oyuj/BY+tZk9X9eh14H+rjQ5wl9XdB1gK4bdJ2h+wLdR+i+Q88J
9FxBzyH03ELPOXQuoHMEnTvonELnGuoDUN+A+gzUl6A+BvU9qE9CfRXqw2Df
Bvo8NBegOQLNHWhOQXMNmoPQ3ITmLDSXoTkOzX0oJ0C5AsohUG6Bcg6Ui6Ac
BeUuKKf9M9dBORDKjVDOhHIplGOh3AvlZChXQzkcyu1Qzof2AmiPgPYOaE+B
9hpoD4L2JmjPgvYyaI+D9j5oT4T2SmgPhfZWaM+F9mJoj4b2bmhPh/Z66H2A
P+flf6o9lp/6tDBZRBloZ2Dg3NJEWTzK5eI6PT6lRK/lTka+XMqw8R7JsZ0c
yjTOmh06jxsoPeaWGr3cVU85LOl1pYl2HSWvf47SFNV6xvG7DBctTBDnoJZl
G6QmN7AGDdwv1KsmRnMMt88ewmEctWZ09vr0SuLQsT25vnsjY7JMVu6qb2Vk
WFnWPuvqRsaUPbeul28sJXzNpU/7XOYy6m1QzGrQKCZGGxYvf2nNYxwpmjk2
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
KjZ28e+wmato7lSk66V2b851WtJ9qXrGx01JN+j+VuozfJ1ETRfvwz+rJRO1
u/i5gilfR4SF0v22WnPVarufdN9WdBmZLNpM1+88kb6Qkd3Fz8d+GpruMZ2u
V9SFffzl3cXvrRcNmfnjJz2/KpqubtztQNdHqOw8zhPR8/GOs+jL931dzNN5
Y/Z7dKfre138uw/xoee1z7mbnUOGd/H9KVPO+5JgOg/oJFsl3BpH14conZWP
iqFziM/sJR4vdNm61fYcu846cf5x79b/22M2/2ivyVMzONNMAlb3P/awjs1L
lk92yOnNaSa2a/pkKg1k6/18H9eoc8X57cPKh8cXsbmLM3q/n/sFEUl7NWWT
vjOb39QdR651WiAibkGk5FoYm/em7k3/vrRVSGxDucKkSjY3hvW8Kmt4XkiC
+kuqzm9hc6ZDR0CC9EIhkXGyM1CYyNa106Pt2r6J8y031rd6J5tjyy7u3Rt7
X0BCXCaEaaawudfNKHGAn5OApC3IVtw4lq3HHI7zDlMRkLjZcwqCDrK5uuDn
LROP1iYS0DF2lUEVm88DRnV0Bt4X5/yFew60z2Xrk/InPB2/p4lYnf5gVhjM
5n/z2RJlFcriuq/E+Dut7B4RPPi4wXoRn7jdWzjrowlbT4s+9nZxLJ9UzyTH
ZiSwe0p6jcn2SEc+sX24yv32SLZ+pKO4Qm0mn2g5jZz8ex+7B1XnW83g8XlE
ZWBrm/4bdp860mkpFRXDI1rf+NenqbH1YLnGfoZ24vPs76F5WJbd18as27hK
X5VHAuJLAjd9Zfc+x1HrZj75ziUqJ+IFt8vZPdF3zZGJ99LE+2aE05Nt6ey+
qTLi3sFSTy5pObDNSvsau59mjPa++W6FeA/1DVPq68vuuXcj24RJg7jE2PjF
ratmWexz3vA2dU2tuF8clEi9vTOTvW7WVq2z4hpJGrfmifSeDKau+yCs89vx
RqJ7SK255OQrpq7Dc1Zcs6aRqJzRSwi/9ZKp2+RZPhik2EhahhUdMnuYztQ7
O9eOefuNQ1paHpzrLH7B1P0c9rR2ZnFI2oTZKS2C5+zXdU5qdtolDqmunC/7
/Gsaey42DN+wbo+4f2XtzXyoydbTEq3bkww4xE057+mckmdMPVdHs5fWNA6R
txqroRL3lKlLWY64Xtdf/PdD26bXu6Qw9bh+4UNiGhtItZ3tuxdST5i6fLbi
+tD8BqLbsPvQOu1kpu5svtHsQUoDcfOJdf628TFTD/RTuL00Qvw6R9Z7Vx9N
Yupff5xcPuZaAwkpsWlTnMDWC25ETn99Sfz680OelQsT/20deh3o40KfJ/R1
QdcBum7QdYbuC3QfofsOPSfQcwU9h9BzCz3n0LmAzhF07qBzCp1rqA9AfQPq
M1BfgvoY2PeAPgn1VagPQ30b6vPQXIDmCDR3oDkFzTVoDkJzE5qz0FyG5jg0
96GcAOUKKIdAuQXKOf/6Q+eiP3UoR0G5C8ppUK6DciCUG6GcCeVSKMeCuRfI
yVCuhnI4lNuhnA/tBeAeAewd4J4C7DXQHgTtTdCeBe1l/9zjoL0P2hOhvRLa
Q6G9Fdpzob0Y2qOhvRva06G9HnofAHrfAHqfAXpf4s/1/1+1Y9MXCW9DIaVd
aWz3DjcupZXzBseiMw2UjkadBhqz6ihjck2v5AjqGX/q/w58c7WaxJUetR55
jMPYss+jPN69gvw0PPp5U08uY7+RngrVrSUkePn8X4f0eIzqYxb38ptVSCoN
rq+/upfPuGPixLapoblkek991THhTYytnA2lxkrZxEQ67XTeAwGjVNyxmGHv
08m2A9ZqEzOEjBobdoUtSEgmMgL/6xvuihh1m3XPPuwRR0a1Su0R+DYz6l45
l3O37SJzXU90jq9M8aTf37CITTt08wR9jnQ+xmfEB9Lnzvb60ismifQ5TfvU
Vhv6oYvf6/xesYt0o+vTn/ba80aV7hsjVPUPC3fRfWbyhpWVukldvI8xJsdI
qVcX/+7BwLBfq0zpvmesprbONLyLn7ecL6s59Cvdh1M+T5uork/XrQaGL5eN
pPv5oplN3GsKdF3Ha9D13sH0vFDZ0z9nsSxdrx936PLac/ScSlII31E5oIvf
L9B42+lwmJ6DQUPuvhD8pufp1aKSQUU+dD0k4N2uKaPZesTCd/euP/nr5wx7
PJIyZed4sihz+BGzZpJb6PxEy5Kd++atB9dLSTSL83bcx7FubH6IMZq6/M1N
EVF5wZt7+AKbN6wShFfOLhGRliX5vQQP2Hwi6+NqmskXivvRA9PWbDbPxI/5
lTzcR0h0lx0ymVvI5h/J+vjEqOnivJS8YHlMM5ujYgLiOsxrxTltx2Onulls
vSVLakT7FQEx+zouReTJ5jHXjvwg/moBUXEaeHTZezbXxZWHtKZLC4jWxHNV
OxTYum6Z2z3eqyYSMn6hRtYuNh9a1V30Cj3aRByTXIwDU9icKVTemhqi0URy
Ww9Xne3B1k/v7tEn5ZM43wb2GbLWgs2rR4xOfs68wydJC9bVtd1ic69yAPeg
qRWfONq+iitqYfNzzuCW/HviuSIx02zgrMVsvWx7uZEol0dCPMJfmPj+7ecK
FhtY3fES1y121Cy9yeZ5zWkZe7sv4xGZ0qolUk7s95Hl65SiFvYW//3dmeuM
FNm9YMwE9we6WVwSEOt7WI/3t58HaLJc9fgkl4RcKQq8HsfuI9pRr2QGLeYS
ebMKE9P1f/s+e8qUCariPut2Lzf2yxB231HpeN8ZkSPev2oHtizsye5HrgWF
8cYXGonV+Mke5xvYPauj6fv+vuI8VH2lYt1MPruX5T4w2xQ7pZHIHH1SYZ/L
7nGaPdLD/UQcIiPzfnbqHXbv8zp+fP6cRA4J8fbWGnuB3RONt4bOVjzCEe8F
04Y92sPulSZ9pTsPGnGIrqV7abpkKlPnJ0ZXbB4r3mdnpl6vmMnus+qT7wxV
aRP3l3NnS6uPsXuxXzj/W98X4v3aYWqszQV2vy77ur/XD19xPTxW850Du7+3
jO23/cRG8fybtVVy+v1H7PVpP16/Y04DSXsmK1SY/5A91y6TVjcMEr9OqNus
Lw8esM/z1N/x/bn1xC3iW+99MvfZ62/EydZPrSdpvX998P50j71fNSqyK66L
+931vGMjN0az1238m7Ke7uLXuV413HryXabu+9vYyWK7+HW+moi0ZO8w9YQN
/aKWLq8nulPfWzyvucWe92rPzL5a4tc/sy8w3SqcfW6dT8zUURS/fr/1CfGF
oUz9/CGN7yOHi+u3R27p/e4me3+f1SzdN0j8+hWhr6ZY/vs69DrQx4U+T+jr
gq4DdN2g6wzdF+g+Qvcdek6g5wp6DqHnFnrOoXMBnSPo3EHnFDrXUB+A+gbU
Z6C+BPUxqO9BfRLqq1Afhvo21OehuQDNEWjuQHMKmmvQHITmJjRnobkMzXFo
7kM5AcoVUA6BcguUc6BcBOUoKHdBOe2/vmoq1/2pQzkQyo1QzoRyKZRjodwL
5WQoV0M5HMrtUM6H9gJoj4D2DmhPgfYaaA+C9iZoz4L2MmiPg/a+f+6J0F4J
7aHQ3grtudBeDO3R0N4N7enQXg+9DwC9bwC9zwC9LwG9j/HnOv+n9nBt/NVj
YBPlpPzTvqrmjZTZKp8Wpd2upzQ5fdP1d0cdY49o6Sy33rVEc9l35cPPGhgt
xg93OfWyirREvtkZu6ORUaX7tZRPLz4Qo+yI6WH5XMaRN/u7DvMpIjbWGxSO
T+czFpcLgw675pG4zlSlC1ZNjNWyboO8U96QbUlJK+X8BYzBMVHj1956SeKT
RgWSCCFj0LrUrz1npRDZzQ9HfQsUMY7YfirVThBHKkuMKzU9mhlDvErcErZe
Yq5fn4N+J3cep9/3OPBe9xDfhX7+VQ7VjX19qIvfN5lwUeLUefp8ab3N7PvX
f9f+n/URTiEH3HPpc+0js+iUm6CLf7/9fUcYf0oX/+5W50Y7z510Pzm8+73g
cxzdl2y7R82pbO/i39XXiK5tW0zXjZdtWvLYj+6HIxwf3z1US/dVQ4WJj3kL
u3gfe4Do1pRkum8beAdbTFHq4n3ykRIZptfpuXDgt/R9u9Fd/F7w3d8JPse7
+Hf2TsyOi27v4vsFx6ecuXGsi9+Pzg7SL+3O1t3mbhe8DG0maUO6rxQMY+em
5PXht04uaSYy/Z/IlaqxczYt696HtXUiUv1FQ369FjuX05Z7x5z1EhGrefmq
9sbsHDepktbopygiuVEK7iPN//Z7GfYVVsteCImjjFLr461sTshRbr6/xFpI
3FqLdNSd2VwRcn/KIMUB4hyiw51qHsbmkLpt495JpIrzz/EVPdwr2Txj8tHd
ca6DgBjPWHJ5yKC/5Zx9c7dITBLnoogLHRKb2FwkI9l4vKi0iUz2f/5y6HU2
X43RDz5wzr+JGMQeVxZx2DwWZu4lLdRvIkG1728aq7J1N78TPS/84BPdTcv7
t+792/fdwr1Wj3jIJ1bBxu90XrD5UHfgJbeqHX/998YOLojuw9Z7PCk1UJbn
E5+CMZp7jP/2cxRDP3ZMzOGRuATltio3Nq8Kr8Vpqx4X59ihzhO/erL5dtiC
dp/VOjziuLgq+qoym4cdBklv9folzuHrFrTf+M5+31M7w6z2arK4/vHJTplb
bN4u6DHpm/J+cV32WUGDCZvPK2VLlG8pc4mxjXrDnHo258d9llXo96WROGba
3FV7ze4FXx/7JK5KaCS5N6MuBvn/7eci6ozGbTzUSHQdPa8W27L7hbGH7g2u
biMJCFgod2oRu49oP+ujyZdsJPKJ0wacV2D3lzrLu1sdcjjEscikU6EHu+90
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
33lc0v7r9jNfpi7nvub4JidxPdLWrvSpB/ucOBReszcX1ze/DK/1OMDUc0Or
1+ctEddPvDGLe7WDqafk9zVV++vflyw9E1T404R9zv/vP//s13Adeh3o40Kf
J/R1QdcBum7QdYbuC3QfofsOPSfQcwU9h9BzCz3n0LmAzhF07qBzCp1rqA9A
fQPqM1BfgvoY1PegPgn1VagPQ30b6vPQXIDmCDR3oDkFzTVoDkJzE5qz0FyG
5jg096GcAOUKKIdAuQXKOVAugnIUlLugnAblOigHQrnxX3/onPmnDuVSKMdC
uRfMyUCuhnI4lNuhnA/tBdAeAe0d0J4C7TXQHgTtTdCeBe1l0B4H7X3QnvjP
vRLaQ6G9Fdpzob0Y2qOhvRva06G9HnofAHzfAHifAXxfAngfg3lO/kNHfZ4h
GDeMTzm9XlDsHcehtPKsSjo1oJ7yQ//Rn786s87ZVXJWenUNcd7bTSdAhcMY
Efpj+cpdlSR5YtrZT4WNjAVnUpdNO15KpKWUAhTVeYwfyn1XnttWSNoM9o89
fpzPOGlicPjhQ7mk45X2nINpTYyTLG7cmXzkNZF/U2cd9k7AqDsv8uG0yekk
d523lmqFkFG39vb6+zGPiaPpIJOIFBGj289NmrbG94il2QF76avNjCG7dkce
enqOuX66p5e/PW/Zxfshm/S4D3bRz7nuY2HlMnf6XIRo73KefIc+R+FqsbOG
Z9LnzuzVjvmz2uhzauY4MuXZOLru9jN/eZ0Vfd6T+me+HnSP7g8Gv7999PhK
95kTd/Z/GreQrve83513yo/uV46zHwwtreni5+juDlHZN4uuh4cavj19nu6f
WW9vjTHoQ9eHCB+c+XK0i99/WUpq/X908fMh+jq66fu6+Hc8Zjqp6jbQ86Ji
gMzrC5vpesioRy37GrqYUy1u3V85sHXlWS0LZNubScuJUsU4ETvvApfqKX29
1Ey+z568ufHH337vdcNd2ysLmoljfaRnT0W2vq103zZOlfh5ujZJQleZnbN6
z15+Ge8rInfKd3LWrGfncpvqgHj3mSJSfTgsNcOFnePD/PvcccwSkqStQ8NH
7mPn/pjvPXYLdgqJgeDk0Pen2ZxQGeZpeGeYkNwZuSI1PInNGxnmx2bNei8g
LZuf9eolydbdVK5J+xwVn7f2PgprdNjcomsu9chcS5xzaq6/rPVjc46w9Mpr
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
U14n32IFd641VXFRCHp3XH8icNgVVhux+5NDp0pBmxkNkryWn2I6O5a1GJZc
Keg9xX/6zCU+wnmQrZ3Vputa/vnJ5z8XfWh9vZ7nJ1+fj2Of+PuuQEWpT6kN
X7cxnXQl5gh//7rHRej/fFfP+5M8vGfy2298vbjdzJmrT/P9pEXrAXt+KvH1
zkmNlxt71PNcRXI7fmxuPX8Pt3jypokT6nneUurzrO1tvk+2eBf557HB9fx9
sVnOswov1PP7O717PZuuzdetZ3ZIHBPI93k7lzuxr9T5enCH7Y1Dd9Xzc4CP
T56c1KWen2Npd3Zlkwv1vP/JZrNNZWP4eq/M1N47XvDzLlHPf7SOSz1/j2bO
XZ3Ar/w87fVeNTJqD1//nBX0Ykhrvr70Q0r86Kv8HG8ctjLgg61Yf7Tgt7Yr
qyuZ+6aYwUcKxPyQp61VHXK6kulOvT9XqadYd4vu6T5vViVrNcI+uNrll5+H
WR74zL1l3esEuTfWOinmllaNrjSe91DBdLff2/NeKuYctW4uc8etqstLEzcv
O99DrMsXu7X80kfBUne2PqlwFvNSuGmNXZ9cOWsVstDOKeKXn4NlHR+f8JEz
7673VnR88sv7szlofvhpImcGb0cW/mwn1rW++/af/U3GzNekyRatEvOeTuDy
mm63ZKygsn3Z83QxH/peepxUtEXGUk08Nt4c+8vftfl+mm0YXfc6n3oeNYoQ
86ezsvKTbUoy9ll9X01SM7EeuH1z3h9Jdbk35e4Z2QYxx6q2dJoxbHcF0+z5
cdbu12Iejv/S/E3x5Lr8XHVE//Z4sW4xq2hjq/YVLNrlhnHfmF9+z+jE+ztd
M+pyeHB+tnUHsW40aWrquz+lbGd8ys5cbzG3Ow9Pq0yfL2WfW+zJbP1dzPnK
TXdGB/eVsoDWdjdrF4p1b/e2O18qypl5R0M7jVfiHqFqM+5SWkw507TUN/Gb
INbzrAzjnD3r9pQ1De6/txP3EdVJtw5NHVXODHwja0ItxP3F8AR7oKJe118M
zJIMJoj7joWO5qiAgjLmeM9rXJqTuB/5q+eWtI6q27MmWm+0nyXuU0HJk51W
rS9jVT/2Voxb/MvPtwcFTgof9V8/D/92Z3dLcS8bM9Q28XS7MmajGl5usfSX
928svLDQQ1rKtJe4Ko86IO59tl3TpHPiS+v24nZB2anintjz+HutoUdKWXS/
O74qbcT6mLafRz1cVcpsFmT99mq8uG+mRw12uGlT9/qOtQ/CAsX91DvG3nXY
oFLmfTBOo12NuM/6xgzelqpe93EP1h5oM1msx43W0p1SXbdfT/RJPBj3y+8d
tIvWvZYlYe6u7km7TMR6i9mW2UnxEmaetnjMtxfifh1lUrLseV2fdey3rp+a
q1g332ql5RxZ9+/3rPKp/O3f16nXoT4u9XlSXxd1HKjjRh1n6rxQ55E679R1
Ql1X1HVIXbfUdU7dF9R9RN135H1K3NdUH6D6BtVnqL5E9TGq71F9kuqrVB+m
+jbV56m5QM0Rau5Qc4qaa9QcpOYmNWepuUzNcWruUzmByhX/+o/PIX/VqdxC
5RwqF1E5ispdVE6jch2VA6ncSOVMKpdSOZbKvVROpnI1lcOp3E7lfGovoPYI
au+g9hRqr6H2IGpvovYsai/7+x5H7X3UnkjtldQeSu2t1J5L7cXUHk3t3dSe
Tu311HMA6rkB9ZyBei5BPcf467z8p6qqbTcrXVbJqX3ix6fMIeWcNacjez5h
Ek6/sNfqzzsVcxpm79lxSlYkeGX4hatNuxQyxzudCzuZlQhWFb3Uy+hRwCY6
Srp3mCcR1HpjHRKbm8tSMn1vTfUpFQzxWpLSdM1r5rBUsfFP9zLB6tghvoYX
MljNMBfdj1PLBbvMSPHVbvqSnXBPm6NSN3//sv2FPUVF29KY6d6uax7JpYL7
z1qa2Ls9Y6nDq1roXa8Q1D435/Kn2Ccs6vb9Sa3mygTfB67uE5aQwIIivD7k
KcsF12nqjUvOuM98n5io37wqF7zqP/g32x232OwjE/WyxyoEI4/OkiUkXGXa
8mFRj9MUgg0S7mePnxbFHG7PC748s1LQ/GKUm8+zMGb40OLMCVmlYIMrr9tt
VXUTzrPu6c0nvVz55y3uS2UT1mXx9/Ws7pGsciRf79zo5WHXG3x/+KA1svmy
LvW8L4pWy75VwXz/if66/rdPanz9e3G/p0/9+D6mnZ+lFvmd74e68vmj26/k
6+Gx61L13/H9doNrtwm6W+t5v9k/A062b8zXm238aem5p573ZTK/u2aUJl+v
Wt3qgOZxfl4k+sXflujy9eH7lBsbJ/DzKNjm+risiXzdb9fZ+K7p/LxLdRxe
M3EeX5+RMTdvwWd+ns53Ha6c4MPXI5vFht404OuWrxMGSFP4OR6lZjrm2RK+
fkPVZsGelny9rI+tnsplPj/Y7A/OMJvO1ze8T0oe+5PPJ60yCvbFhPN17ayI
AyuM+Lp58vnG1m/5vBRwyPTz0wC+nvjh8ICtw8W62k/D17vllSy8tmG3nDQx
p6XndZoy/EIlCzib8NTPUKz7tDh3tGZJJbM82n9fmb+YA8eMbtawQ79KFnnq
wNYR5WJuNLK8YFBaoWA7r175cn/iL3+/eJCSSd5ZBYv7vkOj7zkxf/rK+mYz
VwWzeb7o2FEVse4ctsDRTFvBPjf/UXXYRsy3GePmLC4okrPgC0uaXrop5mH/
mntZWmFy5lj2psuY5mLdovlKLa1ZdXm7c5fRo1zEXG3hU7Gwe/e6emKyT/oL
MZ/7ztG7byCXMRuZovCLjVhf1zxx9eLrMhbdeVVE00Qx59fq1SjKd8mYl/vC
V4kzxLqB9ub4QIe6euqdRSsKxT0ifqrbhqTuMlY2qXXMBjuxXu23dNiJmgrm
6LhPNbjsl783dNf7dfsHdftLzv1uIxaI9TyJ857TByqY7v21ucerf9l3Vg92
NpxX9+97//Bs4CHWbWZMVWXDK1hibsqfR1qI9Uc9Q3p0Uq5g7vZbMsbs++X3
68PNAoLypcxxf+giLz2xrvYiO6I0Rsq01Xp2j08S9zibmyqxY3dKmeVkzbRz
dmLd6veWNytmSdnw7BOTJpaJ+6CB542ct6xuT+w78dTVo2L96/2UoLMaUlY1
v9HafoN+eZ+cpCds9pdyFrfeq9viSnEPjdcMarQ5r5yVmXr63jnzy3Oqh3Yr
lsXV7bNS205t54l1jbINIaPO1O3FY4c36tXnl38fM/X4teC6euCR/n7ffvk7
GrYn3X/ur9t/Tww1rM3/93XqdciPS3ye1NdFHQfquFHHmTov1Hmkzjt1nVDX
FXUdUtctdZ1T9wV1H1H3HXWfUvc11QeovkH1GaovUX2M6ntUn6T6KtWHqb5N
9XlqLlBzhJo7//qPn1N/1am5Rs1Bam5Sc5aay9Qcp+Y+lROoXEHlECq3UDmH
ykVUjqJyF5XTqFxH5UAqN1I5k8ylRI6lci+Vk6lcTeVwKrdTOZ/aC6g9gto7
qD2F2mv+vgdRexO1Z1F7GbXHUXsftSdSeyW1h1J7K7XnUnsxtUdTeze1p1N7
PfUcgHpuQD1noJ5LUM8x/jrv/11951q/t8qWciptHVo5uKiUU7Zd65usuITT
6MPI1Km/F3NWp2l1WTKpSFAj4Xe7uap1x2lIjXLq5GLB6ui9H8fvfMt0HG8d
fjC4RPBRpUv7XMMCNjs/bJJLA4mgdH7Ptik/8tidj5vznZ5JBJ929Z6feSCH
WX1nH0v8SwV7NjfXnjT9NUtd6LVE17BMMCAx6I6vSyar6TvA9WBymWCXravv
s5BXzPiVZdOfy8oFbb17SxtdSWca2qXyZVXlgo+OWhldGfCCqdmrp5kGSgVf
f0jzs7BIZVo1H4KXdK4QdDEZ7bpuWgrruXpGm8KoCkG9UfI/rrx/wjLKS7SD
9GWCX7eFGq9XPGJx6dc+Lo6UCXqr3DHdpvaQabeSjZ/bRy5oftTT5qHGfbbO
8o/1w0LkgtYhBkNdEm4z+f4Tzea0VAiWdZ4WfMg2hlWv8rE77KEQDN6WoXLj
wGXm/2yw/YJMhWDq8ZEnNj87x1wd2Cwz00pBbV91hz6jj7Ns81F6ascrBc0z
46/sOPKHcN01U9zuN7uKf26TeFb9xplVfP1k1schSjV837Px9h/sepCvWzsN
ezajI18vY+XZelf4fmt+PvDoCCu+7qemO7Z/Bt/Pm9lFjTywnK+HKu389roJ
X29lPfvk11B+jtz2+PSlcjhf/xzaWW/dK34eLR10S/f77Hre9ylNo92xn/y8
i04+7PDkGF8v+yN14Axzvh56J27psSJ+/upNX5w5czNfL/OZM2GUHl9/uWuE
2aon9eSBXvOMX3jW83fqc8r3u7fn69rJOW1f3Kzn/cY/+56qXcDXdSd7Nxva
iK/fnjlxVH4Yn3NmqbYLamzO1wP67Gz09R2fo7wLXUbLDvF1r4+Pv16aVM/v
c+WtTD9ey+e6WeE1bdk1vt7sUsot7QV8Pbl29orkLnxd23qtklpmPe+fU+2h
8tSPr2fNS7opMa7n53J3DD2h+Mjn3ocJts12XOLrDRouazhkdj3fd3tzf21m
x3q+TzdomfRLBp/Po8c97ZUcytdb3Tvu/MaBr/e6cXHvxe5iPf5u4Mk1BZWs
bNaKw7qXxD2iNlZnQNn1SuaV7ugx9jexbuOy6ZjStkqW+POWhspTcU/R+ew0
+OaUSua49FPtJGux7vPuR9j8nnX/fuZG//VZ4r5j+vm8a4cvdf1Rdnl37DKx
fiVz+8lpyQpmfnhSp4wf4j51Z2jhc4MjCjbD91rTrzvFemquypx3XgrWLFJz
ycwBYj089czA8ZMVLGCX7qdBj8Q9rnbz1Kg2Q+r2O/bswoCtYj21akIzY7W6
18m+07Z1d7Huc3PolccKOUucrGxe/VLcE/McRyZueiFnuu+DPozcK9bj2149
POC2nJUZjt6+arpYV075oHTpopwFNCjeZTxMrEu3Lppvf1bOLMc3Wf+m77+v
U69DfVzq86S+Luo4UMeNOs7UeaHOI3XeqeuEuq6o65C6bqnrnLov/vUffx/9
VafuO+o+pe5rqg9QfYPqM1RfovoY1feoPkn1VaoPU32b6vPUXKDmCDV3qDlF
zTVqDlJzk5qz1Fym5jg196mcQOUKKodQuYXKOVQuonIUlbuonEblOioHUrmR
yplULqVyLJV7qZxM5Woqh/89t1M5n9oLqD2C2juoPYXaa6g9iNqbqD2L2suo
PY7a+6g9kdorqT2U2lupPZfai6k9mtq7qT2d2uup5wDUcwPqOQP1XOKv6/D/
t/IDSQv2z5dyBjVZbe51tIzz+9WFnju2lnIGJZ3XmLpLwnm90a3b566WcCp1
+GqkXlLM+VQjN25Ld16fg9l95i0t4lRTN1wX8Ieo2+IrlqdPFTLl3onp2q2K
Bdck2j54VvqWuVs7hBw4UCw4w99Ls3v3t8z3K4uRNCkRNGqmLe/tWcCqVzs7
jd9VIqgT9iqr7/w3rF8le3/zU4mgz2Dzvi8089ls393nm62UCEqXOn4qOZPL
3LSTt3d5JxGMDTu87LReDnM/qRunOb9UMLqN771r6a+ZeUJG4uy0UtHo9ack
e7KY7zP/CPURZYJLD0xvkWaXyXRahl/Z8UeZoP+rbiWLJmQwnbtu+859LhP0
T7g+pbbdK2bbpePApN/LBZUjr64M+5zOwv2PlFWfKxfU/r2PRa/vL1iAlVvZ
thZSQRvtGxYrstOYy4+O9t8XSAVTGl/+oPoslVUHqRTnJ0oFrdc8Ov3I6jlT
U4o5vaR7heBl+bXW64alsOk25hsG+1QIfu2yqX2a7Ckbqe5nGJRXIbj/ZMzT
dc8SWe6h8pSUvjLBF+6+evpNHrO40aecn2+SCXov1z7bs2kCs1r64+G9FzJB
izUqTlvU41nBuzne3brJBePsHtWOHlfXmkY9M2qzXi6YLLNb1tvkLqvum1zm
/0AuGNxsWXv7t7EstunBTWtUFII2J5Rar9wbw6KTLt8aY6sQjPMIM0zXvMri
XD4ay/YrBBsM3DxS3vkSM7XIycgoVAjauK7Iybl1lqXYL1r1s3+lYOqBYe3V
Ck4w06zuMzSXVAqGrzq9dnnFYaZv9j24VUyloPnFRcce2e9h8pK3u6f9rBRs
EF508uPHbkI/mNXxcf7KK/x8tAvYYvxsFF9PDe9Q9vIdP2eL3b9/qrnA14df
DfpmPoOvr1qS6ODTkq/n7mnSdEcKnwfi1p0/NcC9nt8jO/TK+WYfvm4pMTk5
P4fPIXEHBp/qs6eefJJXGjyM1fNzUPtVRh35xOeiqpNLHmpE1vP9lOjO3xQz
+Lp5Ztr+eS3r+f1WvfnjHB/W8xysZW/3Xa583c5gwPvvfevJe/kLZCGv6/n+
UZyK1biQep6bmTX7Muf3en7OStOo4fe2fD2r/bV2imd8jr1x/m3I0YN8XXfn
qzVzber5+dvGD5eFqtfzvvHrGmqZPefztnfzMTqegXw9VJp56ONkvn6y48+0
wa35+mfJvbgZOfX8nl04K4v7o556415GD+bV8/3BxW9ee+jwdUfzAW6Dy+r5
+eeWNbrTL9bz98q3dT3ax5uvWzYcHnB3ej3vU124NbN/f75u02mKUxdVvj7E
dIVHUgW/fy1639Gm6GU9e9xZ2+Z59/n6ENvUxzNi/vM69TrUx6U+T+rroo4D
ddyo40ydF+o8Uueduk6o64q6DqnrlrrOqfuCuo+o+466T6n7muoDVN+g+gzV
l6g+RvU9qk9SfZXqw1TfJvs8MReoOULNHWpOUXONmoPU3KTmLDWXqTlOzX0q
J/w9V1A5hMotVM4hcxGRo6jcReU0KtdROZDKjVTOpHIplWOp3EvlZCpXUzmc
yu1Uzqf2AmqPoPYOak+h9hpqD6L2JmrPovYyao+j9j5qT6T2SmoPpfZWas+l
9mJqj6b2bmpPp/Z68jkA8dyAes7wV3/4n6bDGrujMtdKTvnr1K/tkxWcTx8d
Sh44jHdMravv0H1yzga3IgMTXss4g6zeG8pm8zpPHNhxpqyC0yfP0m6bP2+V
+XplY13ep0bTp66MkXKuuRw6Rr8fr/eLhO43L5dz6nt+aS8fx2vsema9S04Z
Z8325UOfrOF9ZLrCtGFv3oL8sRdbJpZyRrWK2d7JhbfVvW0b8pvz2jZMf5R2
Q8IZdSrx460FvC7FTvsNO/PGvt23MjqphDP66Mk20nW8NQv6pF7syevyJilp
THYxp8e5oJo72+pRO322hwFvtubj1e+KijjTC8x3JR7mDWnrZOljxxuxOcLM
e4aor7nycfatkLlofG/pXPf//aWkcPviiqBCptJmU2+jl0WC74ofPL4wqpA5
/xzi80SlWLDC2+DWlHdv2WINvQkTbIsF3xaaqqv7vGUF/e1jR+wqFjQwW7eo
7+C3zMPV52RWQrGgbYGxiklmAfvSbuCUbj+LBVXmjlCesqWAmUeuPLDTskQw
XMmuu6FGAauZPvGl1bYSwc7fOvh083jD4kpfPNh6rUTUckeM55t81n7f6bX6
1SWCt6eqBHrq5LPYuZFmjY0lgukFymOrp+SxeKsKnw1LJYLXu5mt2h2by8yV
t7bSvywRla995lWew0JuddSNKZIIGqZc3pFtl8MchvQL69OjVLDaaUvvXX9m
M+NVjrYDZpcK2p7Ib7K67DXrl2XWdEBwqaCP5xjp6mF1c3DVVT/7J6WCsccL
7atPZLGv0r4XA1uXCWqwre/HJmUy5ajUL6tYmaDsm3+bY6MymWNtB2bsViZY
0PTG6Ck3Mlj7Btucy0+XCd756fFqTLMM5v39rEl1fpmo6k9rHedXLG+r/gOT
NuWCiz09b1o/ecm+Brif8JtQLqgx8UI7hy4vmaHPlYuqW8oFXdaUVL3ZkM5c
A9b3X3SxXDB+kv/Gx+9esILhri3H5pULOk67/9Jw0Qvmb+h4x72rVNB+wZvH
50+msWzjIaYGllJBj8nOlsv7pDFTjz0njb2kgr9FzG5jcyiVnYhYvDrkglRQ
T9OXzSt7zhzUXLasfysVlFw8/Ekr5hmrzt+bbq1aIWj9KELV8EEKKzAdoqxu
XiEY5/co+9TmZKbcv3dM7bIKwexa7WtqLklMKWdC5oEjFYKyvOEftk56ysIn
qGmEvaoQNDeO9p/wI5Elt3R68vFnheDg01fGmzZIZDr2Qyo69JQJapUnbHDX
f8wkjQb+OXOyTDBEUbIou+cj1nNhglzqLhPUOzjXbZNDAhvTp0uC62GZ4NK2
U+ZtnvmQhR7R9rC8KxOcOmnkxIm745nx43N5ARKZYITdl5SQ4AfMeUm/TvYN
5IJR6xvOLq+9z2qCBpmu6iEXNF6TEWAx6D4r+n3J0+VMLhhVtX7UPJ849shH
6nneVi7oUO5tUKkSx+JyZyo0neSCDU5fSn/pco/VWLZ9FeQmF1x1oIWSIvcu
U/Z7Mc9vpVzw6vLurkuO0XXqdaiPS32e1NdFHQfquFHHmTov1Hmkzjt1nVDX
FXUdUtctdZ1T9wV1H1H3HXWfUvc11QeovkH1GaovUX2M6ntUn6T6KtWHqb5N
9XlqLlBzhJo71Jyi5ho1B6m5Sc1Zai5Tc5ya+1ROoHIFlUOo3ELlHCoXUTmK
yl1UTqNyHZUDqdxI5Uwql1I5lsq9VE6mcjWVw6ncTuV8ai+g9ghq76D2FGqv
ofYgam+i9ixqL6P2OGrvo/ZEaq+k9lBqb6X2XGovpvZoau+m9nRqr/+nnzfA
/zdaJW5SvvGukvNst4t9Zfd4NU4P2b12I+/szBjzd715Xa4PcK16qOAMOnJp
behCXqvWkTatVXjln4cEN42Sc0a32x3oackb32eO/ZBSGaeHb4BR1jHekNia
r70dePWv9S7q0pNXruT33aqggnP38/1btx7mdczPkB+x47VIma7zrSHvdA+D
bM+6vPV3w8+Fa72z4w1MbuK/tKacU2eJXGP9eV5zA58cVXfefvsHVa3qyVu7
qTD+raKM82vn87UXY3jvXP2cb7aOV/KheePG5rxfT5+/79iMN7f1nvITyaWc
PRs0Mzb15T2rNG3Un8N5jdKm2JfLJZwO2re7pl/hfXSkRK7uydvgyrzng0x4
jd5tcspX5lWOW+XSK7WEM9nUqHtBEG/0uHF9Wy/ifWp/QM1Hj/d7yrwmTb4V
cxqaKjXv84g3qmJMwxW7eZM7jHrTcQKv9ppFG5Ta8FotDH35MaeIc923iW7b
j/N2VgROfbeA1+B6sk57I9EbiuSE/AFF7ET4DfvVy0Sbqy/5Mjm7kNkaPa05
dLRI0OdCqlpoQCEz92z4Y+OTIkHtlNpG8VMKmcEak2sFZUWCN57pVF3oUcg8
9h737KdZLGjbz886Luct6/hlet4Yq2JB+921hiEBdblxwkrPW17FghV7XyZL
rN6y8v6v980NLxbsbmYc6a7+ltlIRuvb3i8W3BnRaaRSfgEz9Le4m1pWLKoX
VPjoeAHz/W4y9k37EkGjJhEdL80uYPJj+pZFY0sEu/jf0jinWcDWtBy3Z+Py
EsHQlwZzdlx6w8aE6uwOrbuO/tKov9+8fiPfsNjWy+90jC0RTH96+fHltHyW
nrU+5UxRiaDvar9Djabls4iIrusk6hLBFi1O/mGdmscCRn0wOWMmEbQx6Wnd
eGweM5/0ImbHNIlou11Zi37msuv2Z7qt3ioRzH2vdCzcK5cdaTZZs+k5iWA/
SZsY6Y8cVmShFbErUSI4vf8lNeeIHNbqZI/anvkSwVSN4GYHFuSwlCkDPsz5
KREMUV3ds6hhDnOJfOFU1bZUMFl5Z+aA+9lM5+q8JW66pYJ+Rdl3YnyzWbSV
4sEwo1LBqm5DY2bMzmbxqsrZP0xLBa+/ka9QsshmzpUDtTQtSgUzBrlfitGn
69TrUB+X+jypr4s6DtRxo44zdV6o80idd+o6oa4r6jqkrlvqOqfuC+o+ou47
6j6l7muqD1B9g+ozVF+i+hjV96g+SfVVqg9TfZvq89RcoOYINXeoOUXNNWoO
UnOTmrPUXKbmODX3qZxA5Qoqh1C5hco5VC6ichSVu6icRuU6KgdSuZHKmVQu
pXIslXupnEzlaiqHU7mdyvnUXkDtEdTeQe0p1F5D7UHU3kTtWdReRu1x1N5H
7YnUXkntof/0fgwhFHXzXT18aUYl5/XykpS807y+7YNL963kjW/iN33uUN4j
VsttrskVnBmXdWUVwbxKPlZ9y615fc4/aRDahFejzZ0Q9SdyTtftKhXfN/HG
V434ss+QV5IlbZL/RcaprFOqXxvHq/W19OyfB3lTJDrXPi7mnSh1zHsziFfD
ISpH+VsFZ8p41nXAA17zo55r3Hbwevt0/qlvybu7h2WDU014UwJyKkweSjnT
7+9Z2ncLr+/IQXpaI3ilg6PbpDbirQ2eeS89tZxTeeKLdtahvI/ueL2wXMT7
NFB96ZBBvFbXP2vaqfEavd4cm5Bfxqk1Yv8ZtSjeO12cXhSv4FXS0j3cayyv
qdHRhBNteKWLbFeOyizlDF8//c7Ro7zff2/iNtSJ17jV63ylvrxLP/TyavJB
wqmX9aLztSe8ubbJypv+5E0ddlNxwYM3/WmXzmwSr4e9RPpJl1cvot9Nywa8
BeOs777LK+FcauA+w+ACr+R2l5ikbby2bbpXX7TjlRoclb7twzs9utftgoa8
Y2busbv7qpgzNtO23R/neXePmqo7cwOv43iLteen8hrfVLYrM+TVaTctzKcR
71nt/BEnZEWcG8IV2lvTeNMnNmrR9xZvgda1CbsieCVfjhscCOCNyjv71cuH
1zzvz3v5XrweasdHGa36z6Veh/q41OdJfV3UcaCOG3WcqfNCnUfqvFPXCXVd
Udchdd1S1zl1X1D3EXXfUfcpdV9TfYDqG1SfofoS1ceovkf1SaqvUn2Y6ttU
n6fmAjVHqLlDzSlqrlFzkJqb1Jyl5jI1x6m5T+UEKldQOYTKLVTOoXIRlaOo
3EXlNCrXUTmQyo1UzqRyKZVjqdxL5WQqV1M5nMrtVM6n9gJqj/in9xsIIYT/
jBmbXhXufVjJ+XSVGzt0gPf8abe7gXN5a9f8OHOiP28N69+z9J2Cs3bPKr2Z
x3iNkwd0m+vEe77pLY1CbV4HC59+d4vknNMvjap8foU3OicxM2Y171np2gY3
Ga9tWNTBpi15NXpscO2cJ+M0aGOUPTWW1z/01e8X9vIG9jgVNWIZ78RxC0uW
m/BKG38waa7KGz11xCyT1ArOnic9L6oc5Y12V+7XZiGvQTO1e9aGvLZP8t8O
/CTlNDyYeS/3Ca/2uhYH5x/idW69/tOcxbwZ2et6zBvMu3v28mk7WvBmTO7w
801ROWfcSq8qx1u8ti8Phxjt562+ZTkkaAlv7MYjbZ2NeeWeh1tEt+PV0uu6
MKe8jHNNmyTv8Q95Hc7l/akbzFvVbkJLw8W8VjPLE4da8p5/+Fvp+e68Sj9C
rjf6Usr5deUKq4U5vIEHOv6+9AavxePzk778yRv3Knbtqw286zxfPHk1mzd0
54quyuN5n27XyZSa8LqcjzS00eM9e8NDZtaDd1bR8OFPuvznUq9DfVzq86S+
Luo4UMeNOs7UeaHOI3XeqeuEuq6o65C6bqnrnLovqPuIuu+o+5S6r6k+QPUN
ss8QfYnqY1Tfo/ok1VepPkz1bbLPE3OBmiPU3KHmFDXXqDlIzU1qzlJzmZrj
1NyncgKVK6gcQuUWMucQuYjKUVTuonLaP50fIYQQQgj/rnKmjt50eSVnXPiW
UJvrvA4r2jez8eNVMgs1HGjHG9vDcXz7rrz6zVffPleu4DQMuN7d9xRvxv3g
W+2X8qYrnioW6PGet+05dPcnOafOc9U2Kcm8531Wfr8fwuuuXzCvzJlXMvHb
Nw8TXos+xoOGduB9umWx5o1qGadj+tUrx1N4bZ3d9aIv8OoHjFnotoM3vUhl
YAMnXlUH7RkJw3jTr+d6rVHn3fhjfRPr3ApO40vd2iRf5pUvc65y8uGtmumf
3Hcu79eGx4b5jeQNGtCo6ktbXg+7kGSZQspp2nCK8+tU3kfdMgraXeWdGFFj
VnqY19en9KHadl79nc22RyznvbP2/vHimbx5XslO52x4+0Xt1nUez1tbXWkr
Zf+51OtQH5f6PKmvizoO1HGjjjN1XqjzSJ136jqhrivqOqSuW+o6p+4L8j4i
7jvqPqXua6oPUH2D6jNUX6L6GNX3yD5J9FWqD1N9m+rz1Fyg5gg1d6g5Rc01
ag7+0/MZQgghhBDC/8nGVg2ddja5ktMjutfWR2G8IYNeyOM8eWtqZ0q1x/O6
nnM79LYdb8ghS/OfxQpOue+1H+UXeN0H1kavWMu77kd+64ljeJUabnL5oMFr
+nvt/ppSOefXa8sNbBN4p0+Y1iT3JK9VxhyX51t5A6drpeXN4VXy7nb57WRe
j5Nzz1oP4DVM9j94uDtv4NqW28vb1OOSrLz7KrxHNps80W1SjzbmR5wb/l9I
vA71canPk/q6qONAHTfqOFPnhTqP1HmnrhPquqKuQ+q6pa5z6r6g7iPqvqPu
U+q+pvrAP92fIIQQQgghhBDC/5Ndnikf0fpYyRmrbjrOsJzX2er6l73Z/7nU
61Af958+HhBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE/13/F84CoWQ=
      "], {{0, 0}, {182, 
      181}}, {0, 1}], {
      LineBox[{{1, 96}, {181, 96}}], 
      InsetBox[
       FormBox["\"+2.53 \:041c\:041f\:0430\"", TraditionalForm], {3, 97}], 
      LineBox[{{1, 85}, {181, 85}}], 
      InsetBox[
       FormBox["\"+1.01 \:041c\:041f\:0430\"", TraditionalForm], {3, 86}], 
      LineBox[{{1, 79}, {181, 79}}], 
      InsetBox[
       FormBox["\"+2.84 \:041c\:041f\:0430\"", TraditionalForm], {3, 80}], 
      LineBox[{{1, 76}, {181, 76}}], 
      InsetBox[
       FormBox["\"-1.01 \:041c\:041f\:0430\"", TraditionalForm], {3, 77}], 
      LineBox[{{1, 51}, {181, 51}}], 
      InsetBox[
       FormBox["\"-0.71 \:041c\:041f\:0430\"", TraditionalForm], {3, 52}]}}, {
    Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
     Automatic, FrameTicks -> {{{{180.5, 
          FormBox[
           RowBox[{"-", "162.9`"}], TraditionalForm]}, {135.5, 
          FormBox[
           RowBox[{"-", "81.45`"}], TraditionalForm]}, {90.5, 
          FormBox["0", TraditionalForm]}, {45.5, 
          FormBox["81.45`", TraditionalForm]}, {0.5, 
          FormBox["162.9`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "162.9`"}], TraditionalForm]}, {45.5, 
          FormBox[
           RowBox[{"-", "81.45`"}], TraditionalForm]}, {90.5, 
          FormBox["0", TraditionalForm]}, {135.5, 
          FormBox["81.45`", TraditionalForm]}, {180.5, 
          FormBox["162.9`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 45.5, 90.5, 135.5, 180.5}, {0.5, 45.5, 90.5, 135.5, 
      180.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
       TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -167.4557402033446}, 
                    Offset[{4., 0}, {7.5, -167.4557402033446}]}, {{
                    7.5, -59.41590638635455}, 
                    Offset[{4., 0}, {7.5, -59.41590638635455}]}, {{7.5, 
                    60.62835341030086}, 
                    Offset[{4., 0}, {7.5, 60.62835341030086}]}, {{7.5, 
                    168.6681872272909}, 
                    Offset[{4., 0}, {7.5, 168.6681872272909}]}, {{7.5, 
                    276.7080210442807}, 
                    Offset[{4., 0}, {7.5, 276.7080210442807}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -167.4557402033446}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.9\"", 1.9000000000000001`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -59.41590638635455}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"2.9\"", 2.9000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 60.62835341030086}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.8\"", 3.8000000000000003`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 168.6681872272909}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"4.7\"", 4.7, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 276.7080210442807}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6043863128666569`", ",", "1.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.6983339944466482`", ",", "1.9000000000000001`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.8027203073133051`", ",", "2.9000000000000004`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.8966679888932964`", ",", "3.8000000000000003`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9906156704732876`", ",", "4.7`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7607864997662287`*^9, 3.7607869467132072`*^9, 3.760788424563975*^9, 
   3.760849122695242*^9, {3.7608513584256754`*^9, 3.7608513817412577`*^9}, 
   3.760854401506153*^9, 3.760864112938653*^9, 
   3.760869009977795*^9},ExpressionUUID->"ac7ab7f3-fce8-4e20-8242-\
f71a10922798"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
JwEOo0hqIYG2eKIU4pYEpuvmZz4mvMcgtbjsFOEDnfdPJEzBPTLlfhL04b9Q
Au8Giy5+eZcEfd92dbUlPONkA7+0X0mwiR1/MwnO+NS6iwVJ0Dyw9NRIU8rP
14zaSObJ8KwdiyASHCxYWLmsfjKc/XPwVJwx7TfJiNbdknVxW9LxnmR4fsgp
0YbwnDql27bMT9btGz2f6tq63E3JcL59uUsgYZVXae4xz//h0TM81y66kyw+
F2G7Nu31XgUmQ5GrdX4S4WMTq7s7xyRDpGlAukSYx/HC/+GObXb+WmeZ8u/v
3b/6oGlGgxSIquex77TR3+dNgYVMQBAe9WuqsnREio4XSHAybbpd4dwUoTcJ
O1x/Y/7EOQVEuU2C47beQXEeKSIuEn5Z6PBi1K0U2L2xpUuqvgQsXN3zT4FR
V+bZeBPebzIloygyRcd/JLgz70yuS24K7PGQa+8h/PgpLaxZ6j9s/WORzcb6
qbC01v0q5wg/Z+Webqn/ft+pigm1u41Ohat5a7d/JZzaevfDBotSiSmyiCFB
Sa2J+w9uSYWY9z3zTOj5XBlxPp4KSwzjHcvo605HBq/vczf13/PGVj120/vt
/36//7ABRx1+pkK1L+cvuBKOmeSb2Sc/FZTljYlyE9+ZtHXfZvM0GB1uOKpY
TwKfSc8nVmuQBtUr/kvwJzwitdAut1uajpdTfguZOSZlFH1/5tfc44TTBhBB
X5gGndfu/uNFONmj8pvwLWkifxPu2jrhqvHJ//3+2zePxS58kAZ7bn142YL+
fvU1fVLPf0wDYrv3xhG2afL2nV1i2r/142UdJQ38F1IGJhymNyjiie2ff5/3
zukXHaKa//m3Hm6fjvZ+1Pt/mG3zton/w6vd1j3dtfzPv/UNG/fMN3jHH6j6
JFQVQzi814Oni87++bcf2XrP2sx//Ac6tq5lGkT44cz4AxeD//f1LOPQyaHJ
/3sefful8Ynlf2Ck+7FlWtovVmwYXzX93/kqbB1zILpNOrzu1nDwRsKz1BO7
edunw6/jZ+8FEE7vuul6x1npsLMDU5ASLOcHKB0uHe6uN4xwqz8ePx080uFV
LiN8xC/bmfQeeCsdFu77Piqcnff1JuvD/NPh4qzTr8zoPqh7NfOoEZX+737s
0BtyZ1ZuOrTZseriNMJHs6vvDjHNAFubpqdWEfZ9WhJ9tl4GLJjaVX2YcFLW
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
        
        "]]}}}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\:0412\:0440\:0435\:043c\:044f, \:043c\:0438\:043d\"", 
     TraditionalForm], 
    FormBox[
    "\"\:041f\:0440\:0438\:0437\:0430\:0431\:043e\:0439\:043d\:043e\:0435 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:0435, \:041c\:041f\:0430\"", 
     TraditionalForm]},
  AxesOrigin->{0, 1.5785530000000003`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4.799}, {1.62539, 2.56213}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7607864997662287`*^9, 3.7607869467132072`*^9, 3.760788424563975*^9, 
   3.760849122695242*^9, {3.7608513584256754`*^9, 3.7608513817412577`*^9}, 
   3.760854401506153*^9, 3.760864112938653*^9, 
   3.7608690100678153`*^9},ExpressionUUID->"302e98f1-d71e-441b-9c64-\
2cc551175f66"],

Cell[BoxData[
 OverlayBox[{
  TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{0, Small}]], 
         LineBox[{{31.91, 159.4}, {31.91, 10.}, {29.38, 10.}, {29.38, -10.}, {
          30.389999999999997`, -10.}, {30.389999999999997`, -20.8}, {
          32.22, -20.8}, {32.22, -26.2}, {28.37, -26.2}, {28.37, -71.2}, {
          28.669999999999998`, -71.2}, {
          28.669999999999998`, -162.9}}]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {28.309843750000002`, 0}, 
      PlotRange -> {{28.37, 32.22}, {-162.9, 159.4}}, PlotRangeClipping -> 
      True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      Full, Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {28.309843750000002`, 0}, AxesStyle -> GrayLevel[0, 0], 
      DisplayFunction :> Identity, Frame -> {{True, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {Tiny, Medium}, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{28.37, 32.22}, {-162.9, 159.4}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{
       "\"\:041d\:0430\:043f\:0440\:044f\:0436\:0435\:043d\:0438\:044f\"", 
        "\"\:041f\:043b\:043e\:0441\:043a\:0438\:0439 \
\:043c\:043e\:0434\:0443\:043b\:044c \:042e\:043d\:0433\:0430\"", 
        "\"\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\:0442 \
\:041a\:0430\:0440\:0442\:0435\:0440\:0430\""}, "LineLegend", 
       DisplayFunction -> (FormBox[
         FrameBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"\:041a\:0430\:0440\:0442\:0430 \:0441\:043b\:043e\:0451\
\:0432\"", {FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                  False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], RoundingRadius -> 5, StripOnInput -> False], 
         TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
              "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendFunction", "\[Rule]", 
              RowBox[{"(", 
                RowBox[{
                  FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False], 
                  "&"}], ")"}]}], ",", 
            
            RowBox[{"LegendLabel", "\[Rule]", 
              "\"\:041a\:0430\:0440\:0442\:0430 \
\:0441\:043b\:043e\:0451\:0432\""}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
       True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  GraphicsBox[{{}, {{{}, {}, {
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], Dashing[{Small, Small}], 
        LineBox[{{23.535001583782073`, 159.4}, {23.535001583782073`, 10.}, {
         23.535001583782073`, 10.}, {23.535001583782073`, -10.}, {
         23.535001583782073`, -10.}, {23.535001583782073`, -20.8}, {
         23.535001583782073`, -20.8}, {23.535001583782073`, -26.2}, {
         23.535001583782073`, -26.2}, {23.535001583782073`, -71.2}, {
         23.535001583782073`, -71.2}, {
         23.535001583782073`, -162.9}}]}}}}, {}, {}, {{}, {}}, {{}, {}}},
   AspectRatio->Full,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   AxesStyle->GrayLevel[0, 0],
   DisplayFunction->Identity,
   Frame->{{True, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{Tiny, Medium},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 47.070003167564145`}, {-162.9, 159.4}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}], 
  GraphicsBox[{{}, {{{}, {}, {
       {RGBColor[0.5, 0, 0.5], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], Dashing[{0, Small}], 
        LineBox[{{0., 159.4}, {0., 10.}, {0., 10.}, {0., -10.}, {0., -10.}, {
         0., -20.8}, {0., -20.8}, {0., -26.2}, {0., -26.2}, {0., -71.2}, {
         0., -71.2}, {0., -162.9}}]}}}}, {}, {}, {{}, {}}, {{}, {}}},
   AspectRatio->Full,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   AxesStyle->GrayLevel[0, 0],
   DisplayFunction->Identity,
   Frame->{{True, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{Tiny, Medium},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-1., 1.}, {-162.9, 159.4}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}]}]], "Output",
 CellChangeTimes->{
  3.7607864997662287`*^9, 3.7607869467132072`*^9, 3.760788424563975*^9, 
   3.760849122695242*^9, {3.7608513584256754`*^9, 3.7608513817412577`*^9}, 
   3.760854401506153*^9, 3.760864112938653*^9, 
   3.760869010237853*^9},ExpressionUUID->"ebe431c4-93c7-4655-aafa-\
9b9a6deb5023"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQvSy2z3+9Ybb9rJkgYOpwPqvRVi3ojP3ZMyBg7JAy
+U9H/MY79gxgYOQgKhMnMFHqub0xGBg4vFcoW3bh5weoeh2HO7tmL7d68h0q
r+ng/Ny0rHMVgwPEfFUHv4sTY/45czpAzFNymLUxw8r6Jq8DRL+MwxKzwqL9
zQJQ9aIObqqlTLNWCELleRy8T7Dbzi4VgvL/2Ddu0gyv+C4ENY+BgbdwTfdt
DWGY/P5575cf8xaH8XkOHL8+L1LogBDM/APbBJ4saJGEmSdzYBaH9Lw4TkGY
+w4Ev9hzTE+QD+b+A/1mfRHd/twOUP8duMqZoZSzgwOqX+eAT6dKlSQrG1Te
4MDrCbMfsv1hgppndIBhpe+cO/n/YOF7gCM065vD6o+w8D+wbhff1Skpz+zT
00DA/ECZuX/pCd8H0PC0PJDttYnP/fo7aHxYHwAAhxTEmA==
         
         "]]}}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.01388888888888889], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxdlk1IVFEUxwchU1JRQ2LKhUlKgoQpKqNZ18bvGR1zNJ38TKdJVBAblGg1
UotEscQ2akiLGPuQQqUICeauJhdGtRCRXBiIBkEWQRKIpPeeN4dzDoj+eHN/
93/OPN+7p9t7a26EmUymNwc/h79JCbcw/rzpOahw5I/Lh9UR4qzDGkeenDgo
F7KqJGTl22qnvllk5fMiK58FWRey8gWvU98IsvI5kZXPjKxqo436/MjK14Os
fFmM/7RSnw9ZrY9CVvtPtND9UpGVb6GZ+gSynn8T9bmQ9Xwbqc+LrAtZz+sa
9ZmR9TxcrH9kVbKB+uzIyrdWT30eZD2/q9TnQ9bzQ9bzq6O+VGQ9v1rqE8h6
fk7qcyHr+dVQnxdZF7Ke3xXqMyPr+VVTXxay7tfB+qti/VSy/HaW18byIes8
FWz/cuqzl1Gfp5TlK2H5ilm+IpbPyvJdZvmQdb5Clk+w/S4y/wXmy2frLayf
XOFvHnW8Pt8d0L5s8alrsCC1ZjmgfVnCPb53v3VuPaBXZYqExJbYsZPbAe3L
EDtJA/7P/37B59PF+uLUTN7mLlxPE9bt7IGhFyap/Smi6stY0741Umpfspic
68zLX4uWen2ieJrTdytwNxY+nyBKUvrDJp/FwfUoYVs6WjDVHw+8d2lwPq3+
9m68NPqK7psd/nr2uHE9ML0zE7SdMDhKfliddsXLeMMv38ZuPrlnNnyJcjLi
1HRLZJyRTzq/vw+ei4sx8ssHOaMNw45jEvqTK5GdyT3vImB9urQPnbljPhIO
1zPkj4dT38L3wsCXKU3PKx+v9+4b85URdV1/xcvfxvzlq8WYlUfurQB8P3Ig
19G/VLkB87TI7or5mNLVn/B95If6hu8/xHB/hBjuH3rdXBhiuP9CDPcn81up
b6GI7VdMfb4S6vOUUp+9jOUrZ/kqWD4by4cM//8sXyXLV8XyOdj+1dTvR4bn
F91vBFlXDfV5keH5SX0uJ8uPrErUsn6Q4fnO+kOG9wPrFxneL9Tnqae+NWR4
f1GfRIb3H/X5keH9SX0jyLoaqc+LDO9v6nM1Ud8ysirRTH0LyHC+oL4JZDif
UJ8PGc43rP82ur4HGc5P1LeBDOcv6nMiw/mN+oLIutqpz4IM50fqm0WG8yf1
JXVQnwsZzrfUt4wM52PqE275H3L8w8M=
         
         "]]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
    TraditionalForm],
  PlotRange->{{-100, 100}, {-27., 21.6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7607864997662287`*^9, 3.7607869467132072`*^9, 3.760788424563975*^9, 
   3.760849122695242*^9, {3.7608513584256754`*^9, 3.7608513817412577`*^9}, 
   3.760854401506153*^9, 3.760864112938653*^9, 
   3.760869010291867*^9},ExpressionUUID->"601f4b8d-796f-4c76-a238-\
1f6621625cb6"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"",FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
          "", Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], StripOnInput -> False, LineIndent -> 0], 
         StripOnInput -> False, FontFamily -> "Arial", Background -> 
         Automatic], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
       InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6297544181379376`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.7450916787049933`", ",", "1.7000000000000002`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8748460968429308`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9901833574099865`", ",", "3.4000000000000004`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.7607864895849547`*^9, 
  3.7607864906261826`*^9}},ExpressionUUID->"a7769b9f-372c-4fea-9038-\
cf2a26ffc08b"],

Cell[BoxData[
 TemplateBox[{"Null",FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          GraphicsBox[{{}, {}, 
            RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
             "], {{
               Rational[-15, 2], 
               Rational[-575, 2]}, {
               Rational[15, 2], 
               Rational[575, 2]}}], {Antialiasing -> False, 
             AbsoluteThickness[0.1], 
             Directive[
              Opacity[0.3], 
              GrayLevel[0]], 
             LineBox[
              NCache[{{
                 Rational[15, 2], 
                 Rational[-575, 2]}, {
                 Rational[-15, 2], 
                 Rational[-575, 2]}, {
                 Rational[-15, 2], 
                 Rational[575, 2]}, {
                 Rational[15, 2], 
                 Rational[575, 2]}, {
                 Rational[15, 2], 
                 Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
               287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
             CapForm[None], {}}, {Antialiasing -> False, 
             StyleBox[
              LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
              Directive[
               AbsoluteThickness[0.2], 
               Opacity[0.3], 
               GrayLevel[0]], StripOnInput -> False], 
             StyleBox[
              StyleBox[{{
                 StyleBox[
                  LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -138.28241914137175`}, 
                    Offset[{4., 0}, {7.5, -138.28241914137175`}]}, {{
                    7.5, -5.644569489257719}, 
                    Offset[{4., 0}, {7.5, -5.644569489257719}]}, {{7.5, 
                    143.57301136937042`}, 
                    Offset[{4., 0}, {7.5, 143.57301136937042`}]}, {{7.5, 
                    276.21086102148456`}, 
                    Offset[{4., 0}, {7.5, 276.21086102148456`}]}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], StripOnInput -> False]}, 
                StyleBox[
                 StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -138.28241914137175`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.7\"", 1.7000000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -5.644569489257719}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 143.57301136937042`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.4\"", 3.4000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 276.21086102148456`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                   Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                 StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
               False], 
              Directive[
               AbsoluteThickness[0.2], 
               Opacity[0.3], 
               GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
           Scaled[0.02], PlotRange -> All, Frame -> True, 
           FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
           Opacity[0], FrameTicksStyle -> Opacity[0], 
           ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> Left,
           AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
          ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
         False], {FontFamily -> "Arial"}, Background -> Automatic, 
        StripOnInput -> False], TraditionalForm]}, "BarLegend", 
     DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Function", "[", 
                RowBox[{"x", ",", 
                  RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
                RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"0.6297544181379376`", ",", "0.9`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.7450916787049933`", ",", "1.7000000000000002`"}],
                   "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.8748460968429308`", ",", "2.6`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.9901833574099865`", ",", "3.4000000000000004`"}],
                   "}"}]}], "}"}]}], ",", 
          RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
          RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
          RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7607846962979064`*^9, 3.760786500171319*^9, 3.7607869469912696`*^9, 
   3.760788424819032*^9, 3.760849122935295*^9, {3.7608513589367857`*^9, 
   3.7608513820603285`*^9}, 3.760854401782215*^9, 3.7608641132307186`*^9, 
   3.7608690104589057`*^9},ExpressionUUID->"ae23d6f5-fed7-4342-9c02-\
3d5b9a73554a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:0421\:043e\:0437\:0434\:0430\:0451\:043c GIF-\:0430\:043d\:0438\:043c\
\:0430\:0446\:0438\:044e", "Subsubtitle",
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, 
   3.750659590603606*^9, 
   3.750659634100629*^9},ExpressionUUID->"feb92d43-f673-4dd7-9b42-\
b50ab362b68f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"iterationStep", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "plotName", "=", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotDataList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"openingAtCheckStep", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "i", ",", "1", ",", "numberOfCheckSteps", ",", "iterationStep"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotList", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PlotMatrix", "[", 
      RowBox[{
       RowBox[{"plotDataList", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
       "plotName", "<>", 
        "\"\< \:043d\:0430 \:0448\:0430\:0433\:0435 \:043f\:0440\:043e\:0432\
\:0435\:0440\:043a\:0438 \:2116\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "iterationStep"}]}], 
         "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "plotDataList", "]"}], ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"folder", "<>", "\"\</opening.gif\>\""}], ",", "plotList"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.750657229716831*^9, 3.750657323541009*^9}, {
   3.750657442512285*^9, 3.7506577065181427`*^9}, 3.750657806502049*^9, {
   3.750657865720697*^9, 3.7506578660603857`*^9}, {3.750658171413033*^9, 
   3.750658171660262*^9}, 3.750659590604125*^9, 3.7506596341012383`*^9, {
   3.7592248138310814`*^9, 3.7592248170522895`*^9}, {3.7592248487311068`*^9, 
   3.7592248766307635`*^9}, {3.7592249197998433`*^9, 
   3.7592249455084496`*^9}},ExpressionUUID->"b0245563-8792-413f-a4c1-\
ff322b233949"],

Cell[BoxData[
 TemplateBox[{
  "Export","errelem",
   "\"The Export element \\!\\(\\*RowBox[{\\\"\\\\\\\"ImageList\\\\\\\"\\\"}]\
\\) contains a malformed data structure and could not be exported to \
\\!\\(\\*RowBox[{\\\"\\\\\\\"GIF\\\\\\\"\\\"}]\\) format.\"",2,48,1,
   23215746392214497822,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7607801366809754`*^9, 3.7607819378934135`*^9, 3.760784696636993*^9, 
   3.760786500282345*^9, 3.7607869470262766`*^9, 3.7607884248510313`*^9, 
   3.7608491229683037`*^9, {3.7608513590568156`*^9, 3.7608513823183875`*^9}, 
   3.7608544018212233`*^9, 3.7608641132697277`*^9, 
   3.760869010571929*^9},ExpressionUUID->"300d171b-96ce-4d99-b185-\
20848ec1deb0"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.750659652156084*^9, 3.750666699563397*^9, 3.750666774903749*^9, {
   3.759224797990833*^9, 3.7592248186298594`*^9}, 3.759224850386752*^9, {
   3.7592249324687567`*^9, 3.7592249472268243`*^9}, 3.7607801367149954`*^9, 
   3.760781937914418*^9, 3.760784696658987*^9, 3.7607865003113513`*^9, 
   3.760786947044281*^9, 3.7607884248710346`*^9, 3.760849122990307*^9, {
   3.7608513590728197`*^9, 3.7608513823413925`*^9}, 3.7608544018402276`*^9, 
   3.760864113293733*^9, 
   3.760869010591933*^9},ExpressionUUID->"c9f9e139-b993-4fb7-92e4-\
ebb912f77ccc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:042d\:043a\:0441\:043f\:0435\:0440\:0438\:043c\:0435\:043d\:0442\:0430\
\:043b\:044c\:043d\:0430\:044f \:0441\:0435\:043a\:0446\:0438\:044f!", \
"Subsubtitle",
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.750659590603606*^9, 
   3.750659634101563*^9}},ExpressionUUID->"190e1697-5378-40fd-b7b7-\
68e948097639"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"openingDouble", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", "\[IndentingNewLine]", 
   RowBox[{"i", "<", 
    RowBox[{"Length", "[", "opening", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"openingDouble", ",", 
        RowBox[{"{", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"j", "<", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}]}],
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{
        RowBox[{"openingDouble", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], ",", 
        
        RowBox[{
         RowBox[{"opening", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", 
           RowBox[{"opening", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"openingDouble", ",", 
        RowBox[{"{", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"j", "<", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}]}],
        "\[IndentingNewLine]", "]"}], ";"}], ".", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"openingDouble", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"opening", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
    ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDoubleMatrix", "[", 
  RowBox[{
  "openingDouble", ",", " ", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.750358232133493*^9, 3.750358247083275*^9}, {
   3.750358316158638*^9, 3.750358512340169*^9}, {3.7503585544026327`*^9, 
   3.750358555974053*^9}, {3.750358591934741*^9, 3.750358599614847*^9}, {
   3.750358635248437*^9, 3.750358637785039*^9}, {3.750358703052411*^9, 
   3.7503588070893993`*^9}, {3.75035885757069*^9, 3.75035888174489*^9}, {
   3.750358931136982*^9, 3.7503589382940197`*^9}, {3.750359001423706*^9, 
   3.750359052574259*^9}, {3.75035919521389*^9, 3.7503592947409153`*^9}, {
   3.7503595831699047`*^9, 3.750359627071444*^9}, {3.750359720953223*^9, 
   3.7503598303588943`*^9}, 3.750360044553823*^9, {3.7503602219784393`*^9, 
   3.750360333147932*^9}, 3.750360417313128*^9, {3.7576716605038176`*^9, 
   3.7576716619096375`*^9}, {3.757672101273732*^9, 3.757672128470461*^9}, 
   3.75844198944094*^9},ExpressionUUID->"af6ea415-d276-4505-81d8-\
a9c6f689f1a0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    RasterBox[CompressedData["
1:eJzs3AdQVtm27n3aQJuwVRQVE+bcBhQVwzKiYqJFUTG0EbNiaLTRNtGNWVHM
ObQ5Yc6KCW0VRTGiKDljQlFR29un7jnLW3fsUQV16377u6f+u+rUb5e76uVl
rTnHHOOZ1Ck7cGzXIdktLCyGfWdhMeKf//uP//4///PKQERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERE/O/g9Q2BFvuupmbaw18nds3VPiXTrv8yz7H+9ORM+2Vr
mWOHsmXeVocKHk3dnJRp90W0a3mtd+YNuDhxX0KFzHt2f4thC7Nl3v7T8t1q
kZqYaV0qV+ucO/7/nln9Pln9fbP6PLP6vrK6HrK63rK6nrO6X7K6H//d9QMR
EREREREREREREREREf89avfIg3LO3OKxPlnoXqD+/mb1koR5UhN27HyQIPTd
9vfE2qWl110K+1oOjxcGfL+rxsCEOKH31KaV20yWHmtWq+asalLXimU/7AiN
Fa5p0nNqB3+px+DF1YM7SzOqny49r7TUJS6u+/LXMcKU44dXPbgvLe8346Tn
Cemmdh1sXuyUphW2sfJaJnU+bn8gZrHUsf9PtfbOzbza52g/V/ue2u+lPQft
uWnPWXsv2nvU3ru2TrR1pa1Dbd1q61zbF9o+0vYdf++BiIiIiIiIiIiIiIj4
/41Wj+q8y//1ZaadcThwVud3mdfu/Iou4xIy76D3N6aOfpp5v+T7VMP7duZ1
v3Dk3ZbAzHu4nVvzewcyb+BB+1LP1mfepsF7N4TPy7y2R/f+3NYr82a3qF80
56DMa7XZ9eAZl8x7tstf33drmnkdthj5U2tmXqf+6RWHlM68Sb0dS6QVzLxp
E/Z8dMuRed1rNLdyTn+RaSOSr1Sok5R5Q7JFjv0lKvM69XAo0e5e5h20oPCa
sKuZ17vzhgVjT2fepMtT+tfYn3l/GxzertDWzBvWv6VLzb+kbp+zRe1bkiKc
UbCC05550k61HyUvLJkstPuw94d955KEtikXd3d7nyiM23Xy/NRF0mi3zsVd
C0hbLfq66f2JBKHj6te1LXtJf7v9LPhpUWmBpCIX9j6IF1oYVXaGb5fWsOr2
a9pEqXf74Q0iukgd6zr49PxRatt0ea+exaQh2fqPn51TWqNXk1lN/o4Tnsrl
HtEnPfNqn6P9XO17ar+X9hy056Y9Z+29aO9Re+/aOtHWlbYOtXWrrXNtX2j7
SNt32j7N6n7Paj3Jar3Kaj3Mar3Naj3P6nmR1fMoq+ddVs/TrJ7XWe0Hstpv
ZLWfyWq/lNV+LKv9Xlb7yaz2q1nth7Pab2e1n8/qvJDVeSSr886/ez5DRERE
REREREREzKxazulxeFAv5y/SakvfdD/2Rnp40MwVnslS24E9dkRGSuN61Qz7
+FjadM7AU54hUqfDK6ufvipNPxe0qOVZafM7726XOyh1mXWgapmt0kqVhl8d
vkqavi5P/Jn50uxl9168MEXq6DU354Ux0n2PPHKM7ydNjXv+1/nO0mM5e51K
dpQGPu4Z6Vxd6nKup/2colLffJG9xmeX2nUbviX76xfCgJxzhq4OkzY/vr1G
rcvShaNKDihzQFqt4tIcTVZLbZbm8mnoI83+ddp39UdLL52sv3tGP6nntJSN
P3WSfvGpHTW4mdTLf+K4LzWkPntiuwwoI20a6HZ+VSHpqynJLU5kly5sMaNg
3zepQpvvLKu2jpPOuz5/YcBDaVDM9rZlb0u9il/89d15qcvQom3HHpa+2jGq
Z4Pd0r4Rzk7p66TVClV167NEGh52qJKzjzRiexOPwROlFra2N94OlXr6vd9w
0F3qUbXXrmY/SWs/ONXpQUup25Uyq41R0uvHf3e9v0zqHb4tKmCu1DIlaFj3
36XZi65btMtKWj7Ks+y7/SlCr4ChAz61kKYu77e74e1kYd8XP8xZPVaaXvfC
jZeFpVa/7c9251aScN/DtYP9fpemu+wvsLuDdPSxwHIni0q3fr5fs/qrROGp
6sm1PG5J99VwPhlxStq83i67I9ukSQv/2Lh8vXR3+IA7r1dmXu1ztJ+rfU/t
99Keg/bctOesvRftPWrvXVsn2rrS1qG2brV1ru0LbR9p+07bp9q+1uqAVje0
OqPVJa2OaXVPq5NaXdXqsFa3tTqvnQvaOaKdO9o5pZ1r2jmonZvaOaudy9o5
rp37Wp+g9RVaH6L1LVqfo/VFWh+l9V1an6b1dVofqPWNWp+p9aVaH6v1vVqf
rPXVWh+u9e1an6/NBdococ0d2pyizTX8vQciIiIiIiIi4v+0VG+Lg2X/fplp
16z6y3ltWuat+araj21jMq/F+ro34u9lXnfXIbELzmdenxsXTlfdlXmdhpa5
eHdp5j3WbPmjD5Mzr+3MwnW6D8i8/WcXX3K6Q+aNG7H3RjaHzOubujYhe9nM
m9R49fevfsi8jtNTrx348iLT2meL6d7+ReaN2PbLT4efZt60vVfn97qReXe/
sKg370TmHbS4XcrcHZl3xLK1ubItz7xWDl02lJ4htck/07/mdGmBGjsCnMZI
rVPrB5UbKfWxHJe2vbfU4pPT8aXdpE6rjLE720g9Tk70H21Iw95+nri2qtTi
VfV9rctLC0wy3g0vIHUo/fG7yBzSU5bLa/2Rmips6u0QsSdSOuhkjtUXr0ut
qka5Vjwu3VrxdOd+W6QhTesNqOMnjQh5d9veS7r94rvwcj9Lfzv6MDBXG6lL
nv5XOtSS+vqtq1W6oNS78Wmb3p9ThHm+5PmhRoy01LYZs0fclQa9aJHSNVDq
1/rEgGIBUu/gMUUOrZNWWloxr898aVjdT0E3vKS//Wic6TVC6jKqd62VPaRW
M29uuOUsPRs840bnhlI73yLPW1ST/jb7UP8bxaSuzg3jn+WVnrI7GVLkQ7Iw
ovW9h3lTpccG1B3S+ZnU78DsutfuSC2b+iUNvCCd8MuYR2WPSJ2/piz/uFna
/4LXnEXLpeX9hl05+4c0/Wub02W9pWEDn/dYOlI6OluL5pP7Syvtapkw5Sep
3d4dwS9/kbqk9ru3YYB0UL4Zf5TtKY04eTQhoL50/fx5vbrfTxJGXAhI+rhJ
mufPHZfz1JJ6u1TI8cZC6rXo/vCXOxKFjl0+zrGaLnVZHXf+RUOpQ6KD5aLi
0vLN2qeeS0wQWr5OiuxyW9q8gUXqhR1ShxHVI/etkdr+Mu/4vt+lu3OMsWkw
XWrZ27lSyqTMq32O9nO176n9Xtpz0J6b9py196K9R+29a+tEW1faOlTXrbLO
tX2h7SNt32n7VNvXWh3Q6oZWZ7S6pNUxre5pdVKrq1od1uq2Vue1c0E7R7Rz
RzuntHNNOwe1c1M7Z7VzWTvHtXNf6xO0vkLrQ7S+RetztL5I66O0vkvr07S+
TusDtb5R6zO1vlTrY7W+V+uTtb5a68O1vl3r87W5QJsjtLlDm1O0uUabg7I6
T2V1XsvqPJjVeTOr82xW5+WszuNZnfezmidkNa/Iah6S1bwlq3lOVvOirOZR
Wc27spqnZTWvy2oemNW88d+djyIiIiIiIv6/qjZnNT1mMbDVZ+mxtL8+nXkt
dars3+5gotR1zFuL6c+kXnu6j7p6X+rcs2/uYUFS+0+De/mclG7asbLS1u3S
MKfrDQqulAYdrNT1s4/UxsZn0aLx0oX7Iyrm7Sv1aN7s+Y/tpZvyHGm0ta50
wpOq4z1tpanWu35rm1Pq2L9K+arJL4THJtQ0WtyVhiys2+jQcanftCu19myQ
zpvaM6r7LOmgfO1O5xoh3bq8wbGBrlLX+Hqtp7SQhnesO2pDNam3v++6eUWl
NUPCpr+2lDpMvDOw7ctUYfCXq8GNnkm9Nvf6a+tNaXrP5H7Fjknt3Jp2bLRD
usZt8U7flVLHLdfWN5klTYv+zmn0WKnT/PZPr/SRrqm7ZHxpZ+mmBjGLVjSQ
5nFoEHy0ktT5WVLz6gWk3kM29Iv5TnrJ93JS1Vcpwjw7k7zGPpPWPFex/tXb
Uos7/X9/c0HqP67XnnqHpF5FurbYulk6qHnY+zeLpevHDCw19jdpgZe/zG48
Sho6fm7/eu5Sn7YV3wa3ldpWunAvpa7Urffi5tNKSyP8+5Zoklsa5O/wx+a0
ZKHVwh8K7n8urW1zp271a1LLdUtjpxyUuk6buN5nrbTpUDf7GB+p98WlGRM9
peH1bl9v0kO6Iqp01eytpYfnjtnlWVfqHF6r97NS0rRKr88H5ZUGndwRGPsu
SVitbr/2m+Ok4Xftcybdkbp55M45M1Aavqli7qX7pZ1iW7hXWSOtVDo9Zf0C
aYHJu+/f9pLaebVNqOEhve4d8yjKVZrWaojlsFb/Qru44Pc1pcFNW/d2LCN1
7bHlV5eC0sMvdk/z/DtRGDTrcOHBKdJBX+vYzAuXHp4csNPntjTIeUu35+ek
leyWjR26T3p2es31ezZKX8UG7WznJz0761r2qz7ShWWu92szSWrnPnP22sFS
l7UNFzm7SDf1GTM/porUreifuytml15qdH3z+dAEYSmPV7HPNksHVRp9PmSM
tNPFxNDHraW+462uFbeT7q1RJ/fzD/FC/6kzu0x7LPW6eWd5qVNS35ETXm39
U2pfsEhVn4VS687NR7z9TZpv5sh+EZ7SjlZdOjcdJfVbXbfZmqGZV/sc7edq
31P7vbTnoD037Tlr70V7j9p719aJtq60daitW22da/tC20favtP2qbqvlTqg
1Q2tzmh1SatjWt3T6qRWV7U6rNVtrc5r54J2jmjnjnZOaeeadg6q56Zyzmrn
snaOa+e+1idofYXWh2h9i9bnaH2R1kdpfZfWp2l9ndYHan2j1mdqfanWx2p9
r9Yna3211odrfbvW52tzgTZHaHOHNqdoc402B2lzkzZnaXOZNsdpc582J2pz
pTaHanOrNudqc7E2R2tztzana3O9lgNouYGWM2i5hJZjaLmHlpNouYqWw2i5
jZbzaLmQliNpuZOWU2m5lpaDabmZlrNpuZyW42m5n5YTarkif++BiIiIiP83
vNTW7YnX25eZ1n5OEfum1zOvTd19wR83ZV7XG+7t907NvJc+dr3UvnfmdRtY
a8jNZpl3xOgVdQqVz7z285fU25c789rlHnO+4csXmdblXIUqle5k3vTY312/
O5Z5J+Spt3n0msy7vm3PHAWmZMFTLR6uGph5Zxxv2v5zh8wb2G/Gj5b1Mq/F
2o3X3peUhrzZmCe1hLTV6ByjLXJJHdcEP1n7nbT/vKGOAxJShU6nriW+j5Jm
/HJiZHDQvzB/4JhBZ6TV9nf70XeT1KvV7Ddj/KXrE0fsaD5O6tXvav6DvaWb
kveUO+Yo7bQkt1dMWWm1jNBcmy2kSffaL0qLTRHuzrY4T6GbUvd2+e+uOSy1
i1wwfOhKqcvrJTau06VbLR5WXz1QGh4x/P3hTtKQo11ed6sjtTKMlP22Utdf
rnT+7WuycOHDi99PTJTOmOdR/9hd6eh7p+7dOif1KN15VN5tUt8TrbM9XSxN
b986X+hkqUvS/VUFhklfZTvf5HUnqa1FwWqFDOmp5se6tqkqdfzlZbPLxaVb
d5X3fptDmu4yskCnN0lC17oPsqVGSM/WrtoiX4g0ZPvr1u3OSB+02PY57y5p
3+atu3VYLm0+bMS5xJlSh4nu69qPlqb5LW+Y0UcaWnDX/vetpa8ubrYoVkf6
4I1FyfYlpQXKzm1xJbc0e85Dh2a/ThQGzbkyf8ZzqeWeARta3JB6TP1ycf/J
f+HCgVvubpGmXan9m99CqWto3oGvJ0otgmJ+2DZQOrqzY9j6DtK0kE+lLtaX
2o3t6pqvnNStd72eq3NLg6Zb1/30LkFo+aTLx/lR0kEjz30qd11qWT7/jjFH
pKNPnk49sUHqUuC3/K5zpT53bJ4MGPcvdAlu4dVfGpFc5Yp1R6nb9L8v73aU
Oll4bvKuLrVttsD6RDGp+2mP0Gs5pHZ/2x6+9DZeaJ/4xyiXGOmCpHIvHt+V
On5dvcwqUBp0wTam0UGpU9tVQ6dvkI4amj7oxSJp4Jc3R/tOkdrP/zT6wwjp
9Z0vvDv1kGavMdr9ppPUvnylAtftpTOyFZv8sIz01fRW2XrklwamPE3u+CVO
aDF9ZDP3eKl9kdGnpz+VBuyKiTx7RdoqZm2ewoelbkXP9967Vhp6+e25xr9K
7W9nlGjXV3oz3O7Xh3WlZyqvvRZRTNrqetHTLVNjhc1tyv3Z/67UJriN18c9
Uuvcd++fWiHd3b3cvpqTpQsa5OiVY7g03+tt1V90lNbu9abx6hbSsDmlLvSs
L7U+MH/Lq7pSy4Zjy5etlXm1z9F+rvY9td9Lew7ac9Oes/ZetPeovXdtnWjr
SluH2rrV1rm2L7R9pO07bZ9q+1qrA1rd0OqMVpe0OqbVPa1OanVVq8Na3dbq
vHYuaOeIdu5o55R2rmnnoHZuauesdi5r57h27mt9gtZXqH2I0rdofY7WF2l9
lNZ3aX2a1tdpfaDWN2p9ptaXan2s1vdqfbLWV2t9uNa3a32+Nhdoc4Q2d2hz
ijbXaHOQNjdpc5Y2l2lznDb3aXOiNldqc6g2t2pzrjYXa3O0Nndrc7o212s5
gJYbaDmDlktoOYaWe2g5iZaraDmMlttoOY+WC2k5kpY7qTmVkmtpOZiWm2k5
m5bLaTmelvtpOaGWK2o5ZFbzzKzmpVnNY7Oa92Y1T85qXp3VPDyreXtW8/ys
3hdk9T4iq/cdWb1Pyep9TVbvg7J63/Tvvh9DRET876B2zsbN2ftoWZLU5+jI
FS5XpP0vVxs9dYc0xPXi4vu/S90e9xqya7C075DvK+5uJb2UdMSyawVpRt59
l5taSks12HZ7f+wL4eizM3teuCDt69zvfI110lK/XTk/20s6YnmNdtN7SPNc
rRxboZE07VO51+nFpccWfi2yMCNVuD3v003FIqShgUtzW16Ueoxtv2zNNqnT
n7umVJ4tbXo7t02tkVLXjBMt3naSlio37O8FdaQZvRe8yWYt/TIzoOOYjynC
NZ9Wf+nyXGrdz2dbxnXp7h7Td9Y5Kl3YbYrt8g3S2u/OlnWaIy2/2mJV+XHS
oFtlup3pLbXMa7zY11rqsXjreqcfpdZFc53JW1Q6L8+WuV8+Jwut3zbOMyJW
2nxj9QEDgqVu3UrkfHZImppyIG7HKmnInNYNNvwmjbOqsuLwIOn61XlDy7aT
uuZ7NeZSTWme6ffyDLGWTgjeUPHchyShd7nhpT2fSue57s99+oK01PK0MjFb
pP7Vxrf7fbY0/a9XZ3cNlzpE17f7xVka9s77z/ga0vRj/XNMKyJNmu/0d+mP
iUKnEzeth0VIN8V0rXrwqnTFynS3tADpg05r0gaslvosq1ly/AxpxMPA+92H
SS08Aj3tukrLvz2fN7mxdN7XnWnFK0oXFlx6cnM+qV+HBjmmfkgQRsx5enZW
tDTuUoGHeYOllfK12et0WGr194G/Lq+XLky3vbLWVzphRvTAqNHSNSl7iq/u
Iw187dylTlvp7sTEa0XrS7O/fHytdDmp/3fXf3+YV+r4S3iz8u/jhX6xr+a2
jJbalHTxuXlT+rnDgQ1fjkuPlXvkmn+rNI/Fd/GTFkjXVFw/bMgk6aCejbbn
+Flq47HB5nO7f+Gk7Oll6kprzHw2sputNG32yfF9skudbX+YF5YYJ/TYODh2
e6g0ovnpuaXOS9MTCuZL3Sm9bvn6+/QV0kr1Q34MnyHtv79ZlaZjpGsq7yu7
vrc0KMB9b/320gXNcxWpXF/q+HrzsR5lpXGbG/ecYyX1b77SueuHWOHhW28K
NouXNncbfMPjgbTJh/uf35yT+o0MGDttn/Rmwrxai1dLp4a9C5o4W1rjZv9+
7r9IK8U8nHBqgNQ9d5c2N52lTebcTDrRSGr3vbPftirSwE1OP7UoLK1Ws5Vb
9exSB0eHhlvSYoTbm1dtEhgr9WoWddvmjjRPrbU7Tp+X1tgVdDH/AekD+ze5
mq+RLjg6o/bYOVJ/xx+uXv9FeumG77SnP0ub9//7T9v20rTVZe/lrS19GtH6
/H5r6at4532LPkQLXd645Fn7VFrN6cb2qoFSyzVtWp3YKnVJ7LI22xxpwI/u
26+OkU7oG9f+YR+p7+LxfaydpZumdbu8toF0Rr7a9zo2+Wbz1OMXFlSMNj7u
jt6c0eabc6dXs8pV9J+f037l2J1dvhlacH1Pn1zRRmKZqmViun6zrEvLO7uy
RxuD0k/dKuP2zZGL4tuH/B2l/rv2OdrP1b6n9ntpz0F7btpz1t6L9h61966t
E21daetQW7faOtf2hbaPtH2n7VNtX2t1QKsbWp3R6pJWx7S6p9VJra5qdVir
21qd184F7RzRzh3tnNLONe0c1M5N7ZzVzmXtHNfOfa1P0PoKrQ/R+hatz9H6
Iq2P0vourU/T+jqtD9T6Rq3P1PpSrY/V+l6tT9b6aq0P1/p2rc/X5gJtjtDm
Dm1O0eYabQ7S5iZtztLmMm2O0+Y+bU7U5kptDtXmVm3O1eZibY7W5m5tTtfm
ei0H0HIDLWfQcgktx9ByDy0n0XIVLYfRchst59FyIS1H0nInLafSci0tB9Ny
My1n03I5NcdTcj8tJ9RyRS2H1HJLLefUclEtR9VyVy2n1XJdLQfWcmMtZ9Zy
aS3H1nJvLSfXcnUth9dyey3n1+4FtHsE7d5Bu6fQ7jW0exDt3kS7Z9HuZbR7
HO3eR7sn0u6V+HsPRET8PzEjIneJFudeZFrLc519ap9MzbR5fnVLOVs98+6e
cqn6zNCUTBtSboPNL2szb22HJ3P7Ds+8qaWmv6jcRLqw8/3AoQ5Svwl2Hfxy
SKPHPU8PT0oWhtd85G2ckq4PHJvvygpp2M1yfhWHSj2Gh3jnaCkN91909WVR
qcNN30WF3iYJLVofXbn0htT27JLBabulNs/6hoz/TRr08rJ3wf7S1BwPKrjY
/wtr3YleZyMt0PVmWr/kRKF10M46Q0Kl2Vf1neS3X2rlUPih0wqp/YKuW3t7
Sl/tOjTzYA/pqUXOi1/aSy+t+jj4Q2lp8MkCz376kiD8cqPehkMJ0lYuQRMq
XJb6Bx04+ni3NL1pZLWgedJKzcLzuk2Qevverzm4m3SNTbE8DVpKB4V16re2
svRV8dFDT/7wL9xTzf/Em3ihR6XF7248kzax92ryNlBazabA8+/3SMN2tJru
OV9q295+btQvUku/nLUPuEqDCq+ZNKaZNE+Bo0WLlZSWX77Kq2Y26V67bgVP
P48TBi1oeDv7ValjyTdluu+W2rqf+SHEX+qxakr5OpOkm44GThw3QOqdu3FB
izZSj0Un81+sKe2z9e3sAYWkgw40+nFKeqzwVLtGVcLDpZesy9z/cEnqbL94
RPVd0lYeRfoFL5Ja5900s/1EaZ5zrQ7M7yt1L79k2Mym0hpuFd77VpWmDXpW
q2E+6YLI8I0VMmKErnv2Vt8bLR1xePmf+4OlHaeVfXThqPTwwaDWrbZK7eYO
uvDHfOm8sys/H/WS1r6ZuuHXvtIaR3qOHe8sTSk3+GNGXeml+TVa/FFOmrLM
2Dclt/TSimcT4t9GC9NabW4XGSH93GbJ49O3pBlvv167dFS6aZi1zw+bpc55
H11KmSO1b9zgeamJ0jO3t7ldHCAN23irpndnae3RjTvsqifdHrpo9W2nb/pe
3LX6WpFowyfP5A+ufb/Z+FWHvNneRhmlLKzfzxkfbXp/+qCFde9FGaudtk8Y
PDvatPgK366JR6IMq043quRfG206Ot/tiyNWRhmplwK6Wh2INi0Vlp591K9R
hl3L3h6jL0ebhpScFNe7V5ThU6XRJ5+H0aaNW1X7/lSTKGP0jKjJR1KjTfsa
e53HlYgyclsfvVf772jTcYNeBR7L9s/3fHE/41bBGNPitudnt4+NNKzbry7f
qlKM6aBCa5zXBkUaaVeqhfdtHGNq/dCol7Y90vAoUqfgBdcY07ifHTz6zYo0
Gi3w8a3iEWO6a5+jwyWPSMMz942ROafEmD4a1+XZpLaRRvvhdd4dmhdjWjCq
vl9arUjD7svJWXc3x5i65Ehs3Noq0jg8sl/HU4djTCf0G79w2JsIw6JalZKV
r8V888Kl7ldCI4xKG4+l3XkcY+pUcEyhNicjjFcDL33M+yLGdFWye+4XayKM
1DcJ7/b+HWO63r/c4s8zIwyXhY6P9xeNNc1Vo8qpX/v88zkbbge8qxJrumrJ
Na/FLSMM3zyFh4Y3iTV1eDUg9nCFCKO/5frk2R1iTT29lpU+kj/in/+9Zqke
P8ea9qnltTMj8rlhOSYgV7NxsaYpR1/Ettn73PBfH3+/l0+sqVPl9tPe/PLc
CCqavP/a0ljTvSeapW1r+9xwKu/9W/KfsaY1ViyZ3bTgcyO05Oxfgw/Fmvru
GuG/Mv6ZcepiqWr9/qnr/2Xo8e0zY48+M1zODT6x/3GsaYErdx6kjX9mOK7s
V8gqJdbU1THm2qPGzwybUvbvT36ONT2z08P2bu5nhme/9Tl7FY4zDYip/PLt
xXDDNTr/mVkV4kwt3UJvTFoabuSpEnDhcoM40+jZL08d7BluLPRvuNa3c5yp
exu3H0cVDje+LCv8cuU/5+R/mafFxboNnzw1vvR47eI9Jc40z4fqVksWPjXK
d33mGvDPOfxfrsg9JMfL1k+NS20fpW89EGd6rMqkEoVfPzEWWjXLPzUoztT9
YZv78/c+MSzOXoooHhX3zb+O9D3U64lhHX980rC3caZBzo9WBZV7Yngv2xfw
ukC8qX/L96nVgsOM0Gd/n/2uTLyp76DsQRlbwozUVeMLnnaIN3Wsv/PGrd5h
RnTKzsGhLeJN3RrlvPuHY5ixNS4ozdo93tSm454Kl18/NgImBeef8XO86atV
K0OnRz42rO1mVj3sEW8atHGqT9yNx0b2uelrJoyIN00fXLLWtsDHRs0+c57M
GhNv6p3sMXrSEf3ftc/Rfq72PbXfS3sO2nPTnrP2XrT3qL13bZ1o60pbh9q6
1da5ti+0faTtO22favtaqwNa3dDqjFaXtDqm1T2tTmp1VavDWt3W6rx2Lmjn
iHbuaOeUdq5p56B2bmrnrHYua+e4du5rfYLWV2h9iNa3aH2O1hdpfZTWd2l9
mtbXaX2g1jdqfabWl2p9rNb3an2y1ldrfbjWt2t9vjYXaHOENneoc4o21yhz
kDY3aXOWNpdpc5w292lzojZXanOoNrdqc642F2tztDZ3a3O6NtdrOYCWG2g5
g5ZLaDmGlntoOYmWq2g5jJbbaDmPlgtpOZKWO2k5lZZraTmYlptpOZuWy2k5
npb7aTmhlitqOaSWW2o5p5aLajmqlrtqOa2W62o5sJYbazmzlktrObaWe2s5
uZarazm8lttrOb92L6DdI2j3Dto9hXavod2DaPcm2j2Ldi+j3eNo9z7aPZF2
r6TdQ2X1Piur92VZvY/L6n1fVu8Ts3pf+e++X0VE/P+LWp1Mu2DtMGtqqtB7
Uc8J/lNShKmN1rsnzEoWrt/2Z+8OuaVxRfc6fr8oSehQtHjeDQ5Sm89/DLoT
myjctK6/56gD0k7dGvs2myAN7Dt57+ZW0jX9j77dU0Qa2qDXj6tSEoQ1K33x
PH1WGt223YLjC6T9+/gnf/ez1P67BR416knTDvz+41NLqfvOBsXqPo0X9t+R
9DzigHTCo515Kv4uDbQZ+tq2u/TS2uXHOlaVVrO9vL7i1zhhSk2/Tmn3pEEN
+gQ03id1LTH68fMF0qk5p0U8HSHd/nlyp77O0lEZE1Y5VJF6Xqyy5GlOabXZ
4bZuMbHCww9K5C4UKB1RyL3vpU1S/1evF+ycJg28NffMwj7S7F82vV7VQFqp
8IlSo4tJC0xs/2P65xhhRmhYs+mR0nzt8rUxLko77mx68O0Oafak+u92zZOO
qvLj9bpjpJ4fB4W1c5GuO7bapVsDqUXLHhsySkgPhxTuHfw1Wrgu9FM3zxjp
g8dRZ41r0nUDbAqW3yMNimrvu2+x1LtkyXHXPKVuLV9ceOQm9aqUu1cHR6l9
95arujj/L85Yt3ZOgWhjdLxvzE9Dvhn+Z/2qOROijLSpNzbOmB5t6n+5c4Hz
gVHGjNSCXWqtizYNLDEk98nlUf/MAT1XJRyONq3efUqJ8uOjjPa1VxfpfSfa
dEmDNT+/bxNlrP7w+HnXlGjT4nkbBfiU+udzTv/c8VO2GNPqHp5Wsz9FGmnj
Yj+/Lhljan1/R47l9yKNTv13v5n2z3v7LxeOtVh2YW+k4dtg7PN7PWJMj9V4
HNB8aqTht3Ls97bjY0x3rnv09lG3SKN8Lk/3pnNiTG+k9fiw1T7SsIj6Gnfw
z5hv1pxR8V2uSGPQzcUbcpyNMR3ZqUqhX2MijJo/5uwVeT/G9Kzj5Iya5yMM
K1/voIavY0xTHdo9qLYiwqjduOYf2/PEmjas3KShpWeEUTz6+eyBlWNNe1Wv
XS+ldYTxOLai9+LmsaaNKl+9VqVMhJGYPPJJQs9Y01ZNzoxu8+658bj0+oh6
nrGmE7ZW6TfgwHPDq/Mtr25zYk3XFV6+NtvQ50awX8uvb9bFmq7u1DBb5arP
jUqhx2YvORhrusD3ybAOyc+MTTlte94LijW1e3nw/aw9z4z+tr+1mB0daxoR
MKfxiO7PjIVlKje69T7W1H3zvG7Liz0zOuW5c+JgoThT28gF95OuhhsTtl2Z
sr9ynOn2Hw4seDsn3DjmcOp1RSPO9GnvO9UWtQw3BrXYUcbRNc70QeM8m3+y
/Odz2iwb+25YnOn2Wq0Olrny1Ni+5M6ZLdPiTPN1mP9X0d+fGq9C85+9viLO
tPbvodc2Nn5q1Ky7ae7EvXGm3sPLDNqS8cT4zbdO7tWX40znjRoZU+/QE+Ns
6qgiLcLiTK87nDzfZNwTo1PPnX5FXsaZ2r637Hy+7hPDel2j2N55402Dqru6
pISHGS4Z1w/mLBtvWqDgxqQX68IMf/t+42s1ijd1GhK7c1y3MMOj6+tT73rE
m97MVeN26Q+PDf8FYXO2j443dXL3HJLv+GPDPfhSvYCZ8aZpK48MeOn92PAt
0KPlzyvjTUfdymgY1eix4eGSFBG5L970Zv4Wfd3THxkZl26vPXIx3tT6iF+N
qOOPjOb1jsa7P4r/5qCIdi+9HhnBlv5RHq/iTdckO/W88eMjwz/Oc3WFnAmm
Th332S999dBwGttqZ4n/+P/v/p/WOFT/+33HHxpWL4qMWFgzwTSs/rkLPSY9
NKx7PT77vGmCadDbCUH9nR4artvXVdvSPcHU0qrajOJfHxibcm/98MPwBFO7
aBubkMsP/ul3dq3dOCPBNCIpe82y0x4Y+26/sn+/MsH0o1/NwbYNHxghbg09
eu1OMPX75BacZvHACP7uwucDpxNMV2ecyf3q5n2j+br2w6rcSfhm9fJXfRfc
N6oNsLZ5EZ1g6vP0ytn63e4b1pXCLx1OTzANWjjsSEyJ+4blg8Ra0T8kmqb+
1tLTLeSe4b47vf+nMommaRYlw6023TPierfrVM8+0bRTSqVigzzuGaGWa3oX
bpdo6ptcJ/Vi5XuG7dhnW273STQ9fGhw0SWJoUanyHINCoxNNC3eZ6X77UOh
huetww/zzko0DVgWM/npr6FGqxOtcz9Znmjq8LBOzJhmoUZo/JQH6TsSTX3b
LZhaIleo4WV12G3hmUTT9Q/jPvW4ftdwK9SybY+QRNMv1xpVy1h017Are+f3
7ZGJppvWLRiXr/ddI/rA0BoWHxJN3V5d8/5a9K7RvM3fBw/lS/pm7ZxJ8Y/v
GN5lP3g3LZ1k6r+26OK22+4Y1VJfF0uyTzL1aVjtaIvBd4zQOn1WHHVOMvUd
kdzkeZk7RvjYoPpVBiWZDg/Y22/2gxCj9umhxS9NTDL1vHXt8LHNIYbzx1wt
9s5NMi1fOLbJp4Ehxr7HMc2+25Zk+nH8T60+Fwgxgh8Glo87kWRa97V31bW7
bxveUft+yriZZFrpYEqRcnVvG6nP11zqE5NkOj6w34jQbbeMrQcsqpz6kGRa
I+rTD1ur3zLOTvbYfy5/sunS6qsTZ+8INpyWutvWqphs6r40YkCsXbARsqez
78bGyaZ2HyuHtVxz07C22BRRr22y6YKvxpmL3W4aDk1f1/HvmWx6yq/nvQUp
N4yIhZVtpg9ONg3cW2hKzm03DN9nfTNGeCabhl27WXZa3xtGn4GDe1X8Ndn0
7sFt8WWq3jBmJI6onG9msqnF7GnWxz9eN/L0ivCq6JNsGpR41qFM6nVj97nu
v56cnWxqOedL5R139H/XPkf7udr31H4v7Tloz017ztp70d6j9t61daKtK20d
autWW+favtD2kbbvtH2q7WutDmh1Q6szWl3S6phW97Q6qdVVrQ5rdVur89q5
oJ0j2rmjnVPauaadg9q5qZ2z2rmsnePaua/1CVpfofUhWt+i9TlaX6T1UVrf
pfVpWl+n9YFa36j1mWpfqvSxWt+r9claX6314VrfrvX52lygzRHa3KHNKdpc
o81B2tykzVnaXKbNcdrcp82J2lypzaHq3KrMudpcrM3R2tytzenaXK/lAFpu
oOUMWi6h5Rha7qHlJFquouUwWm6j5TxaLqTlSFrupOVUWq6l5WBabqblbGou
p+R4Wu6n5YRarqjlkFpuqeWcWi6q5aha7qrltFquq+XAWm6s5cxaLq3l2Fru
reXkWq6u5fBabq/l/Nq9gHaPoN07aPcU2r2Gdg+i3Zto9yzavYx2j6Pd+2j3
RNq9knYPpd1bafdc2r2Ydo+m3btp93TavZ52D6jdG2r3jNq9JH/vgYj/r9tp
R9G1Pp4vMm3fxtnsjQWpmTbM6Yehvf9KEQY/KTZ3w5pk6bG2+2LfJwntOiyY
nz2ntHZG/dD1vonC62OblvXNI/2tecGrl3cmCMsXmzbIqbfU4uu6mWsLSMtv
nzRq8T/z+f+uQ86fl35YIc0ouK7yHA/p9o72PqUrSY81eOhW5EOcMGX9h25r
A6VOa1vt2b9Kmu9dQqfOHtLo1ZHXJjf+F46YdWJjXmlAn/qX10XFCn227Rzh
e0C64oHH8us+0sDRj4Ped5F6vfy+1JcKUpfUXzxD38cIt8a12Nn0nrT2rC87
G+2RRkzN/6TwH1K7Cmc21uotXVH6+JSnjaTuNjuWPvlB6nWvd7PPL6OFN4c9
dV9+Q3rmoO3IDzulE7pOPVd3hjSiUOHv5wyRukV+HnrVkDYd17XF+9bfrOiW
o/TCYtFGq1IJx4cP/2aJe+VHRUZGGVan3Boe+SPaNDXhtz3jjkcZrfbaln+9
Ndp07ZceHWzmRRkebRIfRZ2PNo0ruuVU9f5RxqbC82MaR0SbFhhQq+r2WlGG
Z/TSG4M/Rps+2r31VkLuKONwyzEN1heLMU1bG1aj8JN/5u4/Gl5YUifG9FiD
6v22HY00nGK63bzfM8Z0xa4Znc57Rxr2fVam9p4QY3r43boS6V0jDddzf/of
Xxxj6hM1Z8uoKpFG8JGzp0/vjfmm5yCPuM8RRvP5Rf1+vRFjanfg6Y6/bkUY
NnlibF/GxZg+e7Wrx+ptEYZls6iwqzliTdO37G1wb3KEcfjLD4W6VYw1nZA9
Iea7dhFGxORcF1e2iTUNcE7rs65ohBG4LLVaxYGx32zRYLrf4+eGh1c9y1kz
Y01vrhuY+uuU54bjD7/WDl8Ta+p6d9mYYbWeG9bz+7tuPR5rGtTvWU6bx8+M
TZ+2Z+t6L9bUzirvh9w+zwzHBtUDV72JNXV1n3a+fpVnhuXLkT8fKhhnmlL3
TGTC9XCjr1N4Z68acaZJNYZZr/cON+KSB95b9M989l92bPJwlqtduOE7xTp3
4pA401ELr8S0vvXU8PN4tLj9zDhTl5teLuWnPjVKtbANCd4aZ7q7ycHFKwo/
Naz32LZZdTrONOjvA7UbBD8xggquqtXwYZzp3usNxvXwfmIsfFc5d93Xcabu
ZebEDK/xxJiwecGP1azjTbeXcJ84MyjMqGaVzWHBf/zd2X/q8+hj394+YUZg
2Q+dmnWI/+aaojZtSocZ2//a7ZIxNN4039avVgWvPTY6NZ13L2RWvKltuwGz
Fk56bGS0D7H2WR1val1u8WUv+8eG/ccXHUoeiTf1KGxfck/0I8Ozll3gsuvx
pgHjNp5vsemREfdp+rS/YuNNO+ab8fvWzo+MrQ3eVvnhc7ypTa/yf9zN+8jw
Ldli97LCCaajdjf5ruXFh4Zllz+9H1ZNME0pZO3366yHhluRBfZ1WiaYfj7f
e8ioRg8NizwOFmvcE74Z1fdrnVcPjFM78x/8a3yCaWjOeylbdjwwdjtkP1F4
foJp9j7pDy/0e2BYTAn56actCd9cvChPvuIPjP6zzhZodDzBNGLy1eBuYfeN
vi7Vr1qEJJgm5p+2+8vi+0ba8mEO3eMTTCs1C+pj4XzfuPTgVlD/vxNMj03x
3xOe477hXaH/sBrFEk39lz4P8j5+z6h569wf6bUSTX9dfmlMSc97xuj6GUs2
tEk0PflzQecKte4Zl8q4XvAekGh6bJPlmcVPQo1OM2M+u3glmhaf2jW31fpQ
I+DsQq8/FyeavgpyW1fop1DD74tdkcrbE01dvl8fOM8q1EhaXGzx0YuJpq1c
jnV9fvyuERT03YtGjxNN9+3JqN914l3D96+2ER5vEk1Hb63y840qd40RuZ9M
S8yVZHopeoxPq9g7xqCZl/Z+LZtk+mDK0Y8Wa+4YgfE799g5Jn2zXc4v63+6
Y9h9V9vJr3uS6abPY2t2+RpiZDywCrg2KsnUesqDl9tOhhj+1+v0LemTZOq0
aUTCbq8QI7RhjrcH1iWZ+nZPK/+qaojh+P2ljGlHkky33xtdxvLKbcNyiO/S
MteSTMM2P/Zr2eW2Ma9d3dRCz5JMgzre9Vx045bhu7Nhx25vkkzD8u11sOx6
y0idV/nr6f+Y+//T8ecK5Vx1Jdhw/HvMSuuyyabb83hMmNco2HCyaF/3jGOy
qfvf7e+u2HjT2PrnnaSTnZJNa1Swmf5nzZuG5V+rljccmGwa1n7ktL2HbhjH
Zgyc3XFysumpTwGh9X68YdjuDTxzzC/Z1OP9FP/ja68bM7yCN7Xfmmxq0ahW
Y6ca143tq2w/B5xKNrUd1b9o2Ma/jNrOoxISg5NNI1p6Lfy9xl+GU/fdHjkj
k03dLbKten7ymmFz68WjDa+TTb2rD01ycrtmBMwqkz4vd4ppxMuWjc8FXTV8
RwVUdi+VYho2MbxgdJerRsdDDzserJtiWvfu67qPbgcZXgn5P1RslWLquHB7
rZKjgwyPOWGrR/ZMMV0THDHYO/WKEec/fNiiESmma+b4Ltw144qx1aNO8fUz
UkxrrHo47KfPl4112a5N3emfYtr1VRdrq3mXDb/HsbtGbE8x3RS3LseM4peN
tM3PHyWdSTHtWO9i0rSll4ywWj0+2d9NMY2LeFviWqFLxuhpF678HpdiOjH3
pL7Rqy4ao9esKFHwU4rpxAGT3VeXumg43m9wL7hAqul2i4OWNddeMNK+9nes
VinVtKPFqc3ZSlwwqr1tcnduk1RTy7ZLC11ZFmhkzN28oI1rqmmlyw5H+uUL
NOy9F7VMH51quqpN18iJj84ZW3fmGuY7M9W0Z7FVZQ6nnjW2TxnTuMDyVNN6
9e46NM1+1oj4dcbw6TtSTWe0z7D6vtIZo/mOiWMzTqSaWlSdE9Sy22ljxs+f
Z9n8lWpq4Vv96eulp4zmWzsdCn6UamrRq8+fvR+cNLwP/N7zU1SqqUvQ1ccN
+pz8p985vcf6RarpqgeN06wfnjCcxjXstPJtqmlAgPuAhDknDNt3zfb+9CXV
NGRWvtTqdieM2p23Djn23QvTwO49m0xIPm6cOlvs6O3sL0xdSjyc1equ/u/a
52g/V/ue2u+lPQftuanPWXkv2nvU3ru2TrR1pa1Dbd1q61zbF9o+0vadtk+1
fa3VAa1uaHVGq0taHdPqnlYntbqq1WGtbmt1XjsXtHNEO3e0c0o717RzUDs3
tXNWO5e1c1w797U+QesrtD5E61u0Pkfri7Q+Suu7tD5N6+u0PlDrG7U+U+tL
tT5W63u1Plnrq7U+XOvbtT5fmwu0OUKbO7Q5RZtrtDlIm5u0OUuby7Q5Tpv7
tDlRmyu1OVSbW7U5V5uLtTlam7u1OV2b67UcQMsNtJxByyW0HEPLPbScRMtV
tBxGy220nEfLhbQcScudtJxKy7W0HEzLzbScTcvltBxPy/20nFDLFbUcUsst
tZxTy0W1HFXNXZWcVst1tRxYy421nFnLpbUcW8u9tZxcy9W1HF7L7bWcX7sX
0O4RtHsH7Z5Cu9fQ7kG0exPtnkW7l9HucbR7H+2eSLtX0u6htHsr7Z5LuxdT
79GUezftnk6719PuAbV7Q+2eUbuX1O4xs3ofmtX71n/3/TAi/vdRqzPeDWrV
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
09zzAYmLanGvSnEwrb3elyqvfo/E1aP4kRIH03qNPmWqfBrKOPfF22MLB9Pg
8+ugsg3vkNXzrdPK93Iwlc9L7vHam4o0n7nWqJziYPLdUVr9YFsKsovI4C93
4WDSXDS7vLYmow5rZnquHwczbuZ37e8mbxHfajn+u885E2x+Rb1ql4TG3Xf0
BqZwMA1oCW8XLn+DiotthJmlHEzzY+Mbvi97hawsVLcIdnEwzV9THUJmJyAt
cf7ln79wMM3zqqYFGb1EBr1le0SncDHdk6bPFDkci7QKAtLK53Axzd8e7Pkr
KBqFBb6ZvH41F9Ngmc+l+QmRSPN0ZUHZNi4mn2FO1MyG58iPs1M4w5iLGbFL
2nHesWfI3DPrkvdZLiZfVYzvmcanSPpZgBnNnYtpvjJ557n6x8g8x2rR8yAu
Jt/erKNlC4KQLP3+nfGXXExNXcENzgr+SFU8XWpSHhfTfepTkyfPvJBfivz3
kDoupmZCu1FvtDvqPXKzfT2Vi+n+UD3cxNgRWV37lYp+cTH5gkVm5t/QwvOc
79OEewe5f//f5b9/BpH26pm5SvWk3vw0R1I7n9Q12fU9G5JI3XfziuUrn5E6
nwVV0COI1FMDF3wr9yL16kaPqX6upO4tHnfD2onUhUOWTxs6z+PvmrfK657d
P9eh94E+F/o9ob8LOg7QcYOOM3ReoPP4n+cdWifQuoLWIbRuoXUOXRfgdQRc
d9B1Cl3XUB2A6gZYZ4C6BNUxqO5BdRKqq1Adhuo2VOehfQHaR6B9B9qnoH0N
2gehfRPaZ6F9GdrHoX0f6hOgvgLqQ6C+BepzoL4I6qOgvgvq06C+DuoDob4R
6jOhvhTqY6G+F+qTob4a6sOhvh3q86G5AJojoLkDmlOguQaag6C5CZqzoLkM
muPAuQ+YE6G5EppDobkVmnOhuRiao6G5G5rTobke8gEg3wDyGSBfAvIxIN8D
8kkgXwXyYSDfBvJ5IF8I8pEg3wnyqSBfC/LBIN8M8tkgXw7y8SDfD/IJIV8R
8iEh3xLyOSFfFPJRId8V8mkhXxfygSHfGPKZIV8a8rEh3xvyySFfHfLhId8e
8vmhXADKEaDcAcopoFwDykGg3ATKWaBcBspxoNwHyomgXAnKoaDcCsq5oFwM
ytGg3A3K6aBcD8oBodwQyhmhXBLKMaHcE8xJgVz13+97/Mt/+S8jGMWmowac
f0yfWS9euJ5j/2O6NR7adi+aRVBzxG7msBqT4KopkaxLtxkE/R39DOYl0Amm
rC+2qZ5Okk2tpatb0Qiql5zXlB8YICj0MDwueTfJ8tALyzQrqQTtheYe2mBO
Mkma8UCDn+RgWXauTGw/wVmRDqH8eiSH7gRkHJ5E0iDdN4Sa1UewWMqpZ8SV
5EpDNaa9OsmKs1WDOoIkqdGJC+lFvQRlxaoUzt8jmSi3lX/PAZJC1JtOP3ZP
cCRmy/6pM3qRe8guu3bXCWoGzz76rvBPf1URxepO6P0/UVh+1bUeJO48Prq4
oxeTXSVwR3t9D8rV8Lk2R6wP0zxSOb+F3Y2Ejrtf+arRh+l84eOeGZHdiK9L
fP+vs32Y7mvPek4260bp01/ObQntw6Rb3DyUMaMbrZLZoramrA8z23Tpqk21
FOQueUNA70cfpubpnDG/uxQkf6LIepdiP+ZBTlPPYy0KUknIPmp2sB/T6q9i
et/vLkQRl+wvde3HNG/8bBB9pws5XrQJG4npx4x5lrtUbmoXqg5yub/6Uz+m
/zb//U7hncjz0dYp+0b6MW3VdzKmy3eioeHs1YLzqJiKC4odh6I7kP4JbpGL
NhVTtn3t6/uKHSijye/qpbNUzLrLh/yeZLcjx4Od+e0PqJgxvy3fn9ndjl7d
+vbVPp2KOeY0f+mrujaUXZbTpUuhYpa/KDCXO96GpK8YFTEEBjCLg/iT0HAr
SlkTqv51xQAm1X6FzjLXP/Md9fiRaUcGMDP0KEM1wy3o0Y9lKqIuA5jqs25a
dQe0IPfCT59Vnw5MMDnU33R1CxpJc9zkkj2AKdcWdSCgpBkJiOyj81EGMEf6
pu8cP96M4kNXL3kiQMMUWO7kv/5bEyqer/utaAENMzFinsLrkCbEkLfeqqhJ
w9wRU7LTDzUhVduLOpdO0DCPZj5TCGlrRNLubqsDPWiYxde9nLQcGlGIXtO7
T9E0TBVZl85QiUZUcLqKkV9Aw0wrDULvUxuQ870KDr2PhhlmFKKyfX8DEr19
tHBIlI7Za89IXtxVjzIkDz6buZSOWVfJt/CjTz0SYl2fq6BHx2RvcX/1bG49
GqsuPvXSho4p7ZdQJZBbhyw+rB9p8aNjNjaekHc4VIfCVslt2Z1Ix1x2KWHv
8p+16JDSJ8F7tXTMcc/wLwe9a5GQyb6L+4bomOwvUhFSirXIOTwwK0CagRm2
eFe5TlENEm8WLCrawMBsufQl6bVZDUo5obzb/CgDk9p6bnkXoxoJcChi9y4z
MEc2HGs5+KgalY+Fje4KZmBGTlOUXq1Wjfx7ur5dfc/AjEjKVZdJ+YwEjFc3
sBsZmCwunc9upAodKEoIow4yMMXMR/WDTarQ8pcbNPskmZhCIjnXYkIqkblx
SL3wOiZmLvuE4Ke6CqQS966ZZcDErJDIYTrIViBWXcJogy0T00F4dMkvh09I
0dLkYsk9JqZsbDc6EFuOrDo3NY3EMjFDyqKGVSXLkf/Hq9/qSpmYETfnIGHd
MiTrEBL6pIeJaXXghJFVUily9L0gHjSJhan37tAbr5ES5HO85uWCuSzM4vzZ
k1WPlSDbEPq0vk0sTIcTnhGxUcXowHXVgDOGLEwxwfRgT6liJFAQELrEnoXJ
sntoNO94Ecq4eeWSog8LM4arqDKnoBDNKin4ZhnFwnQ5eEbjxZJCNLY/VMwn
j4WpOONQaoFzAfI80VTM6mRhtqYNHXIszkcxwVFRl0ZZmLK2ixevW5qPhsxq
04/KsDH1iqWi6+zy0OBKTfvFa9mY5l+vmS1pyUWU+DT29H1szNy/3tvdW5KL
Oprk+qTPsjHjuqP3Sv3MQTY/vXSmebMxxdQibmg/y0Z2cdTGyc/YmDRZZXb6
3SwUaB1KnZbJxpSZk6C8bUsm8jzybWhnAxsztfK6fyFfBvJP/zbXh8vG1NS/
muRZ9AEd4oa/9xDlYA6W+FqW3HiPJHvoWw4ocjA1T4usnbM+Dfnd7c6R0eBg
Wl+0E29a+A4FKizILjHmYMpccVgY2ZiCNFed/nXlPAeTr3vZCu3iZOR354n7
HW8OprVf5Q+/J2+R49SbPxc/42AGOw9s2OmThOSXxH6Y9oGDaXDbKMkz5zVK
0109bW01B5NCjQu0upqIqLuCR6yZHExzh/RuJc5L5LYpKzJrEhfTINQkxqAx
FuWqfjwuN5eLydc5XejwxWjUOuna9xwVLmZE3ZoKGcVIFCJYSGfqcTEjAp7N
7CmLQHV95xuSLbiY5jKTf17aG4bspn5fUX+VixnR9ipPrTQYOQ73ZwUFcDHN
l/cEyaUGoRglQdexBC6me579Namb91HE+k4LpQIuJt/ORN/Wak+kH6hxqq2V
i+nuWSPl1HYVjWcIXvfkcDH5bg9c3qZqg/t6Oce1LzxHydzWuvKqKKWR1BWa
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
duShug/doZWabEyxhHeGq6/mIhM9fy/mCTZmxVn16G/WH5FWy9agJA82Zmq1
uHh6STaKL3E/h16wMcWiRmqETmUh+zf5Nhfz2Ji5xV1/XeNkIKvqJ+mlnWxM
5S3leo/vpSOTL/bCcr/YmNVvUkPerP6AOtbd0VObw8GMCws4Y12Thsydnvsb
qnIw3e+e27jA6R2Kz/l15bQhB1NScqm24qJUNCZsbOF6joNpENR1eEVtMrLb
8SJow10OJq3RUtjtyltU7sWa7hTNwfR/QZe7vzUJDYUtTViTx8FUXrtn2Kv3
FapOOlmf08HBdLf9OEtONQEN+fjfev2dg6k86hAfWRKHnM1yjHZJczEpi5dK
uK+NQUK965N813Axzd+LXv3sE4kCTydMrdflYirrcAbm9UWg7IBZBkqnuZgR
iYU/7eNCETXzRpDrTS5mbmHi0ijvxyjQV+2zZQgX0zzq4ZI54oFIax3bamo2
F9N9ifjp9Ll3kGYou62hnovJZ93vWbnGHVH5Od2ObC4mX8xP2VW1Z3Hfp97w
YebRr2T+clTVdO7lT6Se+EY3eySB1NsXu9a7+ZH6oJnbqcqTpF7vmDPzzDZS
d59aHWi0mMd95W8WJCsKkvqPzWGmMt1k/vUjvdlyUR6pa47OWOP0gtSt1wec
q/Qg9aPZo11bTvLI17b2bMncRupRe0YFQxaTeukpydFDAjzyx6jl5Yd7yLwy
uMqj/2YxqSsEiT9hviT1+muHVgl7kLr2Z/G91Tak7r1x15tTujzy330zstVX
knroyUWachI83kdnaNNsFo+ces6OoZ3VpB6kHmcYnULq7sfFkyc/JnWW4+2n
IS6kTgkefyNuwiMHj/giNr6d1OMqo3UiFpK67w0GxWcyqdtvWHPpIo1Jrp8h
GYW0alIXe8tfNvKB1JPux7Wtf0rq3gerXkXfIvXCoxFSu2xIXdv2q0/dXlJX
Hh6gdqiS+kb3sMoueVKPS9k0w3syqdvWzow2+cogX/+15wu3mdRzJQZT/HJJ
3Zefyi5MInW+qaEdNU9J3XZlkXnJPVI3N+NIPHUj9dLg6Vc97UlduU514IIF
qfexrl9IMyV1J36RCwIHSX2jLic+cz+P3z+ors9x7z/XofeBPhf6PaG/CzoO
0HGDjjN0XqDzCJ13aJ2A6wpYh9C6hdY5dF1A1xF03UHXKXRdQ3UAqhtQnYHq
ElTHoLoH1UmorkJ1GKrbUJ2H9gVoH4H2HWifgvY1aB+E9k1on4X2ZWgfh/Z9
qE+A+gqoD4H6FqjPgfoiqI+C+i6oT4P6OqgPhPrG/+wzob4U6mOhvhfqk6G+
GurDob4d6vOhuQCaI8C5A5hToLkGmoOguQmas6C5DJrjoLkPmhOhuRKaQ6G5
FZpzobkYmqOhuRua06G5HvIBIN8A8hkgXwLyMSDfA/JJIF8F8mEg3wbyeSBf
CPKRIN8J8qkgXwvywSDfDPLZIF8O8vEg3w/yCSFfEfIhId8S8jkhXxTyUSHf
FfJpIV8X8oEh3xjymSFfGvKxId8b8skhXx3y4SHfHvL5oVwAyhGg3AHKKaBc
A8pBoNwEylmgXAbKcaDcB8qJoFwJyqGg3ArKuaBcDMrRoNwNyumgXA/KAaHc
EMoZoVwSyjGh3BPKScFcFchhwdwWyHmhXPjf73v8y3/5f5+bpebWL9rA+cdU
VGRxXv7P/4/7Dxn4+eFqAS8WQZM1R42SxxgEDV71n41CJN39c5UOnacTFG3f
phZeTSNosmfkL2M5knWFEZ6TvQcIbi5qWJfQQiUY8/auqtpxkpLLC4tnt/QT
5GO4zmk8QnJz/ZzsLc19BBWqw9+dv0BSL+bCu5MCJAO51OLyF70EVUfeLXHR
Imlu2XWyw3mC9vQkZkplDxIpX16I8nsxv1R/PBJxtAdFeu2TiBTtw7yb6m0z
dbAbiesaOZw07MO0u3/DyNajG+kfzJoz9qgPU9z9VIu3fDd6IjX6/MCfvw/z
lKjfzUwKEmjuscuf14/5M3OFaft+CqKHCaovPtaPuUPxq24grQsN/fVkx+Un
/ZiKAus2PFbpQiE/l80zqOnHVBG/GT3NtxM5zr1T9VSCihnzyjJoZX0HSsnX
nVqlRcWkvpfr/NNBoPGq2wLjrlRM0cBz34TvtKPKY53B7alUzBCq5Qab7jY0
fvnQ4U46FVP04a9Ry+1tqO66XuuBhQOYnu6yFwSftKIMvjTN3+YDmHXjHRr8
HS3o1bb9JX73BjDHNovFHzJqQSFC5teaPg5gqrC6PK7kNqPx4ejxc18GMEUX
SExJWdGMUq5MHXolT8OkPuhQHIlpQgfqBaZHa9MwhW4Nl0kqNiG/uyVDay/T
ME2OvVxs87gRqdAXHG+NomFa7QzpsZdqROz7z9LHa2iYmwwW1An5NCDFFxZH
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
YjqqPvE7es9kDqamzZSNvrnv0YGqMIm85RxMGaMQg6G/3qGh/eru53U4mMFK
K8eLbqYixdGC+wsdOJjKhtXbT8QkI0qSbnnKQw6m+ztHjwc/k5BLQ4Zj8jsO
ZsSvq4q7vr9GQz3LZri0cTCV06fL3bNNQCHm7g/afnEwI76M7LDRjUPZlY39
Zgu5mAZp7Y6yJVGo4411a7EWF9Pg1hpP02PPUUjwWKLXGS6mpoVAwH3VUJT7
48LNWl8uJt/R5z5ewQ8R1Zh+WD6Ji+n+8prw72E/JK6mJaFby8XUNE2Ibl10
A3nKRKpED3Ex+VRN767zPon3bWHd537dnTzupzPda+qRSuqXnxTdi7jHww+c
o3FugzGP95E9cOmNCo//g7CE/lBGnNSzniW/edJF+pZiEurL1r/jcX9i3oKA
M0Gkfjm+RHCtFY/nkP9cF3NxK4/vIeyct+6TDI/7HDV+TF3PJv1emZm19yll
pO76RsA56jmpU/ZsOGp9hdRZSbGRxvtIPWhqq85JJVI32JV2OpSP1JVvGU6r
aiL9c+vX29LUk3jcV9tgX5tyh9RlOMmXj1uQuvZY6rXFmqSeqpJyr1Ka1J2M
v9AiWGTu0Hx5RUV2Kal7PO8vLHtB6lkLvFSNPHncN/0pTtrn+D/PXxR+Z2j6
yZA636Xtroe+k7nPzp8ixkJ1pH60ZdpeoWQe+X5mQ9X4fR73m3N3i/Fbk7r7
bJeX83eQepaFjHjsIlKXSXX+uUSAx/31K4L3U7rJ3E37RXpsSC6pJyXtmfr0
GanLfWw59/QaqdO2nY/4bc4jx6/wGDDcRuq5P7Xba+eRusK8SmXb32QeKpw+
q9O8h0dObWmeppJH6tpTCmddiSb13JyBlUEepG4rklE0bskjXzbWo//pWMl6
tVbcZf5SUr+8eK/uKwFSNw/INssaGCA/l5/9K7+c1CWlp+b8lUDqwtPOlFk+
IHWFzHcLOx1IXUmLX/GpKakPlh4647yV1IN3MxeYLCT10L6ItHhhUnd1e5Qr
MEgl1wNl/qGoWlL3XbEs4VImqRufMiptiyR1sayPSYK3SX24aP63fRdIXa75
914fU1L/IDNp1TNNUt+5kf/d91WknmSU+DBMltSbrRvNjURI/XJo4onQ7/3k
+xRszx+nkfqHxcIKu9pJnXLHT9ijitQ9ruW6TSohdeHzKtZeuaQeccxpyf5s
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
WfU3aGTkkLrSLUqbhS+pS24OW77YgNTjSlrEN83jcd/K4f705wzSN7ClDp4S
fc/Dx7B0kpjtS+qlM36o5RjxuB8Hea+aosjjebmexpwZg6R/kliokPcul8f/
9Z62bL3GPVJ3YmenqJjxuB+qzdBMeDmpi1XNzzw0SvpIP5ptjR3yefhXVlpN
8x7wuM9roOtdnyWP5yS7X/g1uoHH+68u+NE3idSDe975n28k/bTL4Upb6XE8
7lO7nFXy2Y3H/683rbaKNuDx/OqBJ2/7l/D4f/GXFnnJj5F+42XTCN+4Kh7P
697RIbfiBY/nG1zVNxS5ROobP44vrdLm8bzuEz4rf8qTujbn0FXDHzyefy65
jFNWSepOa7Y07okidSWzAU8RFx6vdz/wuMeQx/MQjGZ3DS/n8Vx3BVMpmck8
ntOekqas00L63lEbpi8Jf0vqMy6fa1W7S+ql+TrRuSdJPdXONe2kKo/7asXO
LZ0nTurWbmV2i6g8nhvAWZyq9JHUh8MbGD6hPJ4n4KTF/9ye1L2/m0voG/B4
/ePM/mwlUv91M0HfgZ/UIxxMNee1kfkL33SxsrXpPO7jLnadMvcBqcu8OaKm
Z0vqi4NVT7tpkXqp4orVkxbxeJ/yrniTMTLPUh7mF5VrJPXhddR5KYmkTvPy
tY/1JPUZhck3qqxI3VdC1GHaNlJ31T6h5jCfx3339x5slv+LzA3bKQKdr1tI
vW8lNd4jldQtrUv1XANJ/ZfIFJVPjqT+4c3kKKkDpG6/+Z13sSqpD3f0vdKe
Qep6XYOTVL6R+W9pXxZlRgOpHzXoF9ibRurGpfoldkGkLhz0MoPiQOpiurt+
uB0i9eF0dPbBVlJn7dm83mIeqf+wzROJ5OORa3uVlg319RC6h7CocdYnUq9+
oitl8ZrUrRUXfUl9TOqS9WOKBZdJXfCGUHCQOambbzZ8qbeL1IcLhg9/Wsnj
c/c0XTWcSepi5e+ik8e7ybqkE/R5OpXUZR7K6ITXkHpU79F9C7JIXfKDV5t8
IqkXBq1zEwkh9eDVXhu9vUldLOvpAQUXUjc69CbS05bUB9v4t862JHVtbtaX
Z6ak7vpXmuxaI1KnZPZLiBmSuuaVGQID+/65Dr0P9LnQ7wn9XdBxgI4bdJyh
8wKdR+i8Q+sEWlfQOoTWLbTOoesCuo6g6w66TqHrGqoDUN2A6gxUl6A6BtU9
qE5CdRWqw1Ddhuo8tC9A+wi070D7FLSvQfsgtG9C+yy0L0P7OLTvQ30C1FdA
fQjUt0B9DtQXQX0U1HdBfRrU10F9INQ3gn0m0JdCfSzU90J9MtRXQ3041LdD
fT40F0BzBDR3QHMKNNeAcxAwN0FzFjSXQXMcNPdBcyI0V4JzKDC3QnMuNBdD
czQ0d0NzOjTXQz4A5BtAPgPkS0A+BuR7QD4J5KtAPgzk20A+D+QLQT4S5DtB
PhXka0E+GOSbQT7bf/pykI8H+X6QTwj5ipAPCfmWkM8J+aKQjwr5rpBPC/m6
kA8M+caQzwz50pCPDfnekE8O+eqQDw/59pDPD+UCUI4A5Q5QTgHlGlAOAuUm
UM4C5TJQjgPlPlBOBOVKUA4F5VZQzgXlYlCOBuVuUE4H5XpQDgjlhlDOCOWS
UI4J5Z5QTgrlqlAOC+W2UM4L5cJQjgzlzlBODeXaUA4O5eZQzg7l8lCOD+X+
/37f438Px8QmCzP2c/8xwy7Lx6f8ZP9jVttW1u8VIbnj56vLdsMsggKUMkkF
UZIalsfFi/cyCAr99fHAqAed5JEbejV/6uZ/MoVCU+kVJbl5gK/ISX+AYOIm
LY8bUVSCIXJWo2aTSMY/LlSaYdNPcGTv5XPM4j6CrndtpRcikqrydz7PfdVL
0C2qM5i5dYK7RJJDwhf8qUsXT/bOyZugrgFr+RGzHtSoJL73+/o+zJztLFG/
pG7UYVCytPDPnP833wkdLGwZpCB2S6mzxcp+TPn02kobDQrytBCaOhrej2nb
wOqcsagLCdHNVzSLUDFZOzvcLvV0IB8pOXk5JyqmxaeEuITIdnRs2bLXkzuo
mIxbHt841m1Ia5GQVo32AObKR+xVvktakYay2+H58QOYOue9R59PakHmUWun
iEyhYVKmn2X0MZqQqtv15f2HaZhHvW+4G/xoRBqOTbrURBrmnpgrcvqjDShi
hWyBxy8apoLb27QLog2okc1xzjSgY7qpqjytFK9HbtHayXVhdMw70xTpHop1
SPr2p+wYNh2z2D6seKpaLdK8YeI+ZQtjgq6D1+h7a5DQhnfF5z0YmGxzSkKS
QzXKENIUGilnYMY0XW/dsvUzEvd/VHZLnImZ/OyyFv11Jdrc3XFExIiJGfOh
oq9kSgUSSgnvmfOEidlauTvJ8kw5Gnt63OlEMxNT0Th/13t2KTLp2S2eL83C
pL41SHK8U4IiPO5LrTdiYWr2vXhUIlSMbqHX90bvszBZNxmxihGFKGJMJaag
goWpqVAqa6NSgNK8gvzE/1z3fzOjxuP167I85Pf+/aJtu9mYqclvl10xykXs
qPdxhrfYmLSdlrMVmrNRvOjyYmY6G1PMfUraV+1MFNJda5z9hY1ZbSvfOD/h
A4qoCXNjL+Nguq8MkesUTkP+W3Wv0005mJpSV4Ql3qYglaDSUwr3OZjB4k82
X9V5i0xWrVSflM3BjPjYZtqz+zWKOJieV/SVg8k3+qzxosZLdCxm9eVNi7iY
BqcjMkOTo1DE7c+PRo24mHxX7rY/EY5AjgeT9E95cjHNx7jnJlU+QkluuZyl
6VxMvs7qS0IBPmiVv7Xkqj4upntn4FuVTidc1yM2zZkys4/H9xl87+h+iiV1
1o8rBz5ak3p1T3WFxlpSzxXcn9M3zGM+Ne9M5/9I6uqU+kuOd0g9V6jee3Qf
qbt/9r9Ln0Pqg7+zBOs6yDla8Kmby7lXPJ7LOkIb/XSB1AfVg7QKt5K6/YDk
t7DJPO5P+TXNuKGChy/h33ZvQzCpX3Zosmo9TuorZdtcHizn8ZxbmwDV8K+k
T1IR3J3Wmc/jfqUUDS3PAB7///rL5DlLT5J6rsgF6nJlHs9hYBYNyvwmfaEk
7xnbrleSeqLzAunGMB7fTxD/OOu5LY/Xhxsr7NpC6pT0lhgHUR7PW95+Nv9l
F4/nHny5fFDrLakXxq24XOpB6upnL9CyDvK4r03/ttcDJVI31n/o3TnK476/
7k6aeCUPn/PmYveGF6Sud/XEFlUHUv/Buq29XYvU21c6B06bQ+oRN3qWW7J4
3M+46PyagDxSP9qpNlXjEakLThK9lnqWh2+80VgjZRsPX/e0IMdhNo/7Mec2
+xdyePjhv9ouZxeQ+o9Gh1s6ITz88IMS7BhHUrf9+uuI7i4er980J6Rdnsdz
41nlOzq/8nhuwNOsrktFpN4+fFuhIpTUWScWtLc4k/r6oLPztu3h8Zx/7fau
kCU8/r+A37L607/IHERh7U7V6joe9y9vMnRujSd1zQU3Dzy+TeqS6oG7ppzg
cf91b0GviAaP+75f3LoVM5PUlbwilCiDZN5EMV00ubWC1CV/zv6+JZrU1Wmp
by2v8cjFpjdLKprwuO/+fIZEphqpr08131Azk8d97iHC7599IfO+y9XPvojW
kLryAsvtSq9InWY2U7nPj9SzZqoWGZ8ldRl943ZjXVIPPmz7XGEZj99n0oow
symkPoPryTrXR+awyp7OF0SLSN28YLKVcySpfyiUyjD3IHXa+0dj8idJXWnj
9bqVW0ndd9epU8fnk7q6VJ5x7TiF0P1jdX6YdZK6worJC/bkkbqHoPm+s7Gk
rjf/9LSsu6RuG5U4Y8t5UldewnkhcIjUm+sNNs7eQuo/Lijt2K1A6toma1zl
RCd0mysnpe2/cJH3Gmfl4LYurOc6bc6O7+QiyqLpLfGJE3r1xSy19xV/Xq94
eGr59Qn9UOLNXa8yuKj5dfGqt4YT+tC0pwEhcX/eJ1bA9uaSCT3mhdkq+Sd/
+r1Htl9K/+rEuvTVUkuW15++TuXbz6q6Cb3uLqfogAsX+R+rP1fzdkJ/VSsZ
nWT75/US8aHp9yf0CKf4rx7H/7x+UbxZxbkJfVyG8/yvA1x0eWtd0K/9E/qt
NR9Ct+hzUalzxZSZ2yb0zdtW16/awUWSkY4Pvi6d0A/86nW1VOei6pFNG3/O
mtBnvdil5qDKRRtnrvaRF57Q/Q5+LVZf9+c4NBz78ni8A+uSbB2f28pcFGeQ
2aI/+n+tQ+8DfS70e0J/F3QcoOMGHWfovEDnETrv0DqB1hW0DqF1C61z6Lr4
P37I6+hvHbruoOsUuq6hOgDVDajOQHUJqmNQ3YPqJFRXoToM1W2ozkP7ArSP
QPsOtE9B+xq0D0L7JrTPQvsytI9D+z7UJ0B9BdSHQH0L1OdAfRHUR0F9F9Sn
QX0d1AdCfSPUZ0J9KdTHQn0v1CdDfTXUh0N9O9jnA3MBNEdAcwc0p0BzDTQH
QXMTNGdBcxk0x0FzHzQnQnMlNIdCcys45wJzMTRHQ3M3NKdDcz3kA0C+Aegz
AL4E5GNAvgfkk0C+CuTDQL4N5PNAvhDkI0G+E+RTQb4W5INBvhnks0G+HOTj
Qb4f5BNCviLoQwK+JeRzQr7of/qokO8K+bSQrwv5wKBvDPjMkC8N+diQ7w35
5JCvDvnwkG8P+fxQLgDlCGDuAOQUUK4B5SBQbgLlLFAuA+U4UO4D5URQrgTl
UFBuBeVcUC4G5WhQ7gbldFCuB+WAUG4I5YxQLgnlmFDuCeWkUK4K5bBQbgvl
vFAuDOXIUO4M5dRQrg3l4FBuDuXsUC4P5fhQ7g99T+C//b7Bf/t9hr/r/P9f
CB0Hmwcie9KKOASddywUWmLGJiiUvvmb42QWwVcGjJ/rljMJpnQ/WfzEgEEw
Ivndwm1n6QTZrjXb/b1oBG1pay8dLBsgSL32YO9RPpK/6kdT6w5RCarPPnFD
M7mfoI59zLyYKSRD3ZlrN5/vI5j7Zc8Mm9ZegokH4zbTtEn2VpfNnhszwQSt
/UebPHtQ5esGxu6lfRO88nH+jKJuJDCjadO5P/Ph3/x5QuOlCV83SrFuPpa2
th9z6OQWx3MbKMhl+q2rEnH9mIGlzn71U7qQSfIqvW4FKuYQzXnu0bAOpHhk
zU3JACqm7/CFK1V67cizX1mzfcoApu0+O3SW1oqG9twV/e0ygKm40IzCf78F
STb2C6v1DWBWu+3tNznQjPxmDlVu2EHDNPmo+MhMtQkxNPh8xmNpmDu0fp+Y
ItyIhE5eiropQMdktzyZfvlbPdJx4Cwet6BjLnq5PkC4vg4VKKrfGsymY6bd
1XVeXVyLIurvCNydw8BUuHnym1lKDRo5W7HY7gIDUz4rJOBDQjWqk552YVUR
A1PsTvQRrvln5PLJOnHXdCam4pa73449qEQhDvlZ1y2YmFYGFwInJXxCLmf3
S6a+ZWIqXp0dXtJQhlZepox/HWNifl2dLbZ3Ximi7DmrcWUbCzN3p+t9pUvF
aIfMiHidNwvT9tyWRPFPhUjSXsP1bSULM+L4/VlNqwpQZIbH6s6ZbMyVEb20
ctc8lHt/l+JcEzYm347s9RnFH5HzWaFfSaFsTKeR5DWpsVkoW3wv36I/ffzf
VDI9/Mv0RTpKSXz40Hoe539w9+5RNbz//3fpIAlRCEWUSiolksi1KSFFpOQQ
EUknUZKUtkpSUkglYguJQpQklZROFFFSlNJht887OkjIPe/7e7/nan1mv9bn
91vrXus+9M9zrceaNe09e+a6Xq/n85oZUhO7fv1WupCDZA9P29+xWUBqbGjO
hLVfs1CR0fUdIy8ISBU7cDD29rSHaGvYy8+vKgWkMhIu7P2leA9JVHSNHiUh
JDUTrWzTeHIbeWtvzTtsIiSVLnXmVH9YCjILr4o87SMk1ak29edC+yQUfzRh
OvOukFT6vvmnstkxKNxnd+zlViGpYtvm5NhGHSHHRf9daTl/WkSsfyh+ndNy
RcTzHvdvszliS+W/G7W/BE6mcpu3Mx0M66l9Sl164jnlyyLW5wdJ1jK2inj+
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
qacVV6Rduv4e5Y1ZlJW3ikNqbf1W5lutd0j3k56UVDGH1O9tzNavPm9RT/kZ
GfVFXFKtbLKqNB9XIemnnIAD6VxSP90Jnu78qxJZrNnj2aHII3Xr6tQDt0LK
kUtxs/2sMB6pSQer+w26XiK1WXWWP7k8UnUMRyIt/2I0eOTVN0t7PqlWTiF3
A3ufI0ab1encJ3xS6U57Y7c4P0MlS9/2rVIRkNqgsSaAwchBtilXXHb7CkhV
2pOm7xz1CLWPdPsY+FpAauaKcW/W8jLQ4G+BdN8MIamM1YlbRorfQkUCn3La
YSGpYkvNkj5JJCGnkTM26VcISRVb6ujbyg8jrz+aU+jSkU3UOiTTI/KRyjEq
pwVtyJo7hcr1EyUfhuVS6x/9+CPtSjupnBZmu/aGpIj3Obo9SF6WQa3HWF8P
0yNsqDxsQ751ez+1PkwrWDmef43KI2aufz5yLZV321SHX/9BrVeV/F8bW6WK
qIcHHA2PbhXxHooD3kpP5EWsMx/PkJ1SSq23dR6MOxQaQOVX3I7ny+pTedhE
/ucsNrUvkLdlhW1LofIFYTeilXdQubeuukeFEpWn1d+09K2l9juu7VbPFc+J
eC9te/aFNxuovHVxesovaSpPc5lpEVRG7dd01A0XvDpF5RlfzWdNXkPl5ntf
3p8oS+VifImy0a9E3G+irG2aFinivpIVNVftrKlcMmvq2xR5Kvefd+tafY2I
+2gqbvidjxXxHFqz3SGnN1N5WPx7s7eTRbzfuWqEiU0L1R/ICIuy1bsh4j3U
WpueGHlQubLd1UdPF1K5WKRrydw/VD8kgn3w0/hSKrfZ8Eu6K5LKc10aepbZ
Unngvj7tF6oi1hVs9p90gUv1f+joGO9wroj3C/wetHocSuV7MgcTpDaIuI/s
Te+S0hki3tsufUB1I4vqg3loD0x2zBaxHsDyRZj3CRH3zQ2az71tQeWq/hU2
ZkpUvkDz5fTfX0U8l/vx8/iBLCr33dzDtTpJ5RF9Ljl3NlM5o+zZhDWamN9N
8bm14JcQpU26nizRi31R1csTvc0+ClGNhFGiVhLmSReemGzM+uc9ta/OW9OG
rROYU9H9N1qIBlx7G/+2DXuue0HDohP7hSizIXl0ySnMw3+mj165kti/UDdZ
Rxfz+KXBBbuI+cl/cuEW3zfYN56q9Vyw+DfRN3Y018X6YW4j/zezs1GAKtKC
TApVMbe+Z3f9yFNiewN7hfS32Mdm2mQc2J1A8Fd6k/0CMK8tLqkf50P0n/vY
ibdnYK6m93nnHhsBcui5IRyswH77BY+RK8v0BMg75nyG0BfzvNuGz36NIfpc
NfFNfbMwZ+a8Sirl8hGtcnCEVzX2/xXKdgXEVPKR/oHeh8wjmNPe7HrreYOo
B0J9w88rYZ5UvCtyeQhRH7j0Nt4oxTmFS7yqjfUuYp7z37B6uQ/mhm4tE7fQ
iO1P38/5oop5rPLIxomziL66/NxVow84T+G/0bvyXoKPbKQOh589jXmR00S3
8k4eaj248PShZZibCX9VxBB9tVb9Yb99fTj3iXS6fj3/Lg85HFSI+3h3WK7U
YOGwIoqH5FUeNs3ejnnAQjvOOw8eypT6UCknj3n9RWdutDUPJfb7V7W9wLnV
1Kwmq9vzeajouSYt5TjmFp/sfq2cSOznun2v3kLM9T+3t1sS8/TAjaeLl3Bw
vubZcnBJYAMXxd6/EmeUjHnJPbcH+Xlc5PooMufjxmG5nr9zdk0yMU/fHyg+
LYt581iV9oBgLtK6VbEoqxDnhtZX6w2rdnNRUVTiiSE/zMPbUh9JrOYiG6Pr
y0YtwFxe+whjnw6xH/ac8RJCnIf2q2VvlRvPRawtxW1X72KuO/NbaHMvB3W/
/1Q5Zw/mRTVJR4UNHNQ6SiLTfjrm9nTzA+IFHNRAmxsf2oDz4tRK6bqhFA5S
HZCfEJSAec+ESuPfERzk9KA/2s8e8z99N+Q6vTlogHnp2tKpw/LoxuOt1Q4c
FDvd9OGIL+/webt5+rJMU6Iu+bz2snES5tFvCwoWqxOfM3zr1titmHc/qP4m
IU98zkUhTaO0MA+43awn1c9GmbO0++S6avB5KyVbpdVM9Mljpwx1pmEesNVI
ubyMjfTbTpV988Zc5W/9adp9NqoIuuRw3RDzMbePuDDj2IhmZi9GZ73F58Me
E5fCQGL/P9T+PjmAeazSH6Xx+wge8C3QTgJzx9yYGa83/NO3v0n+kfgGf98N
s1brLGOjooR012YjzMMTFyhGaLERY1B6b9qrapIHtVi0tk9gI2/H3bt8dmAe
b936mSvORt2hu9ZeHoV55NujB4e4LJQ5ZteigctV+DiMSOFbNbOQk5z2TfpG
zGOtXh16X8FCNcd7TJV5r0l+L+1MbUsesf3a5zN3pmLOmbbeVP02C8VGRc1/
bIa5avfuAXSJhRiZgkY09Irk7XV+XxafYiFvrY0OM29ibrL2oqPhMRYxD3Jq
xVwxz2rI6nTez0L0JaGBPWMxd/5mVoKcWKg7x7Zm2ddKfBym1r3+uZHgYeq/
Wq9iblvHsr76z/t9Z585Odkbc7WwPyEFK4jjE9dzNssa8+acvxUhpixkc36I
F22IeW2/+OufC4jP+X7Uj1YZzP3q70YtMCS217fPkxbD3O2p7bPL+iwkfy0l
Tban4r9yaD/Q/4U+J/S9oOMAHTfoOEO/C/Q7Qr87dJ5A5xV0HkLnLXSeQ9cF
dB1B1x10nULXNTQOQOMGNM5A4xI0jkHjHjhOAuMqNA5D4zY0zkPzAjSPQPMO
NE9B8xo0D0LzJjTPQvMyNI9D8z5UJ0B1BVSHQHULVOdAdRFUR0F1F1SnQXUd
VAdCdSNUZ0J1KVTHQnUvVCdDdTVUh0N1O1TnQ30B1EdAfQfUp0B9DdQHQX0T
1GdBfRnUx0F9H9QnQn0l1IdCfev//FH73H851BdDfTTUd0N9OtTXQz4A5BtA
PgPkS0A+BuR7QD4J5KtAPgzk20A+D+QLQT4S5DtBPhXka0E+GOSbQT4b5MtB
Ph7k+0E+IeQrQj4k5FtCPifki0I+KuS7Qj4t5OtCPjDkG0M+M+RLQz425HtD
Pjnkq0M+POTbQz4/lAtAOQKUO0A5BZRrQDkIlJtAOQuUy0A5DpT7gDnRf+RK
UA4F5VZQzgXlYlCOBuVuUE4H5XpQDgjlhlDOCOWSUI4J5Z5QTgrlqlAOC+W2
UM4L5cJQjgzlzlBODeXaUA4O5eZQzg7l8lCOD+X+0DoBaF0BtA4BWrcArXOA
1kX8f2W9R+ij7MFHXTyKOs7z0WCc4FL0z4JJwSPb2FSlP1v5YjaLorWuO1vO
cJkULdvtprP2YydFdf5kTdvd1EFR71Ppp/V+t1O0/iZNxmQR1kKZaz1auu0o
9WVH2pFerNKNaSFW49tQeG2MHet2B6k5K9KC1SS/Im/tj+ffb+skNZMesCqC
14JSp/FKEn51kip3b0m28ZgviOMYPdMphUmqGXPz5RalJnTP5M7+C0u7SB1c
L1my0pLoV55fLD/woQtrybI7mcENSHuST3PJDhapoQWp+7Lb61HOvKHTK3gs
Upu9pXYbL/mAOAoLY+sPskk1e+m0PpDop23aYt6W/GaTKr/F5lz2KKJfL7wx
jxvMwVqmeHAZvQZFXky8/GEEl9Sy4x5bhwTViFlw5/etY1xSk85IKSpPfY36
Y6/rrOnlkmqSZNS72qICnbmp/GJgH4/UR+qbjs6NLUU3LgYYmjfxSNU5rvra
pb4YiflUDIRa87Gus57L0itCqrzlbS/y+aTSBaw9bI1nyKxEpXHWbAGpDQ1J
7x1X5CANE8V6/VMCUvUtxvx4fOchav0b+0OBKSBVTML1larXXaRwTCFvp5mQ
VH0/nbPSD64j2THm/YJkIam0s6a1Bs7nkem68SmqQ0JSxbTs9Pf5G5HXTe6L
Udc3JFDnWa00tdQITRHPTzO/f21xgYj3CTo6TL22mcpbPXKyf/RQ6wfvoKDH
Uuep3Okn90u4LpVnq7YEllVS65a6KxXrvN2pvOp2x4nno6g89uzM3eefiFhX
/E0zRnoXlV/pvB3rMkZEnWZ68GrSM2q9lxg0PnK3i4h1F4z1DydOErGOOj/x
mleFiPeBLueqXzgmoo51SKOtmk/lvvyE88Vsap0sqZg+8tRVKt/0ekv5JDsq
l7/4s/uJpIjnRbzvvbSzQMS6em6jLs2PyqtCt34ds5DKi+zmnBr8Tu1HWF7j
r5y4J+J9EEGCJYouVO6denPTVQ0qp93cWTPiK7Wfqgk5qCiXJGK9xNXSCzu3
UTnLpNRp7iQRvOaeuF4DtR/UkoyTKE6gcqXPDMfD26lcctVcideqIu77OFFq
N75TRJ8r+1JcmCbi+bERv9QTXKm8qmDuNCV9KtfvMu0695Pap6vHlH0490LE
OgfDhw+Onqby7J2/7v7eSOVxsZq37aeKeI92t37h0jYR9xOtalqokC7ivqT9
P4s3eFO58Vhr+nEjKt8+9NbdRlzEfUkHVK9yyqk+DGuG0w6zeCrvLV8efGYv
ldPajiVuWijCLzos0d43AnOJ9Bty1xuFKGLupWsTGMPea/DwsevRR0LUurTs
5LxlmPNzuAmPo4TIZk31r5XN2O+SmD9VfvduIZIJWq7Vdxhz7exJl70XC5Fr
cW7opXHD7o+L3+WDxguR/w8fxvR07L/5+KpL7hEIkKraNtlBW8xrK1qaByoE
SN7vgbZXP/b9khYX5CrdIMZx+cbqggTM7040DbkSLEBaOYkrRyLMvce3PPu4
VYAS0+/ZTWvHPqRPVLX34EIBYjSJT/0ejjl/8pfGWQoCVLMkXfXjPMyb5y0J
6ODxUdqPCwZLarAvyj80Vke8nI9sZqgLQg4Ou1/SXC+s/Qoftab7vDKWGXZ/
paGXOsufj7rpCtvM72Of1j71pnyqHR81XLs8Z4Y95t1rfn2JNSS4sa8uR2zY
c+zdVk9rUuAj/dELzVMfYt+4v2In63gvD7n6Cc1NnTGPfjnZ48k7HnJyX3LW
Ug5zp99mPkUPeai7f47qrnzsY5c8zt/THEvsp+zjsTlumNsW2rqs8+ahmm3v
/pYoYR66bJHUug08tFpZdozZa+y3R89btKFPn4da+0et3RuAec3FxoaT8jwU
0T/j6ro5mIs5JxYZf+Mi+o/Ar2M+Y/9fLOnWCoMaYp4Tv6pxLALzC1uqX1y7
z0XdO0/siVmAOS3okmxIJBepPg2euvITzil8ZOiDKl4En0j7bnkB85zOnAUG
67lo9bJKiV8rMf9jv33MDgMu8m90men+C+cm98SH3mdM4CJ9yWPjMu8PW5+w
V87s4ncOcvhzVfPwDszL2MUrLGs5yHt1V+piecxpikudJj7mIMb8eO/HL4fd
R78+S2h3iYPSVtE+2gdjrmu5fFA8iNjP4hvfwowxp1sfNc9w4qCi5fPS738b
lnMpHVpTZMZBTqbJT5zuYE77WHTtjiYHqU7dPU7Ledj6hC0BC9aM5aDMFgOJ
J2qY675buLCqm426I6VPDjXifE1CWfr89jo2krEY59l1HvNXK/S6e56w0UCq
T8PXtZiL0dynlF4m6gPVM889pDCni2UwV51gI/qI7Sf2heN8UCHTrmnLXqJv
986wfjGI80dr2QdKFVbE9obux1jBmDPtD/K+GRD8kdHVpz9xvllrHKO0fhob
qSpXBURFYP5qttviAjHie+VPmPFIAnPDcwMHJncRdUb9p3mHQ3He6iOXuKO6
ioVoywYaRogNy2E/8fzjn7BQtzlje/dFnOfWvPlt4U7UN/Ky3buVlDBP7Snd
7nqS2E9x89tRl3GOnOfw/WOHGwsxnj1b5D8Jc4X0z05ttizktNmyw/0GzrVz
1ge+2baERdSNnjKvtTC/W9xcl6DKQjbVm7R+pOC83pnOqDsgQ3zOE7M052lj
Xs+Yk5vT24X01WsSz5WX4/HHLF83+UsXyrS91zF+C+bxzLJXUtVdxDjW1qcs
Pmx7jcZcmafE9sWmV+Yml+F5YbT7H/qtLlSzaHJP2BLM+w9LRm6/SHDrSY/e
cEpJfmP2bF3fEOLz5D/9an4Gcw8Pa7Nqry6kOj3UZoQ25k7W2/9M3dmFWkOq
ieH8Jcldsqan31tH1HknLm3ecxrzT0vfeegu60I0/Umq7UaYOyl2xh+eR+xn
79Hva/kleDzf38tNntmFiuTLLk9MwzyLOWFNt0IXop/Y4fnQGXMdGebr0lHE
frSO/2rSx1xBz2+v7R8mcmKu+8X4XkzyDEW/KA5RdzrtW/c0rhDzpoLItkw+
E9k8fuzhexPz3/2zPV51MlH3+wLl3kDMc+ZoPYppZaLYmoqAN7uH7efAjKvt
zcR+5iVPOmSHedXGimrLz0SdepUt6bf6v3NoP9D/hT4n9L2g4wAdN+g4Q78L
9DtCvzt0nkDnFXQeQuctdJ5D1wV0HUHXHXidAtc1NA5A4wY0zkDjEjSOQeMe
NE5C4yo0DkPjNjTOQ/MCNI9A8w40T0HzGjQPQvMmNM9C8zI0j0PzPlQnQHUF
VIdAdQtU50B1EVRHQXUXVKdBdR1UB0J1I1RnQnUpVMdCdS9UJ0N1NVSHQ3U7
VOdDfQHUR0B9B9SnQH0N1AdBfRPUZ0F9GdjHAX0f1CdCfSXUh0J9K9TnQn0x
1EdDfTfUp0N9PeQDQL7B//VrUnyGfznkS0A+BuR7QD4J5KtAPgzk20A+D+QL
QT4S5DtBPhXka0E+GOSbQT4b5MtBPh7k+0E+IeQrQj4k5FtCPifki0I+KuS7
Qj4t5OtCPjDkG0M+M+RLQz425HtDPjnkq0M+POTbQz4/lAtAOQKUO0A5BZRr
QDkIlJtAOQuUy0A5DpT7QDkRlCtBORSUW/1nzgXlYlCOBuVuUE4H5XpQDgjl
hlDOCOWSUI4J5Z5QTgrlqlAOC+W2UM4L5cJQjgzlzlBODeXaUA4O5eZQzg7l
8lCOD+X+0DoBaF0BtA4BWrcArXOA1kVA6yj+vY7+36LQ59R3dlVrGsehqNO6
0ZKtfiyKyg3dm/SSx6Roq9cGRZuaTor6/ekdcM/ooKiFy7J9rIJ2imqkf9GW
O4/V4u/D5/ybbcjl4p5pP+w6SGXOYNuPCf6K6K6cEekzOkmlOTOOBdu0oqSw
i+7VbztJNTyEChJivyCNWNqd8WFMUs+sXyb52oeocx3tJgp0urCy/z5fePQT
KjN0e7O+tovUjD0v4uTDG1C8QbgH2ssidam7Z97ymnqkOytlXdAgi9Sjl6Yo
Rsh/QIObgq+xzrBJVRAPmWmxpRYFhG0/oanKIfXCIc6x09eIPnX5BdvUf54X
9q8GnJGd2vYWMWe+4owx4pKatMAsOONZFWoX+/J0Vy6X1IzB1zcf36tEbt3f
si4Y8UgNd9xUcTq3DJUpSUzc84BH6lZ3/onb7SWIoa+41l6HTyqtKdx0sK8I
3TOMyda8ySeVdWHNabV1+ajVWlZTf5KAVPqWsLmFfTnI2sphhQ7Rd/yrrh5N
7bxRj5DnqlTBL5aA1Brr/YxdWndRkFbI/LZ1QlJtFlSZvU5ioOhRO/wqsoWk
0tzzr9QuOEOe11on7yc4dFLnr4byjeYWTlQeMbG+RFZAnQer7KfcYB2n8tyy
gfuV8lTescyh5hKDOv+a1+7O3mYsYv3nJc8puSXUeb8oe/SmH9up3LVu/xS9
PhHrVxc5jGiLF/H8t0iLoidLqVxs6EHgoVYR9dL+S2rLwkW8//FwfMdLbSpX
PWwrtfc9tR6r26MQWB0s4vkVDheCdHVE1HsXfb78+UitD3PzL5weiBDxfL/B
puoxhlSeMT31nV27iOdOLGsf8TOBym0cVRdcsaJy9TNZhev/Uutq37sW02fn
iHgvxk6N891uVO4gF95dNZPKlxqkq8d9FPE+VrfYsQYRVK665tomSTMqV5zm
NdgtRuVORlEmbjnUvsZfh3Vp3mEqNx514/nHRSL6oBFXM817qP1X/qxHeTFZ
VG68OTwg00vEcyf6BPopelSuFJxgUNhD7R91tu6ZtP+JiPcULzT4pXBMRN/q
/dp6K6JyrazOxzHiIp6Dqtg8xqdCRD8eGTdNJ1LE/SBfmc2rV1N54tinC/Lk
qZxX2H4/4gPVB/jtclbB9QqVbzqV19G+j8pr0lNpm+djLlvlqz7wW4iUhtS2
eQxgf0PFPUFvdp0QVUQF9G4/j/mndZ+yT98WItXSmeYNszB3nK0SvPS4ELk2
V5gmPMO+Cs1CO35ggxAxHuw/wrfCXGPfonvZs4Wo9YTsQ7Mv2M9xyssdfDYk
QN3vqr9/CMQ8dLLJxdUfBKjCZPzhhRMxjyxqrPmdIUAOu1Rl/TOHvZ/d5Why
2EkBSgt+cPq1NeYWzlEZH52Iut9/+7xp34fdt+WbbLdwEbGflFH2UpGY23S+
pm8nxuXVBX+Wd2lhPtVx8HRTFx8Vsb453C7BflrBypU0yUI+ctC7x5DdhrmT
Xmz/3Dg+6vZxZXl+H+bjhaytKfLio9ayfJm2uGG8WTri/io+ctIev2mBIea1
T8M3zFfno9iamtdBn7CvWHNN2nXJEA9FxMiHxR3DPEmuzymD6EPo1/Z8v685
jIe3T3z7hOA1uTknX2OfU+IsLerRRR6ScZ65fZkf5rJXkr8IDvKQknSkzgdl
zN1sCwo91xH/16Zx+4SX2Hetlm2+ytMm5pvLWtHr3Ye9f8FP4d4Goo91upOp
bzUZczfmGu12JhfJFOWyF70Ydv/j+ISsrJdcpJ/+k/bCHfOCFR1Tmxlc1JBq
UqI1AXPT1Ve4SUS/lJgtbS3xGPvSSUabsmZu5yJ6xEbaJhfMB4VVN5ct4aLu
zWJXlBWHvR8hY6VUxBQuYszTG1P3HPvkCiZznBb/IOrX8fu8x7kNe05+udwz
Th0H5X6/VmupiLnjggeqdY84xLiXs2HCc+znZ8Vu2NYSx0FF7LV79Hwx98vb
MVPjCAdpvfewbZmDeT3HvbR0MwcpvY729PqM84V7g4t8k405KPN7VMrpaMyN
Rkpmr57KQTITZIsfL8dc+6tJ8DyiD2TNVyj068c5iH3FQemKT2zU4Kss35uC
ubSPQtWkfDaKvaY/ZGyP+aTJj7PkrrFR7lPzF9fGYF571X2W4DgbqU6dmpEa
gHOcVOVZ5pa72IgWc3eTDxPnPhe2XVrx5J/7FCqHrOI2Y16dLJ9po0nM6xNt
vS+8xLlSTfLqqDejiT52onuuzBLM65PpLlbdLKQ/MVTs+EOcZ33a+Xbu7loW
orXIfeaoYt4/efrN77ksVHMkfkHBFZyXOZ5pXLjmCsEL0BivMZiPkbxoVHWc
2I8iW/7PUZzHhWsWzF7kzEKM0of5Ct0412Nu6tyluZKF6GkB7JdbMDeZo1GZ
TfR/qm8K+afycW5o3+3iGzuKhTIfjrB4Pw/zJuuiGXO7u5DNyRdXP2biXPLV
zSl8j4Yu1L2Ifl3VBHOb6EU/ZhV1odjiiXX3i3AeqnHUzlvqdhcqckw3mGaG
eU9ze4V0DMHtfHgzX+O8tWjFoZkyRwhuveS2li3mhorld/84EfXN3na73g6c
89J40yZYrelCtOSorYFemCuM79Rco9+FnOyOlnt+w/mymM797qIpxH6aXLJe
0jEfDEvYPFm8C7Um9j32lcK8u5le6Mlioky7sFz1SJyDW1i2MW3eMpGTj3tI
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
5fjjBiZiPDrnF7UEc1U9xvOS5wRnqha+L8T55tJ4vVPfUplIX8i68WQF5q3i
6g42Z4n+dVR27rlynJ8y6v1tDh1hIlWD7eeX2GFueKxt4eHdRN1T0zA1rgHn
tsrx6UO8tcT2zVnfl//AOe9Up6/qR42I7V9Uez9Txdzn0at7fjOI/mqAU5li
gvPigAD12y6yTFRU4XFqhCvOnZMaTyok9hJ1Et2kpDsa59f1zo7n1Fs6kRPz
1j3PJzjvtghj+rq/7kRF2uLn5n/HufmNJPTz6mNie9nA/IVKmNMtLTc+ZRD7
ZzONTFfhXF7tmva4mtPE9ovuJqjuxrl/UWD+YeGRTkRv2X5p64McknvHBScu
I+o8p6pfvQcnYG5owhDU/PN8aosVG+d4PcbHoeDGrL+riP247N364232sHnt
kafqYmL7cYOrzZdg7tGenn9JpxPR2nJ2iBdm4XFv9w6DuOmdiNH8gF9pgLnF
Z4fmOROI4xDrfyvl8SM8/ui6lsyWIvZTOj7lqCHmGm2+E0f+7ED0D7H1FnkP
8fkgsTqxSdCBaOo135M3Ya5xI6g1nklsv5P1skMc86LTQdJ6TQTf1UWrupRJ
8leHbh7yqO9Arcc8ApY6YZ55FdHqiHq3dX5giOV8zA2zgzr+viHqV1k2b2gi
5haSh1UaK4n926lb97988F85tB/o/0KfE/pe0HEAjxtwnKHfBfodod8dOk+g
8wo6D6HzFjrPoesCuo6g6w66TqHrGhoHoHEDGmegcQkax6BxDxonoXEVGoeh
cRsa56F5AZpHoHkHmqegeQ2aB6F5E5pnoXkZmseheR+qE6C6AqpDoLoFqnOg
ugiqo6C6C6rToLoOqgOhuhGqM6G6FKxjgboXqpOhuhqqw6G6Harzob4A6iOg
vgPqU6C+BuqDoL4J6rOgvgzq46C+D+oTob4S6kOhvhXqc6G+GOqjob4b6tOh
vh7yASDfAPIZIF8C8jEg3wPySSBfBfJhIN8G8nkgXwjykSDfCfKp/ueP6mv9
yyEfDPLNIJ8N8uUgHw/y/SCfEPIVIR8S8i0hnxPyRSEfFfJdIZ8W8nUhHxjy
jSGfGfKlIR8b8r0hnxzy1SEfHvLtIZ8fygWgHAHMHYCcAso1oBwEyk2gnAXK
ZaAcB8p9oJwIypWgHArKraCcC8rFoBwNyt2gnA7K9f4zB4RyQyhnhHJJKMeE
ck8oJ4VyVSiHhXJbKOeFcmEoRwZzZyCnhnJtKAeHcnMoZ4dyeSjHh3J/aJ0A
tK4AWocArVuA1jlA6yKgdRT/u+sxyOv0f1Gh/RhW/GaHrudT9FUsS7K+hUPR
HoU6ydATLIqGW3yfa0/0lf+pgb/GNcZGdFI09ed2lWu7OijqXXvnykuzdoq2
TvZRPzmyg1T97bZrcnu/olHBcxIbejpIPfjixbQl51uRrtrCEwcLOkk9Gu8U
mF7+BQVk0Wr+RjFJvdBpGiO2vQnV6p4oFK7vIjXcL/ClvvwnxOx+YfRQnEWq
lW7eNt7gR+Td3aiJbrBIzdQ7FLFiUj3SaPp2vHgNm9Rod+3Q3Fl1yLmuMe9n
J5vU+pBDbyese4+m5r94vTGcQ2rW67wrIz1rkPTehL16k7ikfrruc5UdUI3y
xDzNHO5wSU39ddBdMPIVutsYnFdvwCNVmil2/UddGTJ5en7c/VweqalpMSnc
9BJkljyttdSYT6qHzdbn29OLULTzzUrrIj6prnZrz2z9nYfaR1QPXF0kINWh
2dn+zJ7HyOdBX/v1dAGp+tE/GO9ZD1Ct+RfGFyUhqfpn5nBV028hx7KyEvko
IamMN3mWn3kX0dbXzQuEfUJSxXqTXXbN30GevzT5dal1J6jjfKu5xbruvyLe
a3awsFWZTuVNA1ekyqSofPWlX25LT4pY3/jC9cNiBSpXVq4vehdHnQdtWGd9
L8wU8VyOy+Vdp7Kp82wD41qXoRWVZyT/eNfdSZ3fZfTvT5gcQuX6nzsuyCpR
eWvKzQ56HrWuqDnUYcncSuXZI8tG2gxR65nuU11jO1Kp/Mzhkp4/q6lcx/la
w2Qutb7SX6+ZLH1RxHrdRcL6P4jKu3/HLfPnU+s9udd5z74mUjn95GmXvFVU
bry6QSOkl1qXFum8/HL8OpWvHp8Zf2ydiPdC7gzv50qJWBf9ZfvH/kxq/Rxn
qtgd6CZiPcattdO/z6Ry9W+Gpns/iXhfp7XyqZyzVM7YqeegvEbEcxF30YZu
jKTyitFWTzuKqf2I96MEtm6wiOdgWJ2g05ZSee7Xu2e2DVL7pgHtxlnqT6h8
ge/IpzwfKu9YEvlrmz6Vy/TIKfC7qX1f3Aa/SPVHVC6WMePIHl8qL2py4+5b
KuL+hSn9fzeIY26bQxdD74Wopnz5ieRo3OeaCFLmmt0UoljbyfzbUzF3Gozf
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
F+qLoT4a6ruhPh3q6yEfAPINIJ8B8iUgHwPyPSCfBPJVIB8G8m0gnwfyhSAf
CfKdIJ8K8rUgHwzyzSCf7X/+qL7cvxzy8SDfD/IJIV8R8iEh3xLyOSFfFPJR
Id8V8mkhXxfygSHfGPKZIV8a8rEh3xvyySFfHfLhId8e8vmhXADKEaDcAcop
oFwDykGg3ATKWaBcBspxoNwHyomgXAnKoaDcCsq5oFwMytGg3A3K6aBcD8wB
/yM3hHJGKJeEckwo94RyUihXhXJYKLeFcl4oF4ZyZCh3hnJqKNeGcnAoN4dy
diiXh3J8KPeH1glA6wqgdQjQugVonQO0LgJaRwGtu/i/a71H7OLzd40P8ymq
4BE73WkOj6KMENOYjcs5FLV6pfWi5VsXRU2kdoc7hDApqtEZXF8n20nRorS7
Ggnf2ynqx/G6OiIW6zrGlgm/b7chPwU5zk6/DlLftPFVvdd9RTnexfJ6eztJ
bbqXW324pgWprX5bOk6PSWq85vn7NYebkdqHT7cO/mGSGk8/MDZ95GdkPzUj
ff+zLlJ/Z/76XVzdgPJaeec3e7BIrXVcvOpnXj26kFZykqnAJtVC+rGX1cs6
ZBH3uWk/MS7/q7pmnvuLa94jC4sdyk5OHFJ1dTvvtnypQal2Frve9HNInTq0
JXfOojeox818lBpRh/+rVsf3VugWvEI6k6dOmDuVR+p3X+cLf3aXo9A7nFBL
Bo9UnjSdRVv2EkX6/7lnNpdPapnOON7+30UoIOdMw5t7fFKtDu1rtP70DFlH
T+QvMBCQ6ur0py3s4WOUOgLZz2UISNVvHd33IygTMdP3vRcn6sN/1altlUXd
yFT0p/73oqMnhaQyMhPoK3/Go9ptnZUf+4WkioXz1qf4byPP0yLGLcmvJ6nr
OhJ/rbYeOUAdz1VrxV0Nj1E5Q8Lk5OZB6jwSG26k8fQ4lQ9oXIyaNyRi/YbG
+YVXwkU8l8P7b5+dnIj3sl2y4RVdpc6PTbQ1z98soPI63xVlpa+o86/88U82
+3eJeA6YYZxX7R/qvL/0RaT6iMtU7qD6eSB5KZVr8bbWjf5CrTd4Ad9S/Y+L
WNeqrCBZOZ3KI/SuXR79klr/MEYfs1vlRuUDTVO6V0wU8Ty3yuvZBs+p9ViY
hvKZ2P1UzuhdPmpQkcqdRlqtulxIrQ97Sz8FuntQeYRYusbOqVTOa6233VNB
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
q/+Wn8vftTqGy8OcDXcue0Pwnx7Lyhqj8XMecjcrooI4j9vyGQcsoricsqLt
9zYacbx1iNV5kUj8PHTJm4wvILj3zGl7xSN47ptJvl42cR6mwjdpxXA8Dtyc
s6D7EXF8RWZWeE0Yfk8LdiW6ZhB8+UFRw7n/nUPngT4Xuk7o/4LuA3TfoPsM
fS/Q9wh979BzAj1X0HMIPbfQcw69F9B7BL130HsKvdfQOACNG9A4A41L0DgG
jXvQOAmNq9A4DI3b0DgP5QUoj0B5B8pTUF6D8iCUN6E8C+VlKI9DeR+qE6C6
AqpDoLoFqnOgugiqo8C6C6jToLoOqgOhuhGqM6G6FKpjoboXqpOhuhqqw6G6
Harzob4A6iOgvgPqU6C+BuqDoL4J6rOgvgzq46C+D+oTob4S6kOhvhXqc6G+
GOqjob4b6tOhvh7SASDdANIZIF0C0jEg3QPSSSBdBdJhIN0G0nkgXQjUkQDd
CdKpIF0L0sEg3QzS2SBdDtLxIN3vP39knfAfDumKkA4J6ZaQzgnpopCOCumu
kE4L6bqQDgzpxpDODOnSkI4N6d6QTg7p6pAOD+n2kM4P+QKQjwD5DpBPAfka
kA8C+SaQzwL5MpCPA/k+kE8E+UqQDwX6VoDPBflikI8G+W6QTwf5epAPCPmG
//YZIV8S8jEh3xPySSFfFfJhId8W8nkhXxjykSHfGfKpIV8b8sEh3xzy2SFf
HvLxId8fmicAzSuA5iFA8xageQ7QvAhoHgU07wKap8F9v/7HCJ1nmCGTOSza
Q4r2jLo5Ocu6SFHvsveeCFsWKUaG5iS4j3aSokBof2RNHIMUaU5SA2XnOkgx
32aR1eB3HA8P1A7NEPuMOk48n2rQzuDG+6Z2fbMf0JFo4J5n0TWd3Ni8v/el
esxH5KLnKP08nsmNBbov08rkW5FV64kJ1JMsbhx0uvX9fEIzcjc3+KUrz+bG
lBGlmfpX3iOH/DnM8lY2N9Y25JncP/wOXbnYt+mCbxc3Wh5XUzhzsgH9WFlW
nLGymxvnO2Xm/nCqRznjNnep1nVzY8H3bf4VC16jzI9V1UeO9HAj/aXumjNn
q5HBz4rPnLEebrRSM3p4XKgCCS15Of5OMIcbW2bt6l+UXYoaUqMMmbN7uVFk
6nGDmFMvUKKiY+gSop78J1IFFmjLHS9Eykd/Rk9d3MeN7EqHtycO5SCpJj+H
pht93Fj3MWPlh8pM1KuTeXtApJ8b6ww9Q9wqU5BfeLO8hW8/N9Lk1XJTbaKQ
X6Vrs9mXfm4UyKlvXjPegfs8shf/Tomikud1DPn9uc74QR6fUz+WfDRyI/OB
jJGOy9/J479/ypOdbm585g2qf43I+0LOLzV5fRpSp8hcNq+H7jdGzmuhMalF
y6+S+QbammVJi/jkx3ZhkQU55HzqoVha0W1A5rc3rg2Z2cFnfbDxp4tdvMk8
PcttF12KzDmzfbLdn/KpKzyvSUzaS+bR89mxhj/JdYtbiG7yl5tkTrtVpaW2
gczr7jcWXu4h11HOl747Hw/ns6/fofBVxtpkXlc6Tfh+J5/9CrWnLH4fQOYD
Kg3hWVpkbrw6fpUri1xnth5zad0fQea3w55t9Dck88TOkymvx8h1byt6IC30
mMydN+01WG5P5hxlYakYaT77pEx983VSE7lu1/zefGRvKJmrZWVTMo3JfChA
bHb9eDJ/S+/I/lNE7i/idg4tGDxJ5ipZii205WSuM87aKbOH3AdleissdblP
5rLDg6ylR8hceldRbf4KzD0FjkqaDfYjFZ9Zz7bRcR83fLslxLC0H7nFJbFy
nTCfbWrQGR3WjzQrVqwdG8D9I/Psp4QeW2I8evJAzOQ45mYPPDSjlIjxK0tZ
1LOfZ9/Vw9pJteP6EeVy+KwLFzEX0hy7M+0N0S8H/74pK4q5X9X1C8Ipfch0
2NVAKoFnnQ2nJfPyTvWhxIDP+jUKmJsz27tOGvahpqLsipRcnn7cLi5PVZo4
/w8/Ex8DzK+0elrt6u9FtktU7XY18vT1tpaGI0XEOH7MJveHDeYFo5ZV4671
EtdDP3OxG+sJg6FWYz4HiPM4ff694SzmBtvq9a01e5GKQdDSLhHMJUY37bMS
70WZQ1k97ak86682q/36yOIgvYWCRzP0MQ98sijcvoiDmjbu/OrxEesng3Ql
pBPFQbarBuJne2KeJqZpuc6VgxSWiNgkS2Cu55P79qgBB1FKqsLmZGLdxq9f
o/3YQg6qM5+SFbcV896ic4FbfvSguk86LYUsrBdNuFJeOlTbg/xtB3p6L2Au
/ELRpiKlB0V/7u79RsGcOTkkLMmzB+lFdrpFPubZ9zleLFPbvAdJTlmiGWGB
uapmaJqySg+iBjsqHh/C+th8Y5+LulN70GZd/S3ScTzr/dofrz3b2Y1sh+J9
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
wDfy+MluNVzzw4HMxU8ePi3EJo/DklMqFRc6kbnpfF+xuK989vNa6x3+5zSZ
h8d+3IjnS/Gc//t554zLZM45UGZROIPMvz0NHD+WTM5fgnKB88TW89m/7GFA
YOt7ct4UGH/JY5I7mVOsBbwWifBZ9+PA2YVhD8n5mn5aw75nG5mHKhurbfxO
rhNqBvereEeSeXjB7tVeWmROuxLycf8Hcn1ifFX5ypoAPuuSJQd9Ya4kc7WM
gcUSbeR6afLTWZ80LvOZ73FY2PilOpmPzCvS39bBZ5++lKsWH4L41HsiNwOz
1pJ5cFpEVWwfuZ6sMDaJOHuTT106ftv4qF185iHnmR59LELmAsfSfXKKyfUw
ZXnFgsenyfztsqQZtFV85oHIFZ5t7CPX5yNPQyyL0sjcbWtyeuYhPvO6l793
9pTns8/j4urPc+l8+hTFo9Zh8WTur2vmMWjBZ5552JpG2dl8+pTvNm916sn9
kYh5dJRmOJ91EdNCC0ys+MyTr2zy6pmPuZWXyeN53URdlfNi7cZKnr7vnRDd
NZ/o+2ZPV4nYhnnWMtrNiABinHKhi/x4j/vHxNUmqsutiD506jqq+37MFY1a
7ixc2o8c828teM3E/Wmb2uo3LqNEXywYeOX6GcyV5cNbZ9YRfbTN8SVqkzHX
mjFry2ByHwrNyNam38B9sf5YRH796T6U+vvHtuBlmOeIdTiu2dKHNt9d7SdW
iPvuK1IqWpspfch2vce1bFOedTitBg+vHuxF4nZ0f2E67vdNYnJuyJf3IprP
ZqrtUczXLtpw92tkL5I0U0za9+u//34k0aRhX/V64vzrxV1G5Hn2jZ3wTjVn
LjHOBoT7bKJhHaNl7Fv10UEOongzvKNsedYPGZ3ZsKuGgzzOZIc0jvGsj2ox
Gl1wm4MSrc6cexOLue+jzn0LvTmoQlvX5ZUm5soOeo1nLTjI7U9i1JMWrNuU
yMbGWK/gIPYH3/FOpzCPMS90CZ7EQdQm8xmfZmBOudRWf5Xeg+pq7okcfIR1
pEaVsmv2uT1IctiZ42HEozu1pm/XvNqDdi9RqQnuwPqVw5/djfOP9CDquY9R
VUGYqyhNTPXf2IM8+kRuv1Pm2S/mbXVBLlEH0K+P7qhuxLqZi991KefRbiRu
6rr+6hnMT7HndT5t7EYKZWWF7yQxrzO5s0DzYTfyXx9vLJLDs07vxi8fiq50
IzflD3ds7HjmgRisZdYcJs6z8gaiTsZ8/mjCAtqmblQxFGJsm4V1RZNn429r
ynQjvWahGNHdmP9YLa9weFw3YgfZMPwmYG720HCtC1EPmWpozp3+COucAt+V
e1SfdSEq42v1OEvMR9fOmLzkRhcaUN+jUDKK9VWnnfszd53sQuIpzGPpRpiP
mmc+P2NOHP/4WL5tJtZpu1Wc7uxT70Kh32ZoNwtjriUo+6Cb6Icps7IdIlyw
Dpxya3PDpZ9spKdwhBL/DuvGGRtdGs+8ZyPbvYtV9qvzzBt5MfJo+RM2Mi3r
P9MVgHXpBvXgh4HhbEQRfebyhMmjYx9tHZI5wUbiy7a2Zm3AXOqxUsj67UR9
6fmp2jgS6+TMwrX0KmWCZ6rt/8HAunrVs62MWhE2GsgOODlRD3OlMxSWfx8L
0a2TfNNTsW6fqPg17vkboq59VyCePx9zh1st9/OyiXy8ZOOe2MvYF9CbVuKi
fIOF9Da9lu0YxT6CtIGzpaYXC4Xum1801wXzdM9ZjbNtWcj24JHlx+nYp6BT
z1sx9Ah+0bv05AbMA091ZTXIsVCmaYjv4mfYB/FSoMkHEP2bWxXtRYYi5u4t
kTd0e5hIb8PXP5rR2E8psFp+J6eaiRLLWGuuDfP83raq7JIp0X/YfmuNu34M
c2Z/5S2LcCaiPvyikNOJfZ+Caa8+TfQkzmMoZDPfDnPmJ93ubzZEnVF0Qv5a
EfaVqjIeXso1YCJ6ZavmshLsQwlJr3F9rkxcp6T2VrdK7Fu1hBarLZAgPjf1
htjyIuxzOSUccDo83IkoWn1LFlRgXywtTWil/+dOlJi2vnt7M/bR3Le7+CS+
7ETU5RunbazBvpvOUEN9XjrRXz7etEqzCPt0aVPHmZWFEec5Iaz7pAz7elXz
lh+8c7YT0WfVDp58i33AhoDaqHsHOpGe3aS+hD6e/WK+OHN2biM+13mdzva5
mAfGUpOWahOfKyFkmbgN+4+0beF3fGWJ4+dXn5Z1wX6ltERVb4448f8WMQzl
7mJ/U6rtj4T+b6JOSh57ebMO+6GF9y17ghgMZPuEuvJ0L/ZP072zVo6rZSAa
e/yXqeMxH5z7aXlgLnGeSa73qs3x7+iN04U/XblN8FPvnGd9wH6uauPU1a3X
CV7IMVY7g/1fKQHREEUfgo8XVDabg/dxKLi0Vm/kKANRj78SfFKE/eW0aa62
w9YMpCd3wz/EAu8TofWsfo+fMXF8hZ3S+WHsX3s6qrM7tQm+VEn2RwZef6Dx
51kVLcW/+1k8rAwyxj54h2/xFLu5BDdZVZL6G69vEJnw5ev+yQQ/TR9OuYt9
dloa5ZHvb6JefCCVEWaMffma3rUH1Ab+rvOQcW+FP95fQ1Ftj990RgeiyuuN
FSbhdRjobrPPMd7/Xc/BJyvrKV63ITKj/mRuNXH8whLHtLdRXG4afrGyhahr
qUq5XiuO4/kGPy6udvLNJXh5erR/Op6fIL3g6ox99wmercZ8XI7nM7glMyjL
bxM8IF9G/S5ed6K8OlbAPo64nvcWkh5H8byIuoEdx478XT96Xc/hsEdX/yuH
zgN9LnSd0P8F3QfovkH3GfpeoO8R+t6h5wR6rqDnEHpuoeccei+g9wh676D3
FHqvoXEAGjegcQYal6BxDBr3oHESGlehcRgat6FxHsoLUB6B8g6Up6C8BuVB
KG9CeRbMy0Aeh/I+VCdAdQVUh0B1C1TnQHURVEdBdRdUp0F1HVQHQnUjVGdC
dSlUx0J1L1QnQ3U1VIdDdTtU50N9AdhHAH0H1KdAfQ3UB0F9E9RnQX0Z1MdB
fR/UJ0J9JdSHQn0r1OdCfTHUR0N9N9SnQ309pANAugGkM0C6BKRjQLoHpJNA
ugqkw0C6DaTzQLoQpCNBuhOkU0G6FqSDQboZpLNBuhyk40G633/+yDrhPxzS
FSEdEtItIZ0T0kUhHRXSXSGdFtJ1IR0Y0o0hnRnSpSEdG9K9IZ0c0tUhHR7S
7SGdH/IFIB8B8h0gnwLyNSAfBPJNIJ8F8mUgHwfyfSCfCPKVIB8K8q0gnwvy
xSAfDfLdIJ8O8vUgHxDyDSGfEfIl/+1jQr4n5JNCvirkw0K+LeTzQr4w5CND
vjPkU0O+NuSDQ7455LNDvjzk40O+PzRPAJpXAM1DgOYtQPMcoHkR0DwKaN7F
/9V8j7TkA/Xqa3tJsVyl8oTlkW5SNNNLNH16g02Kzq+vi1l1MEmxdZqm7+Pw
TlKMi69blqfPIMV42fGhlDUd3DircmTJNsUO1OtYvnjCegY3xts1bvkd145O
Rd05uE6xkxtfxV1mxevRUaLA13t3xJjcSBlbOl6svg0NL99bX/+WyY0S7j1B
gT4fEJ1VVqRwj8WNtpsf0C4JNiP7aJfGj9vY3NioketlL/4euZQ0dL0b18WN
+U8urj83/BY5ZTxevjmpixtLfrLcl8xtQFoiKQlLTbq50eyD6CJfyXpUbi9l
J97azY1W9/Znxb9/hQZCN93PcO/hRtuYHSO9htUo52dDo+PPHm4sWDn5Z6Bq
BUp+ctC97wKHG5Wex2853FeKRGOKH04lxsd/Yra9W3v+xGJkZTyvd9ivlxtr
juR91kl/hrSu6ers+tnLjaYrpyuPc8xD7g4jW6Nc+rgxetUyY3brY8R8QVl0
p6GPG23f9DIuKqQjlY3nGl039HMj1XcpIzbiFlL9/iZeJrWfG22FjjvuOBPK
fR79W5vPyHWRx9UTz4VY9w6SeZy5vFwBkzw+78z0/Vx+gsydad46xmPk8T/4
o5WF6BU+8wOXFbb5SPLJI23O/Sl3yHlHU+W42JfVZC57LPhFRC053+V1B028
dIjMdy4sMgyexGdfM9fh9KJkPut+LDBxjlnHJ1/P3zwszeKT94d29giG8Mn7
jxU3mavyWdfrtv1ueiu5rnA8YmXzicpnfohyxUy6IpmLbEm56lVPrnOaJjn8
HqLy2edOdGqSsjKZl3awBvo/kusu08g49ulgMs+bJdq9U5fPvnu+cauk+8h1
4G7VqFu/Esg8/N1W5+ZtZO5h35HQM4XMN+ve6S3IJderm2M62A+OkTnd4I9V
jSKZJ64+/SSZyWc/RMPpNpfj+OwLE7pUR343mZtKPTujMIfMd795ybnbSK7/
KzK0F3tGknnp7U99t3eSeWG67+EFM8g8cbpX7vS35P6lzsFulv51Mp8c6nP1
lgmfdUJ+rTkUPI3P8RO1J0fU8Nlnc96EJ/rXyVxyhseHNXvJ3Ct/YdHxRZh7
ntIQN+wjxjEF/9ScBtw/Vp0tKfen9SOPJ+yBXfsxf7Zyc+6x8H6020vNSHoQ
96cpS+8kHCPGLwpbWizOm2e/UQnjGGnVflS34rnPyz+4/70yVKOYNJkYH10E
jkREYN4wvPbL0099SHxQ6sOuFTy/g5gctPJnVh9yjPzwu+sF7scFdrulFAUQ
42CrJMVmN+YpgapSozZ9KLGF+mKoH/f7vprthW5qfWizqGrTXF/MW/JcOR1C
fYjyaubrNdMxT0vV6vj1sRel3pmR55aBdQbFozodxY96EXvWHM1DOpiLtsnq
r7rUixIVWu+O1mAdw61/A2OxZS+KNk/Xer+PZ3+ZuwlV91f1Iv/FIZ4ZY1g/
ufLzsn6QaC+idzcotN7CXF7ij5RwFwfRH3rr3zDAnFJtOS6smIPqztr6HmVi
3SbSNqosN46DPI4Nu1Rfxlz1Ul6rmgcxjpvULrmohHlKnDjtlBkHJV5eSk+t
wzpS2pahvtNLOUjhmfO7+4cwn93p9KVxIgfl6QTtuTGNR4+aNWeV6yciv2ev
8Q57gHWttt1JryLze5DCxwjBX9t4+MzDZ+uuETzbTy2Ag3WzrFFbBf+jPUjP
8+uBt5GYN+zqvrNjSw8Kbay8uVWHZz7J6FDtSQWinjjTd0G+E+t4DWMbmi4I
9iBx73TpTUGYe7o9l37yuRupzG19WaqBufeGRTqa+X/3jzaLFHmNdUU96sT4
M9HdKJF2ZbKKN+am3xT0t3t0owo75pJqJcxlRBebyJl3oybKOz3r91jnZG4W
euCg3o30csSyqJcwp699bmYwk+gvYvbUP1zFs2+1iegC6a9Ef7F+0RaDNt59
Zy6+Uq3/u36y0cVxQTw67Z+1shuJvtd0LKZFSYPn+PsLM+YHdyGqxc394YVY
75XZtiFzunMXygzadWy3NM8+3S+1cm9u6UKUTrnwuZ5YT45Ur2q8pdSFBqYO
rlz6CevSo64+BUiU4IqXb+uux1wxtX5CM4eN6jZLSqxNxPr28IPB449r2Yju
VKzrJYh5aLrg5IAM4vh9cxQy7LF+ruJ5TXZjKBsN2L3PsazHejtd0z5S6Rgb
2UoTaVMdc5c3Qt0TTf/ue774+vxQrOc7mfdnP1rORuKZ6f4eXVj/p92+p3FM
jI1oq02na5hgHte6Y7HXVxYS33bzvnMh9hdkek67lzWyUGaUxboPKzGvobfX
ZD8l8vqBwwL+adi/EHow/8bhBKKvcwgfFZvPs4+8+bfnNy4SdfmDsgKBKOyD
ZLEGGoMcWYjql73qqTDm7hb+uXImLKT35F5EoQ/PvvZpG9MVVhF1/o691tXD
2K+Je21YsWI2cf3TjnX1ufLsX9M+X/PmMBOpHIyQnNOJ/SBa8VWXI61MRKut
lJm7FXMtT7nf/S+IfsP+KethJc+67kMPpr27zUT0VifDpZqYN9o9dowJJM7f
d3aq4BPsW1U57aQFuzPRwKyUF0XrMDfbKy28bg8T6cXOOxgYin0x5vcLN+/q
E/VN7PyVwbexj0Y7KZaTvIyJqDdipA9mY98t2UNH5M1sJrLN2eupxuD5nfXO
a5+N/65juzmjWaAf+3rOT1VWD7E7kd4O1pLHczEf6TOxLqvrRPRdU+88WcKz
Dn/mfun6nL+/+66bt0wW+4mzhbbM/H2TOF6nr+qVOvYfjdqoPzT9CH578q01
utivLJG5OnHW8U6UePDK6jcnsL+p1MmipO/rRLTBaYb5j7EfmjjxmOCgEfG5
mk5K53qxr2oQGycjs5o4XnzBAZslmKcY/67bI9+JqGN1SyPPY3829NSIQtpM
4nNvtd648wr7uVopH5v1BIjzn3t8wX885qdWiR0+0stAiUNRUqsMsC/sflHW
z76FgahKLms7LvPs16Dvn15bykA0gzue023x+gAOztTKydlE/ecx+flDcexT
6/SUM8+lEMfbBk7qHofXGWi4cbdcJPrvfhOSl/7QeXzw1MZBq0DiPPJlIvNe
88xXcb87xdubOF541ovSWrzugURB6TIroh6lBuw7MvUD9t8LVDvmUg/8PZ42
cXwL9uvd3G5ON9tNXE+Fra03E6+3kFPqkvxlKwPp7QsrpStinpZHySon+nY9
l6tjl1bj+QADK4+os9YQ52HaKIn74fkDoQUvHnesJI4PW/yzshPPNzilqlk5
pkTwiQfyWL6YO9n1+wXLEDwzK3C4POm/cug80OdC1wn9X9B9gO4bdJ/B7wX4
HqHvHXpOoOcKeg6h5xZ6zqH3AnqPoPcOek+h9xoaB6BxAxpnoHEJGsegcQ8c
J4FxFRqHoXEbGuehvADlESjvQHkKymtQHoTyJpRnobwM5XEo70N1AlRXQHUI
VLdAdQ5UF0F1FFR3QXUaVNdBdSBUN0J1JlSXQnUsVPdCdTJUV0N1OFi3A3U+
1BdAfQTUd0B9CtTXQH0Q1DdBfRbUl4F9HND3QX0i1FdCfSjUt0J9LtQXQ300
1HdDfTrU10M6AKQbQDoDpEtAOgake0A6CaSrQDoMpNtAOg+kC0E6EqQ7QToV
pGtBOhikm0E623/+yLrcPxzS8SDdD9IJQV0R0CEh3RLSOSFdFNJRId0V0mkh
XRfSgSHdGNKZIV0a0rEh3RvSySFdHdLhId0e0vkhXwDyESDfAfIpIF8D8kEg
3wTyWSBfBvJxIN8H8okgXwnyoSDfCvK5IF8M8tEg3w3y6SBfD/IBId8Q8hn/
7UtCPibkezIBnxTyVSEfFvJtIZ8X8oUhHxnynSGfGvK1IR8c8s0hnx3y5SEf
H/L9oXkC0LwCaB4CNG8BmucAzYuA5lFA8y6geRr/PJ//a4TOY+tZQUvN6CbF
3oCEOGFiPPp3HLY+lWY8l0WKgxnzDH3LO0lxr+QLm/kuDFLkPNmptIPIT/+O
h7ee0/4jweDG/YHF8uM+tyM9qnXv4d8MbkwsGpzX7kdHDk90po373MmNNZ8M
341YfkTu9JRygVQmN6bsm5o+OqkVybPEC+acZnFjsFFtfV5MMyq4kue7mcLm
xgbzxhPyCe+Rlq5tzFg5mxvNNn5SEbz/DmkpoE9uh7q40ezyeruMygakOmOB
bMekbm50qLwTZs6uRw4bry9qT+jmxtoVhrF7KXVIL1HI7JtyDzdSdZtEDTg1
qObX9eLR7B5uXCV31U20uBKF2S7sy9PkcGNwof6RtPvlqHur1+k9jznc6Cc/
W/VDfQkqUGp+t1CllxtTBtkjep9o6IrpyKtnqb3c6LhGyVhqTiFS9V9o5yDd
x43R8ZccVO/nICu6ftkm3z5urDtbT0tqeoQilzt+SOb0cSP9lrZrct09FPOx
MGm3aT83Ji7a8jzzdCLKujh9vn9OPzfSdFznfg8O4j6nKsXmj+uY5HFYILEk
3PoAn31hflF2OH0lj+cim3SPhvrymb+3N/aE3UwyT3TV7NdJIeeRvRPuqcdr
kbngE8tNxS/J+avmS5br0X1knrfqFWXmN3J+VLFf1yITQeZ6l08MGq8hc+qC
Tcet2vjM93h+Q8jiPJ/91DIcMmYuJnO9APebI5XkOoF2Nv2hnzuZN+2/Q1Gk
kDljodkW1Wo+6499pgmoneQzH/Um1SVTlsxVnPUmTq0j11GbteJ1P/ryWT9E
pGD8PQ0yZwcpCvqxyXUdZ8zqoFc8mV9MizC0M+Wzfsh28WRTQTJXmSK3flo2
n3kgyb9mTTrCp16dMBT7VYbPvoHOp1bXtvCZz3zswSbPa2Quss9hjtVWPjzx
+eFxU/msN/J5dmHqSz51ftoiKyFfMne0Ss+N3EDmG0xCf1VOIPM8VbXY2eV8
+po4jvu4y2SeOq7zxbfNZP5NtPTo1alkfnGxjOqcGj7919wDC4xCyJyzVM7I
yJjPvJGVMbELZvDZj8b4dVLFG3I/SHvobkK5QeY6Qk0W1+z47DvTPup6SRnz
tLU5V9J/9COFmE12D9m4n7WfYn3rZTXR/0Y5Srh7Y+7UNEFWLLEfTY6f0iIn
jnkk48TqByeI47VvB2Yl4z66ZKDTyMSwH7GbdbXXrcY82azakiLVjyS3e9FN
X+A+XSIucyDkSx9S8ctvZu3h+Z2FwT7Z9+V9KDSzp2XuF6wP6LGmTr1xsw9R
iuNjzwVjntn2/tOkk31IMy32YZgs5nV1yRuNjPvQ5MC5D/KfY11CeXmw5weZ
PuTmvu/xbUue+SRXTyy4MdyLKAdlas59xXqIlcXrFQJ1RD1i5XdawJ9HJ1mo
uO7QnV6UuK1r8YX5mHfsuhVq6NmL8szDunIfYR1G6IJkWMr2XiS+8dlRijHP
/rai5sIGy3sRe9H7uQ8Hsc5TkBBmozuFqLPFvvTNi8Lcs6DnUXoHB6nsqC1c
sQZz02r93AgaB232Wmp0qp1nfohrjpBnDAclzqwQX3mBZx2SMYVCszMc5HbW
wXz7Csz1tLM9ZXZxECW8+HHTW6yDrb2A/DyWc1B02c1tyid41ps9tnp6gDBx
PXHC982lMHc5sGJqeWcPEj/7Y97R51iX+zFVV7WruAex588T2HQIc6FSY7/u
WOL47qJtVRN59kFeX+736hRRh9ztNxW8h/XAK9moWmAX0Q/oLxzx2cmzTu+g
TKyrKnGe9mbfcAHMTdZMNlQXJ84TEq5xKZXn92W7xhWr93aj0F0TDgptx/zK
sWEtjapuRJ93POzyL575IS6Pn7ve7UZN4s9bw5Mwr93n9H3RZSKf9QZ0vt2O
uZZq+501Dt1IXCBrQegfrNNaCe5myRoQ5xfeu37vQx69N2lN9hb5bqQ3J3T9
MxvMaRvmDdycSBy/bMNu0WmYNzycru3J7kKhq9PDVpbx7LutMHn9pIoutPnA
TLkZJzCnOBZNGEvpQqYX9005uwhz2oNTySYXu9D/o+7No2r8+v//KImKFJWE
kIQiIknZmZIhIqUylUJRlJKkcpCQNMiQTEUTiihURKFRk2bN4+nMRRIyfK97
3b/3tc+693mt+/Nd6/Nb6/fzz3N5rGtd53TOde39ej2f++wr23nTvIAr2N9u
TY88aeHIRnY3B8/G9GOfXCEjU77KhOK34nao78Y8NXD13LCZbMSI2cMrL8N+
e59t1cy4kdT586Z/XLwQ8w7+0TvTuSzkFrd14qtr2M+P8phg87WUmo+Xn8/K
HYl59OvqA2dTWEgtQ2tC3GGcF7j+Cn3rdIXigrJiaa5QvjDm2eeR3ixUvvV8
up415tE69a7zranj+5ZP/5WO84vkMYpVn/VYyM76oHqGPOaVrE382crU8cHX
7zZ44xzknd8Gz7WD3ajc89wqTxbOU3yGrUMv2qj+cMJRw8tOmJ/eJnWPmduN
wgpnzj3ZhPMai9jctY7J3Sh6YeOR/t2Yazy+3ngsohtlHxDbaN+G8yCTLNem
l97U+Z+qWzzchrmMt0S9y45uZGytuFytEudNPM0b5yNXUucvHp7y0wpzr9Db
nvNmdyPzEuXVA7U4t4r+FWM0Ta4bqfXMXJBijrnPZ+dv4gNMZPdiTLlCJc7F
6r/Nq3/7iYmMK34sLzXGXNzntR03m4nkdqd3RL7HuZvW77XdClT/0/rZK8DB
VCinq76zYXcY1SfPmnye+xHneibJX5+leFOvuzv/osc2zG9WjlErdqCOX/nU
+EcXzg1X/J7zQ2ED1Xd3Vr/Ml8HcfL2yQtci6vjBL6+/zMH5o1zkkNfnp1LH
9452sbfBeaUXa5QKV5riY69IzD2K883gharD1b51IYaSymrjWzgPjdoeV/Cm
laqrbh+p8cvHuepIvzlJkiVdyK69PGP5UMx7l14MmJhO8SMB2jPm4XxWQ4L3
we4udf6Z+gP5W4XyXINSW/PgLmRsOip42nGc/2rZpby29+lC2Tkdhz/m47zY
ODE3pMqZOs+l9AizqZiL8+t7VGy7kNryiztlz+DcuXVcpYzVGuo89UsZ25tw
Tq2m/2GdvgH1uvN6++ebCD3HoePhq+taFG9/vnPIa5yDR0cG+zBUKf7Nr1Bi
IuYP9u84OCjbhaJnxW+suIDzdJ+5c+LfD/3X65b4PZqAeebj9YdXfKX666Y/
XneDcF7/buqBU3Jsqt/eNlc5TgXzPoaB/YKmTsQYsaZYOhbn/oF1I3b/raDO
c2R31Q8jzC12bxn9J5c6/tG1+Z+O4vUDYtW3U3NfU/VrrJPU4W683mDt6nG8
sy87UXb4fffb8ZgX511oHfzX+oRz3KDkaf+dQ+eBXhd6n9DfBX0O0OcGfc7Q
9wJ9j9D3Dl0n0HUFXYfQdQtd59B9Ad1H0H0H3afQfQ2NA9C4AY0z0LgEjWPQ
uAeNk9C4Co3D0LgNjfPQvADNI9C8A81T0LwGzYPQvAnNs9C8DM3j0LwP1QlQ
XQHVIVDdAtU5UF0E1VFQ3QXVaVBdB9WBUN0I1ZlQXQrVsVDdC9XJUF0N1eFQ
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
HkqvKR9QWo05X07mm8EgF5nPmrRP4Sv2exmjJl4Y08BFxrEFDQ/vYS6mOMfV
NZ2aFxf1hY0xwzy6+/6BuqtcJPdOU3biD+w/WzyePvH1Uer8es2m2x5irrH2
+awnNlxkl5HPMbDDPKXNpPCoIRfpL5h3dLaS0HN8lgnmzlXlorDYyoEjedgn
dwu/ckBKjIsiuf0y4xiY701POHG3jZp3zaYhxQWYt/ZkvFZ5w0EpteWNb5uw
b99bG/w4l6o76ya06h28jPnvN7ui3QI46PuunrDx6zDXcO5z1XLioNbAVvlD
Epg7SJ0V7N5AHX9505aBdzhfeHD8TJ22LgdpPjO79eUE5hf7T0dvUqTO07Vm
TPEiIb6YHxDwk41aR29av+6L0PqTs1bPDRvZKGVzXf61eMyjrsx64Z9D1QFe
nMJXDphLJvzR4FP1RFiMb1v5JMzLI7sfqZxjI7lfZ/afSRRar+JTLr3/IBvZ
7ZZfIq+JuaRKeYf6FjZSOyXnkR6L86AdqWVNgUvYqJwxyvLuTKH9WEYxcxhT
2Iixxr/wdALOm2T3/4rzGc5GxvICoz3TMc8+WK34gs9C2TNnH46IxblVkPMj
g4M1LJQy2mn6DB3MjX6sG5mXxUI6zcd1m9NwLhYUyn7hdY86viT02qZ5mKvd
HUg9fJ6FomfVnDZ6jHO3vU+GLVvuRtU9R1VXrZuHufGI+WKyVN9uPOen2LIs
nOuJH9gpswOxkJxSndFHQ8xrRj58fmEa9X70toZnPhFax3JrIFZKmuIKNfqz
F2HeOFOes/BbNzL/aHtJtgznksxXWrKvWrqp+bplWdJOoXUvk9+9mFHcjXrv
lF3N+4VzT4dAm49vXvyLv1F8cxXze2GHlpXc60Y6ldqrh+pifvXameWPwqjj
+2+s31eJ89affz1dO/27Uetf02lePpivPezYdWd/N3Jb8s1n8jjMb4qftQ2z
7kZy8vfef8zEOa9FyP3PM0y7UXT+xvR8J8xVuba5L/S6Udi1vPqrYzBnbJA5
Gk3VhYxzRhZTn+J8OVjhD69dvhtl23+LPrgT89TSnnHREtTxIx67qilhLnPo
5N2mPiYynn1Wa8s7nHcXSylsettJ1YVau658OIr56cJB1dxqqi/u4YR90hLa
N8avU0uxiInk3L1aD37BOXulWDcz/zUTqUmcPtWdgbmkP/ut2jOKe4WW3juP
eXxy9cZXj6j346gVmuwstP9Md87Mpjgmaj1dWL7JSOi5SEManT/GUHzE+jFK
MzH3Gv/N4Pptqm8/UarxR/m/c+g80OtC7xP6u6DPAfrcoM8Z+l6g7xH63qHr
BLquoOsQum6h6xy6L6D7CLrvoPsUuq+hcQAaN6BxBhqXoHEMGvegcRIaV6Fx
GBq3wXEemBegeQSad6B5CprXoHkQmjeheRaal6F5HJr3oToBqiugOgSqW6A6
B6qLoDoKqrugOg2q66A6EKoboToTqkuhOhaqe6E6GaqroTocqtuhOh/qC6A+
Auo7oD4F6mugPgjqm6A+C+rLoD4O6vugPhHqK6E+FOpboT4X7IuBPhrqu6E+
HerrIR8A8g0gnwHyJf79j/Qx/uGQ7wH5JJCvAvkwkG8D+TyQLwT5SJDvBPlU
kK8F+WCQbwb5bJAvB/l4kO8H+YSQrwj5kJBvCfmckC8K+aiQ7wr5tJCvC/nA
kG8M+cyQLw352JDvDfnkoK8O+PCQbw/5/FAuAOUIUO4A5RRQrgHlIFBuAuUs
UC4D5ThQ7gPlRFCuBOVQUG4F5VxQLgblaFDu9p85HZTrQTkglBtCOSOUS0I5
JpR7gjkpkKtCOSyU20I5L5QLQzkylDtDOTWUa0M5OJSbQzk7lMtDOT6U+0Pr
BKB1BdA6BGjdArTOAVoXAa2jgNZd/G+t99ivMq+gM7WH0Cx3pV/rKvmEXn0Z
suVhEofQafe8St7dZREafHxwV9+4bkLr15tXSD3vItS411b9ZUwnodm1JgvH
XOwgNMP1O9K5j9V5m3T0olPtKOXmZL0djE5av18un+OJ2tD1087rUvS6sGa2
hQxot6JvUlPHyAu6aFXtul5cuLAZ9UU17rp/hkmrxtz9reKHGpHrRfUEhbnd
tGZuvTQy9zB1fR7Lnama0U2recTjUw+r6tC3Z8M6/dawaFVtFlgETqtFPy90
ZL56zaJVYbtlWeG7atRxx2/wswmbViu1s7KzZlchtRCH2pAXbFqjLauPWXyq
QCVT6veZG3JovR7lXjBq3UcUpj2lcNwDDq3mR2/Gvh5Sjk6vrNziNJ5LK89R
RjxkXwmyvZOj7OvPpZW5wuuA0ogPyCXr54QMNpfWw6GTre+fKUAq2kfKWat4
tO79bDzxwvY8xFN2Yzo+4NF6eP+u63eHvEeZzXEu5RJ8WuPzVT0nduSg6PYl
z+8782ll2M07Ii3zBtn9+TX4NotPK0NBXadR5SWKWvCnuVRJQGv5uXHBZu3P
kdm80Sue7BXQ6pSypiFlbiqqFIucLP9CQKsO780Is5pHKOuttJuxRA+t5q+7
/PuvJyCxWp2DAsserCm1Vus67iBJgdyPjBs9tGbvrFw/peQSKnG+uOMyt4dW
MbO2hx4xB+n7zC6sbDTzpYh57UHMieGWItYlxqbURwwTtQ/JVNumeBHrSYau
WzRoKeJ5ZBFmngt+k/NyoqJNcF8Kyb0n2Ic/3kLy1t9KkzIlSZ5iwNgq9Yis
H2TyEtU22It4rk2jucdwaZIHTG/hhb8n6xkJI/W2d14i1q+Kx8Ra6Yo4/vXu
yfU8sr5KUkqxnhVP8nPz4tSO2pBc1ad84fWxJF9w54mYfLmIOtCnbc30SyLq
yVkKR1zWk7ygtveXkjTJtd5+YujmkXVsedqxmoSzJFeV1vINXE5yxrZRrWFi
JG98cNbOKpust/VNLCVXnyG5WsEM448mJPf+fnieozTJ1bfd1I34IGJ/Er2Q
0e9DRfQjMWt4uZYi+osgyVWHlUhevGHvhC+fyH7HmDN2zeLbJFd+6yS3eTfJ
q6ojHyycLeI8f+cXv+KR/VoV987xr09J/spzSeHaEyRvbJJm9q8muY728QU3
5Ugul1+9LL1RxO8Fgk+cT7tHcmu3zvxRriKOV9xx6q6BCL5xUv2RESSvu+Cz
fG0l2V/bjTL5sO0OyVWrH81KcSV5+eWVK8cbiPidxYHp30qkSM6qcnsZUyti
n5NV/XEhMSJ8CauL2gmuJC+2n2TwZZEI38P/4HmPYSSP/dPOX15F+ifp86rE
l8eTnFXmvNL/qAjfJqU8rGUtyU05h/uOqWKu1u7Gmf2VmlcWqhS5tmO/qMhE
+sn08h70Xeemwc5zQvum7rql1p/Ug7wPnv/oqCO074rPz7kdZ3pQ5PwvAy9K
sU8l5xATHOHYgxKPRrS4HcdcxfDNiL2oBxkr7lQ+MQlzI5Uylz8q1Hlyhsn5
vsO+2d6srZKt3wSIYdMwWscZc+NbU61v1AqQ2nmr7RITMF8xdexO22dUn2M5
n2ufi328PikTTY8rAmSn+LjzzhHMfwZG3zM5JEBum8Zc11HE/GLoorgXVH/Y
yhw58cN77CteHNjwpkWL4vtX7ZzrhnnyuJg1/lR/pfNcPn3JZMy9nKdMHMHh
o8SzlQWKhdjPzAyvD5lXwEfmLlO7jntiXslxDRyM5iO5D/LlnvKYm43s3DyL
wUfZ4w3KnLOxv2o1X2/Whh18VOd31nmFM+bxsw5M276Uqls4F6yZE4TWvUzy
PZCsxkcF654HP/mI/d6iwfHGuUP5yLvfWI0fiHlJ3hW72nZqXnT3cldZhHne
zq+6Cfk81MtrHzK1T8h//hGwLOo+dbxb8b0hiZgzd8UmawXzUHaPytNDO4XW
w2SvG9t5gIeU7bLmZ8oKPeeaX61tY85DreVXvzQXCK17kWU5ROnyUPqU9z+G
nBTaj2WYbkKcIg9Jhfydclsf85+9w4b7fecit/qQcH0+9u018vb0qdRzkd0h
f7sVMZibHfqRXZPFRcZXD7VH2gr5/yoHvR/d4SLzFQraC0ZjXn7ZxbjiFBdJ
eY6Okc0Xes644re3HY5cpLl4377FvpiHbd2lz1nDRSxbQXChPua6OYMDD+ZQ
dYND/4GHX3EOYlFW9p2nQL1u4PCD5U8wT5U/+UXhOwdlP1rePM8F8xUDzq9D
mzhIkyO1vXum0POJNALcx+dwkJxd0Y037UK/hy0+PUM7joPcGIXtvTcxj38j
Nd71AgeptVx5HbYdc4Uxk1PaPDgo5YGZftoUzGveO/rP38ZByrzBJX86cN4U
VGjUc3AZB9UdVbG6cg/z+Ik3R0rMpM6/NlAlaC/mWfGLfw2V/9fz6MO8hmtj
/i50+zv972zktG8f6yJPaD3Mnf3mUi1sFHZxZOHlZKH92Ov+Hk8pZKPWW38X
LvbGXG+R1viqFDaSChIslTfAnJNz4VDzVeo8hZna1l9wrsc0qzsxlMFGjDOL
T8gwMPdoeOzy0pmNjNccmnxfDnO/g0WhyyzYyE3za+nqaJwn5hVMvJJqTL0f
7mX2yRVCfGFacOwsisuceaNXjfPKIIOzeZ2KbJSiHtt69DDmJStv6X0ZStVn
1vJjXo7CPDqz70WzgIXU4t5es3kgtG+MRsemZY0sFP3m0HUTM6H89MHBnfx8
FjLePLPubjfOYeX0wx2fPGchc+Wab17hmK89sFX8eBwLuSk/k9u3RGj/mQ9S
JosiWKj1++ydY1tx/uunl/Up9DR1vNxT47JwoVx48NHGisMslMLeHzJhKea6
fU8nNThSdWG2//XV34Xy6LCVhrwt1Pv8aKV9K1Ho+QUz7rtqr6b+3jwz9Q4H
zK1Y4Yt19Knzn/80+bMy5rof3r0M16LO/73iQV0zzsFT1+VJKk1lIYZPyxSP
B5jrnu+edHgCdfyjM1EG5zGf+KpSxWAsC4UlTQ2cugdz10GHEB156v2w+/K/
2GJuoOhfqj6K4oe8pNJN/juHzgO9LvQ+wb8L+Bygzw36nKHvBfoeoe8duk6g
6wq6DqHrFrrOofsCuo+g+w66T6H7GhoHoHEDGmegcQkax6BxDxonoXEVGoeh
cRsa56F5AZpHoHkHmqegeQ2aB6F5E5pnoXkZmseheR+qE6C6AqpDoLoFqnOg
ugiqo6C6C6rToLoOqgOhuhGqM6G6FKpjoboXqpOhuhqqw6G6Harzob4A6iOg
vgPqU6C+BuqDoL4J6rOgvgzq46C+D+oTob4S6kOhvhXqc//9j+yL/+FQHw31
3VCfDvX1kA8A+QaQzwD5EpCPAfkekE8C+SqQDwP5NpDPA/lCoI8E+E6QTwX5
WpAPBvlmkM8G+nKAjwf5fpBPCPmKkA8J+ZaQzwn5opCPCvmukE8L+bqQDwz5
xpDPDPnSkI8N+d6QTw756pAPD/n2kM8P5QJgjgDkDlBOAeUaUA4C5SZQzgLl
MlCOA+U+UE4E5UpQDgXlVv+Zc0G5GJSjQbkblNNBuR6UA0K5IZQzQrkklGNC
uSeUk0K5KpTDQrktlPNCuTCUI0O5M5RTQ7k2lINDuTmUs0O5PJTjQ7k/tE4A
WlcArUOA1i1A6xygdRHQOgpo3QW0ToO+f/+HCp1n5Af7lCWnSH2u+elunBWP
UIfR5j/KTNmE6rRVJcdndRPqe9Tm8o5lTELL1R11r8zqIjQo+uCm+WqdhCaV
XvkjZdZB6ESf+12OLKzVBScTnKa1I7PQPhmNiE5aZe9f4plMa0PTGEaH/ph0
0frhzTSbU+Nakazq95ETGrto/fRQqeXRgWbU9+Jp/CJ3Jq0add3SNkmNSDHW
YqbxIJPWVwrDAtCoBuR1+Ov79OBuWm8mTn1SbfMJ9S2qcBsvyaJVw/p8ciq/
Fv2UTVltfZxFq0JNj+bAxRrkOuJqSzyLRWtGh5G9tEk12vH1+HolWzat7KnB
KpmfK1Gm5LsLC/PYtFZyn2/flVyBnk8eeT9Jh0NrU3SbxE/Xj+iiz3eX7Csc
Wm3CFDNeLy1HRmxmUXM/h9ZL564uzTcsRSnr7N9tt+TS2ro4/UDl3w/I40nD
rOFpXFrX1376U5VfiHwCxriqU/PiP6rRddV9elY+8t26+vGy3Txa5fssOo88
zUXBXlKOZ5/xaH2qX5JQ+fod+hlSaOA5kk+rRrzJHZOcHKRxvN7Dm+of/9EF
Bm/DbW+/QdH7uRPuP+bTyhAbSJF/T43nU3dN3vyXTyvDLuishlQ6svteMeLC
agGtjG2qQcfj0pD20NS62DABrayuG7Wr9J+g06oRFTerBbSmWCxcvv7HQ2TL
vpRnr9pDa/Rkg93VVnHIL+PSTIvdPbRG6/stcAq7hRS6MyJ2xPbQapekbuY5
JxxljmxLaWf10CrWv2jroKU7fR/bpZctrMsj51+5zO9GVe4kT1yz8tuxqSR3
bNq4WKmCnPeNH0veWHGO5AVX/J6uWkzyldP3Sp7mkvVG+bVRoYOxItaL/lBd
Y2FN8iSrA96pMiQvMHFK+PyarJfqxu1heBwTsc/YgS9zinVFHN/0JpHNJOs3
KZWHE6fHkbzXTNHPfQ/Jzy0M3HtAXcQ+aeP1cl07yTqztzRit1QMyW/6unNS
d4l47t7RcEulySKOt5nHSO4k62TP6woZn+JFrCepXrhv1H6SJ3q+u/ZNm+Tq
YzcVNH8m6/ybpttXOj8j+ZYz3dXtXiL6gi3Xx2gvFbEe2+jDxZV/yT6FNcJ0
glaBiP1P6gN0pcNE9Dt7dPU8rUnO+xrzrmoyyc9JyFdms0X0ZWNPtSelktzz
+0Hf/uMkl+pqmK29nOSdq7R02TIkX/nCd8/pSrKvTLKvveV3g+Tl4k+zz+0h
eUqNYpWEroh+9vWSW1aDZF+8Xvn3WmYOyV0s/bWfhIp4jmf+mgudu0T076ss
z//RIrnp7/0XvQdJHyA9jRH+pZDk6zXWuzy7KuL3GtHXtu+zJ3lS9NyMmHki
9sO8fPZIvwTJ7eKuqYdVk37I92cJlbPiSa7Ft/acclSED6Ma9FdzrYjfrQxz
tz82geRizNrkegHp/8jMnm/p+prkym7Bv/5eFMGVTu/4sovkUg0Z5+/PInnd
mZEK/X9Iv0vK6IbhjHIRftoPwdG6RJJrvTtl4eZPcsaB7Fh9CxH+2+ilB0bM
JPkCz1dfJothvkNlbvyLph7Eyjkyed0D7AdaqOYVlr3uQeUmh7yH7xDa12X2
jvvXb1J9IM9pBmM45vz1j+86Hqf6PePnV4+nYX/yp+cQn3PWPcgtVnye5Q7M
NRIy9fUW9KDWmIqLZ4diXlLgUTxsLDX/eU05Meop9kvj29iZDV8FSC3N1GK6
I+a6A7sMztRQ8xynZ4yZshDnXX6/N52qDzZ4csVKsH97urMwy/O6AJm+9K6/
dwLzqIJ9bl3HqOOPiF/P0sFcLGXYpVM21Pn1R7nmtQj9nm6D44qHhgLk9t5H
M+ma0P7GQ96FNKtQ5znV7ai1AvOr+9udb/3iI++Rz8+dH8D+tkrzkEttDXxk
/FCCnxqHuZty8D4pqr9VNmoeesUa89+7FH+0RvHR954XB+eLY75/m/1DZT8+
OufokZSVjn34IIskwTQ7Pqorf1Rl44a53wSZyXKr+Ch95W2zRC3M5TgHtC01
+Uiz8OLnqk6cC8iFtkpWSfNR4p55Yy7dwlxjlmVEyWcesmNv6T25HfO1d5sL
bGp4KP2KllerEuZqSk6hGS95qHxxAHNjtdA+2H4SrWYxPBS9WDpleQTmit3R
d0YFUudZJh+qvhFzr1mbry/cz0Oa+83+nhkh9FzyHeJO/pt5yNRZSsKwVOi5
5ycm7rJazENqrwv5W0MxV3m46F7qRB7Kni2tvGwt5goxr8TVxHko5dLWEeXD
Mc+KWNa/i+r/rT9P6zqUj3OiiRvOxowo4yLTFRUKkWcwVxldMlsmlYuy4xiu
txHmaq6zL2tEclF5mMthu19CeVbWeeNQBsVtrafszcG8Lz5peO5eLrKLmRvB
Y2DucaLsnuomLop+HXg9fy3mdnmOF7z0uai35/h2TVmh/dUlf14+OoV6P3Lu
Xx9U4jzO76zN7V8juCi9ouXCQCTmHaMyztT3cpB+3IYNU22F1s/cDDscUc9B
cmedb7tNxdxE26nU+x0H6bhLSDxi4TxRJfLlnwKqbzb+VeX77bHQfjJfRkks
ieKg7zumB0WcFNpnXqL9h9ZpDuod+cytdzXmBn/TmN3u1Ov6v89+p4q53BFp
p6odHJQYqyoRwcE5KZNjz85eQ73uB8/Vu9OF8tOd/KKQxdT7PLBpsDNU6PlK
bd61BtM5iLHgkYrCDiE+HGVuVqJ4xK2PGwwwNzYdNq50KAdFL7i4QHw45tlJ
GUUlX9modW65z9BOnAvXKx3cqdHFRtFLFHgtrzA/Pfqw9txaNirQuPW5/zrm
xr+PPH76gY3UfsQ/X+ondJ6Y+ptxmdR5Lk+Vur0Zc4fpaEHjEzbybrp1Kt4Q
8+gh7nWdCWwkF6Ay8dU0zFW4d/XvRLFR9rprsiFDMb+q+d78ZwQb9RZVRXR0
4Nx81vauCeWhbFRe7HNBrgzzvNtH/nwJpv7e8eu/v87GPLVzmPny82yqTp4Y
tu7Rf+fQeaDXhd4n9HdBnwP0uUGfM/S9QN8j9L1D1wl0XUHXIXTdQtc5dF9A
9xF030H3KXRfQ+MANG5A4ww0LkHjGDTuQeMkNK5C4zA0bkPjPDQvQPMINO9A
8xQ0r0HzIDRvQvMsNC9D8zg070N1AlRXQHUIVLdAdQ5UF0F1FFR3QXUaVNdB
dSBUN4J1JlCXQnUsVPdCdTJUV0N1OFS3Q3U+1BdAfQTUd0B9CtTX/Psf2Qf9
w6G+CeqzoL4M6uOgvg/sE4G+EupDob4V6nOhvhjqo6G+G+rTob4e8gEg3wDy
GSBfAvIxIN8D8kkgXwXyYSDfBvJ5IF8I8pEg3wnyqSBfC/LBIN8M8tkgXw7y
8SDfD/IJIV8R8iEh3xLyOSFfFPJRId8V8mkhXxfygSHfGPSZAV8a8rEh3xvy
ySFfHfLhId8e9PmBXADKEaDcAcopoFwDykGg3ATKWaBcBspxoNznP3MiKFeC
cigot4JyLigXg3I0KHeDcjoo14NyQCg3hHJGKJeEckwo94RyUihXhXJYKLeF
cl4oF4ZyZCh3hnJqKNeGcnAoN4dydiiXh3J8KPeH1glA6wqgdQjQugVonQO0
LgJaRwGtu/jfWu8BKXT++EBlv9nqfELtQkJnyo/iEBrRfVZvdCiLUI/HMrft
JLsJZbC5Hs9GMwkdGfut9HZ/J6GMhb9tJZeSGuyqbrnbqYPQHwF8ba9rWM+n
T3hZerOdui4X3X2FOmltPp8ksye6DdkMRDbvfNtJ649glafuja2IedDi2SW7
LlrXpw5rXd3cgpoEcyZPouqef9RZ1+NuXGAz0mOV7aizYdK6fXUY0+tLI8qq
7C3fXMCktShA++LwhAak7V2qMbCmm1afa5cvqEytR+LfFzUEP+6m9ZuS9UGb
z3Vo7++J2XYqLFqLh8e/aUqpRQqfc02zPVi05mk9mv4mtgZFqMiGj6tn0WqS
Urf+jXs16qtr2ho8h02rxpG93209q1CqUbHT9HA2rUyTG7mh6ytRxKkHjwbb
2bSaeIt9ldlagSY2qNt+Xcmh9f7B8M9T531EcqxreYsvcWgtX62ftHlNOfJJ
K5n1h8OhVSNX++9I/1Kqvow7Onoxl9YvzybPv3e/GGUy9mpZBnNpjR+M7Bd7
XoT6Toxpaaji0rpe7Fpu3dBC6v9Tn3Km8mhdLzav8sScfBRtJGZfs5dHq3HI
n4wfV3NR8F+PJxJpPFqfDjWt7ch/h1R213/2HuDRuje1bcss3bfIblvmlbSV
fFqzG2L83jtko+idFtzfQXxaGWFK35V9s5DCfIusCeV8WpUTxqulLs1EyV89
VTeNFtDKOhvwYL7pC9SqedMxbaOAVsa4R6YXVqQh1xV3Ly+8IKCVVeMo5Xfs
CarZtSGxIF9Aa6t4gr7OqmSksG654PFfAa063wrunxyeiMwSKwq3Lu2htVzf
eGzujLtob+K4ZSyvHlqzXXo/eKRdRyl57LF3qPHgHxXzt9S0jg1G2lbzJg6h
6oZ/lLHzr8qsv3hdimbvg9CpJWQdci6njPkkjOTlS3a21RiRvEBx7dLZQ0Xs
9/Ul8EVEhojnu/l+Ou/nS/JzNRrvShaK2Gds7/tfK76TdZpmwqFfXs9I/rWO
d83Sg+TB2dtPbpwvom4Ui7t+n0/Wmb+ST02xTCL5zaD69stuJGeFGwiatUgu
d029NVkgYv+3tyYOEs9Jnr5awLnjK2Ldcv2S4zErSK72Ofpd90iSm0/UmnW6
XMR+KVJFcvsiSV7VMmgfvYPkW2pk1efMJPnYO0Uak/pEPCfxxpo8pSySy0zy
Tg0/S/JzzR5PR2wh+cov99bzVUleVWAs38En+y+nZ8k5Kmki+rXx5VeWnSJ5
pGvrL0VzkquNzwtZOI7kxi+jnxi3kH3lyvAJ/sxkEc+7dGSE7z4uYp1/7aWW
AxtE9K1TtuyeOF5En2v1Wn5pt4g+uuC8m/sLkrscMQ/LPyWif1fT+Gq7heSN
AevWaKqL2E9SUmljIY/0DexuT9T7lEHysNQjpuwAkqfN81R8tJ3kbiYrzY21
SB4w1vG4zE8Rzz+1q/5Yl0typ3ecL4tvkNwwdhO6cVAEd6iPW7qc5DcjPK8N
KpI8cWftkm4O6QulDCu9+ekVycVGTTT9FUryLYWuv6bbkTz4Qrxh7hKSL7D3
SV8xiuSGKw/tbu0gfTPzTq3bGZkkV1v7ZVz8ZZKbvtOxuLSX5NYtc8VDjUT4
e494ZZUKJF9ZMeO+GJf0D+V8S+38c0iuNX3e/eKrJO+8F1m7x5nkhjp71BoN
Se5WqT+uZayIfWPCnryP45A+anCt7r7qNyRXD867PeoGycXaLjglHSG5naLj
KJ1NInxju3ovFS2S+569p9MnhXnEoerSbmo+7r067syKPOxLp85c9CuoqAcZ
s857bfMR+r2ebU6A1qMeZG7fse6QLubJbReNpKl5WietfbwqC/vkRZ/qGIoe
PchbbdLy9DuY5y3KlJhr2YPcLny80L8F8wgFlbLpC6n3o5NzplkCc1cLxzcT
xv9rf2afnbmvhdbVcOsaWVS9IrZ+kmbeCaH9Z8brsZidAqSGzq5cZoi5WOSb
wQ9U3SP2a2e/Xx/OF+rffUIzkwQo2jl68r5HmLdqeE0Jv0TVQ/YJlfsPYh5v
HVP+3ps6fkfECJ620HO9b24u4m4XILnA0mNmLKHniX/sPGW+QoCspQ1Xr0nE
XOf3n7zkGQL03dvPfb4D5ilqsVEqVJ2Xvinq1NvpQvmL2kxTmS985PZxb9qk
JqHfq+otSl1Qy0eaUiOzxaMw1/jqWzryFVV/7taXmGCFuWz1OofCO1T9ednI
++hoofNoPeAHBVLnOTRz87ZyoeewXw3Ps3KjXvf7gd66SKHnNwWnrVlqwUdS
divSJ5hj7uO6O/q0IR+ljPkmt0YJc92EgQ+zZ1B1z1SuH78N52KZReMDosbw
UbmP8dqhSUL7nG849mvdDx6SWjV3wOiQ0Lqdc1m1vE4eMq+ymWBuiPkO+SuW
x8p4iJX81fKxpNDz6DUtPZ9k8pA1s+ruywqc9wUFJrI2JlDcPC539V2h/dvN
LsloXqLq/hzXyY6umL/bsKd2yQnq/Cv9osYtxbz1qP/8XiceSplt6G8tibl2
U9W5P9Y81Ks51sq3GeeYBkOOtQtW8pDc6Tl6lkmYu3pKvH+1gOLTpDm1pzG/
aBg6agbVn9gp7Y21t8Tcx8Vy6fsxPKQTWn1jv5bQeUw1TrwXo87zrMWIO0To
+VNJ9Qvef+Ei85SpAZxmoedJfdqyO7mdi+TUqo48eS70O/QS67fnq7mod2jz
nrormOdtb2NVF1J8n27eVW/M63tXPeS84iK1+jlJa62Fzn/jzqnMJ9T5h4Wa
bDbEvM/14yejfz1H+NKF6KiZmJc8y/aYcY+LGHn2Me1KmDN/tDk3RHFRdm/a
OXVxzLNXndYYcp2L7OaYtp76g3PtnyEK3b6XucitK2WZft9/59B5oNeF3if0
d0GfA/S5QZ8z9L1A3yP0vUPXCXRdQdchdN1C1zl0X0D3EXTfQfcpdF9D4wA0
bkDjDDQuQeMYNO5B4yQ0rkLjMDRuQ+M8NC9A8wg070DzFDSvQfMgNG9C8yw0
L0PzODTvQ3UCVFdAdQhUt0B1DlQXQXUUVHdBdRpU1/37H1kH/sOhuhGqM6G6
FKpjoboXqpOhuhqqw6G6Harzob4A6iOgvgPqU6C+BuqDoL4J6rOgvgzq46C+
D+oTob4S6kOhvhXqc6G+GOqjob4b6tOhvh7yASDfAPIZIF8C8jEg3wPySSBf
BfJhIN8G8nkgXwjykSDfCfKpIF8L8sEg3wzy2SBfDvLxIN8P8gkhXxHyISHf
EvI5IV8U8lEh3xXyaSFfF/KBId8Y8pkhXxrysSHfG/LJIV8d8uEh3x7y+aFc
AMoRoNwByin+M9eAchAoN4FyFiiXgXIcKPeBciIoV4JyKCi3gnIuKBeDcjQo
d4NyOijXg3JAKDeEckYol4RyTCj3hHJSKFeFclgot4VyXigXhnJkKHeGcmoo
14ZycCg3h3J2KJeHcnwo94fWCYDrCoB1CNC6BWidA7QuAlpH8f/2uo7/W5Ws
6b5cZcknNOhH6Zs1dRxCw/bm791Ezcf/qam330y81NRNKHPJnf4JpUxCVXf7
z9vb2EVoFDrz/MMYUu2qLjzZZdNJaPC6VnGVNx2E7oieF7NnOdYjoQtD9ql2
IIveSwcbcrGevjatXm9rO2KYfR0YatJJa/aFMcGDVJ/RlFd2emFmJ63PLE0z
H7NakfG4hy4ai7toVbP7u91kVivSm1C8VSKmi9btj258/6LaguLl+EoSskxa
ZUr106l7H0nGWA0cPciklaf6a3xkWiPSVs9WMahk0uoT8ebxpsAGVPJtn1nT
gm5aoyYUKDnZ1yPbytElwy5309p3pjxSsOITErvSOvR+dzfWZTsHJNbUId19
TxxmLWLRureIW8WwrUW/n4V+OxPIonVks7nqQZca5DXkoMqzGhattwafpbQe
r0ZWym2VJ6awaf39fHsA40YVSp60ZbeLG5vWH/fEP2U+qkTPW2avOZfBprXJ
zld9X2UFqrkq3jFpGIdWvyX9Vvd6PyK+/6PggxYcWhef/mqTNuwjMvC0+XLo
NodWi3t9minq5Yihv+hEWiuHVrHkNIncl6XImDe2TWUGl1aG16mMneNKkIvl
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
wm6XjqS1kz68fonOyfsvSc46EX5BI4rkxbpKclG+In5XuNRs3TIbkm//OepH
5xIRuUDOmf31KiT3HfV4RuB3Mtf45f87M7dORD5ybt+jN+ki9pGefOy+QaSI
fOTw6JWbPUnuPTjGYqolyTXFer91G5L88o5wya8qIp7rnfajl/mbzIk0x1U+
dWkRsc+2SduNT+9JLjN4QakygeSvyiTeJgeT/P00W8+JbiSXM1/OP20l4vnp
vk+XOumL+H3u7a4+36kins/Vskbv5zAR+43rfldJ7SXzO7u7SkObqkn+tcBj
+pwsEb9T/pw9clqciOfLm1xm2oeJeL584bJP446SvFfu0Nxde0Ssd9JfoNe/
luS869GdDgYkTzTLqNg4Q0ROGrHh+lJVEfnm5gzngJEifjd9c4zhGDGS+97P
6Zv+VUT+6zR1XJaA5I1BsrPLO0jufWwD63oryZ1U624bN/3POXQe6HWh9wn9
XdDnAH1u0OcMfS/Q9wh979B1Al1X0HUIXbfQdQ7dF9B9BN130H0K3dfQOACN
G9A4A41L0DgGjXvQOAmNq9A4DI3b0DgPzQvQPALOO8A8Bc1r0DwIzZvQPAvN
y9A8Ds37UJ0A1RVQHQLVLVCdA9VFUB0F1V1QnQbVdVAdCNWNUJ0J1aVQHQvV
vVCdDNXVUB0O1e1QnQ/1BVAfAfUdUJ8C9TVQHwT1TVCfBfVlUB8H9X1Qnwj1
lVAfCvWtUJ8L9cVQHw313VCfDvX1kA8A+QaQzwD5EpCPAfkekE8C+SqQDwP5
NpDPA/lCkI8E+U6QTwX5WpAPBvlmkM8G+XKQjwf5fpBP+J++IuRDQr4l5HNC
vijko0K+K+TTQr4u5ANDvjHkM0O+NORjQ7435JNDvjrkw0O+PeTzQ7kAlCNA
uQOUU0C5BpSDQLkJlLNAuQyU40C5D5QTQbkSlENBuRWUc0G5GJSjQbkblNNB
uR6UA0K5IZQzQrkklGNCuSeUk0K5KpTDQrktlPNCuTCUI0O5M5RTQ7k2lIND
uTmUs0O5PJTjQ7k/tE4AWlcArUOA1i1A6xz+/76u4/9WxcXVl1go8wmNnrRa
lbGfQ+j+b5y1e0+xCc1ODRnCjmYROjJwUVD+KFJV1rVafT3RTajWde09Lr+Y
hG5/6nN6YiCpsyzOydZPItVc+er2E4+6CO0wiXUVQ6RqrX7qotDQSegKg1mG
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
nE3Xc3RVXg2KpeteSo5aOffo+nmnLn49L9L1tWnzlqW6tzCfUtud+3N7C//v
9NnnC3+tp+uOHTZeXrCIroc4Nn+/NYuuW8f2Sjs6uYXv67JX3MrRdF2xquxi
lQpdF5ujVfBYsYW/A96zrzzr3cLvye5VuabQo4U5mnVARlW31q+jj4M+L/o6
0feFrgO6bug6o/uC7iO67+g5Qc8Veg7Rc4uec/ReoPcIvXfoPUXvNdoH0L6B
9hm0L6F9DO17aJ9E+yrah9G+jfZ5dC6gcwSdO+icQucaOgfRuYnOWXQuo3P8
fz33UZ2A6gpUh6C6BdU5qC5CdRSqu1Cdhuo6VAeiuhHVmaguRXUsqntRnYzq
alSHo7od1fmoL0B9BOo7UJ+C+hrUB6G+CfVZqC9DfRzq+1CfiPpK1IeivhX1
uagvRn006rtRn476epQDoNwA5Qwol0A5Bso9UE6CchWUw6DcBuU8KBdCORLK
nVBOhXItlIOh3AzlbCiXQzkeyv1QTohyRZRDotwS5ZwoF0U5KspdUU6Lcl2U
A6PcGOXMKJdGOTbKvVFOjnJ1lMOj3B7l/GgugOYIaO6A5hRoroHmIGhuguYs
aC6D5jho7oPmRGiuhOZQaG6F5lxoLobmaGjuhuZ0aK6H5oBobojmjGguieaY
aO6J5qRorormsGhui+a8aC6M5sho7ozm1GiujebgaG6O5uxoLo/m+Gju39af
H2jrzyf823eI/N/LBiYm8SS0lqgqJzaieB+12vvjsDMa1IoB94q+FdUQY80E
T24fpGo4dpf/PZKq0sll37j8aqLhtbor8ieoZ5Vdq68zaqN378p7n6uIFelh
A8ofUdeMMNvz25FqNytgeJEO1X9PXd7v9tSgF0NOabyrJF7qvvRUtRd1z/nK
p+PMqSq9dg+PHUy1GdZHoai6ghg9LjTC+QnV+fS0lB7OVMHnOKfdk6ky5750
9W0uJ14dP+DlildU6Q9nfR64U7WXdX9oZkIVyup/m6NIbYjZvVQoLCMaqWXs
vHOHGuEx1uCTIzXYNaDZbRbVanOfXzb9qJY9euQ3V5YS7YKkdnSPpEatGXT0
mTdVb4S2eb91VP2EEKVQLaqh3dCyWV2pDR4nKkNzhcSio986eoZRj024P1TT
i6pRsNkgfwNV72Tsq5V61IszBtzvqkiVm9Rtaf7nEmKW+u+teW+ogRKFTif8
qEGlr6Z+3katCx1zvkKPKrPep/yWAlVhssMO78/FRNdOJiqD4qnGoZa1Xa5T
Ja02d9q1j6pZ8yDysBlVfcPP8MLx1KKM9yeOdqNGjbsSN6S6iGjTLUnvShz1
fl2z785A6u4T7QP77Ke6yUjEDV1DVf85xKF2GvWoy8AZd+f8dWxkYl+nbkWs
PpY99tz4V+/F/htv5RWyQBnLC+fdi7iSpbVy/UIKmWZ+fEbR9SLu6Htzp4w4
WMiqfSY5D/7zffxrf5+bs94aFzLzJTdmNBYXcX/sFvc5MqyQ6XToU/xJvJjr
75Q7vHdjAXOdNElooVzMfTo8KPBbQgF7YrT0VEeDYu6GLjsDtp8pYIKuh+aI
rS/mhtg+Pr5vXQGrS7uzYO/BYq58pNMh3UkFTFLvSFRzYDHX4YLGSheJAiYd
vmq35OtibrX1ppkOaQImNChyXlRRzFXtdctgv7+AzRauDXDpXMI9GWjdOXKr
gPlPUuumPKaE6zX8mc28SQJmdf1r7eB5JVzhwe7n30gJmJPpddOITSVc71+d
f70Oy2eZncxHHThWwrUv+eLsZJHPZHecHfspqIQb6z9l46jmPJbyKWXVtFcl
XLcRB7NmhOQx2YEXnhqUlXBjr4xOGGaQx+KsVns+6CDkXn33cUnhp1zmZtV5
e8QQIdc2vujq6+O5LMEh5FCArpDre6Fmc0+tXBY9pmRR1DIhN8zOuF1keQ5z
ye5rPcJZ+NdNoa9dTuawoESPcf6+Qq748WXWA9VzmHRK0+PXj4TcLDfJtBsf
s1lW9bL2OslCrr1m+Xd2NJsFd3o253GVkNtY8k4xY1I2iwh+8n1h91JuXENy
747JWczb7tGxPSNKufp3Ms0Pu2SxPWvudswxKuW6p30q2yiXxXRsrivOtC39
64vOQepPM5meV73tssOlXM35Q55UbMhk6lFM6odfKdcuUqegl1Ims3/vKaUb
XsoNPG0qmJT0kSUmZ0dIZJRyvQ7bxtY4f2QpL9IO+H8p5bqF7905YNBHFhX+
4XRU97K/fvCa/jwxg1Un9y88PrSMq3040NzkaAZzKd64oMP0sr8ufNalfkoG
Exsr1T58edlfNxX8SBKmM+c9N0K3OJdxvQ9LloV4pTN928m5En/6m39Ve2pk
XaOdzhrXvl+kfK+MK5t0ut3FqjQWMS9Q2fptGfetrPSF11fTWOPQvdGJJWVc
2SOHHnrOS2P3p1aqujaXcYX60zwc2qUxDX2z965/6oJ/tVL7dnp7UCqreG3q
rTihnKt34+fMIMtU5jxu8fy9f+qLf/W2Fut5SCKVZclOfp28sZxrHzMv6PCz
FOZbo7Tq/aFyrsb4SzmnN6ewiNHn9y7xL+e+tZ948MeAFBbn2L183eNy7tUz
STPepyczkx999/5KK+dK9go9JLU3mckeHvxhRl05N9bm1KmxY5JZ0ZRYsQl/
+rl/NZ0d3GRZncRy89afV1Cu4G5Y80Yz5GISs9k9t++saRXcaHeFB0NnJrEi
lbGljWYVXNPTtobdvyayqT6d+q7fUsGdPV74IO5eImvsKLB1PlzBlS1b+cRr
QyJz6XS7u9fVir8KfybO753IVJUcn+b8qR//VYGNuZAS8IFZvtQ+OflDBTdq
q99538F/1pc0BZWVVnCj6rv/9vB6zzS3dh2Q/ruCG272cM5Pyfds+fF+YnW9
KrnJNy2aVx5IYDoj393rPqaS6/JrStrlknh2+6PzcemZldzPlQNu3lkVz+KU
B3b0XlbJ1Z8wM80z9R3zXR8tU7W9kmt1auOFnbrvmJtH+6Iqz0puVnhd8Lbb
cczyyfT29gGV3KjrOz4bDYljKV/6uE+NqOR21bOLPu71lrlMrUl4klzJFTth
M+pa97fMvurWFUNhJXfuju9jdHzfsBz3DXObmiq5yc/dJsh0fcM08h9sOdu9
ihsf83KV05XXzEpRzP27ahXXd3Fz9Ci510zJYHjdoilVXJ3FnVa2PxvL7B0X
jpcyruLOVesR+3JgLHOLbx4/bG0VN2t8u5fdrr9iZ5WCJ+j/6W/+1XnKpwiL
0a+YYu7B4309qrgLkwpvWEXEsLqLy0z7XqriWi5M/bF+QQyz72puNSmkijv3
YbnP9bxoZrhvccmhl1Vc/Q7Nfjl20cyzLvbw1NQq7oNlpknHJaOZ0jotH+WS
Kq7O5WBrzcsvmf6SF6b5f/q2f7X4svNb9LyXTGOKoVmleDU3/qxuza6yF8xi
YEHhctlqrlDvyZ14jxesf2fHOcOVq7mL3o6Z3GnSC6Z6q3tHqdHVXIWmy2nR
lVHMyuL63osTq7m+BbKdFodGMXVXda2imdVcQVXOndvLopjGkyfB2cbV3Pgb
16ozFaJYg5OKeLlZNXf7LNMs2bRIZjrdU3P+ymrul1rLrbOPRDLJEwoaPddV
cx/MeeE7RC+S9U+/vmC3bTX3RoPyqFEVz5mdq5/ij83V3Kj0QzcWxj9nUern
SndsreaKPSof7HQHr6OPgz4v+jrR94WuA7pu6Dqj+4LuI7rv6DlBzxV6DtFz
i55z9F6g9wi9d+g9Re812gfQvoH2GbQvoX0M7Xton0T7KtqH0b6N9nl0LqBz
BJ076JxC5xo6B9G5ic5ZdC6jcxyd+6hOQHUFqkNQ3YLqHFQXoToK1V2oTkN1
HaoDUd2I6kxUl6I6FtW9sE4GdTWqw1Hdjup81BegPgL1HahPQX0N6oNQ34T6
LNSXoT4O9X2oT0R9JepDUd+K+lzUF6M+GvXdqE9HfT3KAWBuAHIGlEugHAPl
HignQbkKymFQboNyHpQLoRwJ5U4op0K5FsrBUG6GcjaUy6EcD+V+KCdEuSLK
IVFuiXJOlIuiHBXlriinRbkuyoFRboxyZpRLoxwb5d4oJ0e5OsrhUW6Pcn40
F0BzBDR3QHMKNNdAcxA0N0FzFjSXQXMcNPdBcyI0V0JzKDS3QnMuNBdDczQ0
d0NzOjTXQ3NANDdEc0Y0l0RzTDT3RHNSNFdFc1g0t0VzXjQXRnNkNHdGc2o0
10ZzcDQ3R3N2NJdHc/z/+ucLRP6fIXp+kCa1Hw92sGi9dR86Bnbu0XrrFztG
PY6tabV176Uu9nNsvf0H3vbooN16NVd897z2o5oovTtth+536v1YqY6Jz6lG
GrstJ4ZS4152tU5zpLraec25Y0qNujsyv2tvqufQPf6dSqqIGtadLYuCqb4x
qWdTd1C9lv7epDOVGrjUOqxXe+ryH4JfZ2MribGuKVmF3lRpXamfo5dSLebe
dX43nhob1NmwW3MFMaLfWxvXTGqF0pT8uGtUFdnJepH7qKbR4wsljKh7rK93
sh1OtRoW2bj1VzlRb6DGoh9Z1Kh7N+vuhVLdi3+ZDztFNWxYKyNtRRUMcX/U
U5canTfTe5M8dYT+01MDv5YRLaRlFTLeUIP7Dt11/SpVY0wfJ81tVMmtzTcr
5lJddYt0twymjtjkWL32ZylROLRQcV8i1cTqZP/8W9RR8zbrJe2ldhUKi/eb
UX2Dv5z7OZIqWzV9wrROVCuPI1/3ZwuJbi4NOh4RVLHCt+YuvlTX2W9XqO+h
7h72XT/TnLosPsBrP6NWLb+ev6U/1cXszeC5zSXEq+PKr03Ip7qd8plQE0G1
ne+kPuUS1VIi0KerC9V70aQZC5ZStStmNiRrUY8ZZvT0lKPad9mg3udnMTFM
qG9+LJOq+WTFi87PqIYdJ8S8PE8VvnQdK+9MTVwc9PLsEmrV3vKEyZOp0dXr
LV/IUy9GmP36/aOIGGXutd7lI1Vq5BtNQTi1fpdcosEFqn7IzrELHKn2U7Xn
HV1KndLnkob4NKq5m1fmp1l/ddK8PulMzz99f0eL2cWr/qr19fvJ4dWFLFOm
3Z5tLkXcJ1Z7ZyyKLGRGs5sOfvQp4kr3PKg12aeQNfweW/L6QRH3eLsJw1Lt
Cpnng4ioox+KuGpbi1bcm/VnPWLMEKnKIm7wGq03dgMLmVNcU9hlsWLubGPX
TdLNBUy/ZJmYQr9irtyN7c1mGQXsSdPlwaUaxdwN4tKzh4QWsA03/e5mLSrm
Fuz3+v7IpYBJW3gPyLct5lZ/H7Tw3rICFrjdI2GhWzFXMunOO1fNAubpb/ms
3r+Yq9Z9y7pT3QqYV+ztrl3+PHf/Oiz9l21tiYB11p9ik5FezP109prgWYSA
xeq5M92vxVxT3xB/RS8BMz9k4qglU8L98ejAnFvrBczexqjOSL2EayLw6OMx
UcCUsr5NqJhVwk3U6nrXv6eAqWXPdN5vVcJ12jz65K74fPaki2H7EftKuCk5
yj/2H8hnm9aVbT55voT75IP+/Tma+cz5l/Ygk5ASrrfUfB/J2jzWWJqQ+yyh
hCs766zV27N5rH5V9/5by0u4qllJN27r5bH7c0rLH7UTcoWKhrofG3PZ8tHh
/VT/7Fv/WrE96bbnjVwmN2Povo+aQu4zDfcDDktzWW5WdveBC4Rcmy22iVe6
5jI986x1HjZCruYXu/fLo3KYw3W7mPQDQu7FzndCd+3MYUaOpj2M/IRchXO/
3skPymG+Wwef2BYm5GrcOrXwRk42C3x64YfLeyG3a8Io2T2ns5l//58bLEuE
XKXr3V7mzc/+8zxKzN0tVsp91rG2n8fvLCbNAk69ki/lZunKzrr7MIuZFM/0
yRhXypU0GT3eaX0WU5+7r0pufinXrt8B7ac9s1hDw5rhDdalXMV+qa79X2Uy
wYBTudf2lHItr85e3+1wJqv22uBfcrqUq20UPWD+9Exm0VhqP/rP+fmv9TKz
Arb//siq+z2wFYss5WrfLnry++VHFn5VfbNdaik3pdfmh3cO/FnXqj/cv7qU
m7JY1fq61kfm9rbvW4/2ZVzbq6EBy75nMKPqYUd/y5VxFbQOre3wNIOp+hgd
XT+qjHtsfJ+1b50zWIJJk3IfVsb17dDJN1w3gwn1FXtWmpZx54689Xbaz3Qm
5hXlbre57K/Gz1feeZDOvLqNCs09UMY1Tt1VbrUznSVM2FgvdaGM67Pi+ZD8
0elM1mfrC8c7ZdzY8beenvmSxoIrDRY6vyjj/pgyrPPJp2lM+ljBsLcfy7iZ
S5ceCtiRxuTG+oWk1pRxI2wH1ezXSGOyuxQX5ouVc2OPB3Ve3ZTKGh6sb+rV
t5zbv+BNxxcPUpnwm9yxiBHlXCP5p0tf70tl7qN0mN/Ucu4aZ6Y7yCCVWXm9
3nJlUTk3Yd7NEPn2qcyyZnvEzD/1478Kxl9+PTohhekLB6tn7Cznqhmd3OJ8
PoUpBP76ln60nHtfWkp+1+oUJmaxa9X9C+V//eyZXTIqhakm7pw/Kric63ni
fI9d35OZ9snIKr3Icq7J3BeTxr9MZlZdx+a4vC/nJmTZbtxzOvlPHyAssc8t
52ZOMpoXsD6ZBatscTSpLef+OB16VmJcMktZcEQ7+2c5101qvfHmrslMX2vg
eGepCq7akitrTgqSWL3k5B+zeldwVSvn9RoSlcSCryXPbBpUwf3R7cjoTueS
mHta0UOFkRXcNfsW5d3d++fjdNhkFD6xgqv66XGfJLMkprZqbYChTgXXKSe5
pxJLYp7D3meE6Fdwzd3OOFaPTGKxnp+PTp1bwQ02HbbaoF8Sky3ct9bcuIIb
a+6SXN8tiRV9fWVRu6CCazrgTu1YqSSmeTViiO2iCu5yudfHn7bH6+jjoM+L
vk70faHrgK4bus7ovqD7iO47ek7Qc4WeQ/TcouccvRfoPULvHXpP0XuN9gG0
b6B9Bu1LaB9D+x7aJ9G+ivZhtG+jfR6dC+gcQecOOqfQuYbOQXRuonMWncvw
HAfnPqoTUF2B6hBUt6A6B9VFqI5CdReq01Bdh+pAVDeiOhPVpaiORXUvqpNR
XY3qcFS3ozof9QWoj0B9B+pTUF+D+iDUN6E+C/VlqI9DfR/qE1FfifpQ1Lei
Phf1xaiPRn036tNRX49yAJQboJwB5RIox0C5B8pJUK6CchiU26CcB+VCKEdC
uRPKqVCuhXIwlJuhnA3lcijHQ7kfyglRrohySJRbopwT5aIoR0W5K8ppUa6L
cmCUG6OcGeXSKMdGuTfKyVGujnJ4lNujnB/NBdAcAc0d0JwCzTXQHATNTdCc
Bc1l0BwHzX3QnAjNldAcCs2t0JwLzcXQHA3N3dCcDs310BwQzQ3RnBHNJdEc
E8090ZwUzVXbOp9t6/y3zfPlNs6v2zofb+v8/b/+eQGRIv9vdPno3J67GmuJ
iQvDP9p9oxp/GTnIL5dqt/VSYHE8VXWgsntEEDXxVkCfLC9qbPeGae/WUZU2
GRxZM4Wqeq1n40Zp6tVvuUUZGTXETV8MIvZdoir9vFd025J6aVfAdnt1qqTk
uYWRTdVEh6FTsk8lUTXnFiSfCqDeT/AfIHSmhq+0PNPHiOpltjJj7RCq8dIV
VhN/VhE9GxKZfBbV+bheUPwTavjeR0N++lCLHEfW3NlJlbm21ynejDoiO2nB
lolUu47fjs7qRZWcqDh2Xl0lMfDWyap7b6n6Sh1v9L5KddXsZ7pxF7XRfEzU
NmOqy/k+BxpHUq/mNitnS1CF3c4EDc+uIE7VHCH8HEpVO5TZY6w71aLgyA+l
FS3o1S6g0ziq60jnByVSVO2dr6WzisqJa0J7TamLoko9PhCa8Q81JKJuWORu
aviEOjOjpdTo4Noj2ZOozusu2h5XoKr1n208/WcZMVjZpvBKFjVrkIfEx3Cq
lNvkDhHnqeI5lfp1TlTBBfmmmRbUlAUzreSmUqUSFviPV6ZGm62QGNuOWqRa
l2dbWEo0+b5/aNpLqkW2T7j6Zar9g3tiHQ9QNQ+L7fReTo2aO3/s5ilUbd/j
7X7JURUKEurV64XEUc+fz1FKopqcvGvqfo8qtqzU4OQZqlBj4NfZDlQHQ5ct
0RZU//UFr89MpWqMn/FpuQp1bo/rMztIUG9fyj0ZXVZCVe/1LDuO6vqzj8qV
EKogvd9D/VNU38Fes+45UI/t63A+YQnV0kuz+pU29ayv9dp1A6kyx1Q8+3eg
Gtvl/VCpKibqx1ZYOyZT6+S/Wfs/oVrUKZeP/IdqHzO30d2Vqj8rokvleuru
V2rssxHV12XtuQ8a1PDJF2pv96XqZ9ate9lURNS00/+9t4iqp6+7aMxbqv/A
aX273qEq+FR6DTtFTRzoE9OwjXrx/JK3XhbUsF5yU5dMp5qPV1m6R+evTmPn
fNMbWMQu9W+wmWHx1zMpx1f6fC9kax4E/XTfXsTd+Gmf25ikQia7eGWm6bEi
7hqxT0/2BBcyl5Cv9SaXi7g6O7v3bH+8kIm1P/bi3eOivzYFL39v8+fjfzL/
vDG5iFvZ26nXihmFrPzb0FF6wiKucteYqRdU/3x8y8POu34WcXVqx7+JlSxk
fd8K39yXKeaaJ19b+FlYwJavObR3+LBi7teKiS9fRBcwqzoVx2rd4r/2iXt3
4UIB62u7fN1Ei2JuZm596W3HAnb/01k/yS3FXPszl2QczAvYJKVXY7sfKObe
nG82oXxKAXObXt/R6nwxN6y/7BerfgXMPGBr0+KQYq7T0TTxfd8E7H6fuv6D
Y4q59jl9Ut5mCpj3GdvkbjnF3KsDl8eUPxQwWYXytQs/F3OLzK5YHzwtYOp3
uveulizhPna2try4Q8CGj9R8Zqxcwp0eeadEcp6AJby1EOv05/3+V6Oknc31
w/583n37jBrmlnCvRkV5HO8qYD92/HO7YU0JV/afwY39UvOZmH1E+Xynkr9e
f60rczqfeX4a1iPCs4RrPvJQ/BvTfNbf7rTWiCsl3Jt3dU33981n99N9d8Q8
KOEKd43xCy3IY5Yal9dlvi3hCtYpfrC/kseiU7SnDCso4YYdnD/n8LI8Fnww
deriLyXcxq0H9MVU8lhEzIJTWZ2E3Lh7UrPtSnKZ+u/3nToOFHLtJLxLKq7k
sk0z9krmjBFyw8cdqtpol8tUnNUyk2cIuWdP7tx+eGwuU/r6oKe0qZDrr1Tw
+mNTDkuxnZKrYC3kuj0xtL77OodJWlc9/+go5Fa91o7ecSaHiZleLC4+Jvzr
7xELF5jnMCPxfnbW/kKuQsOdu7EDcljUa58OKneEf70x7vPZr9ks5UjBZe0o
Iddt3VIF48hsJr1q+Kyj8UJuVo7r0LW+2Sz2WF6Hb7lC7m3ztZ8UrLJZXbL3
pDdlQq764Rkm12dmM7Vvt+/EfRNynRV+1PvJZzOrfrEqCZKl3Pjg4NPnK7NY
bk7BqIpepVybDRZO019ksajHTcE2iqV/TZNsiAzKYuKF3XTGqJZyG8xT2DbP
LBbYQemL79hSbtfPfipjNmaxIss+c0Zql3JNc58M2Lsgi0m97laro1PKLQpK
GTeVZTGvMRoyjTNKucZbrT70GPvn63RfsqOdUSnXZuUPv5/yWSz69KUBPReU
csOmDw142zWL6V8rurbLpJQ7SmZxN08JvI4+Dvq86OtE3xe6Dui6oeuM7gu6
j+i+o+cEPVfoOUTPLXrO0XuB3iP03qH3FL3XaB9A+wbaZ9C+hPYxtO+hfRLt
q2gfRvs22ufRuYDOEXTuoHMKnWvoHETnJjpn0bmMznF07qM6AdUVqA5BdQuq
c1BdhOooVHehOg3VdagORHUjqjNRXYrqWFT3ojoZ1dWoDkd1O6rzUV+A+gjU
d6A+BfU1qA9CfRPqs1Bfhvo41PehPhH1lagPRX0r6nNRX4z6aNR3oz4d9fUo
B0C5AcoZUC6BcgyUe6CcBOUqKIdBuQ3KeVAuhHIklDuhnArlWigHQ7kZytlQ
LodyPJT7oZwQ5Yooh0S5Jco5US6KclSUu6KcFuW6KAdGuTHKmVEujXJslHuj
nBzl6iiHR7k9yvnRXADNEdDcAc0p0FwDzUHQ3ATNWdBcBs1x0NwHzYnQXAnN
odDcCs250FwMzdHQ3A3N6dBcD80B0dwQzRnRXBLNMdHcE81J/+v5rUiRIkX+
fxXtb8gRKfPepeW3XpfDycc6Pmu9TT9V8tOPtV6HebVvdJe03gZFc6/dw1qv
u/ec1IjGmlZreadur1Zi660bErJH8mbrvTTurvmK3a1XNUn5ykaL1mvy7ozN
QK0WXKDrNnActf/BM7VnelDFRpl9HvM//y7y/6LLuj3C8I9U1c+WI7++pK7Z
lB5zz5da3X5pWfed1EsaW7q9nUUV+5XctV6BqrH6aXuvqipixSady4UvqbkX
0sI7+FCDxXXyLm6hXlpY2zlbnxq8/EjwrEEt2LWdmXpDJVGJSQQZZ1ED/1l4
af4dqpzrkcnsFNXiRMOJfZuplrmHRqw3oXpPPxRVoUk1CZ4fdqUfNWLVrxHD
myqIbutsNYVlVH87z0D/WKpSp8IYQQj1/tpTJbZeVAtFt7XndlDd8kOP9l1M
DdqclaeqRY2tF66L60uVTb4rHN5YTgwPmV6pl0H11BgtpxNB9ZbTv3nhAtVq
nURZljN16uhFPQrNqBbj722/r0m9tL3uyIleVCX2fX2nL2XEIvly43fJ1EtJ
g8XV7lGlwpdlR3tSLWYdT5m3kaq9uvbZl3lUjbk2cas1qRVjEn6tkqNaht8t
S/pVSozSF44/KaCqnt+50/QN1c1+V+efN6kumebPB56iqox9/0/37dRYx5iv
V5ZSfx1osNXVoVruindOVKEe23B4/LLOVLE6n4i5NUKiYH6gk2oyNb7btBFJ
4VTffOt48ctUw+tqC3u6U10G/3Oorx1V1lNmoXAJtWiGweRz06jezXL2GapU
W39bs75S1Iurd9+6WltCbJzsaOeSSo39mKO9+jHVa7G78q0LVPWaO2zLfmqK
86Y82bVUw9Iw11kzqWGNRR0Wj6JeXP7Rf5cMteqZSvTd78VE+yDbmvBiaqxt
erjRG6pvL9/21fepQuX41UoXqBrbO3zTdaNWdLvWZ6IddZnAv+qGKVWg1X7X
fl2qRdKT1zPUqIGLXbIae1ONS8p9nNpTxWOeRg+qKiJWBRrurUynqmvHT3Z4
QbWqbExXuk2tsNo7I/cM1aFDvOHM3VRbq2tGQ2yo2uXWxt6LqPoGMy7dndKC
RcWNoVP/KnfrxmF7lSIWnClucX/RX/dMavz+WayITfK3q15k89eb3TMuuAgK
mdygHNeaPUXcvPgJ2grRhWyTbK8Se+8ibm7hqmHJVwqZ8R6Fk9rXiridZpip
DjtSyMTayUaHPiniuuxdk22/4c+/v3Vb6Pa+iNup+de1CYaFTPpF9vKl+UXc
TSs06xvU/3zeDubK0vVF3OVOjUa2sn++zlTNJ/0lirl5L9RsTL4XMPE+QoNY
uWLurlzV0+m5Bcyz7twx9eHFXLU+imoTX/5Z3zgw1ka7mBucl5i+8kYBazBS
ToqbV8zt1mVe7IejBSxzZpLeMsti7qQ++r47thQwwR2/Qfl/nut/DXGSmXvP
tIAZ2w945LO3mNvJZOGmvroFrPqbu2bOsWJu/2Nj7jwcVcCMniXrKv1TzPUs
ib7woeefr/PW7YLHt4q5wb93B9v8FrD+lau0xj4u5i4euGlkWKWAad67/Fnq
VTF3tIP06S0fBUwmJ3ymVXIxt+zh+nNWMQJm1PPW4jV5xVzPtfuabUIF7Icg
VmFceTH36J20jPFXBEx1bGhJz7pirn7Y9utF5wRsg0X0zowfxdxV3y3ipxz9
s+5a536muZhboH3urp+LgHmVl46+JVHCvaEcMGnfTgGT3ntZ+KFLCbf6pbTq
rM2CP8/3q/PLepRw5UZmKHxdJ2ANphY5obIl3ON7HB/arxawWBv/5Fm9S7jp
K7vH9LTE6+jjoM+Lvk70faHrgK4bus7ovqD7iO47ek7Qc4WeQ/TcouccvRfo
PULvHXpP0XuN9gG0b6B9Bu1LaB9D+x7cJ8G+ivZhtG+jfR6dC+gcQecOOqfQ
uYbOQXRuonMWncvoHEfnPqoTUF2B6hBUt6A6B9VFqI5CdReq01Bdh+pAVDei
OhPVpaiORXUvqpNRXY3qcFS3ozof9QWoj0B9B+pTUF+D+iDUN6E+C/VlqI9D
fR/qE1FfifpQ1LeiPhf1xaiPRn036tNRX49yAJQboJwB5RIox0C5B8pJUK6C
chiU26CcB+VCKEdCuRPKqVCuhXIwlJuhnA3lcijHQ7kfyglRrohySJRbopwT
5aIoR0W5K8ppUa6LcmCYG4OcGeXSKMdGuTfKyVGujnJ4lNujnB/NBdAcAc0d
0JwCzTXaOh9p6/ylrfOdts6P2jqfauv8q63ztbbO79o6H2zr/LGt883/eh4r
UqRIkSJF/peefXT7om91LVHKzFz9t4CqKq1YO/sdtf553rQNYVSVZS/v7L9I
Vai6trrsEDVh04iqyeupRWV3zmkaUiuO9UzaOYTqPtGhrEdzDVFP76fb2jSq
3QaXSwrXqL5fKw5d2EZVsFis3dGQOmJdTe72IdQol8O3o35VEyVfe5yvzKZe
kvGq1w2nSn19dXLcP1Sxip8WYnupV6d5pOisorr6K3TSmE4NlCgZeGoodeqh
u3cXdaR6+gwU1tZUERuunvggkUlV1Sre2zeGqpeutSv0NjXYZdS0kWeocUOV
Tu3cSxUPNvBtXkM1HrZlcfu5VCNxrfUT1KiWqWKjimSoddurp26prST6dslq
75BIrbfxsfW+RXUIM5sS6EHVf/JQfY4N1fhtz4LLM6muXgoLaoZQbRYNWtit
I1VbfMWjitIKok6kz0fHV9QG/XefgwKoUTG/Ipe4UQWvdqb/Wk/1Tfgc12jQ
gtZpBbNGUO2qHtWu7EkNXjA7fszXcqLv/axJKR+pDT2fyPi9pOrsPje+7iZV
P8IzeIQ3NaXbwQV6jtQ19eavYi2pXnlj+lw1oMYu0S0uGEM1Tl2kZNSH6n62
ig1uLiPaLz5Y976U2qQ+W6bsHXWTXLc9bsFU7WMuEhKnqP6d6jfmbKeqZryc
OtSsBc+cKvZm1DDjK+avVKlKSqHW7TpTq57JaRRVlRJtTXcdP59Etfjs1+9o
GLXodIxbsg9Vu0JaJdGFKmu8pOLWGqrMzTmTjAypgZ10rAzGUKtkjzoWylLP
yiffHtwoJOqknjn+XkA1PGp+auBbqnf2SVXdB1SBWlz4Wj+qetkrNz8Pqu3t
F34rd1CXjXd6MWMt1e2tul/2fKrCGt9b+ZOo7iXid28Pp6q+OtU4qzdV+FR5
vuLPEqL3MuPIsnKqs9S+Sqs0qtSN+E/vn1LtRyvUNl+njniaO63+BNV04uU1
nXZTJQ/nvZNbQ/UX9NsfZECVVbhb3Wkc1dVE12K9ItVlnZR1N0nqiO3Jkkfr
ion1+Zk3xwmoOasLFsvGUbsuCR0ZE0atMHA9NSuA6nzoWlj5carNs9e/xu6i
Cgp7P35tTa3vvnZB2CKqldzqqQP1qQ4qlh0LJlBVH518MlaVarE0+qxlT2pK
vGnceUmqysKKc9lfi4hFq2V+6JZRTew0K/dkU439G4oGJFHdcsPOb42mNl6N
7TvrMdXNMt3I5y7Vq3/lNJtr1NuJzYUPL7Xg9eQP385RDQ9d8z3lRXWprrSf
7kG9v3icUd2hFsy75LvpYAuu71xWcaANoo8DPi/6OtH3ha4Dum7oOqP7Au8j
uO/oOUHPFXoO0XOLnnP0XqD3CL136D1F7zXaB9C+gfYZtC+hfQzte2ifRPsq
2ofRvo32eXQuoHMEnTvonELnGjoH0bmJzll0LqNzHJ37qE5AdQWqQ1Ddguoc
VBehOgrVXahOQ3UdqgNR3YjqTFSXojoW1b2oTkZ1NarDUd2O6nzUF6A+AvUd
qE9BfQ3qg1DfhPos1JehPg71fahPRH0l6kNR34r6XNQXoz4a9d2oT0d9PcoB
UG6AcgaUS6AcA+UeKCdBuQrKYVBug3IelAuhHAnlTiinQrkWysFQboZyNpTL
oRwP5X4oJ0S5IsohUW6Jck6Ui6IcFeWuKKdFuS7KgVFujHJmlEujHBvl3ign
R7k6yuFRbo9yfjQXQHMENHdAc4r/en4iUqRIkSJFihT5f6qovkK6u2z5Wpfc
enVGm3iVPmi9uU8yrKK8W2//jZOX3d/YelWcozaMm956+78fUR+p2Ho9k6Mf
p/6oabVrfr8edTG/9VrUN33dENl6jeZ45qZfbr0R95esXX249Wrkv746fkPr
Nd6j6J+wgOr67OzaeAOq5yZ3iX9GU7NSBQN+96daLu90NrQ91ajx1Nvo8mpi
Y9JS27h31JTKldb+wVRx77lmh9ypKjEDvD+upoqPzxuaOokqN3fk1xtdqBoL
j5g5l1cRw88fMXnziupu5XV5UwDV88Cs8vOuVO9pB6WGrqI2zbMYmjCTuibF
Izl5CDUrWLX5W1eq8PHl1YOqKonq4qq+qzKpCjc6/R7/hJrSNaXzmkDq8h1r
F688QnWb3Mmj0IFqc0t47NgyqrbALOrdbGp9//lxmRpUr+Tzi88oUxPvb7ao
kqIGKTh/6fy1gqjveayoNo+qp3XqYPEbalzTcNmyu9Rw5dHnZpyjjuhYL17k
SDWR2NHviyW1/njp1D06VO3oXieCB1FVPYoP+HWkxv5c0mFZWTlR78X62J4J
1P7aCzd+vEfVzgoLEJ6mOmfvWPt7BzXOzlf27DKq5Owdp+V1qMv/ea4uN5Qa
PPlEfJE0Ve+C64/cz2VEWdkXJ+7lUqX7SWkoRVNNO+1h0repIVE6oe7eVK9j
444930O1rLWZE7mW2li+YHbsAqpRgFHvdtOoluFfB7xQo8paBg/V7N2Cvcdp
rBGnmt66kKhdU0psPLD/+rRsqvdqmfqsWGr9KRPZW6FU2XkHfmb5Uo0fzO+z
wI1ab3ApUWML1fjc5U/7zalhSuuSZ+lS4x47u48eRs1p97hXsQy1KsE7QOGH
kNgoPbQ2qYCq7nEwThBHrTsxVzH9EfV25vMdPlepjYtj9ZRPUK1M7mcP3E31
Njh4L9Ga6jZB+ZrLYupVM70Fz/WpqopR4e3GU41Zt44bB1H9Dc9NOyNLddt4
5sqq3yVEqSGmhT/qqOGPD582LKDaKiyx1khqwYsVsbNfUONWODgOe0hVdbj4
qOwaNby2l89eX2rdqDSjpGNURaeXN+8epHqz5BFuTlQN/dOK7bZQxRtuLFCy
ptpbKX2ea0mVmVH/rNSM6nJr6LgDi6lWMpsvdlhA1ev/eNQXI+qoEJXXDbNb
L/o46POirxN9X+g6oOuGrjO6L+g+ovuOnhP0XKHnED236DlH7wV6j9B7h95T
9F6jfQDtG2ifQfsS2sfQvof2SbSvon0Y7dton0fnAjpH0LmDzil4roFzEJ2b
6JxF5zI6x9G5j+oEVFegOgTVLajOQXURqqNQ3YXqNFTXoToQ1Y2ozkR1Kapj
Ud2L6mRUV6M6HNXtqM5HfQHqI1DfgfoU1NegPgj1TajPQn0Z6uNQ34f6RNRX
oj4U9a2oz0V9MeqjUd+N+nTU16McAOUGKGdAuQTKMVDugXISlKugHAblNjDn
AbkQypFQ7oRyKpRroRwM5WYoZ0O5XFvzvbbmh23NJ9uaf7Y1X21rftvWfLjN
+XMb8+225udtzefbmv+3db7wX89DRIoUKVKkSJEiRYoU+f+/Uz2cI34V1hLV
y75YeyRRr1rN8Rj0lCpXcjn4SQDVeeuosKoTVLkuj5yTdlLF+z0dPmgZ1XRw
ZGNfXWrYxJPzcpWpcnPWXPFvR1XQDen7JLuGWDe3aUROCLUiuOmSpxvVq8vv
yz2XU4tGhJnZTKbaLdn8zl6Outxxhuz3hmqi7DEFv7gsataGh9qKL6ji042/
97pJTb+QajHuFLVI3NypnSPVbrfKQG1LqtH3ag0/A2rIu5NDUse14LUJX1cp
UqUqr5vsk6C6KyrIn6qvIjqkrunpLKCq7gs2DkmkOqc9jqx9Tg2bELPrQRBV
LuvtNOOzVIe9H9pV7aeGXEv5st2aej8yY+TchS2YZJ67fgLVOT07OakfNUqq
8+D2vyuJm7Q0z2UWUKOu3by5IZpqKdd/pGoANcqv48+3B6mJQz4vnW5Fzep7
b+V1Q6qXlN0XwRiq8KPhsLzeVO3rQ5Zl/6wgXtJuCFIpobrnxQ42jKMGmXcY
YfiAalQy3WKYL9U3+YFVb1dqcOjQR8ZbqFn7+4rdM6PqrOgiET2NKmv1+fmu
YVR7k0yxJHnq8j37Ay6IU/WvD59lVVNO1LC64y+fRfXupfG+6i1Vs0r+Wl0Y
NT36964vV6l27XTNHI5RXUYf6qzgRJU6v/D0szXUog5Kxz2MqDqLBt/NnEgV
uzTs83sVqsPoafFLu1Ct7prskvpWRlR1HHOxl4DqatDlws7XVMk31iWhd6mq
82OlDc5SXfy0Zq5xoUb/CHrbwZqa0HSOLTOhVnw7aD16OlUnX3nvoTHUhJTn
848rUI3PTX6S1JHqtuTx/bKvpURVq+kWTEgN2Rtn1C+VqqTrkaUVQz0mMXe9
6QNqoGW/5cJrVIuXFeofzlDFjzgsyDpCNVzU3niaM3VUkrO/2Gaq7Lz6uper
qM7XBZ1MTKl6jQm67nOpjQ0nSvfNoFrWLeg/eyrVZfnbebM1qSavdXr0V6fe
1tqRMmUENTzwpqr6EKp+SL1B/SCqe9jUxqPKrRd9HPR50deJvi90HdB1Q9cZ
3Rd0H9F9R88Jeq7Qc4ieW/Sco/cCvUfovUPvKXqv0T6A9g20z6B9Ce1jaN9D
+yTaV9E+jPZttM+jcwGdI+jcQecUOtfQOYjOTXTOonMZnePo3Ed1AqorUB2C
6hZU56C6CNVRqO5CdRqq61AdiOpGVGeiuhTVsajuRXUyqqtRHQ7rdlDnw74A
9BGo70B9CuprUB+E+ibUZ6G+DPVxqO9DfSLqK1EfivpW1Oeivhj10ajvRn06
6utRDoByA5QzoFwC5Rgo90A5CcpVUA6DchuU86BcCOVIKHeCORXItVAOhnIz
lLP91/mfSJEiRYoUKVKkSJEiRYr8v0vUnyKFckkXZr5tvRYxSxvH3269wqyV
h/OOt96iL2OfNNq2Xo3avX5Mv/WqD9m35a5q6zWcONFmcafWKzZHumFoVU2r
dRhyY5BRSus1dBl1yOZZ6536uWGuYWAbjPdV/Hii9Xr3kN711ZHaFDRk68od
LWi2ZcDLtdTGbbk+7oupvvFlOxt0qfUfakZ4jqHq7P2ifUeearpwuP1NMaq3
k5rVuNJqYrhHqKzPW2qC93jHMXepsuu9vd2OUOsvR73svoGa4poif3UaNfqb
fudjA6iaufapEt+qiGetVgTczKCqbt4wv/NTqtrqYSZb/KjOQd/m1h6kSrol
T/lnPfWSjULwRxNqdcfKWYHaVOmVw1OzBlOdc61mdexGlev4bdnnH5VE2U8b
GkOLqKrd73dakUo1yQtY8DyCGrtLfnJEENXSoVkr5hzVS2fjqr7uVGcbWYni
7VT1c1/0J22gSlo6VdktpEptyjlZrUuVnvbS/fxYqsnP5uFeA6lyQ/RsO0pT
LXt72zU0VBDFd1jekS2mqhVHik1PoLprxCifeEQ1GXfC79Qlqt79gHnTj1ID
N5zbvcmOepXZmw83pYrVjR1ZPYmaYn+ieJEydVNFVYFUV2qTwcq0j5/LiTKn
nZZ45VATTlutePqG6nD/q8XTh9SwgFMR5y5TBavOXVh/ghoyrNf2jF1Uh9Xj
izfYUK22R/yoMqeqyA64JGFI1UvJC2/QpnpfDyx0H0UNau/wUWEAVUZhcPHQ
HtRNOXfPSEpQveT1l6xrLCOqnnqu9bOGej/P9oawhGo12WLM1Uyq+tbUk3dT
qS7bz/b6HUd1zrHZuPwV1Ui/UG1sJDV6utdw9WdUl9sx0t8eUStG6xvdC6OO
mODVbPCw9aKPgz4v+jrR94WuA7pu6Dqj+4LuI7rv6DlBzxV6DtFzi55z9F6g
9wi9d+g9Re812gfQvoH2GbQvoX0M7Xton0T7KtqH0b6N9nl0LqBzBJ076JxC
5xo6B9G5ic5ZdC6jcxyd+6hOQHUFqkNQ3YLqHFQXoToK1V2oTkN1HaoDUd2I
6kxUl6I6FtW9qE5GdTWqw1Hdjup81BegPgL1HahPQX0N6oNQ34T6LNSXoT4O
9X2oT0R9ZVv707b2v23tr9vav7c1H2hr/tDWfKOt+Ulb85m25j9tzpfamF+1
NR/7r/M8kSJFihQpUqRIkSJFihQpUqTI/12suymvPOt7LVF9ydh7z2qpU0/5
HZj+kSodJX2+VwzVP1G24/JgamNK3/B6H6rlrXmr+u2nSq5zVb6/haq3qdOB
04uoe3Z4Fu6YRLUaXKVV3I8qzDTcdOtXDVHyn+U5dzKpQdvsHLxCqS4LLq25
d4zqPTWu68E1VOn5aR02zKBmrRFsdB5MVbl9d11jZ2pjh33uZpXVxNiG2LAZ
qVT12m4vjj6lWk0xata6QTVy83j/9Aw1/Uk/9VH7qNHCW/f1bKjSPb/u8V9C
DdSZ9mj4DKog8V6xw3hq+PohdYoqVIu5J73SulGruzdlJbWn6ujlNe77WkW0
co98oFVEdfEcJK2eTtU8d0jP5TVVbUG0/ZwwalSPdge2XKXa/TS+IXGCqlTi
//6CMzXESEzPbh21LnTlLPkF1MTrI5zOTqIaXv16eJMSNcS87KFPR+oa2eyF
n6sridV3fdxvpVOblplV6z6lbip9eFD8MrVuveyHaUep4g/UFjRso8b9Mli7
fzk1eFiGooYB1VXDat+wSVSNdhuPpA+iSj/d8s2pB1Wz5sTR++2ohiNDrLfV
VhATn8kYZxZSPZdurf+UTM0aM6mfWwxVp1Gs4fRjqp783fzGm9TGccstxl+k
aqyrfy99mhruezRU1oNq83viSM3d1EAD4civ9tQIF8smtc1U6ddZ7vLrqP2H
3D39eRX1vrfr2yALquqJsa9uLqFqn8z/p50J9arsqrynC6gWPoXHrsxvvejj
oM+Lvk70faHrgK4bus7ovqD7iO47ek7Qc4WeQ/TcouccvRfoPULvHXpP0XuN
9gG0b6B9Bu1LaB9D+x7aJ9G+ivZhtG+jfR6dC+gcQecOOqfQuYbOQXRuonMW
ncvoHEfnPqoTUF2B6hBUt6A6B9VFqI5CdReq01Bdh+pAVDeiOhPVpaiORXUv
qpNRXY3qcFS3ozof9QWoj0B9B+pTUF+D+iDUN6E+C/VlqI9DfR/qE//r/lWk
SJEiRYoUKVKkSJEiRYoUKVKkSJH/76J8D6n0y+2neHbrvSTn+SjpReud+vOF
wq1rrTdW0qDi8dHWa/js2gAXm9arsOfxgCWzWq/6tJLBZcNbr8zsumnbu7be
KPdIiwv1Na1W0rbjspuC1msfO9NUKq71rqlPy1R+2Hpl5AfGDglovb63Tq32
8269l47+HtzsQk3QyFKx307tv/6pnvJ66v1RU9ePM6eKT/XflT2LGjV0zqAB
mlT/yiN+mwdRHbLsHltIU5syohx/1ldTTQ8dCcikekYW/3KMoaoeVO0YdpVq
svtToKVHC0as6b3Uinp1j6lX1zlUsW5hz64Op2ombx+2rVMLph/xDKysIm4y
EVo/TKVK22/dFx9BTXnqcWrJDWpTu46Btd7UIKWzV2pdqGe7PpvxfDPVLjbq
/qrlVHsd/4en51OrHaLCGqe14Mq+jZbq1OU/nUYbKVPDdWVfC3pTLRSyl1+W
pN4PGNUu6WclUT00K9LsE9V/jqafQinV4WD8p7m5VPs942qjM6gVKYJb4+Op
1a4ZqjdfUcUjFnwviKT2v3Dodv9nVDlxC/E9YVTx39sk2j+kyokp55uHUPdk
uqfNukvVWNn14Jjg1os+Dvq88OsE3xe6Dui6oeuM7gu6j+i+o+cEPVfoOUTP
LXrO0XuB3iP03qH3FL3XaB9A+wbaZ9C+hPYxtO+hfRLtq2gfRvs22ufRuYDO
EXTuoHMKnWvoHETnJjpn0bmMznF07qM6AdUVba1P2lr/tLW+amv91tb6sK31
Z1vr27bWz22tz9ta/7e1v2hr/9LW/qit/Vdb+7v/uh8VKVKkSJEiRYoUKVKk
SJEiRYoUKVKkSJEi/5+Uzc+u0RbWEtW8H2mPz6Cq209Kv/GSWjH/aftPd6j1
U63kLS9Qg4f1iLxyhKrR64f16u3UiGZBz0GWVCXHazO2GVB9hRuGTx1LtTx3
y2dLb6r9nGrH999riLFrV96/n0sd4Zektzicmj5ubL78eapUhte18K3UTakB
o86aUl3fP54xcwo1+Leem7YytUnhg9qQLlQjR0PDL3XVxBFPX9WszKWqXarU
u5lANTnb48rwx9Twzp9eid+mBnkm9np2gbrcfnj5V0+qrPmBiDEuVIugfldn
baOafP8f7drda9dVHAfwgWCKjB6oOSGpsItSp4IpoRKTSBQZiMTUMFDBp4iQ
3CTyxlxWJjR1lqANn8DHm8AkIoYrxQecsbErV3bhHD2pLdSRmtIfcPrAOTet
i9fV6+58z/dzPuf9+cLv9+WoKctT728aOn7botS24Qv/XDkvtebA8c7nZ6W2
znj4i9+np/72YuOTzVNSO6f/sGJLTerUvq4hh55L7d59bnHD06l71/29r2l0
aturk+pPjkodmD/n7JqRqb11y87ffiJ119iOCY8+nlr30NQd4x/LN1onem60
z+i9ojpEdYvqHJ1LdI7RuUd9EvVV1IdR30Z9Ht2L6B5F9y66p9G9jnIgyo0o
Z6JcinIsyr0oJ6NcjXI4yu0o56O5EM2RaO5Ecyqaa9EcjOZmNGejuRzN8Wju
R98Jg/39QpIkSZIkSZIkyX83+n0ncl7H67OWfp9vy9lh1Ru/yvfAqf5rT+3J
t3bOiZ5nmvJ94+bAm/dW5Vv5yOqqyrp8e5vPjTwzMd+jH/zYPrsq3/v7V66a
XJHvx1eutL59/Ua2td8Oe7/5p3zfnf3LzIaL+faOnXnovfZ8L7/TM/qt4/nW
3RnXUH0s38rPPvxu6N58az+/vn7iznwPvnK1eu721It/tU64tTV1V3fX2iGf
pHa+PObBgi2pbS/NqLi8OfXUp1Un536UeqZxQ0vLpnyjdaLnRvuM3iuqQ1S3
0vqXnm9p/5T2Z2n/l96v0vtbmg+l+VOab6X5WZrPpflfOl9K51fpfCydv6Xz
fbC/R0iSJEmSJEmSJEny/+6S9q+7Xrv3R2L3urX1k+6k1jw4/es3/akVjVXz
V19Lrb3U37H559SWyRfuPtuXb7RO9Nxon9F7RXUY7PMhSZIkSZIkSZIkSZLM
Nfr/Q+SGaSOOvDCQ79HDfWt6buRbun7p/ge73iRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiT/O/8BbsKRDg==
     "], {{0, 0}, {362, 360}}, {0, 1}], {
    Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
     Automatic, FrameTicks -> {{{{359.5, 
          FormBox[
           RowBox[{"-", "162.45000000000002`"}], TraditionalForm]}, {269.5, 
          FormBox[
           RowBox[{"-", "81.22500000000001`"}], TraditionalForm]}, {179.5, 
          FormBox["0", TraditionalForm]}, {89.5, 
          FormBox["81.22500000000001`", TraditionalForm]}, {-0.5, 
          FormBox["162.45000000000002`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "162.45000000000002`"}], TraditionalForm]}, {90.5, 
          FormBox[
           RowBox[{"-", "81.22500000000001`"}], TraditionalForm]}, {180.5, 
          FormBox["0", TraditionalForm]}, {270.5, 
          FormBox["81.22500000000001`", TraditionalForm]}, {360.5, 
          FormBox["162.45000000000002`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 90.5, 180.5, 270.5, 360.5}, {0.5, 90.5, 180.5, 270.5,
       360.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
       TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -167.4557402033446}, 
                    Offset[{4., 0}, {7.5, -167.4557402033446}]}, {{
                    7.5, -59.41590638635455}, 
                    Offset[{4., 0}, {7.5, -59.41590638635455}]}, {{7.5, 
                    60.62835341030086}, 
                    Offset[{4., 0}, {7.5, 60.62835341030086}]}, {{7.5, 
                    168.6681872272909}, 
                    Offset[{4., 0}, {7.5, 168.6681872272909}]}, {{7.5, 
                    276.7080210442807}, 
                    Offset[{4., 0}, {7.5, 276.7080210442807}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -167.4557402033446}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.9\"", 1.9000000000000001`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -59.41590638635455}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"2.9\"", 2.9000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 60.62835341030086}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.8\"", 3.8000000000000003`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 168.6681872272909}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"4.7\"", 4.7, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 276.7080210442807}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6043863128666569`", ",", "1.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.6983339944466482`", ",", "1.9000000000000001`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.8027203073133051`", ",", "2.9000000000000004`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.8966679888932964`", ",", "3.8000000000000003`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9906156704732876`", ",", "4.7`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7576720557274957`*^9, 3.7576721292201605`*^9, {3.7576723141476855`*^9, 
   3.7576723329134703`*^9}, 3.7576724505142345`*^9, 3.7576727564265985`*^9, {
   3.757672861560854*^9, 3.7576728788581305`*^9}, {3.757672915316574*^9, 
   3.757672918643919*^9}, 3.7576729659824295`*^9, {3.757912154515978*^9, 
   3.75791218511029*^9}, {3.757921480602399*^9, 3.757921493958638*^9}, 
   3.75792154140067*^9, 3.7579215938773108`*^9, 3.7584308403021417`*^9, 
   3.7584389878143835`*^9, 3.7584419896438413`*^9, 3.7607801371630836`*^9, 
   3.7607865007714543`*^9, 3.7607869511232123`*^9, 3.760788425323146*^9, 
   3.7608491235034227`*^9, {3.7608513596830235`*^9, 3.760851382932526*^9}, 
   3.7608544026494102`*^9, 3.760864114089912*^9, 
   3.760869011354104*^9},ExpressionUUID->"ab7c15cc-26a4-4831-a049-\
b16eb358748f"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 457, 7, 101, "Title", "ExpressionUUID" -> \
"5040d5b2-880b-45cc-a231-0e6954975e21",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1040, 31, 932, 17, 47, "Input", "ExpressionUUID" -> \
"9e617440-68c8-4c7d-87fe-cd9d2efca97f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1975, 50, 450, 7, 56, "Subtitle", "ExpressionUUID" -> \
"e25394e1-9c35-4f6a-8495-86623345b352",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2428, 59, 557, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"0fcc0597-25c9-4843-be60-e01aeb713b6b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2988, 70, 1773, 36, 66, "Input", "ExpressionUUID" -> \
"100d6a29-6bda-47fc-8ee9-d0d4d8524fab",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4764, 108, 491, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"a26e5cb8-621f-473e-9817-1af4aa08599c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[5258, 118, 2931, 66, 200, "Input", "ExpressionUUID" -> \
"10ceb89e-20df-48f1-a321-ff7ea6718edd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8192, 186, 542, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"d7ba3c85-2ecc-4633-b74f-86fb15d632b7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8737, 196, 1586, 32, 87, "Input", "ExpressionUUID" -> \
"2132100d-0f03-4edf-8750-0a4cfeec3cf8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10326, 230, 499, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"a1f5bcd3-ad1c-4608-8d2e-184dd5d3b14f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10828, 240, 6861, 183, 632, "Input", "ExpressionUUID" -> \
"064c7d03-91ae-4e2d-a5a1-1e6c1a61dace",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[17692, 425, 541, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"ba1976cb-53a4-4ebe-af03-95fcd4651050",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[18236, 435, 3041, 74, 497, "Input", "ExpressionUUID" -> \
"98de9a1d-6124-4724-8226-daf84a86a835",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21280, 511, 604, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"36014964-da04-4894-82b2-12a8ee0727f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21887, 522, 5582, 133, 794, "Input", "ExpressionUUID" -> \
"01047cc0-f16a-427d-b7ce-0c29435e4e64",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[27472, 657, 726, 11, 33, "Subsubtitle", "ExpressionUUID" -> \
"21ae29e2-a91d-4224-a123-209e3951a365",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[28201, 670, 5232, 118, 366, "Input", "ExpressionUUID" -> \
"b438da06-2c58-4df8-acea-37ef3435337f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[33436, 790, 965, 14, 33, "Subsubtitle", "ExpressionUUID" -> \
"f292807d-09b1-495c-8b9c-9b6b00df497f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[34404, 806, 1367, 35, 47, "Input", "ExpressionUUID" -> \
"72bf3732-c3a2-4f97-80cb-c1e43b95ecdf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[35774, 843, 1052, 17, 33, "Subsubtitle", "ExpressionUUID" -> \
"b0004f69-f221-4be9-a8c1-e15c829973e9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[36829, 862, 2409, 52, 385, "Input", "ExpressionUUID" -> \
"88e4f2ea-e727-4648-a92f-4e85f1dbd17f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[39241, 916, 854, 13, 33, "Subsubtitle", "ExpressionUUID" -> \
"394e299f-9abe-4d8b-a9b5-36a2d37636ef",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[40098, 931, 10499, 241, 1075, "Input", "ExpressionUUID" -> \
"de53eaa8-5f9f-4f21-90ff-43a6ff9125cd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[50600, 1174, 547, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"1a670f20-a3b6-450a-ad8b-342673b49f03",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[51150, 1184, 1737, 41, 236, "Input", "ExpressionUUID" -> \
"22d0e063-4a2f-4302-8b76-c318fb3d02c1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[52890, 1227, 506, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"573585d3-2ab7-4012-9bde-ee091976122e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[53399, 1237, 1470, 34, 158, "Input", "ExpressionUUID" -> \
"dbe4cd76-4469-4ba0-8820-019c7d484c1a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[54872, 1273, 1773, 44, 140, "Input", "ExpressionUUID" -> \
"a97292b3-e790-4763-b444-aa3c9e960ac0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[56648, 1319, 558, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"5f65bd77-40eb-4e12-b562-42a327fbbec3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[57209, 1329, 1256, 31, 84, "Input", "ExpressionUUID" -> \
"38a1c404-a80a-4f37-b880-ecc92f0fda32",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[58468, 1362, 5364, 81, 36, "Print", "ExpressionUUID" -> \
"eee42368-8a64-48c9-8ebd-3178d3bd7389",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[63835, 1445, 458, 7, 33, "Subsubtitle", "ExpressionUUID" -> \
"c9835767-2b4a-4bf0-9d05-9ee1c3d7ac31",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[64296, 1454, 9440, 225, 1150, "Input", "ExpressionUUID" -> \
"d92d7a12-ebcc-4f18-83e0-f681f54b8eec",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[73751, 1682, 2679, 45, 72, "Print", "ExpressionUUID" -> \
"10360ff9-d689-4efe-9df6-0d40318816a0"],
Cell[76433, 1729, 58615, 1035, 602, "Output", "ExpressionUUID" -> \
"ac7ab7f3-fce8-4e20-8242-f71a10922798"],
Cell[135051, 2766, 25022, 430, 327, "Output", "ExpressionUUID" -> \
"302e98f1-d71e-441b-9c64-2cc551175f66"],
Cell[160076, 3198, 19767, 421, 449, "Output", "ExpressionUUID" -> \
"ebe431c4-93c7-4655-aafa-9b9a6deb5023"],
Cell[179846, 3621, 3460, 76, 374, "Output", "ExpressionUUID" -> \
"601f4b8d-796f-4c76-a238-1f6621625cb6"],
Cell[CellGroupData[{
Cell[183331, 3701, 7175, 147, 43, InheritFromParent, "ExpressionUUID" -> \
"a7769b9f-372c-4fea-9038-cf2a26ffc08b"],
Cell[190509, 3850, 13651, 279, 602, "Output", "ExpressionUUID" -> \
"ae23d6f5-fed7-4342-9c02-3d5b9a73554a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204197, 4134, 519, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"feb92d43-f673-4dd7-9b42-b50ab362b68f"],
Cell[CellGroupData[{
Cell[204741, 4146, 2002, 50, 252, "Input", "ExpressionUUID" -> \
"b0245563-8792-413f-a4c1-ff322b233949"],
Cell[206746, 4198, 724, 14, 21, "Message", "ExpressionUUID" -> \
"300d171b-96ce-4d99-b185-20848ec1deb0"],
Cell[207473, 4214, 606, 10, 30, "Output", "ExpressionUUID" -> \
"c9f9e139-b993-4fb7-92e4-ebb912f77ccc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[208128, 4230, 568, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"190e1697-5378-40fd-b7b7-68e948097639"],
Cell[CellGroupData[{
Cell[208721, 4243, 6756, 170, 758, "Input", "ExpressionUUID" -> \
"af6ea415-d276-4505-81d8-a9c6f689f1a0"],
Cell[215480, 4415, 177574, 2977, 602, "Output", "ExpressionUUID" -> \
"ab7c15cc-26a4-4831-a049-b16eb358748f"]
}, Open  ]]
}, Open  ]]
}
]
*)

