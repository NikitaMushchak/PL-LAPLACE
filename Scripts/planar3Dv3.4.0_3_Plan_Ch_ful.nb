(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    485898,       8934]
NotebookOptionsPosition[    478725,       8785]
NotebookOutlinePosition[    479071,       8800]
CellTagsIndexPosition[    479028,       8797]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Planar3D v3.4.0", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660668673644*^9, 3.7476606793673363`*^9}, {
   3.748934775835075*^9, 3.748934775947117*^9}, 3.748969785632721*^9, {
   3.7503603825095043`*^9, 3.750360384337364*^9}, 3.75103985134317*^9, 
   3.756183760446571*^9, 3.757328984108018*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"5040d5b2-880b-45cc-a231-\
0e6954975e21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "folder", ",", "parameters", ",", "size", ",", "middle", ",", "cellLength",
     ",", "showAllBarriers", ",", "textPadding", ",", "ticks", ",", 
    "barriers", ",", "concentration", ",", "fracture", ",", "opening", ",", 
    "pressure", ",", "openingFilenames", ",", "openingAtCheckStep", ",", 
    "numberOfCheckSteps", ",", "measuredTimes", ",", "totalTime"}], "]"}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.750653482361023*^9, 3.750653486415388*^9}, {
  3.750653571387208*^9, 3.750653605937574*^9}, {3.750653638308257*^9, 
  3.750653669910097*^9}, {3.750660681648044*^9, 3.750660692605433*^9}, {
  3.7579120167949066`*^9, 3.7579120214810743`*^9}, {3.757912589794462*^9, 
  3.757912590809856*^9}, {3.7579216351176195`*^9, 
  3.757921637429574*^9}},ExpressionUUID->"9e617440-68c8-4c7d-87fe-\
cd9d2efca97f"],

Cell["\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0441\
\:0435\:0442\:043e\:0447\:043d\:044b\:0445 \:0433\:0440\:0430\:0444\:0438\
\:043a\:043e\:0432 \:0432 2D", "Subtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660650798229*^9, 3.7476606629055977`*^9}, 
   3.748969785633028*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"e25394e1-9c35-4f6a-8495-\
86623345b352"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:043f\:0443\
\:0442\:044c \:0434\:043e \:043f\:0430\:043f\:043a\:0438 \:0441 \:0432\:0445\
\:043e\:0434\:043d\:044b\:043c\:0438 \:0434\:0430\:043d\:043d\:044b\:043c\
\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.747660720326604*^9}, 
   3.747661032741356*^9, 3.7489697348519917`*^9, 3.748969785633336*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"0fcc0597-25c9-4843-be60-\
e01aeb713b6b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "folder", "=", 
   "\"\<C:\\\\Users\\\\Nikita\\\\Desktop\\\\Planar3D-master \
(2)\\\\Planar3D-master\\\\build\\\\Results\\\\\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747656893552808*^9, 3.747656906633217*^9}, 
   3.747661032741767*^9, {3.747664018501865*^9, 3.747664019128312*^9}, {
   3.747664057817404*^9, 3.7476641073677397`*^9}, 3.747665488148735*^9, 
   3.748933628112026*^9, {3.748933678444969*^9, 3.748933682795598*^9}, {
   3.748967116456512*^9, 3.748967124377589*^9}, {3.748968117085099*^9, 
   3.748968118090468*^9}, 3.748968199603396*^9, {3.748969393672985*^9, 
   3.74896939903098*^9}, 3.74896973485242*^9, 3.748969785633741*^9, {
   3.749002313128289*^9, 3.749002345037242*^9}, {3.749002429317358*^9, 
   3.7490025155955677`*^9}, {3.7490032762745247`*^9, 
   3.7490033047957563`*^9}, {3.749195504804994*^9, 3.749195505707028*^9}, {
   3.7497457636414347`*^9, 3.749745764379126*^9}, {3.7524855357661276`*^9, 
   3.7524855374845*^9}, {3.7546389669086523`*^9, 3.754638975297113*^9}, {
   3.754651973510044*^9, 3.7546519738226357`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}, {3.7607801304205627`*^9, 
   3.760780131826845*^9}},ExpressionUUID->"100d6a29-6bda-47fc-8ee9-\
d0d4d8524fab"],

Cell["\:0421\:0447\:0438\:0442\:044b\:0432\:0430\:0435\:043c \:043f\:0430\
\:0440\:0430\:043c\:0435\:0442\:0440\:044b \:0440\:0430\:0441\:0447\:0451\
\:0442\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, 3.7489697348525867`*^9, 3.7489697856339073`*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"a26e5cb8-621f-473e-9817-\
1af4aa08599c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"parameters", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<parameters.json\>\""}], ",", 
      "\"\<RawJSON\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"height", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"length", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<length\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"middleH", " ", "=", " ", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "height"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"middleL", "=", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "length"}], "]"}], "+", "1"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"size", "=", 
   RowBox[{
    RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"middle", "=", 
   RowBox[{
    RowBox[{"Floor", "[", 
     RowBox[{"0.5", "*", "size"}], "]"}], "+", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cellLength", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<cell\>\"", 
     "]"}], "[", "\"\<length\>\"", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747655287287675*^9, {3.747656648179721*^9, 3.74765664850766*^9}, {
   3.747656733330495*^9, 3.747656752436288*^9}, {3.747656912578596*^9, 
   3.7476569586085052`*^9}, {3.7476569957355824`*^9, 3.747657000350354*^9}, {
   3.747657434800095*^9, 3.747657435013611*^9}, {3.747657489717287*^9, 
   3.747657567951728*^9}, {3.7476576237958593`*^9, 3.747657744332275*^9}, 
   3.7476579502511377`*^9, 3.74765802117413*^9, 3.747659478052923*^9, 
   3.747659922966485*^9, {3.747659991785955*^9, 3.747660041283514*^9}, {
   3.7476600785009727`*^9, 3.747660104489366*^9}, {3.747660507830991*^9, 
   3.747660518100801*^9}, {3.747660570048667*^9, 3.747660584277534*^9}, {
   3.7476606203847427`*^9, 3.747660620713311*^9}, 3.747661032742475*^9, {
   3.7489336188607807`*^9, 3.748933619107676*^9}, {3.7489338681042213`*^9, 
   3.748933945735607*^9}, {3.7489340816532583`*^9, 3.7489340850716543`*^9}, {
   3.748934703289136*^9, 3.748934761141674*^9}, 3.748969734852895*^9, 
   3.74896978563422*^9, 3.7506535748684483`*^9, {3.7524857559405956`*^9, 
   3.752485761689149*^9}, {3.754653259405737*^9, 3.7546532596400566`*^9}, {
   3.756111089452158*^9, 3.75611109843443*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}, {3.75844143024053*^9, 3.758441430842722*^9}, {
   3.760851372604673*^9, 
   3.760851372748702*^9}},ExpressionUUID->"10ceb89e-20df-48f1-a321-\
ff7ea6718edd"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:043f\:0430\:0440\:0430\:043c\
\:0435\:0442\:0440\:044b \:043e\:0442\:043e\:0431\:0440\:0430\:0436\:0435\
\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, {3.748934769874744*^9, 3.7489347748029413`*^9}, 
   3.74896973485305*^9, 3.7489697856343813`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"d7ba3c85-2ecc-4633-b74f-\
86fb15d632b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\:0415\:0441\:043b\:0438", " ", "True"}], ",", " ", 
    RowBox[{
    "\:043d\:0430", " ", "\:0433\:0440\:0430\:0444\:0438\:043a\:0435", " ", 
     "\:0431\:0443\:0434\:0443\:0442", " ", 
     "\:0432\:044b\:0432\:043e\:0434\:0438\:0442\:044c\:0441\:044f", " ", 
     "\:0433\:0440\:0430\:043d\:0438\:0446\:044b", " ", 
     "\:0441\:043b\:043e\:0451\:0432"}], ",", 
    RowBox[{
    "\:0440\:0430\:0441\:043f\:043e\:043b\:043e\:0436\:0435\:043d\:043d\:044b\
\:0445", " ", "\:0437\:0430", " ", 
     "\:043f\:0440\:0435\:0434\:0435\:043b\:0430\:043c\:0438", " ", 
     "\:0440\:0430\:0441\:0447\:0451\:0442\:043d\:043e\:0439", " ", 
     "\:043e\:0431\:043b\:0430\:0441\:0442\:0438"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"showAllBarriers", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"textPadding", "=", "1"}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748936129152269*^9, 3.748936131996414*^9}, {
   3.748936437491951*^9, 3.748936446079194*^9}, {3.748936835688491*^9, 
   3.748936836198721*^9}, {3.7489370016931553`*^9, 3.748937002355495*^9}, 
   3.7489687346210823`*^9, 3.7489697856346483`*^9, {3.748970588914028*^9, 
   3.748970589224121*^9}, {3.750355327100403*^9, 3.750355327233083*^9}, {
   3.75035545494031*^9, 3.750355455090455*^9}, 3.750656912157938*^9, 
   3.7516154744310207`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"2132100d-0f03-4edf-8750-\
0a4cfeec3cf8"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:0440\:0438\
\:0441\:043a\:0438 \:043f\:043e \:043e\:0441\:044f\:043c \:0433\:0440\:0430\
\:0444\:0438\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, 
   3.747661032742928*^9, 3.748969734853208*^9, 3.748969785634802*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"a1f5bcd3-ad1c-4608-8d2e-\
184dd5d3b14f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ticksSetVertical", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"height", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"height", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ticksSetHorizontal", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"length", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"length", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ticks", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ticksSetHorizontal", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ticksSetVertical", ",", "None"}], "}"}]}], "}"}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"createTicks", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cellLength", ",", "middle", ",", "size"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ticksSet", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"-", "cellLength"}], "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"size", "/", "4"}], "]"}]}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"-", "cellLength"}], "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"size", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"3", 
                RowBox[{"size", "/", "4"}]}], "]"}]}], ",", 
             RowBox[{"N", "[", 
              RowBox[{"cellLength", "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"size", ",", 
             RowBox[{"N", "[", 
              RowBox[{"cellLength", "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ticksSet", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ticksSet", ",", "None"}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ticks", "=", 
     RowBox[{"createTicks", "[", 
      RowBox[{"cellLength", ",", "middle", ",", "size"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.74766059129346*^9, 3.74766061456117*^9}, 
   3.747661032743846*^9, {3.748933853433467*^9, 3.748933890369454*^9}, {
   3.7489339519881077`*^9, 3.748934022178279*^9}, {3.748934089035924*^9, 
   3.748934096639612*^9}, 3.74896973485367*^9, 3.748969785635269*^9, {
   3.757672639256096*^9, 3.7576726982404222`*^9}, {3.7576728052825923`*^9, 
   3.757672817092346*^9}, {3.757672891902179*^9, 3.7576729030401917`*^9}, {
   3.7576729381237707`*^9, 3.757672945169193*^9}, {3.757921512969803*^9, 
   3.757921520186861*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"064c7d03-91ae-4e2d-a5a1-\
1e6c1a61dace"],

Cell["\:041f\:043e \:0440\:0438\:0441\:043a\:0430\:043c \:043d\:0430\:043c\
\:0435\:0447\:0430\:0435\:043c \:043b\:0438\:043d\:0438\:0438 \:0441\:0435\
\:0442\:043a\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660845455511*^9}, 3.747661032744216*^9, 
   3.748969734853849*^9, 3.7489697856354237`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"ba1976cb-53a4-4ebe-af03-\
95fcd4651050"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"createLines", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "ticks", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lines", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lines", ",", 
           RowBox[{"{", "}"}]}], "]"}], ";", 
         RowBox[{"leftTicks", "=", 
          RowBox[{
           RowBox[{"ticks", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "leftTicks", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"lines", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"leftTicks", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lines", ",", 
           RowBox[{"{", "}"}]}], "]"}], ";", 
         RowBox[{"rightTicks", "=", 
          RowBox[{
           RowBox[{"ticks", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "rightTicks", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"lines", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"rightTicks", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "lines"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lines", "=", 
   RowBox[{"createLines", "[", "ticks", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747661032744575*^9, 3.748969734854225*^9, 3.7489697856357327`*^9, {
   3.757672495233093*^9, 3.7576726309613447`*^9}, {3.757672685223899*^9, 
   3.7576726858954177`*^9}, {3.7576727860678577`*^9, 
   3.7576728004399943`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"98de9a1d-6124-4724-8226-\
daf84a86a835"],

Cell["\:0421\:043e\:0437\:0434\:0430\:0451\:043c \:043c\:0430\:0441\:0441\
\:0438\:0432 \:043b\:0438\:043d\:0438\:0439\[Dash]\:0433\:0440\:0430\:043d\
\:0438\:0446 \:0441\:043b\:043e\:0451\:0432 \:043f\:043b\:0430\:0441\:0442\
\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660912488222*^9}, 3.747661032744845*^9, 
   3.7489697348543863`*^9, 3.748969785635898*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"36014964-da04-4894-82b2-\
12a8ee0727f9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lineBarriers", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nominalStress", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"0", ">", 
      RowBox[{
       RowBox[{
        RowBox[{"layers", "[", 
         RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", "]"}],
        "*", 
       RowBox[{
        RowBox[{"layers", "[", 
         RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y2\>\"", 
        "]"}]}]}], ",", 
     RowBox[{"nominalStress", "=", 
      RowBox[{
       RowBox[{"layers", "[", 
        RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<stress\>\"", 
       "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"barrierCoordinate", "=", 
     RowBox[{"middle", "+", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"layers", "[", 
           RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
          "]"}], "/", "cellLength"}], "-", "0.5"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"showAllBarriers", "||", 
       RowBox[{
        RowBox[{"1", "\[LessEqual]", "barrierCoordinate"}], " ", "&&", " ", 
        RowBox[{"size", "\[GreaterEqual]", "barrierCoordinate"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "barrierCoordinate"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"size", ",", "barrierCoordinate"}], "}"}]}], "}"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"barrierCoordinate", ">", "middle"}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}], "[", "\"\<stress\>\"", 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<stress\>\"",
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stress", "-=", "nominalStress"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"stress", "/=", 
        SuperscriptBox["10", "6"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"signum", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"stress", " ", ">", " ", "0"}], ",", " ", 
         RowBox[{"signum", "=", "\"\<+\>\""}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"signum", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", "stress", "]"}], "]"}], "<>", 
            "\"\< \:041c\:041f\:0430\>\""}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"2", "+", "textPadding"}], ",", 
             RowBox[{"textPadding", "+", "barrierCoordinate"}]}], "}"}]}], 
          "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"barriers", "=", 
   RowBox[{"Graphics", "[", "lineBarriers", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747661032745192*^9, {3.748934559310659*^9, 3.7489346973352013`*^9}, {
   3.748936028834214*^9, 3.74893640178518*^9}, {3.748936537538189*^9, 
   3.74893659455238*^9}, {3.748936626625805*^9, 3.748936705526024*^9}, 
   3.748936851846299*^9, {3.7489369647365932`*^9, 3.748936969645989*^9}, 
   3.7489697348547573`*^9, 3.7489697856362667`*^9, {3.749746386574204*^9, 
   3.7497463871546*^9}, {3.7497465169733543`*^9, 3.7497465172756653`*^9}, {
   3.749746575601492*^9, 3.749746575932219*^9}, {3.7497467735023746`*^9, 
   3.749746911372019*^9}, {3.750355373538177*^9, 3.7503553959537697`*^9}, {
   3.750360862816245*^9, 3.75036091965701*^9}, {3.75065554275772*^9, 
   3.750655545907774*^9}, {3.750655612889615*^9, 3.750655613558167*^9}, {
   3.750655741547908*^9, 3.750655792393737*^9}, 3.750656931278842*^9, {
   3.7571468034507365`*^9, 3.7571468366775255`*^9}, {3.7571468766358757`*^9, 
   3.7571468862076864`*^9}, {3.7576635407774744`*^9, 
   3.7576635425425215`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"01047cc0-f16a-427d-b7ce-\
0c29435e4e64"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:0438 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:0442\:0440\:0435\:0449\:0438\:043d\:044b \:0438 \:0446\
\:0432\:0435\:0442\:043e\:0432\:0443\:044e \:0433\:0430\:043c\:043c\:0443", \
"Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660953767308*^9}, 3.7476610327454557`*^9, 
   3.748969734854912*^9, 3.7489697856364202`*^9, {3.750660427182559*^9, 
   3.750660432292466*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"21ae29e2-a91d-4224-a123-\
209e3951a365"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "LightBlue", ",", "Green", ",", "LightGreen", ",", "White", ",", 
           "Yellow", ",", "Orange", ",", "\[IndentingNewLine]", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "White", ",", "White", ",", "White", ",", "White", ",", "White", 
           ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0.6", ",", "0.6"}], "]"}], ",", "Yellow", 
           ",", "Orange", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"myRainbow", "=", 
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"0.5", ">", "x"}], ",", "White", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"\"\<Rainbow\>\"", ",", "x"}], "]"}]}], "]"}]}], "]"}]}], 
     ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myRainbow3D", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"ColorData", "[", 
        RowBox[{"\"\<Rainbow\>\"", ",", "z"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GlueMatrix", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "matrix", "}"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"TakeList", "[", 
            RowBox[{
             RowBox[{"Reverse", "[", 
              RowBox[{"Transpose", "[", "matrix", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"matrix", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}], "}"}]}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Transpose", "[", "matrix", "]"}]}], "]"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PlotMatrix", "=", " ", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"matrix", ",", "matrixName"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"GlueMatrix", "[", "matrix", "]"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "matrixName"}], ",", " ", 
           RowBox[{"FrameTicks", "\[Rule]", "ticks"}], ",", 
           RowBox[{"GridLines", "\[Rule]", "lines"}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", "myRainbow"}], ",", 
           RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "barriers"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7476531195786133`*^9, 3.747653120240994*^9}, {
   3.7476534505006332`*^9, 3.747653485458448*^9}, 3.7476535222351294`*^9, {
   3.7476535950633698`*^9, 3.7476536054617443`*^9}, {3.747653655142853*^9, 
   3.747653656807279*^9}, {3.747653688090948*^9, 3.747653739282906*^9}, {
   3.7476538118536386`*^9, 3.747653827707106*^9}, {3.747656704788455*^9, 
   3.747656729694378*^9}, 3.74765701664755*^9, {3.7476584586379547`*^9, 
   3.7476584675487127`*^9}, {3.747658699447795*^9, 3.7476587124774933`*^9}, {
   3.7476587568371267`*^9, 3.747658782431654*^9}, {3.747660465335277*^9, 
   3.747660479701996*^9}, 3.7476610327461433`*^9, {3.7489348068714037`*^9, 
   3.748934817133738*^9}, {3.74893485538281*^9, 3.7489349552592983`*^9}, {
   3.7489349950905046`*^9, 3.748935017743618*^9}, {3.748935079617112*^9, 
   3.748935148106749*^9}, {3.748935208873681*^9, 3.7489353309778967`*^9}, {
   3.74893543472754*^9, 3.7489354449637127`*^9}, {3.748935604513166*^9, 
   3.748935774112791*^9}, {3.7489358857234097`*^9, 3.748935920285569*^9}, {
   3.748937178914475*^9, 3.748937196849533*^9}, {3.748937233907132*^9, 
   3.74893723762293*^9}, {3.7489372857884893`*^9, 3.74893733649858*^9}, {
   3.74893736830401*^9, 3.748937501097311*^9}, {3.748937550591075*^9, 
   3.748937608682899*^9}, {3.748937665178151*^9, 3.748937688168676*^9}, 
   3.748969734855296*^9, 3.7489697856368*^9, {3.750658527075471*^9, 
   3.750658533734511*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"b438da06-2c58-4df8-acea-\
37ef3435337f"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:0433\:0440\:0430\:0444\:0438\:043a\:0430 \:0445\:0430\
\:0440\:0430\:043a\:0442\:0435\:0440\:0438\:0441\:0442\:0438\:043a\:0438 \
\:0442\:0440\:0435\:0449\:0438\:043d\:044b", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.750666372371853*^9, 3.750666386564352*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"f292807d-09b1-495c-8b9c-\
9b6b00df497f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotCharacteristic", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"index", ",", "valueName"}], "}"}], ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"fracture", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"fracture", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "index", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{"Length", "[", "fracture", "]"}], ",", "1"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\:0412\:0440\:0435\:043c\:044f, \:043c\:0438\:043d\>\"", ",", 
          "valueName"}], "}"}]}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7506665343051243`*^9, 3.750666577544717*^9}, {
  3.750666634387631*^9, 3.75066664314911*^9}, {3.7579216351176195`*^9, 
  3.757921637429574*^9}},ExpressionUUID->"72bf3732-c3a2-4f97-80cb-\
c1e43b95ecdf"],

Cell["\<\
\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\:0438\
\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\
\:0438\:044f \:043a\:043e\:043d\:0442\:0443\:0440\:0430 \:0444\:0440\:043e\
\:043d\:0442\:0430 \:0442\:0440\:0435\:0449\:0438\:043d\:044b \:043f\:043e \
\:0433\:0440\:0430\:043d\:0438\:0447\:043d\:044b\:043c \:044d\:043b\:0435\
\:043c\:0435\:043d\:0442\:0430\:043c\
\>", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.751040043497757*^9, 3.7510400775702553`*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"b0004f69-f221-4be9-a8c1-\
e15c829973e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotCircles", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "distances", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"step", "=", "16"}], ";", "\[IndentingNewLine]", 
      RowBox[{"margin", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"color", "=", "Orange"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"color", ",", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Circle", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"i", "*", "step"}], ",", " ", 
                RowBox[{
                 RowBox[{"-", "j"}], "*", "step"}]}], "}"}], ",", 
              RowBox[{"4", "*", 
               RowBox[{
                RowBox[{"distances", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
             "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "margin", ",", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"distances", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "margin", " ", 
               "+", " ", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "margin", ",", 
              RowBox[{
               RowBox[{"Length", "[", "distances", "]"}], "-", "margin", " ", 
               "+", " ", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7510400351290483`*^9, {3.751040082955327*^9, 3.751040201282288*^9}, {
   3.751040352870755*^9, 3.751040354389183*^9}, {3.7510404023651247`*^9, 
   3.751040408893008*^9}, 3.7510404920256357`*^9, {3.7576533191945534`*^9, 
   3.757653335925003*^9}, {3.757653431925517*^9, 3.757653449333905*^9}, {
   3.7576715103027487`*^9, 3.7576715560901613`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"88e4f2ea-e727-4648-a92f-\
4e85f1dbd17f"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:043a\:0430\:0440\:0442\:044b \:0441\:043b\:043e\:0451\
\:0432", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.751040040004345*^9, 3.751040041480859*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"394e299f-9abe-4d8b-a9b5-\
36a2d37636ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotLayersMap", "=", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"stressLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plainModulusLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"carterLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"minY", "=", "100000"}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxY", "=", 
       RowBox[{"-", "100000"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"layers", "=", 
       RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"i", "=", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "<", " ", 
         RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"y1", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y2", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y2\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"plainModulus", "=", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"layers", "[", 
              RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
             "\"\<Young's modulus\>\"", "]"}], "*", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "9"}]], "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Power", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"layers", "[", 
                   RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                  "\"\<Poisson's ratio\>\"", "]"}], ",", "2"}], "]"}]}], 
              ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<stress\>\"", "]"}], "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "y1"}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<stress\>\"", "]"}], "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "y2"}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plainModulusLine", ",", 
           RowBox[{"{", 
            RowBox[{"plainModulus", ",", "y1"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plainModulusLine", ",", 
           RowBox[{"{", 
            RowBox[{"plainModulus", ",", "y2"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"carterLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<Carter's coefficient\>\"", "]"}], "*", 
               SuperscriptBox["10", "6"]}], "]"}], ",", "y1"}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"carterLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<Carter's coefficient\>\"", "]"}], "*", 
               SuperscriptBox["10", "6"]}], "]"}], ",", "y2"}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"minY", "=", 
          RowBox[{"Min", "[", 
           RowBox[{"{", 
            RowBox[{"y1", ",", "y2", ",", "minY"}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"maxY", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"{", 
            RowBox[{"y1", ",", "y2", ",", "maxY"}], "}"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"minY", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.5"}], "*", "cellLength", "*", "size"}], ",", 
          "minY"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxY", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "minY"}], ",", "maxY"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plotStyles", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dotted"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Green", ",", "Dashed"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Purple", ",", "Dotted"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plotLegend", "=", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\:041d\:0430\:043f\:0440\:044f\:0436\:0435\:043d\:0438\:044f\
\>\"", ",", 
             "\"\<\:041f\:043b\:043e\:0441\:043a\:0438\:0439 \:043c\:043e\
\:0434\:0443\:043b\:044c \:042e\:043d\:0433\:0430\>\"", ",", 
             "\"\<\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\
\:0442 \:041a\:0430\:0440\:0442\:0435\:0440\:0430\>\""}], "}"}], ",", 
           RowBox[{
           "LegendLabel", "\[Rule]", 
            "\"\<\:041a\:0430\:0440\:0442\:0430 \
\:0441\:043b\:043e\:0451\:0432\>\""}], ",", " ", 
           RowBox[{"LegendFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Framed", "[", 
               RowBox[{"#", ",", 
                RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], "&"}], 
             ")"}]}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}], ",", "Right"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"commonPlotParameters", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Tiny", ",", "Medium"}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         RowBox[{"AxesStyle", "\[Rule]", "Transparent"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"minY", ",", "maxY"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"False", ",", "True", ",", "False", ",", "False"}], 
           "}"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"stressLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", "None", "}"}], ",", 
           RowBox[{"{", "None", "}"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "plotStyles"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "plotLegend"}], ",", 
         "commonPlotParameters"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plainModulusLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"plainModulusLine", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"plotStyles", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "commonPlotParameters"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"carterLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"carterLine", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"plotStyles", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", "commonPlotParameters"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Overlay", "[", 
       RowBox[{"{", 
        RowBox[{
        "stressLinePlot", ",", "plainModulusLinePlot", ",", 
         "carterLinePlot"}], "}"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.750355499782115*^9, 3.750355793596572*^9}, {
   3.7503558631512537`*^9, 3.75035595668403*^9}, {3.750356028597644*^9, 
   3.7503561318033533`*^9}, {3.750356194818742*^9, 3.750356208887875*^9}, {
   3.7503563618567467`*^9, 3.750356363361658*^9}, {3.750356423863585*^9, 
   3.750356473236062*^9}, {3.750356504013914*^9, 3.750356817174099*^9}, {
   3.7503568624727697`*^9, 3.7503569686281157`*^9}, {3.750357008792891*^9, 
   3.750357226835019*^9}, {3.750357435011059*^9, 3.7503574352471*^9}, {
   3.750357508025413*^9, 3.7503575160456057`*^9}, {3.750357547885824*^9, 
   3.750357583085084*^9}, {3.750357887241557*^9, 3.750357889461896*^9}, {
   3.7503579481465197`*^9, 3.750357984969563*^9}, {3.7503580226450663`*^9, 
   3.750358024481966*^9}, 3.750361185626094*^9, {3.750658720102997*^9, 
   3.750658726408321*^9}, {3.7506587623250723`*^9, 3.750658810269313*^9}, {
   3.750658848101965*^9, 3.750658944354722*^9}, {3.750658984747673*^9, 
   3.750659069691119*^9}, {3.7506592334858294`*^9, 3.750659554818267*^9}, 
   3.7506595987503633`*^9, {3.750660239574378*^9, 3.750660403592054*^9}, 
   3.750660460234714*^9, {3.750660513265897*^9, 3.7506606132287827`*^9}, {
   3.757146186440631*^9, 3.7571462480997224`*^9}, {3.7571463308534384`*^9, 
   3.757146374077917*^9}, {3.7571464264808116`*^9, 3.757146456638303*^9}, {
   3.7571467048801203`*^9, 3.7571467219542065`*^9}, {3.7579216351176195`*^9, 
   3.7579216374451947`*^9}},ExpressionUUID->"de53eaa8-5f9f-4f21-90ff-\
43a6ff9125cd"],

Cell["\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0443\
\:0434\:0432\:043e\:0435\:043d\:043d\:043e\:0433\:043e \:0433\:0440\:0430\
\:0444\:0438\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.7579216318215137`*^9, 
   3.757921647114832*^9}},ExpressionUUID->"1a670f20-a3b6-450a-ad8b-\
342673b49f03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotDoubleMatrix", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "matrixName"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"doubleTicks", "=", 
       RowBox[{"createTicks", "[", 
        RowBox[{
         RowBox[{"0.5", "*", "cellLength"}], ",", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"middle", "-", "1"}], ")"}]}], "+", "1"}], ",", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"size", "-", "1"}], ")"}]}], "+", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"doubleLines", "=", 
       RowBox[{"createLines", "[", "doubleTicks", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"GlueMatrix", "[", "matrix", "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "matrixName"}], ",", " ", 
         RowBox[{"FrameTicks", "\[Rule]", "doubleTicks"}], ",", 
         RowBox[{"GridLines", "\[Rule]", "doubleLines"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", "myRainbow"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7579216318215137`*^9, 
  3.7579216374451947`*^9}},ExpressionUUID->"22d0e063-4a2f-4302-8b76-\
c318fb3d02c1"],

Cell["\:0417\:0430\:0433\:0440\:0443\:0436\:0430\:0435\:043c \:0434\:0430\
\:043d\:043d\:044b\:0435 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\
\:043e\:0435\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 
   3.7489697856369534`*^9},ExpressionUUID->"573585d3-2ab7-4012-9bde-\
ee091976122e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"concentration", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<concentration_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fracture", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<fracture_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opening", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<opening_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressure", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<pressure_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748933665070517*^9, 3.748933667635915*^9}, {
   3.748967897373295*^9, 3.748967952408773*^9}, 3.748968045615181*^9, 
   3.748969785637787*^9, {3.748969873450966*^9, 3.7489698881760197`*^9}, {
   3.748970008078432*^9, 3.748970029339315*^9}, {3.749002589036405*^9, 
   3.749002591800912*^9}, {3.749197428231081*^9, 3.74919743718463*^9}, {
   3.750355267359632*^9, 3.7503553082320023`*^9}, {3.750361141233561*^9, 
   3.75036114372082*^9}, {3.75036139017474*^9, 
   3.7503613910997057`*^9}},ExpressionUUID->"dbe4cd76-4469-4ba0-8820-\
019c7d484c1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"openingFilenames", "=", 
    RowBox[{"FileNames", "[", 
     RowBox[{"\"\<*_m.txt\>\"", ",", 
      RowBox[{"folder", "<>", "\"\<Opening/\>\""}]}], "]"}]}], ";"}], 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"1", " ", "<", 
       RowBox[{"Length", "[", "openingFilenames", "]"}]}], ",", 
      RowBox[{"openingFilenames", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{"openingFilenames", ",", 
         RowBox[{"ToExpression", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringSplit", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<=\>\"", ",", "\"\<_\>\""}], "}"}]}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "]"}]}], "]"}]}]}], "]"}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"openingAtCheckStep", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"openingFilenames", "[", 
        RowBox[{"[", "t", "]"}], "]"}], ",", " ", "\"\<Table\>\""}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numberOfCheckSteps", "=", 
   RowBox[{"Length", "[", "openingFilenames", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7503554730398903`*^9, {3.750657168634218*^9, 3.7506572226324253`*^9}, {
   3.750657269550213*^9, 3.75065727758918*^9}, {3.750657360637339*^9, 
   3.750657373821903*^9}, {3.7506574159365473`*^9, 3.750657416799019*^9}, {
   3.752485685149294*^9, 3.752485723856041*^9}, {3.753164422442254*^9, 
   3.75316447320899*^9}},ExpressionUUID->"a97292b3-e790-4763-b444-\
aa3c9e960ac0"],

Cell["\:0412\:044b\:0432\:043e\:0434\:0438\:043c \:0432\:0440\:0435\:043c\
\:044f \:043f\:043e\:0441\:043b\:0435\:0434\:043d\:0435\:0433\:043e \:0437\
\:0430\:043f\:0443\:0441\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}},ExpressionUUID->"5f65bd77-40eb-4e12-b562-\
42a327fbbec3"],

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
    "\"\<\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\:0434\
\:043d\:0435\:0433\:043e \:0437\:0430\:043f\:0443\:0441\:043a\:0430:\>\"", 
     " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"DateString", "[", "]"}], ",", "Orange"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.749195512564392*^9, 3.749195545569838*^9}, {
  3.749195598370927*^9, 3.749195681354604*^9}, {3.749197676357965*^9, 
  3.749197687499799*^9}, {3.7491981127205763`*^9, 
  3.749198119614801*^9}},ExpressionUUID->"38a1c404-a80a-4f37-b880-\
ecc92f0fda32"],

Cell[BoxData[
 StyleBox[
  RowBox[{"\<\"\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\
\:0434\:043d\:0435\:0433\:043e \
\:0437\:0430\:043f\:0443\:0441\:043a\:0430:\"\>", " ", 
   StyleBox["\<\"Wed 6 Mar 2019 12:46:41\"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0.5, 0],
    FrontFaceColor->RGBColor[1, 0.5, 0],
    BackFaceColor->RGBColor[1, 0.5, 0],
    GraphicsColor->RGBColor[1, 0.5, 0],
    FontColor->RGBColor[1, 0.5, 0]]}],
  StripOnInput->False,
  FontSize->24]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.749195659419508*^9, 3.749195673211211*^9}, 
   3.749195717683158*^9, 3.7491976880563498`*^9, {3.74919811272084*^9, 
   3.749198124508636*^9}, 3.749198547581563*^9, 3.74974577318449*^9, 
   3.7497458945699177`*^9, 3.749746363493379*^9, 3.749746523405265*^9, 
   3.749746676390993*^9, 3.749746717948832*^9, {3.749746796696604*^9, 
   3.749746814039156*^9}, 3.749746914039852*^9, 3.750355233686296*^9, 
   3.7503554477398863`*^9, {3.750360556216104*^9, 3.7503605666632433`*^9}, 
   3.7503607801969137`*^9, 3.7503611476314583`*^9, 3.750361263438398*^9, 
   3.7503613949006863`*^9, 3.7503614744322433`*^9, 3.750655374338236*^9, 
   3.7506554082503853`*^9, {3.750655458531261*^9, 3.750655464638625*^9}, 
   3.7506557512823467`*^9, 3.750655795952038*^9, 3.7506560265283737`*^9, 
   3.750656136604802*^9, 3.7506564375125713`*^9, {3.750656915409037*^9, 
   3.750656934849925*^9}, 3.750658504368836*^9, 3.750658566935512*^9, 
   3.750659695607489*^9, 3.750660462939427*^9, 3.750660582327619*^9, 
   3.750660616680229*^9, 3.7506663258812857`*^9, 3.750666757135747*^9, {
   3.751040182747201*^9, 3.751040192950671*^9}, 3.751040360329432*^9, 
   3.751040412204547*^9, 3.7515227620073433`*^9, 3.7515261687620907`*^9, 
   3.751615377030303*^9, {3.751615463201515*^9, 3.751615477707189*^9}, 
   3.751615682300685*^9, 3.751615917177168*^9, 3.751615995074151*^9, 
   3.751616095693368*^9, 3.7516183414337597`*^9, 3.7524855465523653`*^9, {
   3.7524855804109573`*^9, 3.7524856094127126`*^9}, 3.7524856461426153`*^9, 
   3.7524857590646477`*^9, 3.753164440016218*^9, 3.7538625516409483`*^9, 
   3.7538626010512495`*^9, 3.7538627623884706`*^9, 3.754638725719348*^9, 
   3.754638979218073*^9, 3.7546391083282213`*^9, 3.7546392253821335`*^9, 
   3.7546393299616723`*^9, 3.754639792915779*^9, 3.754640136856781*^9, 
   3.754642428063615*^9, 3.754646200280037*^9, 3.754649657661769*^9, 
   3.7546504264040556`*^9, 3.7546505727445335`*^9, 3.7546519768998513`*^9, 
   3.75465208037519*^9, 3.7546523291861*^9, 3.7546525047837963`*^9, 
   3.7546531259332304`*^9, 3.75465323619244*^9, 3.7561110952789073`*^9, 
   3.756183767554145*^9, 3.7561838191099224`*^9, 3.756188248790681*^9, 
   3.7561882858664894`*^9, 3.7561959488481665`*^9, 3.757146255714679*^9, 
   3.7571465394105883`*^9, {3.757146679426608*^9, 3.7571467254847383`*^9}, {
   3.7571468087151065`*^9, 3.757146839098605*^9}, {3.7571468791351013`*^9, 
   3.7571468881290636`*^9}, 3.757147012508487*^9, 3.757147053309069*^9, 
   3.75714709071288*^9, 3.757147139474738*^9, 3.757147282024349*^9, 
   3.757147439329136*^9, 3.757148048138564*^9, 3.757148390117943*^9, 
   3.757149543401328*^9, 3.7573124901220355`*^9, 3.757312806925419*^9, 
   3.757313095773717*^9, 3.7573132106623006`*^9, 3.75731326216355*^9, 
   3.757313384022509*^9, 3.757313518103788*^9, 3.7573136926188917`*^9, 
   3.7573137480517673`*^9, 3.7573138330349555`*^9, 3.757314482294738*^9, 
   3.7573145228180227`*^9, 3.7573145899272633`*^9, 3.757314712860545*^9, 
   3.7573147663542857`*^9, 3.757315101863775*^9, 3.757315707041792*^9, 
   3.757315973157895*^9, 3.7573165752591634`*^9, 3.757323338833152*^9, 
   3.757323657121977*^9, 3.757327845501257*^9, 3.757328738569846*^9, 
   3.7573298575505896`*^9, 3.757393788709646*^9, 3.7573950029163485`*^9, 
   3.7574076969767027`*^9, 3.7574089268359537`*^9, 3.7574114422623997`*^9, 
   3.757415015625086*^9, 3.7576527927824078`*^9, 3.757652850347029*^9, 
   3.757660420367476*^9, 3.7576630996657834`*^9, 3.757663546775882*^9, 
   3.757671560698409*^9, 3.7576720854083395`*^9, 3.7576727139398627`*^9, 
   3.7576728118433695`*^9, 3.757672846095731*^9, {3.7576728960884647`*^9, 
   3.7576729061173906`*^9}, 3.7576729476683617`*^9, 3.7579120251677094`*^9, 
   3.7579210121227283`*^9, 3.7579212537288756`*^9, 3.757921429520739*^9, 
   3.7579215247170496`*^9, 3.757925447983324*^9, 3.75792739758609*^9, 
   3.7579276460377007`*^9, 3.7584308130387497`*^9, 3.758431088071436*^9, 
   3.7584314333747234`*^9, 3.758431869639453*^9, 3.758431981983164*^9, 
   3.758432020462161*^9, 3.758432081701499*^9, 3.7584323369175463`*^9, 
   3.7584326706889896`*^9, 3.75843284677746*^9, 3.758433888144831*^9, 
   3.7584347756995645`*^9, 3.7584389799787865`*^9, {3.7584414130548944`*^9, 
   3.7584414342552605`*^9}, 3.758441881257159*^9, 3.7590590926429453`*^9, 
   3.7592211796408396`*^9, 3.759221267962756*^9, 3.7592219257789297`*^9, 
   3.759222067464307*^9, 3.7592242962870893`*^9, 3.759224783216329*^9, 
   3.7607801356086664`*^9, 3.7607819373382883`*^9, 3.76078469609286*^9, 
   3.7607864994541593`*^9, 3.7607869462270975`*^9, 3.760788424411932*^9, 
   3.7608491225452085`*^9, {3.7608513580155697`*^9, 3.760851381493911*^9}, 
   3.7608544013401165`*^9},ExpressionUUID->"e6d4ff13-76f4-4688-8136-\
a486d2f82b3c"],

Cell["\:0421\:0442\:0440\:043e\:0438\:043c \:0433\:0440\:0430\:0444\:0438\
\:043a\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660984637878*^9}, 3.7476611498754272`*^9, 
   3.747664166427878*^9, 3.7489697348559017`*^9, {3.749746711959444*^9, 
   3.749746715762725*^9}},ExpressionUUID->"c9835767-2b4a-4bf0-9d05-\
9ee1c3d7ac31"],

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
    "\"\<\:0414\:043b\:0438\:043d\:0430, \
\:0432\:044b\:0441\:043e\:0442\:0430, \:0440\:0430\:0441\:043a\:0440\:044b\
\:0442\:0438\:0435 \:0432 \:0438\:0441\:0442\:043e\:0447\:043d\:0438\:043a\
\:0435 {\:043c,\:043c,\:043c\:043c}:\\n\\t\\t\>\"", " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "Orange"}], "]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotMatrix", "[", 
  RowBox[{
  "opening", ",", " ", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotCharacteristic", "[", 
  RowBox[{
  "3", ",", 
   "\"\<\:041f\:0440\:0438\:0437\:0430\:0431\:043e\:0439\:043d\:043e\:0435 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:0435, \:041c\:041f\:0430\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"0", "<", 
    RowBox[{"Max", "[", "concentration", "]"}]}], ",", 
   RowBox[{"PlotMatrix", "[", 
    RowBox[{
    "concentration", ",", " ", 
     "\"\<\:041a\:043e\:043d\:0446\:0435\:043d\:0442\:0440\:0430\:0446\:0438\
\:044f \:043f\:0440\:043e\:043f\:043f\:0430\:043d\:0442\:0430\>\""}], "]"}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotLayersMap", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"opening", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"middle", "-", "i"}], ")"}], "*", "cellLength"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "opening", "]"}], ",", "1"}], "}"}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", "All"}], "}"}]}], 
      ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">=", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              RowBox[{"opening", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"middle", "-", "i"}], ")"}], "*", "cellLength"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "opening", "]"}], ",", "1"}], "}"}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"FileExistsQ", "[", 
    RowBox[{"folder", "<>", "\"\<times_v.txt\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<\:0417\:0430\:043c\:0435\:0440\:044b \
\:0432\:0440\:0435\:043c\:0435\:043d\:0438\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"measuredTimes", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"folder", "<>", "\"\<times_v.txt\>\""}], ",", " ", 
        "\"\<Table\>\""}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"totalTime", "=", 
     RowBox[{"measuredTimes", "[", 
      RowBox[{"[", 
       RowBox[{"Length", "[", "measuredTimes", "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{"Length", "[", "measuredTimes", "]"}]}], ",", 
      RowBox[{"++", "i"}], ",", 
      RowBox[{
       RowBox[{"measuredTimes", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "/=", 
       RowBox[{"0.01", "*", "totalTime"}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Grid", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
            "\"\<\:0420\:0430\:0441\:0447\:0451\:0442 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:044f\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<\:041f\:0440\:0438\:0440\:043e\:0441\:0442 \:0440\:0430\
\:0441\:043a\:0440\:044b\:0442\:0438\:044f\\n(\:0438 \:043a\:043e\:043d\:0446\
\:0435\:043d\:0442\:0440\:0430\:0446\:0438\:0438)\>\"", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\:041f\:0435\:0440\:0435\:0441\:0447\:0451\:0442 \:0440\
\:0430\:0441\:0441\:0442\:043e\:044f\:043d\:0438\:0439\\n\:0434\:043e \:0444\
\:0440\:043e\:043d\:0442\:0430\>\"", ",", 
               RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             "\"\<\:0418\:043d\:0442\:0435\:0433\:0440\:0438\:0440\:043e\:0432\
\:0430\:043d\:0438\:0435\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:041f\:0435\:0440\:0435\:0441\:0442\:0440\:043e\:0435\:043d\
\:0438\:0435 \:0441\:043f\:0438\:0441\:043a\:043e\:0432\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<\:0421\:043e\:0445\:0440\:0430\:043d\:0435\:043d\:0438\:0435\
 \:0448\:0430\:0433\:0430\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:0418\:0437\:043c\:0435\:043d\:0435\:043d\:0438\:0435 \
\:0437\:0430\:043a\:0430\:0447\:043a\:0438\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:041c\:0430\:0441\:0448\:0442\:0430\:0431\:0438\:0440\:043e\
\:0432\:0430\:043d\:0438\:0435\>\""}], "\[IndentingNewLine]", "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"measuredTimes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{
                RowBox[{"Length", "[", "measuredTimes", "]"}], "-", "1"}], 
               ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
         "\[IndentingNewLine]", "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "All"}], ",", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"totalTime", "/", "1000000"}], 
       "\"\<\:0441\:0435\:043a\:0443\:043d\:0434 \:0432\:0441\:0435\:0433\
\:043e\>\""}], ",", "Bottom"}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.749746711959631*^9, {3.7503604496962852`*^9, 3.7503605102226467`*^9}, {
   3.750658187684452*^9, 3.7506581966759377`*^9}, 3.750658599559669*^9, {
   3.750660410623929*^9, 3.7506604108938932`*^9}, {3.750666592966673*^9, 
   3.750666609429427*^9}, {3.750666647089669*^9, 3.750666650063033*^9}, {
   3.7510398594727287`*^9, 3.751039878653421*^9}, {3.757313894301865*^9, 
   3.7573142039637947`*^9}, {3.7579135982458677`*^9, 3.757913608602586*^9}, {
   3.7579142495638924`*^9, 3.7579143338119197`*^9}, 3.75791440434883*^9, {
   3.757914587589645*^9, 3.7579145929167037`*^9}, {3.7579146284265175`*^9, 
   3.7579146349248953`*^9}, {3.7579213280693846`*^9, 
   3.7579213309280586`*^9}, {3.75922430234816*^9, 
   3.7592243128300653`*^9}},ExpressionUUID->"d92d7a12-ebcc-4f18-83e0-\
f681f54b8eec"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"\<\"\:0414\:043b\:0438\:043d\:0430, \:0432\:044b\:0441\:043e\:0442\
\:0430, \:0440\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435 \:0432 \:0438\
\:0441\:0442\:043e\:0447\:043d\:0438\:043a\:0435 \
{\:043c,\:043c,\:043c\:043c}:\\n\\t\\t\"\>", " ", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"300.046`", ",", "102.137`", ",", "3.38849`"}], "}"}],
    StripOnInput->False,
    LineColor->RGBColor[1, 0.5, 0],
    FrontFaceColor->RGBColor[1, 0.5, 0],
    BackFaceColor->RGBColor[1, 0.5, 0],
    GraphicsColor->RGBColor[1, 0.5, 0],
    FontColor->RGBColor[1, 0.5, 0]]}],
  StripOnInput->False,
  FontSize->24]], "Print",
 CellChangeTimes->{{3.7573140571074085`*^9, 3.7573142043853965`*^9}, 
   3.757314482310359*^9, 3.7573145228180227`*^9, 3.7573145899585056`*^9, 
   3.757314712876047*^9, 3.7573147663857603`*^9, 3.7573151018793845`*^9, 
   3.757315707057434*^9, 3.757315973173514*^9, 3.757316575290423*^9, 
   3.757323338833152*^9, 3.757323657121977*^9, 3.757327845516865*^9, 
   3.7573287385855427`*^9, 3.7573298575609694`*^9, 3.7573937887252316`*^9, 
   3.757395002931969*^9, 3.7574076969767027`*^9, 3.757408926842561*^9, 
   3.757411442278022*^9, 3.757415015640706*^9, 3.757652792813685*^9, 
   3.7576528503626814`*^9, 3.7576604203831*^9, 3.7576630996657834`*^9, 
   3.757663546807126*^9, 3.757671560698409*^9, 3.7576720854241066`*^9, 
   3.7576727139554834`*^9, 3.757672811858959*^9, 3.7576728461113534`*^9, {
   3.757672896104086*^9, 3.7576729061486063`*^9}, 3.757672947699605*^9, 
   3.757912025198925*^9, 3.757913618506505*^9, 3.7579146467513285`*^9, 
   3.75792101213837*^9, 3.7579212537429314`*^9, 3.7579214295362797`*^9, 
   3.757921524732671*^9, 3.7579254479989767`*^9, 3.7579273976017113`*^9, 
   3.757927646053316*^9, 3.758430813069991*^9, 3.758431088071436*^9, 
   3.7584314333903723`*^9, 3.758431869655073*^9, 3.758431981983164*^9, 
   3.7584320204777665`*^9, 3.7584320817171535`*^9, 3.758432336933195*^9, 
   3.758432670704612*^9, 3.758432846793081*^9, 3.7584338881604366`*^9, 
   3.7584347757307854`*^9, 3.758438979994408*^9, {3.758441413070539*^9, 
   3.758441434286497*^9}, 3.7584418812727795`*^9, 3.7590590926740355`*^9, 
   3.759221179656455*^9, 3.759221267978345*^9, 3.7592219257789297`*^9, 
   3.75922206747991*^9, 3.7592242963027105`*^9, 3.7592247832319508`*^9, 
   3.76078013566068*^9, 3.7607819373562927`*^9, 3.760784696106863*^9, 
   3.7607864994661617`*^9, 3.7607869462441015`*^9, 3.760788424428936*^9, 
   3.7608491225662117`*^9, {3.760851358025571*^9, 3.7608513815082045`*^9}, 
   3.7608544013541183`*^9},ExpressionUUID->"586d658b-db1c-40cd-8f80-\
77591e0c2a10"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1:eJzs3QlUjW+7OP5IGSNzyhCRKJShMt5REhkyJZlCEopIpIEyJA2KQjJFSSgi
koQGmpRKaVRtjXveIUkZ/p31vj2P5Xb9v+/5/c7//z3nvJe13vU561rfs/fz
3Pd1X9e+2rvd8E27lm2RlpKSetj2v9i2//3H//2Pfw0ERVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEU/c8ZMKSxcdxkCWX+nh8ZSlZiylQ1
2xS7PSJKq9hjA5dHCSlN+2+fF6hI66oQcZd7VUBZ1zHMOlGXNtzjiEpKI5+y
xfeYWspjWs2lNrsO+9HqFa0Zu3E/rb3T+kPE5l8XehzoeaHrhO4LWgdo3aB1
hvYF2kdo36E8+bvzF0VRFEVRFEVRFP2fob9CdU0iX0JZXnZKeqyKmPLTmeAV
K3cIKRNrjTZsXSCgVPFWMPI7wqe0euV3a1932qhV74Odk3iU5jt3BD2zprXd
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
3qA/B3JUq4fZnjv0+48Kq953yXnwh99/33bm53kx/Xre+nUJeaFFvx/aKVDu
q7oP/f7p5MAkvyfd6TnCTnnAGo8g+nPszbw3e9er0HMKpyMvLKyanXfCQ+eX
/ExtmwsG6V45tJv9XgJ/uSm946vFhHu1k/rSqez3GPjnfeOp9G2Ld29OL5nA
fp4/c8Qh7qY5ItJcOHPul1Hs5/+tVLKlZ5wWErdit65nbdn5Lv65r4trnYCY
bNj0aGoiOw8q5gfLnDFtmxN7SZ/ca8bOj5qHFYX9XvGJ49w5ix+0su/Xr3u5
K+jeEj6xth34fXoaO59OW5w6Pr2OR/xTJHsbE3OZ+NgdH71afXkkd2BCLO8l
Oxc7HZidcKRtnrDYMC/q9DD28wmXtFo8ZL5xiXxz1TUlITuPy5t+Mx36mEtM
7ojun7vEzvWlT2ZangvmEr3bkz83dmLjDbZL9vf04JLoUb4rjC5nMnG3g8fu
LHDkEjfHC9YOq9l4sK50SLBbW34oySvLHGHjtwz3ymj6tj3vxrlKDUlsXGSR
P1R4jktCapSDL35h404N5ZfHhHGJxf2VirmT2etJ+WipE3SDS3KfNvf7Ovev
49DjQM8LXSd0X9A6QOsGrTO0L9A+QvsO5QmUV1AeQnkL5Tl0LqBzBJ076JxC
5xqqA//cBaputMehOgPVJaiOQXUPqpNQXYXqMFS3f6/zUF+A+gjUd6A+BfU1
qA9CfRPqs1Bfbr9fFEVRFEVR9D+n0/XCki/bJJSTbqw0bH7Io4yRP9Z5+qY6
ykLNqNBeTtWUUlzzpNt6taxhX9b9GMohpYufP3u5r57Rvm9yyp0LJSReqWSF
VSCPMT9yb4fsOflk4duJt1pOCxgnSuV0VD6ZSUJXXTvdvFXEaFazWXm18nMi
d8DEp2CmhDE3fG9xn8nXmPu2VH3W5WwF/TkQx3SpG8u59PuPIS5Gpfkd6dfh
K67vCto8+w+/F//cvEjWlX4/lCPtvM7hMz0vBPZ5lbzCgX6/VS/y6CSjJnoe
8Tn32KsphH4/92KWu81Nc3auiR7ZMktmhYTErdk9RG4Z+35xQ3/DSoGrmBRr
T7iTPY19f1kqzmjuiuttc0XWlKhlQ9j3o+WsWkfdblsX5UONFbfn/vL3OyTO
PRx1hMSucMqwSC/29wV896cGbfUTEM7Yhu+H69h58KnrKaUzP/jELF7wYq8L
+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
zsn0rKNsqBg3OiG8mvJrzQ7Rl161jCfUKpR6WHOI15DgDsqa9Yybb2i1XtlV
Shbt1rAn83iMgyKdwmePLSDByeev75kiYLSy2zLU5HkW6eumK/fkh5DR52dk
9KXOySSb1+9qdqqYMbdft7q4tVHMfTcP6idQcfzD34vpp+JaEUG/TrY++eSW
Wgr9ujpudbcKUT/6dXhQtXuLxU76dXvx9e7Xogro1/mDXxfLxK+n5wL/dQVZ
txvpOSLu6zPF08fpuSNCzm3edyN6TjF70vRq61D2c+8LNKWdoidLSFxzZ63H
0uzn5KcNzvKqWCYm/oY/zDVy2Lkp9EyFZqiPiCjs02g5V8nOWfsWj/ZZVygk
agabKngD2c/tdzs06mbeZCEJelqu2uMo+7526JH+mnsuCohCxhTHIZ3Z+c5w
xI/WvF4CEr2y9bPPDXZONLlbuFXbk0+MYoOkPVf88nsHDlbFOapt86aq1KXO
G9l5s9DKKnz+Kx5R6CClrOuSy8TtNRdlRAa2zeMf3cUb6tl5dlHvcz0PW7TN
xaafjLyqfvl7KBHnj64xaZtzjaTOZZxi41LHDddKr2qbi0MtsuVjfvk7Kdtc
Vi/z4hGL3jufX4hhHz+8q0P6hJdt83XQSIcvNuz16OWeMHbV4pMQz+IZj53Z
65eare+bGcInbiPUNracYu836rrjuWBtAdG8HOV0uAs7Ly9I2+mw5aaA6H4M
vO46ml3Pabr5bqn9hcS/h/wcO212/TmTWyapTfuPOfqDu+Wpv45DjwM9L3Sd
0H1B6wCtG7TO0L5A+wjtO5QnUF5BeQjlLZTn0LmAzhF07qBzCp1rqA784x9d
N9rjUJ2B6hJUx6C6B9VJqK5CdRiq21Cd/70vQH0E6jtQn4L6GtQHob4J9Vmo
L0N9HOr77euAoiiKoij67yJfQ/nhexkRpWJdiLrjNy6luZ/b92sVtZThn3o9
GraomtGjj7WtSY9qMmieUafgI7WMMWNHf9JyqCS5N7bIBJ2uZ/TvkiPRMSoh
ho1Oys+8eYzjVPwuv1ybT1TmbTmUZS1g1FgZIj3F+xWxODzEoUxRxJj4YfHs
svVJRLb2mHF8qZjR4vgegefB28x9W7+8M5PrQv88pEtQv8+7X9Cvk2t27A/J
49Kvq7N+ntWfv4Z+Hd6p4/pLh+7Rr9vDOF+VPEbQnwN3sxiuHvGYngu+yfh9
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
UN5CeQ6dC+gcQecOOqft+/L7uW6PQ3UAqhtQnYHqElTHoLoH1UmorkJ1GKrb
v9d5qC9AfQTqO1Cfgvoa1Aehvgn1WagvQ30c6vvt64OiKIqiKPrvYuoqHdf5
e/mUUg1ro96vradcaN/HvDishnLbKKWeJwTVjO/nFW2/P7SKBHhe6e2SVsto
aDX8lffNCqJZbRY4YFc9o53p5zkJ90uIYnyVRkVXHmNM3qoDW6oKiFvZ1i9O
AXxW2/RBfnNziaKMy+e9skJGq/cDyZySNKIsWNJ4YZWI0a1Fzye65jkZUlm6
yvOOmNGkv3OKTuhdsn2lr5PCZwmjVNVPdaM1Fux6dT8QeCXwD+8n+tscG9OP
fr1tIn9mRdilP3zfSN6V3Zkb6NfzdvZLu9t3p9/31Pt0fOnSSHpe0L3TobD2
ED1fxI2adC9nB/0+rAu/Y89D6+k5Jf1ixpgpS+i5pofF3YxxuvQc1Bg38Gj2
Jnpukiq4v/5IMDtnZV6/fdA0X0Ich0bNMPNn57Jxs4m2m6GENIy4fFxP85fP
n0RLry3IFRN/3a51fbqx812D1hD7p6ZiUvwt/UpJMTsPqvqZ9ONIiQlnS8ZE
zY5s3N612jwvTkRCHutu7r6YnSu7Da+0kj4uIkFvxrl75rFz6FmdDpVlriLS
3O1I1PV4Nr78zqbFb/xEJDemKcW3no23/Bx/TpwvIg2HPh8oOMU+for7fE+V
hWJi/eJRgdmzX67TRfBRSl1CLGIXbjgsoD/XEbhp1PvwO/R8mvB019dCfXpf
7PIaa3uY0PkgtOXo83zZPMzfuFeu5hKftOtReq1ouWruf7o+/NXj/P68f3Wd
0H39vg7QukHrDO0LtI/QvkN5AuUVlIdQ3kJ5Dp0L6Bwx+/TbuWuPQ+cUOtdQ
HYDqBlRnoLoE1TGo7kF1EqqrUB3+vW5DdR7qC1AfgfoO2KeAvgb1QahvQn0W
6stQHwf7fvu6oSiKoiiK/i/zbNyZz5EiCaX83p+dQhbwKW+RAQ+OzainDJc5
c2rB4xpKiykbL14Kq2ZsmLDzTN8TVWRA7JjIKYtrGSt2Jrne7cYhAaPsbhlX
1DEa+t2VGrKljPgP99smMuQymlxYlqKjXkT4S3uHHL/GY9TvljVsm0I+kYoM
uXX4C5+1ebpUw8TXpO+eWOVDY4WMPssfT5fpkEZU8/fb/8f7s+0qymkZjxma
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
Uq0wUkRp0d3ox+n1tMomORMEA2lVK9Ok1mcJKZ3ChbP8PGmjnSPdPAxo+/pu
uhDCFVBqjzF8Oe0kreLkPcOaR9F6qLU+5KXwKde9n9pVZEIbU+O4I6uRR6k4
7bTMoZO0rgbGjjrjaas1VCe+LuVS8rMclqaeorVSnHzu8hxazXJzs5YP9ZSD
FxbkuF+izTdZveP4VFr9x5XOP0V1lAkrvxoaXKW1yA8/O9WM9pb4wsukrrTm
cve7ipJqKW3MLy1XdaeNblq5yUCf1sd4o2yALK3VivQa9bQaytD5TiXDr9HG
f5kpUfakVXVOIK37aSNdPnxzOUbbo7N213s3aFV1vDrtyqG1CRmj4CdfS/nt
iAZPYT5tTFi1+TEbWjvzqVo5e/91oceBnhe6Tui+oHWA1g1aZ2hfoH2E9h3K
EyivoDyE8hbKc+hcQOcIOnfQOYXONVQHoLoB1RmoLkF1DKp7UJ2E6ipUh6G6
DdV5qC9AfQTqO1Cfgvoa1Aehvgn1WagvQ30c6vt/9+sRFEVRFP0/0ZXvNbf8
vIRStk+oftwSEaWbi9R+w1NCSs1RNePqB9DmOrRcGP1MQBndN9p8vzttoV/J
mmt6tLmFYwKV5GkDBvX88UnApyzfyt898hlt/usvmw+epRXp9PWttKadtpIo
dZhBGxU7cGd3ZdoFQtmh5p1om4oTZZdV8ij7htxVVoinXeQUrbwlkLZ08+Vu
Z/fQ8oNUD4w1pJ204KBbyGBaV/mCl88EXErVK9qTBE9p9fr9P+y9eTTVb9v3
r0gqSqlIlEqiUZEkOZUIqZSSZiqSFNFElCZJFClJkyZJilBRCJmHMk9Rhj2P
UgmRZ1/PtTo/re+5j3Xda/3uZ93P81v557XWe1l7OIfjeL/3Z6pxm3+OZHtK
a8hsbZI1Rwfs/FHEJGj/JPVwsA3Jl/2lq3OrGASNL9Gv8/eT1LvGtPbsohMM
7FYbNf0yScnEAen66iQtHZav8XtCIxhYo71vpRHJ9otd5YvobQRryl7RJnqQ
tPCu0vOwoxhqnvV03c9WpOF4KTYlpQ3TjKUpwXVpRd3jh0rqK9Iwh9S4/5zR
1ILq14/wuu5Cw1zY71w0zr4FPZWuVVbKomH2HUqv3fypGTnR7tppy9Apaskd
e+XZjNxXrvMP2EbHTFCU3OdE+4xquFcPr02nY/oYGt2UKfiEMqerDAr/13H4
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
CW9MSN3uV/v0Km4b+Xlc9kl7PCL1mBcnvvjvJ/WUOe4nvi4i9bq7nuOlJpK6
nbR8mvWY/7oOvQ70vtDnhL4XNA7QuEHjDM0LNI/QvEPrBFpX0DqE1i20zqF9
Ae0jaN9B+xTa11AdgOoGVGegugTVMajuQXUSqqtQHYbq9j/rPNQXoD4C9R2o
T0F9DeqDUN+E+izUl6E+DvV9yCdAvgLyIZBvgXwO5IsgHwX5LsinQb4O8oGQ
b4R8JuRLIR8L+V7IJ0O+GvLhkG+HfD6UC6AcAeUOKKdAuQbKQVBugnIWlMug
HAflPignQrkSyqG/68xf/uW/mOT+9fWgPiHBSLkrOVOVBARfcm3NjxTwCN5a
UPatsYZLcOvj6/d2N3EIysmPPOUTxyZ4+KZU9LSXLILWvpVFubVMgk6Tb26X
b2QQ5Nxx9mj+SSfIm+RiHDSRpDctZ5X6fBpBF9vikcuPtBE8bCzjefUmxVV3
PCsnXm1F9RFtG5/Y0DBTI6d3Hz/Vgkx8GjSZAhrmDdOUpQ+vi+qk2ZIhzhF0
TJ8ZhrR8vc/I/3bMcIEBA9NVXbpq/uomJDdnnvq6AgZmg8eeMMlHHxE/1/mw
nRUT0+BZ7s1O5QbkX7ys2qaNiel6a66flG0dUh4gXbNlPQszqZfvy+6vQfyS
PbqTqliYC69n77h5uhqpjhqXH7mEjfm4MDl2zqIqJB1b7BH3go3JH3DrUc+n
CtTu29ibpMXB1PZ3GUI7VY60EWvcyjMcTPelyxOVPMtQ5roxC4a0czD9JP1e
FGx/jxTeLg4fasnFDDob7J1pUoLckx/OcYnjYtrnqrae+l6IblqwX2wfwsNc
axaQlpWfj75OW2650IGHaSW/fmlMSi6KQvPX3kznYRqfyhxle/EdKj1p06yg
wMfU/T40IyA4C8m/Gf86Yh8f03hRklltYwbax/E56ljKx2QNnLrJaPtrdHiv
5aghswWY7p2n1MNqX6DF416eGRElwNQsP5xveiIBnd6WHH9cRYiZMEXx3MR1
D5GL1PM53seEmMYzPwxXrI9AU5JTro9gCjH96EdfWCV74P2tafGldHKQmN8H
9rqeGiZP6s734mW7g8Vcj2AQK20nQeoJvoNdfh4l/XDO6lWzVwtJX23lGGzS
v4LUzYc0za/KI327fPpz1X2mYn43eC+bUlYk5jyB1Am+UutIXTb414jjJWJ+
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
3J31x3U0kTnRyl2iuqOcMnx6zm1qPd+6mNZb2Ib87pkf9r10jRqf7udZE6NE
+tf3Jp1Sof9Rh14Hel/oc0LfCxoHaNygcYbmBZpHaN6hdQKtK2gdQusWWufQ
voD2EbTvoH0K7WuwDgB1A6ozUF2C6hhU96A6CdVVqA5DdRuq81BfgPoI1Heg
PgX1NagPQn0T6rNQX4b6ONT3//1H+oTfOuQrIB8C+RbI50C+CPJRkO+CfBrk
6yAfCPlGyGdCvhTysZDvhXwy5KshHw75dsjnQ7kAyhFQ7oByCpRr/pmDoNwE
5Swol0E5Dsp9UE6EciWUQ6HcCuVcKBdDORrK3VBO/z3Of/nfQ99ZHIvHcnyC
Nfp0Q3VLNkGrkpXpqY4MgnnzRsks5bYRlKcphHxwomGytFofFTi2oHeB6ev1
BjEwX27P/7WlvQlpyA084LCTiRlU1x33sboe+Sr8UJeMY2Gez1UO7fxZjeQT
PNfGcdmYZcIHMj8NK1Cp0OH9hV8czHkOyVqpMu/RTG2lJXcEXMyOT/u9ljkX
oMA6A02fah5mHu/2cMX+bBQ5/sEk8yd8zJLkVa63u96gvCSvKt0TAsyEyyuG
+g9JRPLWh2asMRNi+h2X4O90pu4T4r7t4YkDP8VcLyMvVWSsRuoS3CjmOBuy
zqhEtw7ICRTzXJULBxrLC8n6djNNxWTYUFJftkV7SbMtWSfXjSrY8yaDrKvO
kj80f00h9eaDI04MjhBzXaTfnEHy0qQecnnaMoaLmN9PbBQ+fKsScx+tR8cU
LtmJeQ5pFv0Ss5nsR2cU2+KGO5K62qe5AabdYq6v2Rm3Y4IfqZeZ3iiZNojU
13mPH1t5neyzSufXBq6aR+rmGV3XP6eJuY/ZXdc572z/689PKWjw0TDaKua5
KtdLeMd/kT7kjApjwK+HpO5jPnikk56Y+5CsXXAmtY70RTK7xiYnu5J6jHtw
X4s0pd8/+kS4JFmIIp7OrH2wlPJj6ctLpSIdhchOZ4DsgOOUf4u+2pc8Y4IQ
qXV6LdtXTPk9F7nvCwU1AhRwlxZiM47SV8oOuD/ujABl3j6laGxJ+Ublejvd
QXNE+oRPA4MPUf7Tmz5s/69mPkpIV1XwSaT8as2XjEc/LvNRxJatU/YKKX9r
uWf4kbplIt87+IGW6kxKP9z5ZVx4Hw9pshqNf3hRPjna+dz4lDiR3z5bsawk
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
s1pHH5nixEfu85Mf252g8qN1j82zUBk+KvhSruN6lcqbJtf7Fc5F8JBm/6/n
a3ypfPo0Kbdtp5Eozy7Zn9p9g8qzZjof1WPKRPlXQn3Lg/NU/rWZXUCrPiTK
y57f3oRH/3Ed1rfZxzZoivzeju9JDTQqXw+dNueUThsHRbQcypXQp/SoxBGT
lR9xUIjRtPVZd6mcvu9Vy44ZojoSYql7xPXIf9ah14HeF/qc0PeCxgEaN2ic
oXmB5hGad2idQOsKWofQugXX+f/+I/fFbx3aR9C+g/YptK+hOgDVDajOQHUJ
qmNQ3YPqJFRXoToM1W2ozkN9AeojUN+B+hTU16A+CPVNqM9CfRnq41Dfh3wC
5CsgHwL5FsjnQL4I8lGQ74J8GuTrIB8I+UbIZ0K+FPKxkO/9p0+GfDXkw0Hf
Dvh8KBdAOQLKHVBOgXINlIOg3ATlLCiXQTkOyn1QToRyJZRDodwK5VwoF0M5
Gsrdv9fPX/7PMCwgt/a6PY/g08Vpmwwd2ASdtt84V2nLJJh0jHFbJpdO0Kr3
vsl2FxpBE7+F30r82wimpq6gHYunuGfPRa28o63ofPi+ZRe30zDn3t58Pda9
BUW/Xefd0UfD9G/2Mx99uhnxbe4O1n9Ix1wopcLeIP8ZKXwun/fOiIGZtyNw
90uTJuTtKy3xI5eBGXaO16/87CPKdFpflGTGpFjcH0Wb0YBiP7/OeviZiSnp
8OH1cIc6pBH7eWb+GhZm0AAHr9ihtSi6sFyXX8bClLsf6KAfXI1ulUTe4Rix
MbUi50wyNqlC/u2bBkxOYWPumy38eb22ApkJ5tlvmsnBnDV/9+d273KkjVjj
Vp7hYLovXZ6o5FmGnJhfZJJ4HMzIsHVFpZ7vUc3sol3sZVzMHsbS++d2lKAp
o+8Uad7gYs48Z2o8bGsR+po4Lbj9CxfT6v3I51vWFaCw7x/qdi7lYQYZqXFj
DuQh4+DxKr/O8TD9EjZtGFaWg6RjTyuva+BhNkhy7Ae3ZqP2FZOU/dX5mPb6
+js/qmch1dXWuYN28DFjLA0zX+9+i+RSzDuCn/Mxnbdfe2D39A3KXDhp/84O
PqbEigM1tvdT0CabkPN35wkwyxQNg/dFvUA7pzkvGHFWgGk3bcJui3fP0UqW
6gpBkwCzTH/e95i5T1BerX2+orIQ0z6Xuyo3+CHiD1Q8ucFKiFmWWksvro1C
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
3Vph69NO6PKTP2wpOHLg+KlnTNlaYa9lxwx9fnj+8+w52edm3zN7r+wcsnPL
zjm7l+wes3vP4iSLqywOs7jN4jzLiyyPsrzL8jTL66wOZHUjqzNZXcrqWFb3
sjqZ1dWsDmd1O6vzWV/I+kjWd7I+lfa1pA9mfTPrs1lfzvp41vezOSGbK7I5
JJtbsjknm4uyOSqdu7I5LZnrsjkwmxuzOTObS7M5Npt7szk5m6uzOTyb27M5
P9sLsj0i2zuyPSXba7I9KNubsj0r28uyPS7b+37ofZQk/6ed+O5H0/ruLw+2
nnCgdYtXorMmT3ml9+TouoE9n+laHC2+49vDa10f3bB336q3z4xOrbS964Gj
oturHDhn19tlwS/rvvPujNnRbheM27d/cnRDj8UNisZEGz57y+O9hka7tWlR
OvumaLuJu7sUXxmd9tD4sUvOj/Z998ObezSNFk++pmX1n0Tr/PyEtsVflwbP
bfD64WtKo2su6jTonQ3RLyvf+2Tn5dGZd+/buuCl6ODp32zpPTlafMSX/f44
Mrrk782KGtwRrXfspvXLu0fHjJ5x/bG/jB5x6+56006LLnls/Ae16kebd+k4
9Kkq0QlVX/6Xa8t2B++bM7LFW+9GG118Z8fa86I1p23oOueJaIc+tf40Znh0
TOPxn4+4PlqpSbW3V10cPW7aw38+v2m0zY6d9x5dLfpo+3nryzfsCk6YM2rD
3fOiDUff1PPhh6IdBpevfeQ30cYtG97csGn0rRvHrTv725Jg+yO+O7LXm9Hm
RW8s7TYmetjuEZ0+7hjtf+Ot53x6YnTwFd9tP/SbT4OPL7j4kSdXRRvdVmlu
j2ejz1z7/F3bx0cHX9rkrn4PfX+z52Sfm33P7L2yc8jOLTvn7F6ye8zuPYuT
LK6yOMziNovzLC+yPMryLsvTLK+zOpDVjazOZHUpq2NZ3cvqZFZXszqc1e2s
zmd9IesjWd/J+lTW17I+mPXNrM9mfTnr41nfz+aEbK7I5pBsbsnmnGwuyuao
bO7K5rRsrsvmwB96PiVJkv97LZzZ9JDVX5QH2y/f/u3QLdFpo7dd/frG6Pzp
M1Ys/SjauXbL+49ZG63dfu/yn62OPj71+LVDVkVHD3xw3ctvR8d80XPU4uXR
lUfe/O2hS6JVe1566+mvRq9uMuGV6fOjU6v8/LjFL0R716p69Mw/RQ/MveXU
wx6Ptq9Rs9FfR0bPfefjZWcOi+49sLzxV/2iiy7Y37rKtdFH79iw9MSiaIuh
O26Yfl50zZknz2t1fPTRZQ99MqVatHnprNPr7ioLrhuxsM22l6O9j9/1UsPn
o13bv9pt9YTo1MuHzX3k7mir0hpNBv8u2rP5xuMGtov27t7mtM9OjdbbXFr5
jCOjPXcNrXFmSWmwTreTHhyxMrp1VbPLDsyIDhr34I2XPRyts3btgGGDoo0f
aHl7p99Gl5Xu/eSsdtG9q549tqQwWmfmwuNLzv7+Zs/JPjf7ntl7ZeeQnVt2
ztm9ZPeY3XsWJ1lcZXGYxW0W51leZHmU5V2Wp1leZ3UgqxtZncnqUlbHsrqX
1cmsrmZ1OKvbWZ3P+kLWR7K+k/WprK9lfTDrm1mfzfryDz0vkCRJ8v+mC+t3
HvnCmvJgafHfv/nHadF1153d4tj7owsvXz/07l7R0vfrv7Xjqujgs7+a3fr8
aIs35j75xCnRxR2e/uyffx6dX/jhuXObROuMaHHdj06L1n5j26SXW0U3lLff
8lzr6FmPDSyd9Yto+2mrm/W8NNr1dyt/ueyK6PAObSp3vDxaUn10txEXRxf/
+rra55wTrXrUhUP6NIoe9mWbNWX1o19e+qsZtx0Tva/aGzWG1IqOOfrQO2fX
iB63ZVaPflWiPR+f9OG2r8qCW+tuHd/ls2j/vusvmrw6uvfrl5/4bNlBHPLR
Nb9+Lbr9igH9Ov71+5s9J/vc7Htm75WdQ3Zu2Tln95LdY3bvWZxkcZXFYRa3
WZxneZHlUZZ3WZ5meZ3VgaxuZHUmq0tZHcvqXlYns7qa1eEfuj+QJEmS5Pe1
/pBWX27/pDy48JL+S26fEy1+rdmTV4yNbmh5Q9GePtGSKcvXtmob7Vp1+q1/
rROtetsxqwu+Kwse0evO9XU/j/atumBUy+3RwtsHDtj0UbTO6p9WvuDd6PBj
bu5Z74No8ahxbQdujG44+aTezTZHG+9/74k3t0b3bN/57cM7v7/Zc7LPzb5n
9l7ZOWTnlp1zdi/ZPWb3nsVJFldZHGZxm8X5D51/JEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
/1/8N9mkFgM=
      "], {{0, 0}, {182, 181}}, {0, 1}], {
      LineBox[{{1, 96}, {181, 96}}], 
      InsetBox[
       FormBox["\"+2.53 \:041c\:041f\:0430\"", TraditionalForm], {3, 97}], 
      LineBox[{{1, 85}, {181, 85}}], 
      InsetBox[
       FormBox["\"+1.01 \:041c\:041f\:0430\"", TraditionalForm], {3, 86}], 
      LineBox[{{1, 79}, {181, 79}}], 
      InsetBox[
       FormBox["\"+2.84 \:041c\:041f\:0430\"", TraditionalForm], {3, 80}], 
      LineBox[{{1, 77}, {181, 77}}], 
      InsetBox[
       FormBox["\"-1.01 \:041c\:041f\:0430\"", TraditionalForm], {3, 78}], 
      LineBox[{{1, 52}, {181, 52}}], 
      InsetBox[
       FormBox["\"-0.71 \:041c\:041f\:0430\"", TraditionalForm], {3, 53}]}}, {
    Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
     Automatic, FrameTicks -> {{{{180.5, 
          FormBox[
           RowBox[{"-", "162.9`"}], TraditionalForm]}, {135.5, 
          FormBox[
           RowBox[{"-", "81.45`"}], TraditionalForm]}, {90.5, 
          FormBox["0", TraditionalForm]}, {45.5, 
          FormBox["81.45`", TraditionalForm]}, {0.5, 
          FormBox["162.9`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "162.9`"}], TraditionalForm]}, {45.5, 
          FormBox[
           RowBox[{"-", "81.45`"}], TraditionalForm]}, {90.5, 
          FormBox["0", TraditionalForm]}, {135.5, 
          FormBox["81.45`", TraditionalForm]}, {180.5, 
          FormBox["162.9`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 45.5, 90.5, 135.5, 180.5}, {0.5, 45.5, 90.5, 135.5, 
      180.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
       TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -136.87830349034857`}, 
                    Offset[{4., 0}, {7.5, -136.87830349034857`}]}, {{
                    7.5, -2.9923510373250792`}, 
                    Offset[{4., 0}, {7.5, -2.9923510373250792`}]}, {{7.5, 
                    147.62934547232624`}, 
                    Offset[{4., 0}, {7.5, 147.62934547232624`}]}, {{7.5, 
                    281.51529792534984`}, 
                    Offset[{4., 0}, {7.5, 281.51529792534984`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -136.87830349034857`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.7\"", 1.7000000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -2.9923510373250792`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 147.62934547232624`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.4\"", 3.4000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 281.51529792534984`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6309753882692621`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.7473979556197173`", ",", "1.7000000000000002`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8783733438889794`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9947959112394347`", ",", "3.4000000000000004`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7607864997662287`*^9, 3.7607869467132072`*^9, 3.760788424563975*^9, 
   3.760849122695242*^9, {3.7608513584256754`*^9, 3.7608513817412577`*^9}, 
   3.760854401506153*^9},ExpressionUUID->"129cf440-cf6c-400c-b052-\
d6cfd2e1d5b2"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxEXXVAVF3zXnp3gWVREezu7nbG7u7G7k4Uxe7G7u5E7EJFVCxAUUBFpBGU
3rt7L/HNOef6fu8//uYDdm+cM/M8zzxzfhXGze4/0Vqj0Zyz12jYv9uaFBmy
tt95eP1+jk1bH1v0Ghs0e2L8efjZ8PzbceNssV9Bt6/nF1+Ac3/GDJva3xY/
QVhmrOEiXL/ZY+DsXra4/VbH5/3vXQT/7Zeqbmxpi8ENhn33mXAJameu9Kvh
bovVhoZhrPNlCG9bZkeJZBvscbDeZq+bl6Ha9M8dGj+wwSdDP+zZ2v8KjF65
fMHvzTaokx3bjMu5AmlFwkfYjLDBRh6ViqzbdxXebN+Gj+raYM0DSYv7wjXo
OXdQ5GI7G+wYPvDh29/X4I3vmelVf1pj7Tt/t2Qcvg7OA4OefrxnjcGZA0On
VrsBa+R9LUbts0Y3+4BPT31uwPj7Z8N3LrHGxjY9JoR/uQGaaxNedfa0xtI7
nvwtUfcmPA+Yn/6rvzUuGVzaY/O6mzBubcaUuK7WuP1uhrvh5034FPkmpnoL
a0wNdw21tPSDhuWXPVYqWaPrrzG22w76gZPvxdX9dNa4cFf7YWbZD3yezYq4
k2yFkyt577kz6hY0aL/Ef26gFRZZMK2MY8AtmBkbv2LDKStsUs77vXt5f6gn
68O2rrPCK7Hb3lXy8Qf7VXs7bJlhhdJlzc+Z0f7wcTp7Qla4sUHHix7tb0OT
dp+Xa/pbYVDJTbWeX7gN36doZq/qaIU7Xk12buF6B5qkN+/UpaEVfphVx/fX
kjvgl3PS8XcpK9xXEJwe+fMOFIOg77dtrXBpeLEiS7vchV0h++bX+KvB2d67
Y/yu34WssF7jjBEatG/yNXCUxz1wi8vrVT1Qgwf8yhy1XXkPLsQ1sNl7U4ML
Q1MvHU68B/GT7lkdP67BD6dKz53Z6z4Ez9jZrfN2DW592M5/sP99aPF3j+GL
jwYbr2/R7nDpB+C2YFm38Qs0eO7oobfO6x8ARf7bp2nw0PKyp1tnP4DzC24U
fByrwU6RI4It4x7Cw3vb7DMGa7CgU8iBbp8fQsb5oB7NumnQWGltl1JdHkHn
9iM+nG1O13t/S/1O9x9Bbp35D2pX1eCiIOnl2ZqPoW98t7AmRTVYxJV9wmOY
FZC0wdWafj9zVZlCuycQNa/uy0EJhZBYec8T47wn4HV9+MGMt4XQqbND5bE/
n0DXza9vbL5bCGvW+Tb26fkUqncMqDDwYiEMXlP/7rL7T6Ha2RPfehwqhPgH
NRJuFwmA8Uee6tZtLITPn/1uP+kaALXv+pcssrgQIg5dfRTvEwDV7w3tt2Zq
IViv2Fa53b0AqNZAe6X08EKQrn7Z9DYzACbO2fOoZZdCeHU4r/jR2s9gzs1T
9p/qF8KD6TrLicnP4MGJJxN7uxeCV/LDEcNOPYNbYWeKLVAKYLDTEAf8/gwS
9OnzXH8WQI/WJ2YEuz2H0/TX3oEF0OvU6IypvZ8DFh374tPlArCaVbxe8fXP
obuTda0N+wrAk1Zzx8fPYWJ87bSpGwqg5HSfyctynsPHbumlxiwrgOWtc35c
rf0C4un1Z84ugNbR8XeTJ7yAvq/G29ccXwCyT/iuSkdfQM+YLz9aDyqA51KB
/Z/wF+pzKIC4n5NHNjcGwts6V9cHtimAqw0HDPfpEQgeaetnbmlYAAuqWIfD
xkDocbnC3B1VCuAk3eb+l4Hi+ooXwBpzwPZC65dwsvv7slPsCqCGbpP/NngJ
z2XYYMnKh5YjcEob75cQuzuud0pMPmhTaszbeO8lzOMLKh9SuryoMT/7JVw0
pSx5F5AP25a/CVpTJwimPdvyZLV/PrRN6bj64qQg8LS++zfxYj50r9L65Nfj
QTCoaMcfDify4fK+BXvWRAZBt5yGmxP25YNnm78jrhZ9BbsrNqStmw9z/OPW
/+z1CgJ067TN1+bDN2WgW8mNr2D/FnPvd0vzIdTe06Zi4CvYMtBjhHZePjz4
lhtWzOo1OA378bvF1HzY8fNbzmR4DZdtt7w4OCYf7nvYpDZf8Rp6GReWWzkw
Hw5mVbhQ8vFr+FK6/IHTXfLhZLdx3e4rryH9yo9FJ1vQ57kWd5vb8g20q1V/
wsJa+RDfvY1je683kGzaHTSlTD5o5tcZvvLOG4h7deDhPmM+mJY377ox6w2Y
9v/w3WCXD6VOHr/4tU4wYPTlwVXz8mBIiH9g8JRgaPz0kI1tdh6cmdNG//V0
MIT192r1PCUPNunD37/8GQzbRp1aOj0mD55HXp3YsPRboM3XtNzXPNhzau+y
VcPegs2IKkNLf8iDxKHRg1wOvIXJlC7KBeXB/bwNOd++voXgfEOnVU/yYJal
a/elHu9g9QVFc+ZOHqwIWmdTYdg7KO/UWip7LQ80c9Ii5x98B6fx+GvfM3mQ
m+v9fl7kOwgdsnNS7UN50PZm773pJd7DfL6A8mBVaML7X8PfQ/1j7ToUrs2D
b/k1AxYffg+pF6atvrAsD77frx+2Jeo9NFxcp0K5BXnw5k3g1dUeH8C2RfWx
52bmwfsE+w5lBn9Q910ebDjFvvgDNL0xaPXLsXS97odSG4d9gH17q549MSIP
mvKN9xEk9rgH5cHRLi8Ly/T7CAscbjZa1zsPRpV8mtF990fo8ubyfKeuedD1
bERo888fof/YGRVet8uDyn9vUqYOgY+PN/TY3ioPknt1qrm1Tgj0ajivuKlx
Hry4v75EyT4hYHs1YGd4nTxoGB+xdP2cEDgRM66Tc1X6eYZrgyq7QyA5+kWV
V2Xy4MAzj13V/UMg90vAYF3xPDi30r/Q6ksIvHk9LOKTIQ/aVK/eqZYUAobJ
K5o4aOl9bEwPvOIeClu/UUGxyoMLL2PGRjULhZCxTx5pFAXyIypD7JBQYMth
fo4CxXybBbxbHAq7F7yPP/xHgfGO7QzdD4RCd5YuEhV4PWb452r3QyEhq1zY
7J8KNNt8pcmeqFDwMVXqNCFCgTWnvDRb8kLhQpmCQ1dCFZjPF04Y3KJsMeWt
Auv8g04UbR8G9YuwDK1AyJHcGq8mhMGQCgnVwp8ocL1DkyrDNoRB+N6PWa3v
KbA6/miHEpfC4FenMe0O3VTAjm2j92HQvkOhrftlBTq0WW5bkBEGxf7UPJN3
RgHfnV2/mYt+goQV7M0qQBcjV2j6CZZX7LP72kEFujSvsyR0yCdwCyq+uvQe
BUbutlnUxOsTJMKZn0+2K7D7Q8Drt4c+waH2SU0WbaL7KV6k/oNHn2DaowW+
HmsVqDeNVfBP0KqpdeaDFQoE3qw767TVZ2DleZ4Xff7QgYEplT9DgB9P4FC2
8cO/V7t+hjfWVeekzlKge6fxf9JnfAa+LKbR/XY8ITvs+gw9m21q5zlRgaUl
63eV/T9Ds5jsF9qxCizpUNKteeRnsC9CFX6kAhPeZi0sUfAZDg86fvnqUAUe
7XkwoXSlcDg1at2e4wMV+Db7T8duXcMhboBm6+S+ioo7wmEJS1g9FThu89a1
4c5wOFL8UXKtrgrMYNvgVjhM7/p9fEoHBRqd2Rw76Eu4mrcU2JFfe19FS7iK
DxWYueBDn7mlv0C900NnTW2iwNzm2Zdb4Bd4Vbff4yb16fpG2B85O+EL6Ga2
2B9bUwH33G5/b2yi32/8deqZKgq8yO5/s8H1L9B8bc0my8orcDSqxLk7n7/A
0ksdZq0vpYB+ZaZTSfmLyMfFFfiplPIfUu4rnBtr3nigiAJ+XS6U6N/pKyQO
mb/S06BA4oee9Y9M/wodrk6Nnqun9bU/5rPD7q/g+uoBIQwF0k4uvxJz9yso
QwYf2mNN17Nmw9Sf37/Cgsr7C3cWyKA7d2hYD6sIqPpzxvzxsgz96m4bs6RK
BOQat/0tb5LheSOWkSMgvz4BvkwZah9beubZzAgYceeLu+6PDMo1bcHd3RFQ
UxPUaEqyDFl09dXuRcB0g/FdaJwM5WtUfFEzOgJaDi1Mqv9ThvWU/QJsI2FM
esGS61EyZHZ91PporUh4NDJw8bgvMqxz9LJt1j8SZhYGd/cNkyE1YfGhd0si
IeHwzFk9P8qwZ23HqKDjkUC7c+asdzLEVpQWLHwVCek2O6MC38jA4VV6JDx4
fKbB8FcyLKv3ZMoO9yiQWhWzkwNlOLnyj2dg2yjo1+DDz7VUZBOX2J2qNjEK
Woyr09YuQIZefANHwWLzdL/Oj2Xo8OvWwjk3ouBAvXoBbR/IUONDvy6vwqOA
3Z10R4bOXokJN5Qo2Liyw4X+t2QID2EF8RuUuVI4/8B1GWYWjFkY3/Wbik9k
6DOi0uq5c75B1u3J+2wvyNBqe7ma2w58A7cybxLgjAwPfWp33BDwDWLL9ij3
4ARdb5etx0YkfwPbwYY6fkdlsDxc/PmA8Tu0T+t5MvuQDJdDsPbhFt/VPCWD
/cqas76P+w5FejuOztkrQ6Hv02Vdtn2H4tEJFZ/4ylBnROqWtXe+w8vyN+ZN
2SXDlKFbH3yJ/g6ttvkPjN4uQ/fbfQj5/ACHMQd6um2V4ev30MJ5dX5AJ2e2
AmUwfiwywXbgD1Ff18ng8unJ/adLfwBPS6tk8Flj+h138gcsGsgQvQyybvLd
fW9+gOOBgKsPvWQYn/7S/U/mDyhy4ty+qwtlKGa7Y3Z6yWixvubK0LXpkPfz
O0aDLVsms+j9TSlXyzwzGv6sGuz5ehq9D2Ijw/dHw/0BtKImyxAcYFVn1LNo
oLfTcuFEep6lR519mBoNDP40Hi/DpDU9qdL8hK11WAWk911uue+5dj/Fehwj
Q+XqK7ben/4TFj85XrLeKPq8pnMcfu/5CaO/1otwHiGD/vjVNWse/wSf6IFn
ng+V4U1KquVQwk/I7T5sffPBMizXXup83T4Gik/rlb19gAxP76yQP5aMAdo9
i871lcV+rxcDbcZuctjTS4a5b7v0D+sQA94u+0sv7i5D2S0z+4cOjRHrtYsM
ozM/V3KeFSP4VUcZNo4f9b3zmhgoMf9rkax2Mnxk2/1ADBB77JQBMjTYu4Ig
SgyUH/93ePu2MlSwOv328IsY2LNh3fBPrWVYXKvHgn2RMeDXuU3H061kWDHf
J/deegzovz84fL6lDJM7Tp2dYfcL7rDy1EKGop8z6lwp9QvGnfzSOL25DNPq
NvP4Xf8XfLl6zDe6mQw7mlRa873TL3CNP7H2YFN6Pqf+2uwc/guemN7t1jSR
4bx2zlL32b+gEf9Phkt1Fu78uuYXFHxeklK1gQyvb+Y6/TrwCxbUuFZTqStD
+78Ve/a79gtSlsdN/1ib3n/vqrPcAn+BfzmWOGQ4tuRDcWPUL8iYKd8qV0OG
9HKOoRUy6HoGp9V7WE2GeQ3nXi5vHwsRx4YVOVFVVvNzLJw0N0i8VkWGsY0C
7CIbxsK6m+vKO1Cs2RZ21qdbrMBblenzP7idXesZK/YfxX9HrXmSsyiWgW/r
tEoybE9qdCJ6aywU7zW52hqKP99r9nTsqViYGexGO0qGAga/7sZCiaunL+ko
fh4duPPIu1goxROoDFelUn/u/YqF+axAlaP379tvoocUCzZtYauxrAzP+o8K
eOsUByyaWZrup9eqdx8qxsGyqF/X35SUYe2ax5sqtIgDli6Hl5DBYcXAFyv6
xMHK1VvcmnjI0LjWtw2PJsbBsRoLRo93l8Fp/uqmLbzjYNL05btCistw58GR
IkbfOMh9knl7MsXTM57UdL8UB5FjFvUpS/HWySEh8CwO1haZFFXgJsMQL+ux
5yPi4MSmG79SKPa4rQxamR6n8i66noe3Fn2zi4eTJ33oCmSIShhR7kupeKif
m32uIsWn0uokeDeIh2LXuvxaWkyG0jVGVP7TOR76vFvaYE9RGd636h26a2Q8
9CuWXNSrCOW3+tU/TZkXD1u7/7Zt7CpDzwsxGas3xsOrlWm5f11k8KtVp1Lu
sXgV38nQw5oxr3iwTdpa/Y8zrV9Dtzp73sXD4m/rEltS/M4r6MmEuHioeK5j
kcdOMgRtWVdhnhwPe1fPqjeV4mKpAy3HXBPgdxIBUYpXXDzezK1Ggsh3FA+8
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
/btiPEifuZbsJPH7f8aaX/8=
        "]]}}}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\:0412\:0440\:0435\:043c\:044f, \:043c\:0438\:043d\"", 
     TraditionalForm], 
    FormBox[
    "\"\:041f\:0440\:0438\:0437\:0430\:0431\:043e\:0439\:043d\:043e\:0435 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:0435, \:041c\:041f\:0430\"", 
     TraditionalForm]},
  AxesOrigin->{0, 1.340875},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5.}, {1.39903, 2.56213}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7607864997662287`*^9, 3.7607869467132072`*^9, 3.760788424563975*^9, 
   3.760849122695242*^9, {3.7608513584256754`*^9, 3.7608513817412577`*^9}, 
   3.760854401556164*^9},ExpressionUUID->"594b6345-5814-4f2c-ad42-\
082009ab3583"],

Cell[BoxData[
 OverlayBox[{
  TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{0, Small}]], 
         LineBox[{{31.91, 160.}, {31.91, 10.}, {29.38, 10.}, {29.38, -10.}, {
          30.389999999999997`, -10.}, {30.389999999999997`, -20.}, {
          32.22, -20.}, {32.22, -25.}, {28.37, -25.}, {28.37, -70.}, {
          28.669999999999998`, -70.}, {
          28.669999999999998`, -162.9}}]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {28.309843750000002`, 0}, 
      PlotRange -> {{28.37, 32.22}, {-162.9, 160}}, PlotRangeClipping -> True,
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> Full, 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {28.309843750000002`, 0}, AxesStyle -> GrayLevel[0, 0], 
      DisplayFunction :> Identity, Frame -> {{True, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {Tiny, Medium}, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{28.37, 32.22}, {-162.9, 160}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{
       "\"\:041d\:0430\:043f\:0440\:044f\:0436\:0435\:043d\:0438\:044f\"", 
        "\"\:041f\:043b\:043e\:0441\:043a\:0438\:0439 \
\:043c\:043e\:0434\:0443\:043b\:044c \:042e\:043d\:0433\:0430\"", 
        "\"\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\:0442 \
\:041a\:0430\:0440\:0442\:0435\:0440\:0430\""}, "LineLegend", 
       DisplayFunction -> (FormBox[
         FrameBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"\:041a\:0430\:0440\:0442\:0430 \:0441\:043b\:043e\:0451\
\:0432\"", {FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                  False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], RoundingRadius -> 5, StripOnInput -> False], 
         TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
              "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendFunction", "\[Rule]", 
              RowBox[{"(", 
                RowBox[{
                  FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False], 
                  "&"}], ")"}]}], ",", 
            
            RowBox[{"LegendLabel", "\[Rule]", 
              "\"\:041a\:0430\:0440\:0442\:0430 \
\:0441\:043b\:043e\:0451\:0432\""}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
       True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  GraphicsBox[{{}, {{{}, {}, {
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], Dashing[{Small, Small}], 
        LineBox[{{23.535001583782073`, 160.}, {23.535001583782073`, 10.}, {
         23.535001583782073`, 10.}, {23.535001583782073`, -10.}, {
         23.535001583782073`, -10.}, {23.535001583782073`, -20.}, {
         23.535001583782073`, -20.}, {23.535001583782073`, -25.}, {
         23.535001583782073`, -25.}, {23.535001583782073`, -70.}, {
         23.535001583782073`, -70.}, {
         23.535001583782073`, -162.9}}]}}}}, {}, {}, {{}, {}}, {{}, {}}},
   AspectRatio->Full,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   AxesStyle->GrayLevel[0, 0],
   DisplayFunction->Identity,
   Frame->{{True, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{Tiny, Medium},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 47.070003167564145`}, {-162.9, 160}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}], 
  GraphicsBox[{{}, {{{}, {}, {
       {RGBColor[0.5, 0, 0.5], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], Dashing[{0, Small}], 
        LineBox[{{0., 160.}, {0., 10.}, {0., 10.}, {0., -10.}, {0., -10.}, {
         0., -20.}, {0., -20.}, {0., -25.}, {0., -25.}, {0., -70.}, {
         0., -70.}, {0., -162.9}}]}}}}, {}, {}, {{}, {}}, {{}, {}}},
   AspectRatio->Full,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   AxesStyle->GrayLevel[0, 0],
   DisplayFunction->Identity,
   Frame->{{True, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{Tiny, Medium},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-1., 1.}, {-162.9, 160}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}]}]], "Output",
 CellChangeTimes->{
  3.7607864997662287`*^9, 3.7607869467132072`*^9, 3.760788424563975*^9, 
   3.760849122695242*^9, {3.7608513584256754`*^9, 3.7608513817412577`*^9}, 
   3.7608544016511855`*^9},ExpressionUUID->"8ea717b7-fe45-4512-8bec-\
6a1c461d8e5d"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.011000000000000001`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBWIQ/Zw9JfVVynJ7BjAwcnj4Z/rWONmV9sZgYOCg7yv4
4IveMfuzZ0BAx+GQafmX/TF3ofKaDn/uC4qukn5nP2smCKg6tE6ZH/L7yz+o
eUoOexl+v7gyldkBol/GQVZhxuLj+WwOEPWiDk3FblO+tXFA5XkcWJ73aLzl
5YLy/9hPm6q2dIE0twMDFMTYqu/Nr+GGye/33Xfz2bESGJ/nwJowtT9B/7lg
5h/QCkrMUeSAmSdz4O027rOlURxQ85QOzLnzPkDkBQtUveoBcb6WFMbLTA5Q
/x3gXV2h/JmDEapf58DJDV3mRv3/YOFzYIG56EqDbb9g4XeA/fV/mWenv0LD
y/hAi27Z7zVGL6DhY3ogJvwMR37/Y/v0NBAwP2CeEz3lpsJXqHmWB2YE6mzf
IvUZap71gZkfvP/uWfkXol/S8YB7uYB18AomqPudDhy1qBfmmsjiADbvmdMB
/jnGi7ZsZ4W61/lAwCGf2/uL2CD+2exyoMmy6s+9Z7Dwdz1wva2r8J8aO8S8
BrcD67R+r+OwY4eYl+YO0W/EDjHPx+PAtp2Gtomc7NDw8TywqCo7YfURqHmS
XgcWhPwusUljg7rP+8CEBT8Mn71jhbrP+8DaAxOuro2Duc/nADi9bGGBus/3
wKrtbNu8PjBD3ed3QOFSfjw7HzPUff4HuN8XCd7nhMVPwIEYaa1jP28zQMxf
FnDg28WV2vOf/oOGV+CBq5wZSjk/fkHioyfwwHbXmbxGJ79DwzfowHL73xOV
Nn2BhH9x0IF4lS1PY7o+QuLnWdCBX1X70nbmvIGYFxl8IMV2669XWk+h8Rt8
4HLb4UsH+m9CzHMIOQAAOp19aA==
         
         "]]}}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.01388888888888889], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxdln1MU1cUwCtgW77cyEYMA5PKtJuMbdqGsAbRNx04oSi0TFapfFm7JWvS
zLq5kCUjxvEHIUEz3OxiItFMh6JZxldM1Hfiti5m+Md0ZmncJouhEr8X0Dla
cfDueT059yQEfvTd3zv33Nt7z9K2oGtHisFgGJ77mf/NQvEp+p/v+efCSHxp
bD62J9k+H18Qfx2eCw+xFhZizRdr474BYs0XItZ8DmIRxJov0sp93cSaz02s
+fKItRhv4b5jxJovQKz57BJPNXNfB7E2PotYe3+4ib/PSqz5Brdxn0Is6u/l
Pg+xqG8j94WIRRCLem3lvjxiUQ+PNH9iLeBd7nMSa75oA/f5iUX9tnBfB7Go
H7Go3zvcZyUW9avnPoVY1M/NfR5iUT8X94WIRRCL+tVxXx6xqF8t99mJxXw3
S/PbJM2nRsrfKeVbLeVHLPKpkt6/kfucb3Off4OUX6WUX4WU31tSfuul/NZJ
+RGL/N6U8lOk962R/KslX5k03iHNp1TylUg+u3LT5Ntxy3dcFf+1KX8nvhpu
WtKvCt9K5fWanPHp1yKqeL5YuVCye1r1/omfr1AS13NyT+TfU4V/ufJ57+H6
+PQs+gqVc4b45G8HUkGML1CWWA4e/TloBPF8rrInVNn7qNOMn2cpaTe7X76b
nYGcWPvlAes3ffmZoOftLX/pXPDTTP1zteZ8NBbZpXMWDGyxJlxPM3Q/FLla
A0vNuq8A7o5kXvpoqxl9hXDoj/u1z0+m4fPLYfGivb4FV1IA5wfZJz95ccq8
AMcXw8XvukptPbN6faCvNLd/5ciMXj8w3X5aEPvlIdbLDntf/Tg+YJvE+pSA
t2HMHOy5oeL6QGmgsTdqeYg+BxysKx4demEKfWXJeeP6Jxn3R5Jx/0D4QfWT
s/1PVNxfsGH3s2Xub1PwuXXw0xufPZexPw1wf8Izh+xHhkYX4vzWQ+0F5zV1
pxFwf8MeR3vir5i+XhXwe2fXh7NWk/B1VMLpovhp8xoT4PdHjLeZAL9fMHJm
VXlrugnruRGOtH/QcvJH9OVVQV99fNdqvxHzq4Z9fY9Xxe4txPyq4RTsu3qq
Sc/PCdr+GkrD/GrgxKhxpOpBKua3CSyXg82mRamY32bIvL8z53q6vp614M0v
ivx3zQB4PsGjX/tfOTwxi/Wqg6vp7xcGHs+oeL7BaEU423bxX1wPFxxfG99f
+P20iucjNC8bmvB2/aPi+Qkz7ef9ZwJ3VDxfwVc+PHOraAL3gxuudP5wGXqi
wqfU8/UbJMbzXVpvYrwfkizmS4z3C/f5G7gvSoz3F/cBMd5/3HeMGO9P7usm
FtHIfSFivL+5z+PlvjFiLZRt3DdIjP0F94WJsT/hvg5i7G+k+bfw8QFi7J+4
b5wY+y/ucxNj/8Z9EWIRbdznIMb+kfsGiLH/5D7Ldu7zEGN/y31jxNgfc5/i
g/8B1Bo04Q==
         "]]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{808., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
    TraditionalForm],
  PlotRange->{{-100, 100}, {-81., 18.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7607864997662287`*^9, 3.7607869467132072`*^9, 3.760788424563975*^9, 
   3.760849122695242*^9, {3.7608513584256754`*^9, 3.7608513817412577`*^9}, 
   3.7608544017051973`*^9},ExpressionUUID->"dae88803-574c-4111-a549-\
15949c166ac1"],

Cell[BoxData[
 TemplateBox[{"",FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
          "", Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], StripOnInput -> False, LineIndent -> 0], 
         StripOnInput -> False, FontFamily -> "Arial", Background -> 
         Automatic], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
       InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6297544181379376`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.7450916787049933`", ",", "1.7000000000000002`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8748460968429308`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9901833574099865`", ",", "3.4000000000000004`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.7607864895849547`*^9, 
  3.7607864906261826`*^9}},ExpressionUUID->"a7769b9f-372c-4fea-9038-\
cf2a26ffc08b"],

Cell[BoxData[
 TemplateBox[{"Null",FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          GraphicsBox[{{}, {}, 
            RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
             "], {{
               Rational[-15, 2], 
               Rational[-575, 2]}, {
               Rational[15, 2], 
               Rational[575, 2]}}], {Antialiasing -> False, 
             AbsoluteThickness[0.1], 
             Directive[
              Opacity[0.3], 
              GrayLevel[0]], 
             LineBox[
              NCache[{{
                 Rational[15, 2], 
                 Rational[-575, 2]}, {
                 Rational[-15, 2], 
                 Rational[-575, 2]}, {
                 Rational[-15, 2], 
                 Rational[575, 2]}, {
                 Rational[15, 2], 
                 Rational[575, 2]}, {
                 Rational[15, 2], 
                 Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
               287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
             CapForm[None], {}}, {Antialiasing -> False, 
             StyleBox[
              LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
              Directive[
               AbsoluteThickness[0.2], 
               Opacity[0.3], 
               GrayLevel[0]], StripOnInput -> False], 
             StyleBox[
              StyleBox[{{
                 StyleBox[
                  LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -138.28241914137175`}, 
                    Offset[{4., 0}, {7.5, -138.28241914137175`}]}, {{
                    7.5, -5.644569489257719}, 
                    Offset[{4., 0}, {7.5, -5.644569489257719}]}, {{7.5, 
                    143.57301136937042`}, 
                    Offset[{4., 0}, {7.5, 143.57301136937042`}]}, {{7.5, 
                    276.21086102148456`}, 
                    Offset[{4., 0}, {7.5, 276.21086102148456`}]}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], StripOnInput -> False]}, 
                StyleBox[
                 StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -138.28241914137175`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.7\"", 1.7000000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -5.644569489257719}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 143.57301136937042`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.4\"", 3.4000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 276.21086102148456`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                   Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                 StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
               False], 
              Directive[
               AbsoluteThickness[0.2], 
               Opacity[0.3], 
               GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
           Scaled[0.02], PlotRange -> All, Frame -> True, 
           FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
           Opacity[0], FrameTicksStyle -> Opacity[0], 
           ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> Left,
           AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
          ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
         False], {FontFamily -> "Arial"}, Background -> Automatic, 
        StripOnInput -> False], TraditionalForm]}, "BarLegend", 
     DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Function", "[", 
                RowBox[{"x", ",", 
                  RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
                RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"0.6297544181379376`", ",", "0.9`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.7450916787049933`", ",", "1.7000000000000002`"}],
                   "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.8748460968429308`", ",", "2.6`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.9901833574099865`", ",", "3.4000000000000004`"}],
                   "}"}]}], "}"}]}], ",", 
          RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
          RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
          RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7607846962979064`*^9, 3.760786500171319*^9, 3.7607869469912696`*^9, 
   3.760788424819032*^9, 3.760849122935295*^9, {3.7608513589367857`*^9, 
   3.7608513820603285`*^9}, 
   3.760854401782215*^9},ExpressionUUID->"723e47bb-3c7a-4c07-818b-\
1ebc2cb5024b"],

Cell[CellGroupData[{

Cell["\:0421\:043e\:0437\:0434\:0430\:0451\:043c GIF-\:0430\:043d\:0438\:043c\
\:0430\:0446\:0438\:044e", "Subsubtitle",
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, 
   3.750659590603606*^9, 
   3.750659634100629*^9},ExpressionUUID->"feb92d43-f673-4dd7-9b42-\
b50ab362b68f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"iterationStep", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "plotName", "=", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotDataList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"openingAtCheckStep", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "i", ",", "1", ",", "numberOfCheckSteps", ",", "iterationStep"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotList", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PlotMatrix", "[", 
      RowBox[{
       RowBox[{"plotDataList", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
       "plotName", "<>", 
        "\"\< \:043d\:0430 \:0448\:0430\:0433\:0435 \:043f\:0440\:043e\:0432\
\:0435\:0440\:043a\:0438 \:2116\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "iterationStep"}]}], 
         "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "plotDataList", "]"}], ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"folder", "<>", "\"\</opening.gif\>\""}], ",", "plotList"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.750657229716831*^9, 3.750657323541009*^9}, {
   3.750657442512285*^9, 3.7506577065181427`*^9}, 3.750657806502049*^9, {
   3.750657865720697*^9, 3.7506578660603857`*^9}, {3.750658171413033*^9, 
   3.750658171660262*^9}, 3.750659590604125*^9, 3.7506596341012383`*^9, {
   3.7592248138310814`*^9, 3.7592248170522895`*^9}, {3.7592248487311068`*^9, 
   3.7592248766307635`*^9}, {3.7592249197998433`*^9, 
   3.7592249455084496`*^9}},ExpressionUUID->"b0245563-8792-413f-a4c1-\
ff322b233949"],

Cell[BoxData[
 TemplateBox[{
  "Export","errelem",
   "\"The Export element \\!\\(\\*RowBox[{\\\"\\\\\\\"ImageList\\\\\\\"\\\"}]\
\\) contains a malformed data structure and could not be exported to \
\\!\\(\\*RowBox[{\\\"\\\\\\\"GIF\\\\\\\"\\\"}]\\) format.\"",2,99,2,
   23215630871294489872,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7607801366809754`*^9, 3.7607819378934135`*^9, 3.760784696636993*^9, 
   3.760786500282345*^9, 3.7607869470262766`*^9, 3.7607884248510313`*^9, 
   3.7608491229683037`*^9, {3.7608513590568156`*^9, 3.7608513823183875`*^9}, 
   3.7608544018212233`*^9},ExpressionUUID->"d5fefa77-202b-441c-a917-\
2c230eb78421"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.750659652156084*^9, 3.750666699563397*^9, 3.750666774903749*^9, {
   3.759224797990833*^9, 3.7592248186298594`*^9}, 3.759224850386752*^9, {
   3.7592249324687567`*^9, 3.7592249472268243`*^9}, 3.7607801367149954`*^9, 
   3.760781937914418*^9, 3.760784696658987*^9, 3.7607865003113513`*^9, 
   3.760786947044281*^9, 3.7607884248710346`*^9, 3.760849122990307*^9, {
   3.7608513590728197`*^9, 3.7608513823413925`*^9}, 
   3.7608544018402276`*^9},ExpressionUUID->"5fc1d415-0894-4da3-8caa-\
74015f94858a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:042d\:043a\:0441\:043f\:0435\:0440\:0438\:043c\:0435\:043d\:0442\:0430\
\:043b\:044c\:043d\:0430\:044f \:0441\:0435\:043a\:0446\:0438\:044f!", \
"Subsubtitle",
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.750659590603606*^9, 
   3.750659634101563*^9}},ExpressionUUID->"190e1697-5378-40fd-b7b7-\
68e948097639"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"openingDouble", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", "\[IndentingNewLine]", 
   RowBox[{"i", "<", 
    RowBox[{"Length", "[", "opening", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"openingDouble", ",", 
        RowBox[{"{", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"j", "<", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}]}],
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{
        RowBox[{"openingDouble", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], ",", 
        
        RowBox[{
         RowBox[{"opening", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", 
           RowBox[{"opening", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"openingDouble", ",", 
        RowBox[{"{", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"j", "<", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}]}],
        "\[IndentingNewLine]", "]"}], ";"}], ".", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"openingDouble", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"opening", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
    ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDoubleMatrix", "[", 
  RowBox[{
  "openingDouble", ",", " ", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.750358232133493*^9, 3.750358247083275*^9}, {
   3.750358316158638*^9, 3.750358512340169*^9}, {3.7503585544026327`*^9, 
   3.750358555974053*^9}, {3.750358591934741*^9, 3.750358599614847*^9}, {
   3.750358635248437*^9, 3.750358637785039*^9}, {3.750358703052411*^9, 
   3.7503588070893993`*^9}, {3.75035885757069*^9, 3.75035888174489*^9}, {
   3.750358931136982*^9, 3.7503589382940197`*^9}, {3.750359001423706*^9, 
   3.750359052574259*^9}, {3.75035919521389*^9, 3.7503592947409153`*^9}, {
   3.7503595831699047`*^9, 3.750359627071444*^9}, {3.750359720953223*^9, 
   3.7503598303588943`*^9}, 3.750360044553823*^9, {3.7503602219784393`*^9, 
   3.750360333147932*^9}, 3.750360417313128*^9, {3.7576716605038176`*^9, 
   3.7576716619096375`*^9}, {3.757672101273732*^9, 3.757672128470461*^9}, 
   3.75844198944094*^9},ExpressionUUID->"af6ea415-d276-4505-81d8-\
a9c6f689f1a0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    RasterBox[CompressedData["
1:eJzs3QVw1ue69/tgQYMFKA7FnSCl+I0GLxKgEKBQJEiR4FIkaJHgUpxgwUlw
h2DBEggkBBII8SfJE8UdzjpzZt3sWTfXOTDn3e/aa97vmtnz2XNN55FbrusX
/in9sf+oLoMy2NjYDElnYzPsH//3f////8//0hQiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiL+n2UGm58Wdtma+s0G
vJkw/cyP326xRoNjd7mlfLM3o3f0u2//7U7I0zdb4OXkb7Z06LDBFed9u5Vu
jF2Wscu3GzErsOTT6t+uNbnynD8LfLtT1larGZTx2y2Q8Vyxzm+TvllrmRcb
Tj//7/N7P8/3ft/vXc/v3a/vPQ/fe96+9zx/73353vv4vff9e/vJv7v/ISIi
IiIiIiIiIiIiIiL+pyo9hw1reKR4upamw5z/yhBxMcXwcqE0S5nJps072Ua3
epdsOM19oU2B2aa1LmyfX6eQaYFjY23f708yzBZ2YUmHbqaX13Rr2TiL6YDA
uau3Xks0dEws/XLJQtOAZVkaTe9jmu3O9iFpFU1fPVj9fmwW0ybPA+bVjLUa
RlzIGLvkpunigvk6PTlsGj12zvstHqaBDgFbay02tf1Ub/4sN1Pvl9vdnk00
PT1oRLrnY0y7/5x32tXh3670OtL7Sp9T+l7SOkjrJq2ztC/SPkr7Lp0T6VxJ
51A6t9I5l+6FdI+keyfdU+leS31A6hv8vgciIiIiIiIiIiIiIiIifq9h77c0
c3yT+s1errRs0snwlG+21k/jR9xLTf5mPy73mtbW+dvtMObp23U2325w8vHm
NS8nfbMZFiwfP3i7qeXF9D27/zD1HNy/cpFmpkc8+pQu+CnRcFiOCRnDb5uu
OVs8/+muplPSXB51/9G0kVcv12GnrYZO869stFlomuH+tvw3qpnWqth9nm96
000FXgSuuJhg2Kn5Asf4daY+AcfHPXUxHWBjKZW3janNtiXrCv5omhwZ8vR8
5q/o071198R4w4g+m903hJpWqlqr8rCrptMuTE7ndNr0+eDOrysfMj3+OfPx
o/tMX50fUK/9rm9Xeh3pfaXPKX0vaR2kdZPWWdoXaR+lfZfOiXSupHMonVvp
nEv3QrpH0r2T7ql0r6U+IPUNqc98b7/63n74vf32e/v5986L751H/+75iYiI
iIiIiIiIiIiIiPjvVHqOZjf9gGtQomnzfHGXLoekGE6xWZntdH3TTns2Zkzf
PtnQX/WxzdU3ydA1JKJk9K1Ewwxx86td+cm0asZ8x0Y9sRqGvtpc8d0sU9t+
Rf78tZVpWLNKkcNzm9baeiaLY0qC4cLP7R1K+JnunTN5r5+HqV2sfe2Mk00P
1B3/Pqa5aVv34EtXc5ouvDd45qaQeMN5jRY5JHqYNsq4b6DjGNPQw/YzzjQy
DTxRO/nHPKZ+Z7v1mh8TZ9h2fY9bjmdNe4fUqfNghanT0sA7ytU0qWb50SM6
mg4P6nAltrZpYON11Q6UMD3dMZPL5+ym+5Pa723x3mLYe/njSUNSTEMtIS1e
Rpg2HN4qe/Mw09AmrYLKh3674usI7yt9Tul7SesgrZu0ztK+SPso7bt0TqRz
JZ1D6dxK51y6F9I9ku6ddE+ley31AalvSH1G6ktSH5P6ntQnpb4q9WGpb0t9
XpoL0hyR5g6/74GIiIiIiIiIiIiIiIj/E7QUvFw6vX/KN1ug6dMVGfYnf7Oz
H3nurVTq2z1yomzKb9eTDGttnVp32CVTG9v60aGups5rJnXeG5poeKBk0Var
Rpt+fF7W6eM8q2GHy12uRRU2LXfL/UjBaQmGnTquP1Kwgqml4sic53zjDZt/
9Fz2fJ6pj//wT/6dTQuE5B+1uKSpzbpZy+t+jDMsp+r02hJoGrCu/+XKO0xr
vWj7ZM8UU98zAWv/bmZq6fy7Z6fipk3u+HcIibYYNmxTxD/+jKnfH7tDh80x
fbV6StuJfU3PDqs6N0950yMLHv54z9Y0244yG5MiYg2tQXajyl01TSowL/+s
nV9xZ7bujotNH8d2O5g01vRsj4RyF3833T6022/2v5j6tB8wIm8zU7dpt1tX
rGva9lZYkfO1TYPt0z/0qvbtSq8jva/0OaXvJa2DtG7SOkv7Iu2jtO/SOZHO
lXQOpXMrnXPpXkj3SLp30j2V7rXUB6S+IfUZqS9JfUzqe1KflPqq1Ielvi31
eWkuSHNEmjvSnPreefe98/R75/W/O18gIiIiIiIiIiIiIiLif6/Sc6LgF15T
ahUxbTTcNenWuyTD3LO6DVjxKNHQ+49N0zp1+YqDqy1rc81quOyciv9pjOni
tlUqBv5gOtZy5ewLnwTD2S3zOZ4ebDrh8Yq8tV/GGx74ZUbKz/NMIywBk4eX
MF123dHifijOcL/PpJB1PU2Hef4e9EcG004d17eYecFi2HzOwYsLppuOTbyS
3bWFqc+wFaMa5ja15Hast90Sa1gpJSjx9AnT49nHfXi8yDRHqFu2IX1N11d1
TipUw9Sy8+r5pp9jDFeevPFjUIDp/qHPFqzaburRoubrrNNNc7QdM8Gjt6n9
yzcluirTjeNnnLAUMz3y8p37ifSmLgOqDuuQEG0YvCzYS90zzTEq+dn606Yf
RvSe1H+fqXP2tPQ9Npm2r9yq6JGVph594qq2mW8a2KaIbY55pr7OkbdbuH27
0utI7yt9Tul7SesgrZu0ztK+SPso7bt0TqRzJZ1D6dxK51y6F9I9ku6ddE+l
ey31AalvSH1G6ktSH5P6ntQnpb4q9WGpb0t9XpoL0hyR5o40p6S5Js1BaW5K
c1aay/y+ByIiIiIiIiIiIiIi4v8eHZvPKTlnX8o3e+54vgvO05O/WaePP908
kpz0zQbcytEtdZKp42/3b9a+nWh4pOav1o6OpueOP6s5qajVsOq2Lnkz7kow
HJBj/avf8pi+mjgpvIV3vOHKZ0Uq7PrV9J2fR/cn6UzLDbh1vev2OMOb4Xli
Mrcx9bYe3b4k0GJYOn7Qwkxupi5tH/lcyvQVAxoO9jwda5hj88jWK34zPRui
stXNZzrlSazTuGsxhvvzj9n5y1JTz5z3igX2NU1ymH6ye23TvXXtpi3NaurW
6pcJrcKjDYPz95pz77BplbLdi49fZOry7GK+8N9NPQ7dr3dQmaZ9fLutffsv
FsywIPtiu2h1bnzxHK1GfHFQx3sj8j+OUjZW161DVkZ/cWuwXfS2KOVQOjX3
O69obd126yxZJkWp7duGTB58N1qbPUf0jZiWUep4z2NRZ+KjtSPfpla2lIpS
IxbuytY1Q4y2j3fGtHTvI5WT49A12/PFaGcX6L85W2Skii7o0+lQ5RjtvtBw
2wnnI1XysDPuvevHaDeFW6qM3/2Perjru62OMdpi3t2z2K2JVBFHP5fu1TlG
6+1q0/b13EjVZtfT9A16xmjzzF39Z/kpkcrmTMeARr1itG6D57cqPTFS1RnR
5OPu32K01XqXmJN+jFyXXkd6X+lzSt9LWgdp3aR1lvZF2kdp36VzIp0r6RxK
51Y659K9kO6RdO+keyrda6kPSH1D6jNSX5L6mNT3pD4p9VWpD0t9W+rz0lyQ
5og0d6Q5Jc01aQ5Kc1Oas9Jclub49+aB780b35tn/t35CxERERERERERERER
8f+v0nOQ+j8n/PkhJNnwXLfJr5btSDKMaLZxT4mpiYbOXaJuXUuzGpaLXx1y
op9phhvHelezJhgOm3Hff/Yo0yZ5PC7+HRZvuNJ/2DW/jqZOqu4Kj/txhuV6
Z6pX08l0f4Ms+cumWgzbd7GEXJ9rGpHT0X9kKdN+JT1jul+LNcywKelz1hGm
Ln0SQj9mMH3uvW5y2pYYQ9uN6YZU+cXU1/Hlp7mfow3nPY1fHe5tOqxPhUWd
x5i2vzHY7XIt0zpJ4TNyu3zxYDGHJnGWKOW5LVud91uitbY50qplXhalRuSo
v3vY7Whtn+TdGfq1jVI25R/80PxDtNatZaPeGzJFqXmVwgv4lonR1mlyKCz4
eqSKHuZQcmfHGO2+vic6zp8fqUqfyz0zaHyMtl2MS+OmHSPVut9mx6zfGKMt
9Kz+nh/yRyq7QumDZl+O0Y4I/dD0dGiEyrrH7VA7S4x2dPoL45d4RiiPu3kL
etnGapddje71dnyE8rmzY/jTUrHaftezhK1uF6E6FBkedK5RrNbuQZ+mA0pH
KLeu1uYdnWO/mL5p7bxPw1WTuTcu9poQ+0XX7aeTNoarQsmzKxRaHKs9Unfc
vKM9wtWUwJa+C7bFalfOrXagf8F/1Hed/+PCqVjtyqxXzl6890RFZM/gsdM3
Vtvv8asSufY/UcUOLHsSdz9Wu+dNh4Gtpz9RoTUXZ8oWEasdO7hHamTfJ6pc
4UHlP8XHat0PBSzI1PKJausX97ZaUqy29IbWecc2eKJGTB/m1zc1Vnt6js/6
iBpyXXod6X2lzyl9L2kdpHWT1lnaF2kfpX2Xzol0rqRzKJ1b6ZxL90K6R9K9
k+6pdK+lPiD1DanPSH1J6mNS35P6pNRXpT4s9W2pz0tzQZoj0tyR5pQ016Q5
KM1Nac5Kc1ma49Lcl3KClCukHCLlFn7fAxERERERERERERER/1dZunydP+xO
p36zi89/qht/IPmb3btmbuODn5O+Wefytp8KjjR1iFnqGrE10fB5QIeXlzOY
NvFoN+Kif4KhR7XDcXWamm6vWfTafM94w2yzHx4uWtu0vnXQj49Oxhm6pkw4
OKiRaWhk0U3t9loMnc8lttvoYOqZ8VTGjodjDUservXQvZ1p0t6k37cExRgG
T1q4u9cE04Cj1rsDS5j2vrTYfvPNaMObqU2rnB5l6tI12/CgJv/FmWl9LhaP
Vo7nt20NXf/FNVGL7E7+HaVe5Zg0v1ZstHZJUrsjNStEqX5lG8RNqxGjTWtV
vuzlY5HKs32F1O2jYrS2i5sXWtgjUoW92WJf8GiM9li2ZVGPnkYoy/bOS2sk
xGjLLcy056dtEcrheELx5oVjtSdHbu28oUeESuj9InJL21jt1nF5qubOHaHO
dfncL/3UWO2NzOnD3iwKV8cT81z8sDtW+7jhzbNZM4Wrdy/+iqwUEqu1/3FI
rxnjniiflIpHvdJbvlhrVnTa6zBVKePFbLPLWbSzn58Nn+Aepuo7ND6U6GjR
Oo1qmdSwcpiyGV3JvehQyxcPuPXae+XxP173aN8T8y1frBUZETLosXL+oZVv
4T0W7fNTlQ54ZXys7E/abih+2aL1fZBYbcfxR2rE0QY2XcMs2tNR7T9nGPJI
7Z2zas2aFxZthjHNGjYs9UjNS/rlo1P2OO3w+vZZMj4JVfMKr4roVyxOO9y7
+W9hu0LV9rLxI1tVj9MWWNrqSMUxoWp9w7WRnxrEaWu1/blXhvahyq7qyVIP
28VpQyc9+Hti0VA1rNbTdUu7xGkvD6pSs3OWUHW68I0zs3vFaQO9dviNSw5R
nX68ludU3zht7o17bwZFhKixgW1iEvrHaT3nlnJq9kCuS68jva/0OaXvJa2D
tG7SOkv7Iu2jtO/SOZHOlXQOpXMrnXPpXkj3SLp30j2V7rXUB6S+IfUZqS9J
fUzqe1KflPqq1Ielvi31eWkuSHNEmjvSnJLmmjQHpbkpzVlpLktzXJr7Uk6Q
coWUQ6TcIuWc781L35vHvjfv/bvzKSIiIiIiIiIiIiIi/n8r/Tm/67NPH55P
Nc22IU/1gL+SDS9XfbL/ypNEw02VXm+zqWrqu6TnsVMzrYZ2M4+NepWSYBgd
lFQmUy/TwO1zR/7qFW/oWPFd8Llspq8a3W745+Q4w8dba++8E28xrD+3nlOD
IaZpU/56Gxkba1huxtp5w4eZzhs05+GgyBhDtz+c1j34wzTH0ZC5nWxMh1ea
7Bq2Odqw0pHfnXY2MPWvtuhA2sz/Yj2v9wXORanmY+v0HfUkWlvEqdrTHjWj
1OwC6YpsqRmjbfDb9F/zHI1U3YvsuusxN0b7qfvcq0t+jlT18rQo5nU/RlvR
Uqjr5AsRKqzy2J61SsVqf2oc+PZw+wiV7L687rV/rMc/rdezXfe9F8LV8efF
6tmeidU+LuPZNfn2E+V219K3iY3li4vaRTT+HKbSzizsk62hRevg1zcuol2Y
+ujSMKT0aIs2262241btf6zGeud1/mOXReuZcu3puayP1eKhLvkzBFu0zpf9
Lrya9kg55h79sK9tnLbKnf0TIpJClcvw+tU+OcRp/U53Gp9pRKiqevz0ot/7
xGmnhN3p/SguRB0ISvml9+w47buZtewTx4eod9uX5fLZHae1z/fL3QuZQlTa
2pr+E2/HaR1+GrJ27aqHKjTd22kNn8Zpx77LN69tlYdq8fNdLWLs4rXOZbPU
dAp+oCz37Ow7V4nXtv8r2DfHnw9Urfu7o8q1jNe6uGXqscjhgXLxGHKj3YB4
rV9x3+1Fg4OVp+vFvkumxGtzHDwT0XVZsIpuUvhVwPJ4bfdGh4otbhuspgTU
D/LaFq9duaTj7LQfglUTr+SjZY/Gf/FZncgl0feVd9qmep+uxGvTqpZzynTo
vspQ+O8daXfita8O1c9bbdl9NaBkQJHdwfHa4M1L92eeel+55PNZXyY8Xut/
6UL1Ff3vq2VT1yVWjorXdlpYq9HUnvfV6ZgxDWvFxmsDO+9q69JJrkuvI72v
9Dml7yWtg7Ru0jpL+yLto7Tv0jmRzpV0DqVzK51z6V5I90i6d9I9le611Aek
viH1GakvSX1M6ntSn5T6qtSHpb4t9XlpLkhzRJo70pyS5po0B6W5Kc1ZaS5L
c1ya+1JOkHKFlEOk3CLlHCkXSTlKyl1STpNyHb/vgYiIiIiIiIiIiIj43+er
dSW2Zfsh9ZstfXX3kW3Dk7/ZbG3Gdml6NMmw2F+/N3/vbnp6WeyfTR8mGnaY
USKwdzmroU2WPnMezUkwtB9bpf3k6/GGdSpNrfxnfdPngz74bveIM/T9La1V
lgKmlx/OH1Gwv8Uw96Ghru4PYg1tfe4c3dzYtGTn6ufWHY0xtEnMtbBQA1OH
2+3vTb8VbWjrk2/w7c6mVcPLbm42+YuNalzLW/RmlKrY4c+AsMRobdMcrVrV
Kh6llu2/sjmjY4y2wseHed6uiVTJDVbeL+UVoy1WbvuFdm8jlMvYIZ+WZIzV
WroMmFVx8j/qi+03J/WO1fr9erVs/YRwdXyLl93bY7HaxyWfBud78kTl7lUj
OmduizYg5Y/ugXfClMvuTttb9LBo/WxzFqj5+rHqsDk5pctui7Zw2Z9rZc78
WPXZuM8uLNGitVb6GDyk4SM14uONJNfacdrTmbfVO9A/VNkXWJK947g4re+5
bmF5t4eole52BXIcidM6Oj8498jyUJUcPOfv5clxWo+bY+q1+/mhmldmRnZL
yXjt8BWzwjpseqDqD9x6NaJLvNYpsIhXn8wPVJMxL3ecXhD/xT0l8gT0D1Z2
CSvXXTwarw1p0aLWmcj7amzJW58SouK1nps3Z2j2633lW93OvWjWBO0B14e9
9sYEqQ6/NO34Q/UEbaH8DfOeHhOkXFrszt2qc4LWv2bm25VyBKnk9WVvBIxP
0NarvnTH4s2BqtzV+0vPLk/QLvae3ulm20DltqPBbxW9E76Yt0Ps7NR7qlw2
76H1ridoF0emXnLadU853x/V6TdLgvb5DO+cse3vqbHBE6bt+pSg9Zy64a+s
Ge8p68vfC8wsYNU2Lx56durZu8p5SODUE/+49//0ue/cBSGL7iqXUi+Gn2hg
1fqvLX0qpP1dVdVlc0JqK6t2sn+Z5g4V7qqS037pvaurVesxP19i1vR31fEf
57cb1seqDVs/uNjFuADl5ht7reMg6xf3/7I7d0CAmrCjc6OGQ6zaTXmzt253
LUCF9jq3LPQPq3Zs0rUOrmfluvQ60vtKn1P6XtI6SOsmrbO0L9I+SvsunRPx
XAnnUDq30jmX7oV0j6R7J91T6V5LfUDqG1KfkfqS1Mekvif1SamvSn1Y6ttS
n5fmgjRHpLkjzSlprklzUJqb0pyV5rI0x6W5L+UEKVdIOUTKLVLOkXKRlKOk
3CXlNCnXSTnwe/Pk9+bVf3e+RkRERERERERERET836H05+QZDjXtkml4iuH2
67MeVHicZHguccuWbb0SDfuMf9g3aa/VsFJkYsyOpATD5k4n/beWNX1ert8h
1z7xht1bd3UccyzOsIlqfaNLVtONA3+ZctzVYri3VPZcm+7GGtpv/NRzc31T
x9jZowP/jjH0Tb63y76QaZUnw66MWBVteLnUBtWj1Rcftfvb432+aLWuzJy3
tS9/sdCNUwscekUpj2UhR1xqxWhz76r3LPZwpLLf4DTWd0eMdsDf6Z2Cs0Sq
530zlBiYI1Zrnzbl7tAREcq/zJGb6cbFatctt2x5tz1cNXl6JLjT49gvVon5
0+6PJ2r9zo/XTzW2aGvlyrzzXvMwFbG4SeqSlRZtv+6Nazq1fKw8PGaXn5tk
0ZYsPn6Ba/1HqtaBQ+MtjeK0Lm+sm9s7hqoptcY8/LwyTrty0J4JNi1ClNu7
0geSI+K+mHvVmzp9Hiq7v++POl0xXhtaf4Z3wKwHKnR9Ou/UcfHasdXfpzps
DVbr83aJrnEuXlvretbuw67fV9EF/bPe/xSv7X5sbZRbhvvK9s9jWbf8nKBN
XhIeVapnkBqxYvxqt3EJ2lOtt6jp2wKVW7OkjLF7E75Yt8HTTp/vKYdZOS+E
P07Quk4OutRv6D1VteKU1b/mt2onz1mu3l64q2yrvFjTublVm/xn6QbZ69xV
BabbbIgabdWem/upWo+9Aar5zUU1R6+3auts7T1kv0OAurxxzrFW563a4U4x
5zsvvKPq76w96vATq9az5JWBd6/dVv3KT2x0P0Oi1sf+p6U2Cf7Kfmr5AlGl
E7XuP9j/eaSCv9p/suT9LI0Ttc/2NUh3a5GfclxxKrCsU6LWeYVn1mJ2fipb
7tg3RUYnan23bK3Uo+ctVWBu7kJj5iVqp0RuHOoUclOVe9eg3vUNidrCpdfu
/qXnTbVy+IEtn/Ylat3HpTbN8uaGql/tUBa/s4laT+vDWz+vvKFWBtZxC76W
qHXPduLTm043lPMPkR9yBiVqLWNP5fXMfEMVnnE3cnxootYl0w/HGkZeV9nq
dL0xNjJR63vGtnWbE9eVR7qJjmUtidomr37qWXLDddVvWadTU+ITtT6biu4u
sViuS68jva/0OaXvJa2DuG7COkv7Iu2jtO/SOZHOlXQOpXMrnXPpXkj3SLp3
0j2V7rXUB6S+IfUZqS9JfUzqe1KflPqq1Ielvi31eWkuSHNEmjvSnJLmmjQH
pbkpzVlpLktzXJr7Uk6QcoWUQ6TcIuUcKRdJOUrKXVJOk3KdlAOl3CjlTCmX
8vseiIiIiIiIiIiIiPg/2hL3Q+x2pnyzHfovqjDSKfmbbVLXr/3wv5IMq57x
9OyWwdS7TqlPD2smGm4PChjZYnOCof3Q+7OsUfGGyf2u5FtT3tQhuNn1nn/G
GS5rtnXpvv0Ww3LVT9d/kt60Up8FnqM6xxpGDH9TyWFfjKHz3mMvJxc0/VCo
m/+x5dGGNs+aFpvS77+Yv1hQ69Qo1dN1vPeV6Gjt5AcdX/eoFKU6rSjnvtMl
Rju/jO+BzC6R6pTn6/UHH8doE+a6//DuaIQK3DamVkSnWO3l7EGHvWwjVL/n
nW1vXIvVRpTNlrxj9xPlNvG30IhGli+ui3Ht4xim2r79I7btVou2dL6zHUsU
faz62B1cOSNrnNb64GWLmdGhqnD2yTmSh8RpjzxZFVr3aoiy/XHz2/I347RJ
G8vaz9/6ULnW9OvdvUS81nvIhoQPWx8op4StZ8rOjNfatijsv2RqsJpyLrxd
zqB47cpr/Yren31fFe6e4Nm/QoL2yMfm2R/OC1I+kw71CRub8MXViZbBOwJV
uS77K9leSNAuzvp+RvKle6rJ1p/t5+ewfrFoT9/BoXdV8xcvu3XtYdXWKV38
U/rXAerjdUuHQuus2qw72xU4WjtAVT2x1zk4yKp9dvRz+Nv0d1T3UQuiW+ZM
1L4bcG1v773+KvhcmR4PWyZq37mXTk3u7ady1C7Xwn1iovbwtcKDj9e8pc6O
bf1p3p5E7Yo2HbIF295UGwvv9noalKjt0i9XVLf0N1ST20sPdk2fpHWrtDU+
w7Nrys2rZoeD5ZO0NtF3HKx5rqkmfdaF5+yYpHULGHzJs6yvWhmaOWz5pCSt
e0TA3VVVrqqxMx9vqLQ+Sdv+dVAPmwFXVOHfWmT86VSS1uXWIMvF3ZfVq/H7
7sUGJ2nrN3yfa9OrS8r2edWbf6YkaUM7JDUrNPSSit5V+2GpzMna/bmvpFS7
f1HZNLzYoWHh5C+unVR1Tf+Lynvz9vG/1kjWRrSq1Pj5Ax/lGP/byFJNk7XO
S3yH1pjso9yyN753sVOy1ubMorzji/gom/re/od6Jn+x9blee29dUMP+yNPF
a3CyNsfrauWvl76gwtImv2/smqzdfax1nRznzivPmJbJaycna2u3PhUR1P68
WmY3vN24qcnaJn1SJ7hXOq8Kdzhypub0ZK1f/7W1tuSX69LrSO8rfU7pe0nr
IK2btM7Svkj7KO27dE6kcyWdQ+ncSudcuhfiPRLunXRPpXst9QGpb0h9RupL
Uh+T+p7UJ6W+KvVhqW9LfV6aC9IckeaONKekuSbNQWluSnNWmsvSHJfmvpQT
pFwh5RApt0g5R8pFUo6ScpeU06RcJ+VAKTdKOVPKpVKO/d48/L15+9/+8wEi
IiIiIiIiIiIi/mco/DlzdKNiTz39kw3dMjet3HFikuER+6LLP1VKNB1f91Lq
71bD5JbZrzZbkmB42aXgg4cH4g1LN06XZXZQnGGg39/vpuUxtdnZ5fbAVhbD
V4f/GrRvVazh2GMRpzbcizF0WV18SeOapr72MwfnWhlt2CRzlYzjfvtiyZfn
3nZ+FqXskyIa9nkZrY3edLDMi1xRqk5Vr/4L/4zRVmv49g9vx0gVuHba+oeZ
YrWX1zcv2GBihMr9+a19o9mx2oD0ea+0nhCujsRMuJzRzqK1dN5w7OnDMOU6
49i5btMtWu+Z4b6f5jxWU2Y2Cir9yqJd+Wer2auKPVKOfgfn/j4oTltlw/OR
j+6EqAkVh1YPvRen3Tj7yujRfz1UbvNi2tyuF//F4V1Kre7yQLnun/NnHs94
rfe70Ytv2QWrRnUqpxuTJUHbps/0D3ssQcrlXuEZdkMTtP7zvWY9uBKo/KNb
RzU4n6Bd17Vsz/ZX76km/avNXvGj9Ysh4ya03nBXOX5eVunmZKu2avoObltX
BKjnu2/vXn7dqm2frUL2Ne3vqO2/jhn+uUCitsqzzuMzTPBXYxs9LVi8X6K2
/dIew9pduKUC5+WMeLEzUZvjwe4LzYreVGP3rTveLTVR2/79oJMfB1xXbrZv
1vWvnKS1Cak+0Pu9ryq5w27PhNFJ2iblD2at++tVZTtzeqneu5K0oW+z1Hhg
f0UNmJ96oH9kkna/f/8krxOXlHPp2QvdcyVrLZWTfY5uu6g2le03u1aLZG3X
4hcSb7r4qGl+F2pvHpWsrTAs/V+rr5xXvnlaJNbZmKw9WunOm+EHzqqxy7Mv
PX8pWbu22vh2ecJPK6d+g34KS0jWFpyqZmzNeko5Wg9mTcuaovXO6L/owvwT
yqdS0IcCNVK0Np/tyiUdPqaSHzdwsmmfoo3fUaPQh1FHlfOwPKfGDkvRBmSo
7rQy/RE1Im6ld9ZZKdr4cnlOLYo7pHzUnBMVN6VobTL4D8q+zVs5jvmp5uhD
Kdp+bT62HdDHS7W9YzkfciNFW3J578Jr7A+odw497y4MT9F6DNne90O2fep0
o1sX3ialaD3qPMu45voedWRNI/9s71K0DuH1Ln1YslsdSPUKLZI5VRvw18wZ
A7rtUm3r3pnc0S5VW/LUilXuPp7q3LmfS4fnT9V2quN7ON/zncr171vTSxdM
1br5JxTdf3ancvZ5+vhT4VStx+tubYpMkuvS60jvK31O6XtJ6yCtm7TO0r5I
+yjtu3ROpHMlnUPp3ErnXLoX0j2S7p10T6V7LfUBqW9IfUbqS1Ifk/qe2CeF
vir1YalvS31emgvSHJHmjjSnpLkmzUFpbkpzVprL0hyX5r6UE6RcIeUQKbdI
OUfKRVKOknKXlNOkXCflQCk3SjlTyqVSjpVyr5STpVzN73sgIiIiIiIiIiIi
4n/Vc3dPF6+myd/smvGT56VvmWRo027TWa9xiYYFTg0qtmuJ1fToq+LdKicY
rv+zy+Qd3eMNu/9Ydljw9DjDKQ0+xr09bjFcM95nl9flWMPetjbbntmYLnxy
enxInRjDI9bpXS8sjTYM2bF4QJ45Xzw1f5819lSUsqsRteBU0RjtiONVDiUE
RSqbwjf8Bl2K+WLPe+0HP45Qlnv7K4a1i9V6Xp7atHbOCNXhXcEl/kmx2sJ5
jnX7u94T9XHyqn6/jrBos61o9uTticcqoPbL9Q3fWLTLfi9Zve0Pj9THjNbX
f0yM02Z72rTg2XUh6shql9lP38RpLY39xlfO/1AlDxlrn8s1Xlv/6s6r97yC
1RHXoe3mp8ZrLQcuFxtc475q9DB/gQ89ErRtJp4/l/1loJpwcZ/f4BsJ2k1n
Pqy7vv2e6r5334ej9a3ajzYfs0Z2vKs8o1aVq7XTqrXr0dTdJXeACp14sMyV
TIlai0NC6cFh/irgSnaP64MStSUHnFLtN91Sj5d+eG53PlF7zyNf6/2LbqiV
WcaNPVUoSevu16rdrkHX1MJpdn9VGJOk9c3pdT+H01XV5Ei5vNGXk7Rufj+s
PDDksnr+anTSvhzJ2vZ1uo5/c+SiWl+o/vZyPZK1fn6OPR2eXFA3n1xIeLY5
Weu+JF32Te5nVaUKYd43YpK1uYtvO7bI8ZQqmTHk9byyKVq324G/7290XNVJ
zBs/b2CK1vVt0RIH2hxRnba5Frq4IUXbZODJ288Oe6vgDuNueTxJ0UYcKZic
VHKfKt1s1azBeVO13n6FLrVz9FQfd7afENEyVdvJNSD+xZitaoTX2gVRo1K1
HkX61pqXaYNKa+7VLO+mVK1N89IzVrqvUBkG7O+y+Eqq1ueJ82ebdvNU4Zlr
3zdLStXaODfeMG/DCN2HTn7oWeBF8j//vvt//i9N1d2aeLbKJbOeu9fCsFbr
zXrDJwOWtxht1gdeubP9Y2eznnaj1ZJSVc16SbcHZ8J+MOuPb73N3uttilFv
vaLig0zRZr1riZih0+9+5Z8vu3bVzstmveCHOjdvHDXrFSpEdJ22/yuvv9ny
McdWs96iwrFsCzeZ9aIrbudpsO7b69LrSO8rfU7pe0nrIK6bsM7Svkj7KO27
dE6kcyWdQ+nc/us5l+6FdI+keyfdU+leS31A6htSn5H6ktTHpL4n9Umpr0p9
WOrbUp+X5oI0R6S5I80paa5Jc1Cam9KcleayOMeFuS/lBDFXCDlEyi1SzpFy
kZSjpNwl5TQp10k5UMqNUs6UcqmUY6XcK+VkKVdLOfx78/w/+xIiIiIiIiIi
IiIi/mcr/Tlw26FhpQNyJBr6ZP9YI30Oq+G03QeLL8iQYLhwz4WmPXLFG66/
8aLWs1xxhvXjOjqeq2Qx7FR937A9bWINI8qmLVo2PMbQo+qMPJM9ow0rLpxV
otD4L150ONvJOSBK2doW/zCoWoz21at7mQafjlSOa6eXOhgco11TpJnfu3MR
akGl8NavpsdqB7j1L1tsdrgqV6f2znRlLFr3PgNyv18Zpmp9vns/0wWL1iX9
wukplx4pm5mhbfw6xH1xmmupDQVCVbFhVUJzRcdp916cMjqg+0NVrPPT6wWG
xWv35qiy88zFYDWl8qOIxe/itSunjezTPfd95bq/UYNykxO03u8cf1m8KlAV
2FVz74QPCdpz2Yak25jtnppS/F6/EVOt2pU7FoSdWBigIo6utlR7atX6XJq2
1tLjtmrSc9GZT70TtW7xZ9ZnvndLpQ28ub/dnURtv21Nn9crc0N57vn5+IWf
k7SFbQ+fnnnIV+UY8nNQ4o4k7eGlR2wnl7qiQn+r4v9LxmStxfelQ3nLReXZ
7UffQwOStbU/jDq+1+mCcsp548ez55K1BbuuHFatyBlVdWH5scPyp2jj55Zd
n/7zcdX20sSp0/5I0S6L6V+p+KvDynlk0qRN51O0Hrvu72n440EVfaf3ktf5
UrXes9rvupnFU62x3z3Ep0+q1sdpar+kPzarWhO7HD29M1Xbz3OBw6ekZWrx
5yVplaypWrfuPqtu9XXV99JjxIrTfW6az4vXtl6yJOP4r9RbHnXYWMGseyRO
LzrsyVeem4f5Txm5+SvPzZs19ZvRy6xnGX30wOyyZr3uoNX50z1NNuo96lY+
U/W8WXftX/SHMgvM+rI962ps62fW176sMGpaDbPu1mD7xkU5vvL6rRZ1sk9I
MupT8zdpY7ls1jd2yZx36DazfjSwQMK7v8z69SUn69kPN+tNIi/nOdTDrO9f
WMmjYHOzvvamawvfWmZ91ZoVL13Kf+Wfr9NvbPmiZt27wsQ5XfN/5Z/PurXV
hlxmfVLmVa3KZv32uvQ64vsKn1P8XsI6SOsmrbO0L9I+SvsunRPpXEnnUDq3
0jmX7oV0j6R7J91T6V5LfUDqG1KfkfrSv/Yxqe9JfVLqq1Iflvq21OeluSDN
EWnuSHNKmmvSHJTmpjRnpbkszXFp7ks5QcoVUg6RcouUc6RcJOUoKXdJOU3K
dVIOlHKjlDOlXCrlWCn3SjlZytVSDpdyO7/vgYiIiIiIiIiIiPgf5tTyzfe8
Tvpm7Qc51qvmm2gYkXnnmXOzEwxLd94/fc6MeMOA32f9VnBcnOGUwE5xpd0t
hiXHzd3u7BZraDs5qFHZNTGGwytMnr7kTLShS68JMS8HfNEy4ZeKuaxRanvt
y0ub/RSjzV6jV4Wi3pHqyOEif3jExmifj+3ed+muCOXyh02XNltjtX7nPmUt
UzRcOX367XmtdhatbabosgOLh6k60yf82PSlRdt77sYNDUs+Up4R+Y7NXhKn
zfHbxYhxXUNUv9It36lq8dqI1Q55mox/oCyNS9y/czVe26H5NrdlB++rxR9d
nZ51T9D2zHwgU8X3gapkyIAiZZ4kaD3GBR1YOeieyjCsYhev8Vbtq4uzsz7b
HKCaP6ga3uKZVTv8RdKV/l1uK7dan1oPHpeotbmVre2qlrfUsvLDRnknJGo9
8s4eEDb3uira36dIu8FJ2i5HpvVstOqq6hD98Yj1QZK29v4c12ekXVLP+/++
tkWrZG37gydGDOzqo4L7vl/oty9Z+2Lmz1OHPjujnLsFL99jn6IN+Py8ol2+
E8q6oVxo6fEp2tyHHHw7zzqsuv9+MPvMyBRtRLhnnOXRXuXmNat4mUapWhv3
C6U3tdim2m7JNCB8eaq2SalnI4t5rlKFezu2sbOkam2S62fPOmGsvk8no93v
Fz5qPse8snFYuQJf+XsAXtTvtjN7ovmcdFkxu4b2y7/y9w90f3OkecOv/B7F
rx6P4lO+8pz3TdY6WTeY9fi825q16GrW004Or5Y3m1nfsehjhfE3zefXFbaU
jys026xH/Hqn1LS2Zj3misVjYA6z3v5Qw8mvAxON+vA594qX2WrWHa6uGXBo
sllvsindwRkdzPr1x5cybapo1ncrW9eUDGb9Te+5A5ZFWM33PZzB8e0Vsx6f
a3m2X/eb9Xw2Rw6tXW3WvTdvPDN1llnPfbZ8o6dDzfr+aYWfPHQ26x6zb2ex
6WDWXYO7bOnV3KxP6vlrxMO6Zn34quulxtQ06/3S3X62r/q316XXkd5X+pzS
95LWQVo3aZ2lfZH2Udp36ZxI50o6h9K5lc65dC+keyTdO+meSvda6gNS35D6
jNSXpD4m9T2pT0p9VerD/9q3pT4vzQVpjkhzR5pT0lyT5qA0N6U5K81laY5L
c1/KCVKukHKIlFuknCPlIilHSblLymlSrpNyoJQbpZwp5VIpx0q5V8rJUq6W
criU26Wc/70/L/zzfiEiIiIiIiIiIiLif7PCn9Omzd4UEDDeatg97y8zh9RO
MAx+EFL4UHKc4cphmS4MiLKYvr7U9I87sYYep0r93upOjGHDLfnD+sZEG1aN
XzE2seMXz23ffq94lmjldGDwnD3lYrQZpg48lc43Ul3e53fogzVG2+tT+5dz
tkQol7eXIy1esVo/+6PO7dKeqHJPD979MNCida/yfGHWu49V4bpVruwpHKc9
8uufR9J7h6p3jb16bL0Yp7Vv/uxlkTMPVVqfBNsZI+O1DpbmibOOBivHBfsP
5bZL0FYd+M7q/zBILa6wqqPX7gRtz3nN8zzLFKh8ztmo1y2sX/T92Kxwjbtq
QO7j6es+sGr3bzqT6vXitrq8scD1e30StcOdJnXM5X9L1W9abZeTNVHrOcma
L9us68qzy1XnS6OStIVz9wsf/ftV9bzdzhdtU5O07euWbNF44CVVNcP13HX7
J2vjQ7bU6TvoguowO1eLcaHJ2iEPW95xv3RKhRVYE/RLmxTt7uRXWX5ZdlQV
K+M1OfJsirbTplV/P257UDUJW7G/gkOq1qZZg3vVp25X5UKrbPFelar1Kfh3
+ajiq1TyqFzWi69StTb1ve82Pd1Ln/eHhwdMnL7UfN5XcPdP3c8WNuu93Rq/
Oe5pPjcc6Pyo+OvGZr337o11WwSZzyv7bciRwXeUWXevmetFyXxmveCCxGk/
nfjK3z/wx/Z8jfqY9WU9PVv2zGDW5zf726mgt/n8t26f6v2chpr1JOdP1duV
Nutr51gjJkaaz7W72pQsm2fHV56/b/xUusZws77R//H4TxW/8vw9x9TIjy8T
jPqOjQMjhvqa9R6dOxTMuNGs20xxbr5vpFl3C455kL2tWc9Ya9Tw4WXNums1
e5uRWc36lTw2UxbExZuv3+VKuh13zHpta7Saf8ysn3Qt4DBvo1nvfXLHbI9F
Zv1D79txLaaZdY+Yark8R5n1IUty9r414CufJ3LFs3LOZr3u7vCmR7qb9YZd
BnT94PTtdel1pPeVPqf0vaR1kNZNWmdpX6R9lPZdOifSuZLOoXRupXMu3Qvp
Hkn3Trqn0r2W+oDUN6Q+I/UlqY9JfU/qk1Jflfqw1LfFPi/MBWmO/OvckeaU
NNekOSjNTWnOSnNZmuPS3JdygpQrpBwi5RYp50i5SMpRUu6ScpqU66QcKOVG
KWdKuVTKsVLulXKylKulHC7ldinnSz8X8PseiIiIiIiIiIiIiP/vvnq22ZrT
mvrNRq8odvdZZNI328GjW/P2axMNk6ff7OL+Nt7w7Mmd70bExRm69MvRs+xK
i+GA51fWpVsaa1igbp873YfFGL5K6fqwxpJow03N3HPNvfTF/BsPDKnbO0pt
ermwid+SGO3qpdW3+FeMVMnTCrSqNiBWW2/e2Urjg8NVkyoP666vbPninxO7
1ZgWppq7F/z9QopFW6fX8ccXaz1SHbYVLN55S5y2cKHjO3OUClET6lawX90t
Xrux+1++TT4HqxEDNs8rnT5Be+p+meGr3wapI1kcS7bZm6C1xFbdUiZdoLIk
7Zv4oLNV26Heh7WTs91V6yudLLwjxap1sfHqW37IbZXWLFfqyhmJ2n4jdwya
n/6WGnbP7pxDviTtvDwHlj+ad00l/fjM7s3mJO2Y2k77qzteUc71q0XMrZCs
tWy1nn+c46KyWfumaM5dyV+M6LGje+WzyvfMw+snKqVovWs+WN3/8zFljaob
eXRLijZ3n26j5872Vntr2HdILJOqLdmjlm/agh0qYIaD157FqVqbrPHlqruu
1ud9d5s6ud9/MJ+XlXTIn9x3olm/fu5Nc9ck87mb+7Cak21GmXVXu7N/3nz/
lf8+ws+/eVz/y6z7nMzu/jb/V/4ejJilezLv+cq/L+85/vjvDcy6w+3JN6oF
mM83e8xq+dpvrFm/UufTq6LFzbrr/Ot9gq6Zz1vnTyjXet7kr/w9DJvPPKtQ
3KznqP4206MH5nPh689+6t1+pVnvOiZvzjKdv/KcesZPs+xym3W/992KuT80
n48PnzEtve96s+6z8cPh0MFfeS6fv9rafjXNeo7iz5PLZTDr+91WrOgaFGfU
O+VzyLJ5n1m/EvNkafY5Zv26fe9r2wab9QoeyQtftDLrSVULH19V06zvXrRr
yrNCZv3ooZD8B9J/5XN2ulxiearF3Pf6O722RJv1LHUq3bQLNOtrx79+tvCG
We9d4oHyPmfW6zbOeqLlabPeMN79xpIT316XXkd6X+lzSt9LWgdp3aR1lvZF
2kdp36VzIp0r6RxK51Y659K9kO6RdO+keyrda6kPSH1D6jNSX5L6mNT3pD4p
9VWpD0t9W+rz0lyQ5og0d6Q5Jc01aQ7+69yU5qw0l6U5Ls19KSdIuULKIVJu
kXKOlIukHCXlLimnSblOyoFSbpRyppRLpRwr5V4pJ0u5WsrhUm6Xcr70c4H0
c8T3/jzyvT/v/PP8IyIiIiIiIiIiIv5PV/pzTuc5/UPb3Tfd/oOtdUtwkqHV
pmjqu7ZWQ/vR1dL6xsUbDtjx2jJkZpyhx2lVM6ezxdC5XkDVYSVjDbv7zR/p
WDTGMOv6EZOLNInWPl376EZwiWg1ue0F93OlYrRtckfuj74VqSoGT/dKyBKr
vXj+4qStYyKUU9XcmbM9idXaTrpjjRz0RD33v6oK7Ldoy6052OTc+0fqeb7G
+TONjNOWu9jSJ+1YiCpZYkTE31XjtR7bTv5Wd+ID1WfQo4CXCfHahDsjFhdv
dl85VGmzKG1dgtb1zzK/VasZqMaez1LkQ3ur1vNK7MHshe6qtPPTpw59adX2
m5c5/1/qtnIL6rzh49JErU2m/L1zetxUlnIjryRXSdKuL/DHoBHPfJXvS48T
T68kaZ0b1T/crf9lZTk/aEHbbsna9fM2XWti46PW3LUJOBaWrH1R5ZWasuGU
8p7lU6Tj4BStT/jbw20rHFHT5hSb4Z2Sou20qkH+cVv2KJdz3W5dck3V+kxN
Cp/8aL2qdG944py4VK3N7/1Hduw9Rp/fuk0nLL82y3w+1bB+dI6YFPN5VvvH
L+7W6WPW09psWlsj8iv//nWHlodDnM16w+qfG62MMp/TxXueLPqur1m/fn/4
wG6x5nPAgKtTc/mPMetlAsr617cz6wPnz33dYLv5XDKijtOLzU3NeqcJOX/s
8vgrz0+Pb6u6eoFZL1jnUfCZama9bpl6F0dEmM9tm/h0KHhksVkPKpL9foNm
Zr1Ts9YNNjw1nztHXCyTPMbLrLuWqds/80iz3mTOUp9mP5v1D8s3LcrzwXwu
3zrh4LH9177y+wC21VwurjLrA2f/4LWq/1d+r2BYup2n65v1grVKjK76g1k/
GT239OnkWKN+5aFr5M17Zn13xRuT0nuZ9X6VC//ttcas5x78sVr0VLNeoU6Q
fdBgs96k1LifsnQx6502NX/p0uwr7/u+zaRZtcz6i2K/DDxbyawvs/UJHlXa
rA9pdmZh6xJmvUWLMlfXF/32uvQ60vtKn1P6XtI6SOsmrbO0L9I+SvsunRPp
XEnnUDq30jmX7oV0j6R7J91T6V5LfUDqG1KfkfqS1Mekvif1SamvSn1Y6ttS
n5fmgjRHpLkjzSlprklzUJqb0pz917kszXFp7ks5QcoVUg6RcouYc4RcJOUo
KXdJOU3KdVIOlHKjlDOlXCrlWCn3SjlZytVSDpdyu5TzpZ8LpJ8jpJ87pJ9T
pJ9r+H0PRERERERERERE/E+3UpVxbyISkgyt3r3zLHli+mrpxAmZ/ko0XNao
eabGEfGmHX5o6XQ0ztB71JoHzj9bDLPNCrrZoESsYffmRZ9tTo02vPzrXw9O
9f1irw9HGw5Ni1LzEvr95dQvRnt8a8rRWaMi1diPJ/f/WS9WGzjbOtW3YoRK
LnzpY8tKFm19r1O21WaGqRHV/Re2fWrRnh69tm/JKo+U0760exGX4rS2n6r+
1efEQ2XXtr1D3rnx2tAfi4y64RqsplVPyFa9dYJ2wegW4WPKBynP4TP8frCx
au1Oz1x/8vNddWBAr9NPzli1z/Y82npt7R31zuvswpJ9E7XlIlZeaHj1lipd
6aqNY44kbZUMv7/vdfyacve5uqLwniTt4al9lvbLekX5d6zs69I6WVv7xw/O
f3fwUQEVXYu7BSdrm2Q7v+LT01Mq+EzPzBWGp2jTatzaVSLlsJrt7z21+/sU
rfeZ4R1jRu1Wm6a7Xk+dk6r1aBY/LJv93/rc7ShXdfLrN+bvafRo0HXsXx2+
8t9DudBinO8J87mSTRm/IT8X+crfh/+u7+cZS7/y70H3D2/b/rP5/GtV5Zah
GSeY9TcXQkt/TDSfr/kFdcr7ZpRZ925m2bvj3Vf+OyNl9l9xWGzWh8d0aPg4
p1k/6Zq7/KjdX/n7Lu7l2+DZxKznXmhfemmU+RxzztKGwWemf+W/Z1F8mf2d
YmY9ptrxpJYXzOeq45qUCv55jFlfVs3NJ6G0Wffp5tJ1T4j5/Ld9lhnX3i8y
67t3NB/zc4evPC/2vzKipZ1Zd6+e6HQsyHzeXfe25Zeg1V95zn5synOPvmbd
Y0BcYKaKZn34L5N+HvYhxjyf7ueie94z69dHPgjf5W3W3bqej+/jbtbfPHXw
6uRq1tNW3Qt50cmsO/Sy3vqrtll/EV/gdfkSZv1x+hflu9mZ9Sxl8nkc/hBt
vv64Q/cvpnylPmDn/KqPzfr8pWea+90z60UPX6hue9Osu0533jLwmllvvcm9
wLvL316XXkd6X+lzSt9LWgdp3aR1lvZF2kdp36VzIp0r6RxK51Y659K9kO6R
dO+keyrda6kPSH1D6jNSX5L6mNT3pD4p9VWpD0t9W+rz0lyQ5og0d6Q5Jc01
aQ5Kc1Oas9Jclua4NPf/NSdIuULKIVJukXKOlIukHCXlLimnSblOyoFSbpRy
ppRLpRwr5V4pJ0u5WsrhUm6Xcr70c4H0c4T0c4f0c4r0c430c5A+z4iIiIiI
iIiIiIj/w5X+nPPArF5NRvayGoYGr6tSJT7e0Jr3x88ZRsUZdv/8e9TjqhbD
WnsS1x2MijG0Hvzl+OfAaMO3Nq3W7N/6xQXTVxeftjhKfdzon7/o8hjt3FXt
wruVi1Qe5bJv6jQrVlvS/UmFnJPDldvSAZbTAyxf7Hy//Z2gxyqt59+VXjeP
0zo8q+dWuHaocv752u22ueO1z3vuXVnizgNVMkvRjTkt8VqPuH2VgzrcV8/D
ukSlbUvQlnPJ3LPqD4FqSs43I3xGWbUrg344ft47QPnnbFm2Q9lEbc3/i713
j6qpbf++I5IUkU0SoiSEKCHljEgIEdrYRUnaEJFUiJQkpEJboqRSRNpIUlLS
RlvthNVu1dpHSRLe9Xvu3zXPxnV2jOu+xzvG8zzv75398xnjOxprM+d5Hsf3
mN+51rq/V2GBQgmyHK70fF4lh2LCm5kRbZJvkbdTfP6g81yK9esGmX5re42s
p7VdG6fMoxi6+HrQ6Uk5aG6hmvyMHB7Fdq/UxJVfM9ANiwUPf+ziU+xwefR+
fXAy0ho+HEn94FOMnD5zwquYWMQoG3Kb4yOgKFItO7/C+Aa1jhhJNk4VLWRe
89Quzl9lHql7LDreFus9wO+k1Bo/n8Mj8yONma/3r9hC6gxTu0qZdDKHUphg
YOSsTOpLFgTE/LlE5lzBlRLJGdKk3qKopTr82gC/C/DukcNjCVI/9rPheEDQ
AJ8Hv2TW93g6qStNqj5XnkTmg4ZvnUqG6JG66R7z35tLyVzS4tBT7SGHB/gc
vXLya640qQevaBrZ+YTMScvaufu5JqRuk53/3kSS1GurVzXFpA/w/QaNe5cq
HiZ11dTfS50VSP38Yb9p3xhk7tzCv3CVd5fUl0yQ76u2I/VjPOv3xmqkXrz8
p7LTkAFy9j3TVucXkzl+cfjPZTejST1SbQFrgSupi0QvGVe2ldR3agw//Xge
qWeG/+S5SpG6QrvStEG8JkJ3ac48+OI9qWdvOXnP+zmpx9pvr06OI3V/b/Vh
jTdJPWGuauezC6RenLbj7iYXUldoObKLf4jUHdfJBchYkXrBD87reftIXbZ5
05Gy3f++Dj0O9LzQ64TeF3QcoOMGHWfovEDnETrv0DqB1hW0DqF1C61zcF8A
+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
c4eDVX1kDtXjfEsh3prU29sadld9JHMu3cHr5Q22krpNiliAfxGZo8VKcea+
NiV1xyeHPfsG+Hy3e86YS4/sSH1sfu/1iE4yH3w9tJ6ZeJXUJVvunp+vQuqM
8UM+yxYN8HsNbxMtlQ+Ruu6qjbO6RpL6U7nevX1pZH6a9OrZMZVDpG7q/mtb
4CSsF7Y/Shr8WYB68tKeeSfinFfCc2LYihgBCn7zUjR6ar/vH9i96bnzcQHy
t9Ovir2Hc2R/w+eJF/UEyAZtXVirgvUSneM1G2UFyEPunlxeJs6vxbqPd8vx
+Ei6Tdkm1wjr+ZaRbvWFfOT4Q3rR9J84T4/Qf/p9yl0+8klaabfhOtabj1k/
0DjHR0uUPBI8V2O9Q65kc8ZePjLN9Sje3IXvE5BY9qvliB4fBcuczAyP7Xf/
gIntyE2z+Ei3fnj06gNY15dru6Y6Vrj/c3LsDy/Euvd03j59EWG9qDb6/kgE
64k5NXKxPGGdsZqkp1RRT+mhvhPTCmt5yKP+5dveCKxXSnj2GpTwkHTYmqOa
Z7EuMVd3vs4LHgp2VOiWNcO68vUpEYOf8hDjWLGP2Eqspw5RbWuK46GCEfwV
aSpYFwlm/o6MFtYRd91TAZOwPleyrGzObR5ynCLuy5Pq9zrHTXMrjxD+f2pF
8iWJfo9jqzrSOlyoDz+s+Efsn3XocaDnhV4n9L6g4wAdN+g4Q+cFOo/QeYfW
CbSuoHUIrVtonUP7AtpH0L6D9im0r6E6ANUNqM7897sm6tJfOlTHoLoH1Umo
rkJ1GKrbUJ2H+gLUR6C+A/UpqK9BfRDqm1Cfhfoy1Mehvg/5BMhXQD4E8i2Q
z4F8EeSjIN8F+bS/+zrIB0K+EfKZkC+FfCzkeyGfDPlqyIdDvh3y+dBcAM0R
0NwBzSnQXAPNQdDcBM1Z0FwGzXH/6Tz41/qhSZMmTZo0adKkSZMmTZo0adKk
SZPm/3lC1/GcNL4z7tnxCIrodh6caMYhaJ3vEXZ6IYugk1jOhNCHbQStNxxa
GzqRSVD04rR5rSktBP0/+AU3ODYTnHtkf1aHTAtFneoDTeObGpGDwvj8mMWt
FHeVfqr2UmUgra7NR+6uYVI0VpRIkJ31Eck5Xe7ZsamNYnKMyXju6Hrk+ntN
5sKV7RQDh6gUHVhag+Z+WR/uvYxF8aSq/Bz7DVVoLjegkjuLTfHksjVeS8+V
oxi135zlozkU5RokXLyDS5BY0UylvmYOxXqd0TMnxBagvvviPtnZXIpjpItL
3d1ykQI6a690gUfRQ+ILa138C+QQkqSvup5Psf1d+iPuyacocF1V3prRAopq
gyceW703BvkWXRx9s0hA0SPB2N7svideH922JhqW5H0dutk5NQGuZF7Q8/60
+OVEMl9IEh/qXPiZzCm4f+T2r5QhdbXI9xEdBmTeERu6y8w1mMxHag2z32yu
JnMWA52ABQzVAT6He8fnipsHmdckcO4uUysf4Pvhv4jNilYb4PdWZF2nnL1B
5keRiCezu4/MoY5duzVtlx2pLzmmsyeheoDfQzmQFTJ9B6kv+bJ8pv57Mkfb
uXERs3rHALmb9sT3aZ/InO7Y3QmBGraknjDp+RqtwaRuVJp1ySSMzA3LPs2P
C5tD6sFeKd3Xisi88tje56GPHUm9qnOM6/4JWK88Ocu3/J0A+ScdqBvh1S8/
vT4kKDBAuF6PjfjqyMc5rILSkGv7jAXIyNzX1tkI69WjUt9ukxeg4JlrXKrz
cc6rvEvvl1wLHzFsVE7qafXLhfednH8kTbi+TzzqDi3s930I+1boynvyUZlz
VGT+GqxfTqm2St4ufJw8WffsWpxf2watuaEzl4/EO598n3gE68Z5KqPviPOR
Ea81PmAc1kPFjc+jJuF+vl5aeCulXy7fdnRRVg4Pqend9tphhfXs/ACm9h0e
YnQc0pWV6ff/ipLnjbyE/282Zd3akjpKj5fcO8/Enodib3/trLuCdYuuw3fj
jXmoo2nCjdmbsV7WyF0ct5KHfDTKRtxXxvrlpifshnk8ZKH5cp3Kt1pKt/w5
P61bgYdcur6/tanA+q/LTV8fyfBQzz7Nz4sfY11rpKHmPHEe8lfMuuAUhPVT
SxtDbvZxUfqoZBG3E/0ef8vcoflfuahnwxdJwW6sMzVcp07ic5Hu+cfv9Iz7
Pa/LXY2V7VzkMu+G571VWNdU39tgxOQicZFO5UKEddFNP08vaOYin9XHXvxc
/M869DjQ80KvE3pf0HGAjht0nKHzAp1H6LxD6wRaV9A6BNctsM6hfQHtI2jf
QfsU2tdQHYDqBlRnoLoE1TGw7v2vP7JO/qVDdRWqw1Ddhuo81BegPgL1HahP
QX0N7INA34T6LNSXoT4O9X3IJ0C+AvIhkG+BfA7kiyAfBfkuyKdBvu7vPhDy
jZDPhHwp5GMh3wv5ZMhXQz4c8u2Qz4fmAmiOgOYOaE6B5hpoDoLmJnDOAuYy
aI6D5j76fg+aNGnSpEmTJk2aNGnSpEmTJk2aNP/vp1yR9rNt9VyCoWNmcVrq
OAS9dc3H+29lE0y9cXLsrOntBHstrtitz2USjNwz3ihEvpWgx6g5oqubmgk6
yV8YI12KabxtUcuBtU3oxsYuaVZjC8UpvtespycyUOUnj7VV0kyK3panFD1L
PqIO9YcpJeJtFNWsvn260VqPFOTUzYZMaKcY+di662tGDcpYf2HURwkWxUp5
23Kbz1XIqdC6T3EYm2JMZJFEELscKeSdOmvOYlPU3Sv1nXHhHfI7JXX5WQmH
4pORjx7HzH2LnBb+kPW5y6VoWK5iW6r2GvFa6mznuPEotq96+6t7aRbSTV7u
OkKHT1EkZNRqZ8UUdMN1RsCyUQKKjLPuhrYBMSjZbY+iXZ6AYnb4gsyK717U
+ZcULbymZUre1+GY2Vw16Th5/b/dffyo7BAyLzBtlGTqviPzhcyhIh5beGRO
ERR92U1xLqn3DY2ewLcl8w6NB8k3hjwi85FwzVnnPvWSOYvL7wL5AoMB7utY
uFn/pj+Z1/Rtk9hl/pXMfRRWpam1ryd10zFrTvo8IfMj2Wmi286MIfXskSF+
4pfIfCpzyMdsxmBSH5JxT/O2xwC/n3I7MIL1hczRxC0GH9jiNsD39quO6A4Y
SurtzwWr9l4nc73a0ujDR+RJXXZa8mJeKpkbFlgE+PzagnWZ/cypm7sEKKnv
ZWlhE84rFTJX3oiPFSCj6pgT8TOw7jRq0sKHBwQoMkbvlLonzj3L9KqVFigK
kE/chIbeGpyfxt9+cXdWKx+pjKof366NdV2zF48nxvORwh4zbd04nM967w95
vO4IH5Wd+vNcaxLWdTevZ+toCf9/febb0Gs4/1W4dnjScUnh/7NvvFaainXp
a4tVFWp5KJbte8govN/3MKiX6mU95CHGH6+4DxpYz9Ws2J91VrhvfS7/3vEa
590Ra1YohezhIXH1qPrfh7DeOX5N9GxtHrJ49jjUdjzWZz98eY49lYds1D/r
F5biXJ7hemPZvEE8pKbeE9R5rt99Ba5bx+xq5SJd9cpEGx2syyUve9lbzEXZ
aNynoyJYT1yvMm1mKhepvWip2PumhtJd1/MfWkRxUVKmccqRYKxHLLSQ23uN
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
Xt9etXKbZXwueT3cZZFCyL1K8vr5TkbeWX45eb09c2Hf2nk95PV5xpXtpiqj
SV2kYmxYjC55nb9P86FOng2ZF5z/0/dgyA0yX9Cw/6Q7uZjMIzIHqXjKjSJ1
8fPF766sJnONWE/jMzOvD/A7LF+5fw63k3mK9EH/XscVpJ40aNS2MYFkXqPy
quTC9x4y3/GIPiB3yoTUgxuP/HTLJfOjpGWrJ2bNw3rJ7EVobZrwfHOGTFm8
DudTzY9XxCsYClC6dnTc5uU4z2o+bp1l08ZH6coiDV4rcf7lHGZdcu4sH8We
9xj0Rg/nZb6JaVeuTOej2gVFVlbbcb7m1LfZvDuPhxS+Fze2HcJ53NwpJyMT
DvOQY9G8a/Nv4vxu9qSR3Vx5HmrXUzxgVIBzQN4i9kPbMi4q816bIjG8330d
T+7syzjHRUk6Qd3l+jhP/Gg1/8VgHS5Sce+u9Q7G+WPZLDFp728c5GMzSqW0
td/n3O9mO2xK5yDd63sD8g2x7vtxQU6mCwfVxvU11STinFRi+2HzDdocJGsy
fl/OeKxHMi2lXg/lIP/sk9Nsr+AcNl5Z+0NiFRvFWoyPfiKD9ZIIwTWDW2zk
IVFjn3IJ57yX19SPUXJiI8aTafPrp2Ld6MvrwD9r2Mhgh/2X38n9vt9A8bDH
R0WhXjcuJ84M65O3T3R4/oeFDExe+m/9U0bpFnP3n8v5yEKOX/ryLOOxni1v
8zgxh4UYa84vW2iF9UgVqT1n4lnIvzXSYflsrI+/cXmYYoDwcfi5Mx7V4xyf
sUsissSDhSzeqysMOY/10JAHc7zs/2s/m9eHTMG6a/quQVv3Cv8/tEosmvmO
0o1rRtVM385CkRqb1B8+xHrZSX+GmwELSe+t2Gdni/Xe61G//ZDw9fMW/MjW
6aerb71noCXURe9p2Sli3dpx1uaFmsLXs7D0+s+RWBcbNklST4OFFBQvaG8a
2u95LXIzv88XPm9L2aNqQQleJ6Nz3naoslCSSV5HMgPrrqM313nMFr4vk+vL
z1dhXSGK5586S/i+5kdX+ZdhPbD1++ptKsLX6VazK/7tP+vQ40DPC71O6H1B
xwE6btBxhs4LdB6h8w6tE2hdQesQWrfQOof2BbSPoH0H7VNoX0N1AKobUJ2B
6hJUx6C6B9VJqK5CdRiq21Cdh/oC1EegvgP1KaivQX0Q6ptQn/3XH9mX/9Kh
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
JmjOguYyaI6D5j5oToTmSmgOheZWaM6F5mL6fg+aNGnSpEmTJk2aNGnSpEmT
Jk2a/zewN8BbZtwaHsnPvaF/bnAJmutKnBokyiHotLpIYuPZdoL6X8vOTRnT
RlDsvYZRqmkrwUKrX2OrfzcTDHQpvpuSj6m4vuSSYFsTktLwedTHa6HIe5zc
MySMgWQKR4cpz2NSzL9TOM/v+Ec0e8cKVamlbRQ9+cvcarfWo6SGXUHbzNsp
dhxkrvzTUY3krq37MHYXi2KyocKhnPZKJGo7a8uj42yK3Tmew7/eKkPdZ+yy
VPdyKGqJuF3sTC9CMnOnHtTazaXo92XVxTuFeaiSMT9g2EoeRcnnjIAKp2xU
v+CP7XxVPsWyuOF9+bwUFBWge+K8hIBiku7X8iDR+8ho/NAvk1oEFEVWzdce
wTmGz7ecdNHNKeT9HozdNk80x5LXpdNNpZvOKJHXsc9/XflohBJ53VthnHTC
82XkdfLst9yzhkYDfM+2RbN85RHyOrzVKMkC7SDyev5O7VC1Tc/I6/+ZvuaD
tnLIvICh4vNhy3RSr2prMF79/7D37lExtu/7cCltKNqQRExKIhSRolzZJZsS
kWQXaSPtkCgipBJtKEklESmKVFIRo5KklFKSYtrPfrJLUbzzWc/vua9Zz+1c
z+f3x/uu9f2+d/8cax1r1j0z1+Y8j+M67u6x/cPv0W+SW12USM4pYgoftcxm
kfOOmvjAYt4CMq/l/Cpzwsk//F9tWradZzs5fznU3JewbAGZb740Skn/MjnH
CdV94C4riXntNslGvXMC5DBXLvE7G+dHWYNR20zVBcjI38197AucN+VkZNOn
3ecj+t3HrexSnE/ZflVT0V3KR407lzzYcwvnWbQRNSdQBw9Za8o8TyoUeV5H
Mmuu52EeUlAsD47OxXlZ2eyXO1wm81DPr8M+J1pwvsZQPdYuWcFF+o+LjOT6
cR532VXcfa0/F4Wekoh4OQvzlotWcxymcpFZysLV+1xw3tce8H2NTzMH5Rey
n0+6ifNBM88l3WYRHJQcrbP4WjvOEwvPRxaWr+KgGr5z7QFTzGvHTteuF9Yt
h4NeH2NO47xS7YJdC/MZG9F9tk4t4+N8077g4+vPp9jIYc1duY9WIr+3kv1N
cF+4vh0Wdr0teyGSqwYePPpsNBsdKp72yMMQ84Hn8sK8u1mIvqfc/lJxDZ6X
+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
ko3S1rWvmjcM827TFxraVbCQjFdCSLNfDR7/tXPcVS6zUGPFiRH5Mpi3bhi1
QdyNhaL0XNOllHB+Gt6hI7NjKQvRfSt1OjfgvDWzPWLWgrEs5LCv4vuUozi3
9W9ZR5s3yEQONklXlT+LPD9B/ZvXwWYmosW80NtgJfK8BR8vmfhKJmIsmzFt
yG+cF1eEdHE9spioJzUwefI+zF+2Z/qwhfVR4dlpixgHzG9t0xS4JTJRzZ6c
2yojMG94d8yFq7eEr3f3ZU3ZgPlbnzRWmqUzkXV++r5FViL3nxQn144rE+7/
Sk31Mx9E8vo7YzcbvWaiZNfA52NV8OcPXxzhavKZieirnw+b+RDzw57eDoqW
ZCH9Z/YXW1Xw+FgbT9JabyAc5wm3c6+L4fF0fv157sllwno05rF81GbMm0qf
DxvvJbyOVlNuhC6el4Y7kxuSzgh5t0cz1QpFfn8naOESzywW8l45Pk3ZGM9v
z/Klm1OfCec9Z1rHRE/MF0362G7AEPINmQXHszD/Q9tzzvvPwuvsUJbQ+oj5
wRYHuRUDLNQ37XNSXi/mgw8c1T8uzkY1k036iyVe/ysPXQd6X+hzQt8LGgdo
3KBxhuYFmkdo3qF1Aq0raB1C6xZa59C+gPYRtO+gfQrta6gOQHUDqjNQXYLq
GFT3oDoJ1VWoDkN1G6rzUF+A+gjUd6A+BfU1qA9CfRPqs1Bfhvo41PchnQDp
ir/+yDrkbx7SLZDOgXQRpKMg3QXpNEjXQToQ0o2QzoR0KaRjId0L6WRIV0M6
HNLtkM7/py+AfATkOyCfAvkayAdBvgnyWZAvg3wc5Psgnwj5SsiHQr4V8rmQ
L4Z8NOS7IZ/+9/xSSCGFFFJIIYUUUkghhRRSSCGFFFJI4X8QOkeqo30a036b
TcIyd9sttUNZJGwQxJ7eZ99NxjKZ99kdnSTsckl6e3hzBwlzbjsajjNvJ3D/
UbeZb1XakV9CnqzNmQ4CX6h47pXQa0XytDlfr9/rJPDdFUdNRc4HdPn6vQ+9
b7sInKbEcRx36D1y/HVilVN3N4ENkgfVa1Y0InkNv+pJA0wC3yXGnLs4vB7F
/9IaOeI7i0ADyXO19Wq1KPN8hod8P5vAz5FfPe5OfYUYWmbPaG0cAumTjjks
yClHqf1hFgvquQSqaT9enShWgtiX5vJ+ZPIIlHtxpNWk8SHyGG11dWkYn0Dm
L1vv8qB7KOVZV8QdZwGBDp8K5yx7kkjMZ4/rreuMQvL9Hs2XNk0xe0Q+B2b8
DhV7UUw+N24+yP0Z/IZ8/hzU+khzbB35vFrBaKWbWD/5fNuuNtxbR4HMy2yv
9s5YSD4nD016J6axk3yubuS+LU8t7A/P93iaseHWQ/K5vXeJ1+H6PvL5f263
vPjVmWR+l55Olro/OUcQm9z/csZTcu7grrZ72eRRZD6t+KqV/BZyrlH+IjKT
XkTOQbKSR767qUzm59Qf5dzwwzmL2i2tgp+tAmSW/t7qWy7OZfaj7z37vQQo
eYJb09VYnOPM6FbSmPKTj3oW3a1t3Y9zn5zlE92yovjIzMBKtmA3zonMbXQj
v6vzkb41t5O9EudK8T42Qbsf8FBgSk1FyEqcQ9nOST4qu46HGk9EPRpjiXOr
QMUt2YrfuYiu22WasRvnXJd3mrzTvsRFob0qE1uP4lws+NsysWXmXFTTeScw
4y7O0RwG9qt593BQT6/GYtV3OHcLnHrppc414b7q/jXgNBrz/tHSIaa2HJTV
c/71pY0iud6d7A/V8hxUnvM4I+QazgGD36fOvFzCRjVaV7/KsHBu+EPc5+j6
E2zUIznJpG4Z5g3f3XnpY8ZGMhPnDmpexbmkh/jQNc6ybBR18uyzY2NE+Kby
avprFlKY5Cu982wNfl9FmV8F11ioRnfUzxoVzBvcmjTl1D7hfrDJLLlkgnPV
Jd+OdZitYSHrimO+S8/iHHZlrvgF2aks5H1KhqVXJfJ8icGNwYnyLBT4+cGV
EUsx7yvr5FEnYCJrvf5JGndFnodwWUdhXZuQV3xpHb9H5HkXLs8TjlczEV2q
c1ioPOZj57/Q/PWSiXq0+Nm9P3Hu7CH/8rZ/ORPRlny3d2KLPH/g7mMUVSvc
z14FC1+Px9dxvLq0waRFeB3tjXr660R+98Rebtnsr8LrFJtu+lkqwk9Wz9gp
y0K0gnNbeDPx9yqcrfVqgh4LJQ/mSsVzRO574UyrjFvNQg6XGgZ+HhW5r8P7
yGLWXuE4z/ZcHWGMx1nMy6HqU4Jw3EbvPd48FM+Lm9T78VtLWUgmSrOc6YZ5
xtRZfg8FLJTF/HFn/VvMi2U9aP+iLKx3RqsKWmfh9RD2ZqeNvTEb2SkfrNkR
ifnLYXs4ezeyUWjT2crEJpHfCVLx2eu6l40C510bd2ocXodNheprE46wEc2m
YmXQPMzn3dlk4BTKRuVzHMQG1/87D10Hel/oc0LfCxoHaNygcYbmBZpHaN6h
dQKtK2gdQusWWufQvoD2EbTvoH0K7WuoDkB1A6ozUF2C6hhU96A6CdVVqA5D
dRuq81BfgPoI1HegPgX1NagPQn0T6rNQX4b6ONT3IZ0A6Yq//sg65G8e0i2Q
zoF0EaSjIN0F6TRI10E6ENKNkM6EdCmkYyHdC+lkSFdDOhzU7YDO/6cvgHwE
5DsgnwL5GsgHQb4J8lmQL4N8HOT7IJ8I+UrIh0K+FfK5kC+GfDTku6n7PSik
kEIKKaSQQgoppJBCCimkkEIK//+JYZJN/TqHBf818l5/aqJlc0lY9SDlS94y
Ngl7t3tc7LjGJGFqza7KFf1dJPziv776RlgnCdkdI9qLpDpIWNZQ8UHtfDuB
DUXV995eb0P6uW8KxrzrIDD/k9nuLYUMlHp7Xvv33k4C5QbtbFXHfUD0ofcf
6oztxshnVJ7KbUJVx3Msf6oxCYz371QZcfctYix+1dClzyLQYd6Fw6s83qC8
Tp9tF6exCWyxutphHPgaTTu77P7raRwCpR5so4/+XYkcUg/EBw7nEkgfu3DH
QOFz5C8+U7a9n0ug9ndOeaZWMSoKOqolU8UjUOe54sokx0KUmfSw5dgtPoHM
yDkJ4kOykL2lQKtWOG9/o9kxDeVL5XHE/JuEXaldmUC+3yOfke3Av0o+B6ZP
HTtokE4+Ny4f5zH75ZM/3O/xNpj3oph8Ls3wGFqq2kM+x9aarCQdJEXmjZyD
X9aYkM/Jc4s3xYVuJ5+r21lOR6fCyefwRqfuXX39hHxu37hqqJi+JJmXmWD/
OWIu+fxfZnCtyalgco5w/fMkuwtV5Nzh0IuqsLZJZP6R2u0WMQ9yrtG44nvD
+dfkHIRuaoaKtMm8Sbku2heJc5aT7qMH9nwRIIvIub3hDJzLfBFbXhRxUoAc
Tsx611GOc5zMtJ28RSMFKOuG72utVJz7MCzclpik8JF+3uk0lTicE/GO+vpf
n8NH1qY6sxNOiuRKluIj7Gt5yGyxhGZrOM6haiZeFJu7h4dCq/2OS57FuZXB
imzxoP+cQz8wlay4jXOurIz3tDf3uChfb/K6849wLtYy9K5NmQMXpUXMfS34
JPJ8jxXahyzluYjxYHvGIg3Mm6V3PU5/wkG0m2ZbdbbjPM6xYbj3zr0c1HdR
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
yYo/zh1G5tM+Hwwf7UfOU8zChnLec/6Qv4TUDDN0IvPeLgcK2LXkfOdrdtYo
STvM2yvWJr9vESAHXXmlG7dwfmTA1BwwCxSup9JNvtfoOG8a9iumEmkIhPPr
c2xiHc6nkq3d0gde8lHUi9M3vw/iPMty/eiiEC8+oq+7b1engnn7E+87Lkzg
I8YzrUe+q3EuFvD1m1NfNQ8ZtXf94obgHE3d1Uja/yQPWUjKK90rx3kcm6Uj
H2LKQ+UWXcmvx2L+y3PtSPtBLmJ8YTjt9MO5Xteh2NNqj7jIbGbfxsUNOAc0
vFyQ/TSYi2RkaxZ2WGNeJfFq0XkrLjKSGtXkWYpzRpsnr4430LjI+kPQUtV1
mHeeev6esoCDAl14C+7V47wyT9Lgxo9KDio/8ztxX6DI80PCcvRPpf0nP6X3
r56M+TodqcG1URyk4BzZV8kU+X2Z+NRc5kEOUj2eXPLsNuatlS9pi3tykEXW
UcaQaJHfMZFJy326g4McRl9fsssH88q313SeduWgLN3lRXanMB9Wae6y0p2D
7H7rDymMwHyvCnv8j1AOcjVeYbG3AfMzqvzlLyZwUI9YztV+Sfz5G1qm9nHq
OSjuliu3Khbz+g6PLm4bwkWHemwPc4eK/J5CWGji8c1c5L15g3RpB+Zb5mY/
GZ3IRWnBptsNg/G8rEy9OV9Pi4fyJ6Yo+Tbh+TV/PemJebCw/w1/25JVjddD
lGB0x5XVfMRsMCyMfILXm3/p/8PevUfF2PYN488uSUjRThGRUERJEkcUkhAR
yia7JCLaSKSyCYlKKZtKilSKVCrZRXuK0lbbqWamqWaaiGQT7/Ws53XOta7v
fNet9Xve3/Pez3te/3zW+q77ruk8j+O7OY8xU950paqDaO6VmXNcSbCe/V+P
mfeExSecYzmBFs/guWrETdtLPx7C/WXr7Ef2H4b71/++3RVpR7jf1Wymfor0
hXlmX7JOWpg9zEtPLjd/PDBTyL83D6idtu32n8exn4P9Xux1Yn8Xdh3+ed2w
64zeF+Q+YvcdWyfYusLWIbZusXWO7QtsH2H7Dtun2L7G8gCWN7A8g+UlLI9h
eQ/Lk1hexfIwlrexPI/VBayOYHUHq1NYXcPqIFY3sTqL1eX//A/W8d9xrO5j
fQLWV2B9CNa3YH0O1hdhfRTWd2F9GtbXYX0g1jdifSbWl2J9LNb3Yn0y1ldj
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
nx9Yf9FqdDV8nq+7cqpUuQqMqw/ur2vjAc8LJBpWPhSvg+cLkp9XVM1cAOPa
4xa/4UTB8wvdze0hxwbB+JWh44PYLvAcJKL40GnnLnieEtR19M0maxjf5/fQ
aFoNPK/RFLm9/tJqGD9b63perRqeB336qOUvZwnjiYpJ/o+Y8FzJ9HPyqruH
YNy1Yefkt6KCuLvTc7Ph8XyiG1VfoDJdcM61ebKFjuwWPrHdXjlYb6/gXMyt
8YudnCSfJCbvHTo/5m/fIzN16M8BrzqIQ/uY70O+Cs7d9HwH3jHx6CD+W87f
1FsgiCd/CgywWtBBMps/tDOvC87v9HoDJpn17yCSX7mb8wcJ4prVVxdlFvCI
603PaGtXwflg6amp6+/78YikadtGnZa/nSd+Syzet4NHzA5lDPF3FcQzleqD
EmfziLXJNKe5ooK4xY/F89xG8UhV9/SgmcmCc8wBbTMmh3ZyiVjBl23eGwXx
6oK8W37VXBLh2jVm9wRBfKr82f05L7iEs2BtkD1TcH4qTjxThj/ikithBlm3
3gjiTy1Cpq1L5JKqDd+4ZemCuF7o257TGVziLzq4Y+U7QdxaffpM6Swu6dzf
9e1+iyAe3fxqb1ojlyjPPXrBRFvwesyH1Gp+6PfXdZBV/VZ9ShA3G5oYXrmA
R4wV0yXGKAmuQ3TKaPv7h3gkwjDVPzVcEH+6wbt3GuOv61P39qt94t/et3Ny
Tf9VcztIsfGb04v9BPfLxchffX5zB1G7a8uX0xWsE4WBcnG8//icenH9Ke8u
1IP12Xl+msrmYLhuGb064SQArn+5h5sGTgyF+67T0v1AaTvcv2JiIkNTR8M8
EzMnKGDlG5ivDGZeOvb5pCDfunioL7xzjk9+mykfkxelGUw8eQ8W/7zKpMwc
4xzSX76R8MZMXX9kfzOlUoVB77LqJjSO/Rzs92Kv81/9Xdh1wK4bdp2x+/LP
+4jdd2ydYOsKW4fYusXWObYvsH2E7Ttsn2L7GssDWN7A8gyWl7A8huU9LE9i
eRXLw1jeRvM8UhewOoLVHaxOYXXtP/+DdfB3HKubWJ3F6jJWx7G6j/UJWF+B
9SFY34L1OVhfhPVRWN+F9WlYX4f1gVjfiPWZWF+K9bFY34v1yVhfjfXh/+zb
sT4fmwuwOQKbO7A5BZtrsDkIm5uwOQuby9A5Dpn7sDkRmyuxORSbW7E5F5uL
sTkam7uxOR2b67HnAL/XDy0tLS0tLS0tLS0tLS0tLS3tv4fYc55e3kDpUJc2
YNHFaaxHXA5QM0AjKXZbCzBu+dArXEk2UHyYhdao+0ygjKrWj29hzcAIhaOv
PjUJlNywtNh/WhOReTl+6NlKJmX9phX85CcMYv59pNujChal6PBXAaVH60ny
Ac/geUlsSnbicf0VrTXkVeumMtvLLZRRi1pP5JD3pLr5JOv+Ng6l41qnVZ3V
FSRw/fyh92e1Ui75urT+4+4yYjDkbsL1T60CmT+71Se8I8Had3caPG6jdMv+
EeUe+pZorXX/mWTfTlkoKjnkjf1rIpLVeO2JMlfg/odbgublEbuAhYOz33Ip
vUNcynaPzyK5pTk2VUd5lClSGdNrZj4jml2bL54a00GZefWKecHDVCI9vztv
9fMOSs0lbQbrJO8RkRsuxzr/47nwbzVfxnKkwqj1IuHb37G2F77fI/Ti5uIN
c2FceVCdctNB+Pw5JXJdOu8FfF4tYfLxcvJAGNfdkE+cTOHzcNOZYwOH+sHn
5/oG1lyHNiHfh868eeXkPBjPdHTI3BIi5PvW8+P3J3+Cz/8dPsecWb0CxtdO
uB3Bvw3PFzxrddr4I2D81Ihfyywd4DlF4dtN1apN8Lyj9thoJ7ulQr6PXqJl
ePEzeJ5SphaUqjYXxp/IyGbuSBfyvTAtxb5WukLOT8dJXZNLh+c+ynm7Dp+e
J+RzQsSuB0gUwnOl+FVNbzrXCfncA8VXe0rahHyefOK489O8YNy/+rr5BQVB
fPOqVwVDC/jENveIa5iL4BwtatlyS+sTfCKn+6SxM0dw7uZ5+w7LW49PMpVU
FqyWEsSLTTyru753ELHHBpGNzoLzux2vc+vbMjuI649O9eVNgvO+jAzZT5e9
O0jxmnlNLmaCuKfxheEHVnQQg9nbbl1+IThPDCze5Ll7XAdxGMLJPLFSEFc+
qT7Q6zOPFC894POSJTivjCpPD1tfwiNyMivFrc4L4l1VSdoh8TxiPfb5ALcZ
grhddL+MVVd4REx54Oq8H4Lz0M1PnZQ/HeMR2/cqq7enC+JxXgF79zrziFp2
u6/vbUHcmvnuseQBHunU8yuPvSyIz9df63XsMI9cCV5jmBYniHvO+rZcxotH
DI5/eJr2UhA3GBVypSaKRyKSjvTekhe8zt7PWqyIXB7pYfebf8lBEHeYILYr
ZnAHkbMI+jFRWnB9cnUmvS5Y1EE6xeqO9kQL4p75pjuGJv11nT8TV8Wnguuv
vOhpo80YPjGbtFHbK1twHwccHvdr20s+ORv7pvfTLnjeKvZY2+eCr5D3dbTZ
NM2ph+s2myH6wmom3C9lkjvmx82C+1Q9y8VzphHMAxMvlR1NsYF56YnvTKVL
ToJ8uEJ8y4bolR3kt7anQmq0zFKI1sL6rKkv2ygLXV/Z/jr0lui8WcoeNIMN
/P3z/1Ts52C/F3ud2N/1r64Ddt2w64zdF+w+/vO+Y+sEW1fYOsTWLbbOsX2B
7SNs32H7FNvXWB7A8gaWZ7C8hOUxLO9heRLLq1gexvI2luexuoDVEazu/Od/
sE79jmN1DauDWN3E6ixWl7E6jtV9rE/A+gqsD8H6FqzPwfoirI/C+i6sT8P6
OqwPxPpGrM/E+lKsj8X6XqxPxvpqrA8HfTvS52NzATZHYHMHNqdgcw02B2Fz
EzZnYXMZNsdhcx82J2JzJTaHonMrMudiczE2R2NzNzanY3M9/X4PWlpaWlpa
WlpaWlpaWlpa2v87DU7zUJ/8lf/n3t5XtIvNBT5t13OV3NkGVOb/VJ7I5AAZ
A0zYK9e3AIMlhq5WHssGWjDCmScymECRgYcbyJNmoMu2gspJLwS+4a3WX7ql
iSTvUx5sFcmk7Nq0yvmwRCMRWS25xuQqS+Cwt0PGazeQUrHV80bbsCm9WRIr
M4tqiSdTzGmUcYvANayol5OriebQTkWZfhxKh/oZsU9/VJLUGbIGx0s4lHUO
GeT0+XIS1hT14d7xVsopG0ZN6zpZSnwOeERNMmqj3PHAa7SfVgmxm1yxayu7
jdJb+nto1tU35FrMyW9RIe2UNhJtymqHXhHTA3sqfmpxKWftPPNVND+X8Hyt
Foc1cymdkqq3msW9JJ2r1eo1XHmUmWqKwe83PyO8d9dF4mU6KDmKST18firp
Mr7urBLTQXklKP2YxdhEIv0tQX3jSj6l5sXEt1F3Ioio2/oY7zo+pcjRnc/6
1Ryh1qOcvEiNoR18/pzOjv2QkA6fV09k+G1nCPk8ao5yyLFNFkK+l3yGvapS
OHx+7qoWyrb7CJ+3G7mcqE1eDOPWfjX3lyYIeX/IEdkHy0RgvHO1w5NMW3gu
oDiWV1VdDM8RJqbdcTw+F8aVB8+VVL8KzyniNwYuPz8cxrMLH+01dobnIJ/O
Fg41+AjPTap8X15NsoFxzaUPh7Kb4bmM+hmvmAu7YVykKTO9X7eQ75GJrnv3
wBXGz/I9TlUMgPG1t98H2AXA8yaJjyHPlk4V8rnxzz02qj2H51kM5x1jzm2B
cVubFXY7vwr5/JDC4bykmzC+KeD8vVWmgriG6Oy3w3v5xMFvoOjtHsH5nV7x
jZQPGXzif9bPcJO5IC761lDa8+xf8dNTNA3KBeeAdiYOs8eu5hOxjCunX5sI
4t33muLOTuIT24c6d8vrBOeMWt9spSZ97iCeB0Xv1e4UxB0MPv40qOggcjc3
u0fKCuIaTZLX7yV1EIfZcSdTngnOMRlr3bKfX+sgmmUz9zac+Nv7T1geRPFU
B8l8+jx8iYkgPrWn5KWsWwex5UrsnjdTEHd50jHM71AHUassi9w1VhCPPsk8
4XO0gygvm7e0Wvtv56eL7u909OkgYpNTjypbCuIOD79ffH33rzyy2Jl1LEEQ
vxDbWPq6sIMwJqcE9P4SxDsHddd9F+eTquEtcc7XBX9vd+DtDeUmfML5ELZ5
9DzB9cyUUrAUecInjOkLG0Us4HnrqfDn4dtnCTlvDSh/PXkSXD/WEXnKH4R8
f4H1hns5yyPgepbLO5XxvhXuF4Ozpx3EvsL9az350xPRnzBv6PpuHt/sJciT
13avE7vYr4P8tnjir+vreWnEfMxhfqhnM+WA9UVXRj1vQt+P8X/6/R6Y2OvE
/i7sOvyr64ZdZ+y+YPcRu+/YOvnnusLWIbZusXWO7QtsH2H7Dtun2L7G8gCW
N7A8g+UlLI9heQ/Lk1hexfIwlrexPP/7/v6zLvyOY3UEqztYncLqGlYHsbqJ
1VmsLmN1HKv7WJ+A9RVYH4L1LVifg/VFWB+F9V1Yn4b1dVgfiPWNWJ+J9aVY
H4v1vVif/M++GuvDsb4d6/OxuQCdI5C5A5tTsLkGm4OwuQmbs7C5DJvjsLkP
mxOxuRKbQ7G5FZtzsbkYm6OxuRub07G5HnsO0NfnCb/XJy0tLS0tLS0tLS0t
LS0tLS3tf43YcxiVZhVTKz602CSq35pGLrDtzOWmpDVtQJX8yMsTyjlArZ1K
Ex6tbAEu8Zh8OkeaDYxIbrn8IYcJlD6rcVE2rxm4Ubvrw7JIgUdmSo8O8G0i
7Jw0ibzjTErV9dx95QsbiWrJcP0fW1mUvr6ly4cyGohJ55WFRlpsSpUZs+dp
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
fS+ZUdel7sJzqLWSpXViljAeKmse8nyEkHOrruDuhEJ4/sWZ1BM40QPGYzIP
q+01gvFRn5xjfvSD8Sv2BTrSRfA8Lsbn1viBATCuvED89e7tMB7/9avp05kw
Lubz6mH4UBhXyws4Pr5NyPtkXgU13yuEca7nrSTN5zC+4cZq5axUGA9a2sPM
eQTjuvp2CZlZML723Znj5Y1C/vc+d7+6D4avn7H+7QR3ExhPuXV1f0WQkHPP
bU6XNYRc/32Xq3SqnIX8e/PVUfY1GnA9PNl49OKbWkH8mv6PM7HtfPJbEYXb
g1K89hMb9YfPVk3nU1pXDBjnHRNFzPe8eHLai0cpJ8lXfcx7SqzFJoZWpXIp
M4smr+emZhHHL6ZyeRZtlNHy8mlx34tJnd4QqVlvWin3rGIW7Ln8jhgsmqr9
OZMjcK7XDuWn5cSsdLrb0escSklvx4ALGhVEr4Sv27yKQ2nuq7nOQrISjWM/
B/u92OvE/i7sOmDXDbvO2H3B7uO/uu/YOsHWFbYOsXWLrXN0XyD7CNt32D7F
9jWWB7C8geUZLC9heQzLe1iexPIqloexvI3leawuYHUEqztYncLq2j/rIFY3
sTqL1WWsjmN1H+sTsL4C60OwvgXrc7C+COujsL4L69Owvg7rA7G+Eeszsb4U
62Oxvhfrk7G+GuvDsb4d6/OxuQCbI7C5A5tTsLkGm4OwuQmbs7C5DJvjsLkP
mxOxuRKbQ7G5FZtzsbkYm6OxuRub07G5HnsO8Dsv0dLS0tLS0tLS0tLS0tLS
0tL+e4g951kRW3m+pLAdypJtjyxoAzbfXD9qZEYrMGLWnB+DhkIvSMWyAzZx
gAbhy3TsGluAm1pmWc7bBC3Ob5Fe9pkNfOUR+ni2DzRiw5qztWrQiokax7uK
WUCdKaOnrPKC1k72S/o1BZp52Pa5XyUTWCFT9ib1NDTe+RpjuhF035PYqswf
zUC9B9VF4onQ1HHhlRK20OJY1m7LdQKNvSbv7PnVRB6Fmx74mtpM2Tpy2Ptz
9k1kxWJtwzOjmZTDrswc87ChkWyUUZyi48qkPFK/7uW95Y1kSYxm75UGJmXw
gDmnriUyiPlB5Yz4hSzKARZvOceUGCRReSFvdwKLsjNMXzf/Sz2p9nyr5CvH
pnR0D4i2Sq0jub7V0jePsCnjNzpkKwbWEnPv0JFHa9mUovZTX1+0qyEK78WH
SBm0UCY7NTALSDWpm3ZEJDaqhdLuWNDPgaPfE++TheJ3B3Ao9zlfa/j5qZLk
6n8f4bGdQxm/bHjxiaoKkmDr8sg/i0P5NSe0dMXDcpL4unC5+bhWys7Qq4qi
kWXEu4bnn32kldLeXmdF0qVS0pw5PHtUcSulxdPS5Bd+70j05QflCjPaKIeR
9uP3D5WQjM4X72zPtVGWamScydlRTKQ3ZtwYUtFG6dt6c2Hu9zekKKXysoJ6
O+WsrA/HrL8UkihLVZtql3ZKdYb89Uad18Rs/jOD7qx2SmV/n6N6tgXE/Npn
tQsjuZQS2xeIPwjOI0v2rh44cxOX0vKYLPt9RQ6ROJR4JDWaS5lkXjfpkWw2
satuax3WyaX0bjx+Kn7rS/JUttd03CweZdDBkbOMSjOJW5fWwy3OPErTYH8v
P49nZMl4M6fbyTzKFIcFvguCHpPoxKXTn3XyKDXTo8pGp6UTvVa7Z0UzOijN
RvZKWb18SDwzjGZZ23ZQiizKu+U+Jpl4Z0ZwwsM7KBO/ushd8E8kyXZ+Oal1
HZSavy641encJZa9OwLmSfIpI0jEFju3aFJkEG05ZRGfspi7x3Nc4U1y4cCK
u+Pt+JQRo4823pcPJan68v2MA/mUmWFGrz22BxHzbNu6b2l8ykzr1B5uv/Ok
c3n6o4RaPqWIRN7DFHc3ojU7/2JxD59SxMb6jvnFdVS+5z6x9fZlw3PGmJ0/
R3aVwPjaMK+i2EdCziUfT5+n/wDG1aprYt7ECPmeI+WQgTppMH5l9xrrsBwY
d3ApCRjRKoh3Vs/zm/vpr7/3fytyZY5qbOw20pmn9bPhCZ9SRPRyvIj6OaLg
2rR96kk+pcHRc87DbENIpruS+sRpfEoRHf2665+iSKnBzQKZgg5KTW6jXN2k
BGJpKj5807wOyuK9p9bfn/OQZAQ92dR7n0dpOnjKnXGZj0nXhGtXSrq4lKbT
d+yTWfaSeM5hPefN4lKKJEd42r/JJV1O+27t39NOabrIeZLtmdfEbcHby02R
bZSBRpcWbJAtJlqtZXdfKbdR2hh5/bgRVkLi0vclqV1vpRxQ8YhzenopUeVc
7q11aaW8sHTB4D3XS4nPr8Ez7pq2Uu7oxzn0U74MjWM/B/u92OvE/i7sOqDX
DbnO2H3B7iN237F1gq0rbB1i6xZb5/9qX2D7CNt32D7F9jWWB/6ZN7A8g+Ul
LI9heQ/Lk1hexfIwlrexPI/VBayOYHUHq1NYXcPqIFY3sTqL1WWsjmN1H+sT
sL4C60OwvgXrc7C+COujsL4L69Owvg7rA7G+Eeszsb4U62Oxvhfrk7G+GuvD
sb4d6/OxuQCbI7C5A5tTsLkGm4OwuQmbs7C5DJvjsLkPmxOxuRKbQ7G5FZtz
sbkYm6OxuRub07G5nn6/By0tLS0tLS0tLS0tLS0tLe3/bLHnP5ia1cG7ra9x
/1i95Ouhg3vb/1jR9V2Dcs/8uVoLZBqPq/25YXpbxbfXtv2x/l4/GdnBf65D
UvJYn1V/7pKRbpr9h0MNOgtjHMShr9r2Pt+V0wo02dBgvek4VM8rLGjlVKi3
e/6XtHccoMiOJ5pKh6EMEWetxxOhLpP0j+/LbgGK5g6yLLGFLmEd3iopDlWJ
XjFnZgobaF6iNLVoBTT6fHi+QTcLqBVxhKd6FVr8YHXmXSOoxKKloVn1TKB3
4f15k89BVXS5jVv0oMHSc8c/+NAMZN+J6y8fAVUdfv6E8wZo9Ab366v/puj3
rODT35tIwrDNm3+FN1O67/3U5RnQRBxHuc14w22mNG/MT3+l2ETcV1Z0rZnK
pFzss+DSycxG4p5W8yj1EJMyZ59OK8+8kQRuTpI8mMqkjHL8ZGPRwSBFahGv
9nxlCnw5wqzxHIN0rbpr5abJopQW83AxnsMgEQvM0+SdWZTKRqLVSREN5MKc
iicfkliUGze6F0xtqScMJ864AZ9ZlNY3l0R0K9eTFclSC66qsykV2HmLtd3q
iKrv9Pdh29mUvlZOTqpVtcRmiMvswmA2ZWFz2Nbr82qJKO/KzatFbEqu7uwx
WiE1RLP7feDtXjalg9IhoxGDawg7iKuxW6OF0nShnsurw9UklyfTyrRsoYzX
eWy0mv+eXEjLDVM420Jp+f6uauLu90Syq+t2+f0WymLVicM9OquI6EGNrzur
Wii58YdHlbhUET2NU3em/GyhNHd1HHJyUBXxXuGze6sih3Kf7LaCxrhKci06
UtxBj0OpJSHHuG9WSUTN95TrrOVQckWzPawGVJLUkD17LtpzKGt1s7LWplUQ
Jb+tUw+5cyjj1jR6xp6pILljdHqH+HIoE+I3izVZVZCwpskDBwRwKKdsONvV
bVpBluxIOaV4mUOpUdF0MM6ggigX1EZn+3AoI27tGZq0tYK4j/kgLu/BofRJ
UG9IOVFBvo3fH9NjzaGUvvZQVKbur98rFyGlbcShnJo6Ln+HViXxfPPkyhQp
jsCggtknCyqJY3IHs39rC2U0S2v1F6Mq0rwn5O4u/xZKi5dze9+sfE+UV41z
3bu6hTJCKjLk6dBq4uma8GVhCVtg8Bc5Pd8aYv/FwPiYD5syQ37+5PPWtaT6
oW+aYjWL0rF+4/vYg/VE1e9gerc/i9J3zd2KMSsaiM2WRa9Hv2MKPKS4qiGb
QYa18t73xDEp7SeMeeTzi0GynN4qy2gzKWuK89/UP2gkCefURopOYFK6zzRk
dxc2kqJosZ0ev5oFDupqzRRpQuPYz8F+L/Y6sb8Luw7YdcOuM3ZfsPuI3Xds
nWDrCluH2LrF1jm2L7B9hO07bJ9i+xrLA1jewPIMlpewPIblPSxPYnkVy8NY
3sbyPFYXsDqC1R2sTmF1DauDWN3E6ixWl7E6jtV9rE/A+gqsD8H6FqzPwfoi
rI/C+i6sT8P6OqwPxPpGrM/E+lKsj8X6XqxPxvpqrA/H+nasz8fmAmyOwOYO
bE7B5pq+zkd9nb/6Ot/1dX7s63za1/m3r/N1X+f3/+7nDbS0tLS0tLS0tLS0
tLS0tLS0tP8v6mMw3dHgOx9oYCRdO/ETlFcSyxh3Dlpa1J16TBqqcOzi3bOR
HcDiL4+M1q2H2mcM1N3TDxr2XHT9qYc8YPcH+W1ndkJXTNTY6yMNLXr3yMTh
ORcoLe2/4ZMzdH777Flfp0Ev7N4/q7KtHRjYs2Te80ioTMo4i/wtUFGTnbon
5KDzH8tMzS1vA1bodft9uAy1jBxbq2MGVXpe7XZnBDRVjqHiVNIKFHm97Lhh
APTChvGc0LVQl0utMpNGQSWXGFnuquJA0ycqBVyDFs1w7Ge7E+q5+IFb8gyo
5djo1sieFqBO2j6pPTnQiElaU4ZfhBaXPZeavwGa2FsvOXEyNNVqULZHNxto
PmbwoYRsaMX5DUEbrwpx8ZuQDzZQn5UelYt1odJBR8Z3D4U6jj+o6dPKAnJZ
hmpvX0DjjvPCTG9BGdaPPz30gNYGHt9yZSfUOnRh6sbF0M5Z92f6zoAadNwL
05aBOoSPL+8ZAs0dubz/tu9MoDnD7FT9F6jpiqNDfT5DfTlK97/1Z0Fj1hg2
SkBNsveUMCZDHY/f3jncCKp/o3EuwwkqvVep/UAYdJPVZYllVVCHH27Tzkux
gVpfjvDFtkA981xv7roNDRzXzzagEZrpZ2AcpdICNMxfPmOnMZQhN1xzqCPU
XObnHIuT0CdnpLTu+f+52M/Bfi/2OrG/C7sO2HXDrjN2X7D7iN13bJ1g6wpb
h9i6xdY5ti+wfYTtO2yfYvsaywNY3sDyDJaXsDyG5T0sT2J5FcvDWN7G8jxW
F7A6gtUdrE5hdQ2rg1jdxOosVpexOo7VfaxPwPoKrA/B+hasz8H6IqyPwvou
rE/D+jqsD8T6RqzPxPpSrI/F+l6sT8b6aqwPx/p2rM/H5gJsjsDmDmxO+e+e
n2hpaWlpaWlpaWlpaWlpaWlpaf8nO/VJ1fWSPP4fm5y0pNTjxJ+rcKI9uGLa
n8t4etXN9G3HH+sikjc248afq7It+HDD4T83WL/4UuaqP9eg4IXV6cl/bmDe
pJ5bv3h/bHRxUEBPLdTOet3g4iqowt5LxZPjoDIDRE+R3VDzt65iUdrQrlm8
M+eauUBz/bm2DonQiryYQ6VboYaWRxaIzoRmaY470MRpByqw50k5p0GtVaWU
v9pDVfjfYmYSKC9lvc/37jbg/FtG23ivoYmlCw8MOA11MTnfHL8easN4m2Mz
Emr+clLmbnYr0EV20KhDkdCKlFCj9CPQHSdyGQG60Gax/vttxKEaj/fmz37F
AUaHJi4oC4fKXFjr67ALqpRaPTN8AVTkQ8NQeVGo+hv1GJWGFiD3ol2veiRU
x8fcd+UxaO7j4ishi6AVI9wflitD9YeH3rzezgZKi83PEsuGdkbGe2Zehjqq
bbHXsYcaBC7cP0cP2tm792GeDNT77UKJvTwWUOdx/MjAV9DCEB2VZzHQ2hrn
sy+8oRZXH3Sk7IJWiG/OW7gUynX6Ll+uCrW+3HMqfjhUka/YfaKbCcxMLCtT
ZEEVJv7sd7oCqnxg+YQNOdBm3+bofS+h+gNG21U/hTISRUS9C6CZjye4HSuB
Ljl7ZxCrHZpRWjhA6Rv05Cex9x1TWcDgkhm/bhpANad80O/xglpHvVv89irU
oDz+Y28DVM9NQSvpE9Q/QXKIrTYbaDY6abvGEqjo8WnuGS7QUukDpo1u0GiV
GNPd5/5c7Odgvxd7ndjfhV0H7Lph1xm7L9h9xO47tk6wdYWtQ2zdYusc2xfY
PsL2HbZPsX2N5QEsb2B5BstLWB7D8h6WJ7G8iuVhLG9jeR6rC1gdweoOVqew
uobVQaxuYnUWq8tYHcfqPtYnYH0F1odgfQvW52B9EdZHYX0X1qdhfR3WB2J9
I9ZnYn0p1sdifS/WJ2N9NdaHo3070udjcwE2R2BzBzan9HXe6es81dd5ra/z
YF/nzb7Os32dl/s6j/d13v/vfj5BS0tLS0tLS0tLS0tLS0tLS9s3sec87r3j
/B5EQXeIVj67tgmqGmtoY9DdAfTRizjfLxXarZvS0XYSKjN0zEWHNdDOfqPG
7lOCBhcrvi3s5AHrfGvPfMyBJidur3h8Haqgkz1uvQOUEbJX1dMQuuOX58q1
Y6EGNQMVEru5QOlpCVVyhdD5NpYeQdFQUb9nGuUnoFMNNaLY66FamZkzls6C
ijSnSJ0eAvWZOo+tW9cOVB3yZXtlDFRPKvlDsCs07k51vYMxlM07UJAsC1Wa
ee/SKk4b0Cfr+JYTj6CWUdeldXyhhhmBD65thF5jrp99ewq099qXnMgfrcCT
711uTHsH5f1asPXNTaj5TlKj7wL1PpKwdpQJtFtzwPxPCtCErFztLXwOUKT8
xIYHWVD2UoXDFcFQ/0OcqacOQrteGL+9YwytXphk4jQWqm5t8Hr/5xZgbtvN
vfuLoIabTT+euQEVDXU6t/MwtDPMXIZlCo2asy1OWw0q0y0y49svNjBwcPe4
mWXQwrEbZ0knQu0Kdq9uPQN1kbruzLOGcoceXOcwGyrt8X7Z3eFQ/VEDozbx
WUCZRawG/wJofLfTj8Hx0E7Dxz/6nYUa7rA96LcHmrm4sCbTGBpakBl/Vg3q
/d7fx3Ao1FKikrfuAxN4rW6hRXAVNIOjJKOYCZ1qZfhx7D2oybOl6lWRUIkR
A/ZbXIXmhrhP+XUJmnrAp2XBBahvR/HKRZeghUP1HztegYbuiXvAvgXVcfW+
/TIRGre7OysxGxoxbFG/5Aaoo3P1yFVfoQoKT9SXjmYBxUdNDZg/C9rm9YRj
YAoV/RGtt3AT1Gb1r+uvD0BLy74eSnMW4qO3Rs5ufRD5OdjvxV4n9ndh1wG7
bth1xu4Ldh+x+46tE2xdYesQW7fYOsf2BbaPsH2H7VNsX2N5AMsbWJ7B8hKW
x7C8h+VJLK9ieRjL21iex+oCVkewuoPVKayuYXUQq5tYncXqMlbHsbqP9QlY
X4H1IVjfgvU5WF+E9VFY34X1aVhfh/WBWN+I9ZlYX4r1sVjfi/XJWF+N9eFY
3471+dhcgM0R2NyBzSnYXIPNQdjchM1Z2FyGzXHY3IfNidhcic2h2NyKzbnY
XIzN0djcjc3p2FxPv9+DlpaWlpaWlpaWlpb2v1bDpINV0wr4f2yvp5VJ7P6O
P1bF6pdH3qA/123LyavfXvD+2FTDcw4tQX9uWyNjsZnzn9sctXP95PV/rl7P
TqaL/p9rM1Ik7sy0Pzcwd6e4rNyf69nQwfUX/XM7ZY1f3PjI/WMTvz5+dbvh
z5VZPXxT/ds/N6M8cmTd0z83V+LDzxkP/txA7/cfjSP+3Kwlo3Z6Bfy59q7X
Tz/x+nO/KVs09+7/c/Um6OdOsfxzs25HD95r+OeWjps/cKhGHySSEr3Sf66/
Qaw/6WgHhp3ZcvtVCdQh+smkuRFQ617RbI9D0Dr9l1Fy86Em8ypE+w+FFqko
aM+ubANmznpVJxMDjfgW13r8IFR50ngnUX2oZ/w4q+8SUPfATTdsGa1APR22
3shE6LCJe1ZqeEOjEndYj7GAMsI1JyapQ+eLbNfR+sIBfgttq/QshrK/Xxhd
EwZdcd7umosLdID3rd0SxlCG+RVVMVnoVO7V6Y/YLcD4pPCAg/FQxoOeD2ru
0KlRF9KnGEGjXasjB8hBTY9sM7hSzwZav5qSPDkJ6niraommO5ThJS+SYwxV
Ve5/uHY01EBDYsCodhawVOZ8umU6tNbkcsxhX+jUkHpxESuoj7Rxlf80qEHO
jBs5n5hAhZ45gw5lQQML48buuQw18JTQP7kf6uBZXTdiMTQiKZLhNRbKNlq3
9tzHZiCjSrGBXwA1HMU9tuEmNHj1R7VhR6Ce5iUPL6yE6mRI6lrNFXiPw572
ZUoz+WoyIFV9u8BzI753POE2kavBOSLzzjVTyodXHp+c1ES8VT6PmpXaTJlq
4s9I2d9ElEYOXZ1a1Uy5zuaAd4deE1kiazdjmQiTUqaOoXvpVyP5Grb8l9J4
JuWQwOH9zN80kogaMzHTpUxK/1TvrmGXG4nDrO0LbO2ZlBtS9kU2WzUSb9fb
nwz8mZQ6rwcHhE9uJHvme38OesikbIxK9YvgM0juD4XCqcVMyopTlUXP8xik
aKvvWoXPTMoVDhpeG/wZpGKNWlXeSBbls5NZ89buYpDuYp/yORosyou594m6
/l8/n2XK+biERWlxxzcqcDSDeAdbPS3ZwaLcp8/L8ylrIAzVwlU7jrIorc9f
l6y40EA2Ht/q6xDIouw61Wh5b3EDyTQ+mVFwhyVwkktxpFgDEZeW1c17xqJs
zs1YH5dVTxKtPb+7FLAoO+uOD7seVU++pe1M96tiUUpXlVSYudSTsIVan8fX
sSinzLNRvmZbT4LFBtV9Y7Mo9dmdtiOW15MLeuqO1o0sSkuzo9H1VvXEXOzy
8udMFqVoi4HSy9X1xOBt+uKXZSyBl8qnP/KqJ/OPDLQuLWZRLgv62HD6wl+/
V68/WfmERalv9nXR6Nf1RGPGwLLlKSzKI4e6Tio21xOzef6pT0JYlJIrV9UW
6DaQr9Y7DzT7sSil6949WGfWQDpnjJmg78qi1HS4d3V5SAORb+x3vfwgizJ5
07fpHnEN5EL+R8M71izKjdGTtcXrG8hcH0Ze8WYWpfm2LTEX2A1EQ35G6zgL
FuWRlENGEb14HPs52O/FXif2d2HXAbtu2HXG7gt2H7H7jq0TbF1h6xBbt9g6
x/YFto+wfYftU2xfY3kAyxtYnsHyEpbHsLyH5Uksr2J5GMvbWJ7H6gJWR7C6
g9UprK5hdRCrm1idxeoyVsexuo/1CVhfgfUhWN+C9TlYX4T1UVjfhfVpWF+H
9YFY34j1mVhfivWxWN+L9clYX4314VjfjvX52FyAzRHY3IHNKdhcg81B2NyE
zVnYXIbNcdjch82J2FyJzaHY3IrNudhcjM3R2NyNzenYXI89B+jr84S+Pq/o
6/OQvj5v6evznL4+L+rr86i+Pu/q6/O0vj6v6+vzwL4+b+zr88y+Pi/t6/PY
vj7v7evz5L4+r+7r8/C+Pm/v6/P8vp4X9PU8oq/nHf/d5zO0tLS0tLS0tP9f
xfqchNbVYjbR0Ky71lHm6zqAIjmMPK8tPODUG6d6b3zmApWmBmtO9oV291fQ
nWsEtRm7bu8aUWjUAKtF5H070OB77MjdcdDiuyYN4uegele108TtoBFfa4tG
rICKW55mjtKEDlOT81ZUgOo92qaU3w/Ku/OjOI3bBkyc4BhwrRrqMDeZ+z0H
GufWtfH4Q2hwoLt+TxRUYXizvFEAtItp3eV5HHptn+kr1b1QrfND6s9aQlWf
jGibZAxNrZA72F8H6l3oN3jPZGjRgppsdVlo9bYgj42iUMlNV7ebfWkFGlqE
L17KgUoWe8+1roS6z1GdvSAfWp0hG6qQBs29wezNvwUtak6RJYFQ8cOy2qYn
oD6B3aeu7YPyXL9x52yCarox3u5YCo1+teGhqhY0VSWLuUQOKrrhusoHEWjU
nZnDHdgcoGjM7O71r6FxZc1l72Og39wm5kufhxqsfqo3exs0w4VznzcH2nbH
Ty1kIFThvc5Ng5IWoJvIvN1dl6HJO8/O6b8ZmjGhcM2oSVDPQZFbQlvZwMyG
19vJA6j/mJJtKYehbiFdg8znQqUvxDyL/cUCdn/krOouhF5zf1ySHgxNbXhY
cno7tJl7P0FSFar1clByOI8JjLeUulecBN1hp9Ia6AG1aXQ3KFsDjX6Q9t1Y
GerWXPjAj9sMrE2KjfyQCo0Kenv+oocQjUJa762Cbixtkt+zWODXl9M2Nsk2
E+uUgyujXAU6HFwnPvR1Exl2Ms0nMqGZ0v4xd4bv0SZydVz0uKqaZoHF3sXz
dJpIbuzyJ++GMiktvC6yDDsaifyH0K5kfSblxuAgqY+3Gkng91vKc/cyKaO8
xVZN3dpIlGpXh+aGMCnLZ58ebaHYSDy/Lp2QmMukzBwSVPilnEESRhVrT+1i
UvYy8hINAhlENTVnFleBRZm7vzI5bD2DyGcWmEUtZlG+31oiel72r7hF7NEV
jizK5N4BF2SjG0huT8QAzwgWZfxopc8eYxtI89yn/ow3LEqLNfkrtgTWE9Ua
qxCxnyxK3/3cuexB9STRxffY6Ulsys7rlj4H/OqI8qyjXlUr2JQR/4u9ew+m
+n3/R6+UKIp0QCqlVhJSFAm3UooQkdO7g1J0oERJdJBKJ6JEKKUUFSKKkFKy
nM/n88KyzmtRpJJq953Z3c18btfM+zOzZ39/e4/PP4/5XPMetNZ63fd1Pa8O
+6/5es1oQ6H8/QFLvBhYI633rqeiW1GU/YPvH+4ysBr9MhLPFVtRdH6z+44C
BlY5+XAS/UkL8mtwLjDoY/z1RMkTvaUtSGHyhcmR05nYmDr3Ws23zchx4pis
7YiJpdGGqxhrmpHOPjvHARcm1qpgsH1+YROSEE5KigxmYpsHvw4ut2xCbdFj
vutnMLEHKN8nGzY3IgdrXfOpHUxs/9hN04t2N6LobPpdcxEWVrnMUnEavwHJ
9Wu4BlJY2DTKnmyHwAbEuF66dYMZC2tqEvVzsUwDct7tHjPLm4UtbXw2J+lW
PVqZebZe6y4Lu73W56TdwnpEU6usHXjPwjp6Bp+dl1GHgh7OqXnOZGHtpz4M
4GysQ169jWuyRdjY6GXHdMq5tUhYyeTV5UVs7ODFeQ27L9eivFCnnDfr2Nj0
dXUFectqUchVuwrGHjbWYvvg9U1VNSin+eqT/t/33h+LDm8TXni8BumkqBze
eIeNteo9kUpZUoOM9t+OW5TGxqp+UBW/zKhGqjutWLtL2dgTXeM3NERVI4Nm
a6eiLvZfj4ypj7WtRgoiH1oivrKxMfw01xUzqlHl99LoDlEONkQ8krKrpwrR
hOfa7frdd/zRceDBl5bMKiR8LX5F+xwOdnCr2M69sVUoJN1a5vLv/uWPFq1j
MvZc/l2v2dx/egkHa3FBknLuVBVS3EIpMlLjYMPFgh4uOVaF0rabtS9ezMEy
GDP3+p+vQj6vRAZjF3CwofXc2dNuVCG/TaohFbM5f53tvfl63O+vXzpxea4M
Bxt+u2P/25dVqOxjO4chycFGKjuhTWVVSOLEtbsdEzjYppvWC3axqtCP5q5p
XUIcrNhh23f2P6oQJbAoyHeIjQ36J9YmSLIaOSffED8+yMaWfdzQHCVfjZrn
CYLE+tlYz6gVNt0UuA59Hej7Qj8n9OuCXgfodYNeZ+h9gd5H6H2HPifQ5wr6
HEKfW+hzDj0X0HMEPXfQcwo919A5AJ0b0DkDnUvQOQade9A5CZ2r0DkMndvQ
OQ/dC9A9At070D0F3WvQPQjdm9A9C93L0D0O3ftQnwD1FVAfAvUtUJ8D9UVQ
HwX1XVCfBvV1UB8I9Y1Qnwn1pVAfC/W9UJ8M9dVQHw717VCfD80F0BwBzR3Q
nALNNdAcBM1N0JwFzWXQHAfNfdCcCM2V0BwKza3QnAvNxdAcDc3d0JwOzfVQ
DgDlBlDOAOUSYI4B5B5QTgLlKlAOA+U2UM4D5UJQjgTlTlBOBeVaUA4G5mZA
zgblclCOB+V+UE4I5YpQDgnlllDOCeWiUI4K5a5QTgvlulAODOXGUM4M5dJQ
jg3l3lBODuXqUA4P5fZQzg/tBaA9ArR3gPYU0F5j9Pd7jDrqqKOOOuqo/1vW
qzgluyYK/rVlifs3nVP893rtu3B7Vwmf0LNL/suDVFJJs59rZq4j9Vq8Yhvb
hEdIjbjaKj/EJfzxc+JctZukDlfZx16ak7ql/TqzY8IIijZP76jgEJq1hA+E
PCTNnRR9K8WT1K1fxny8GSl/PGvKXEXSfqsNauwJpG3+pk+76WxCAyeldZQy
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
z8FKhz38nNJbhU4pZNwp1uRgL99tXhyzqwpJqIzf+T9/f/Qfm3z7uuzrK5HP
/qlz3W9wsKF5hQ+SN1aioQ8PtOZkcrCU3UtTTZ5UoDK1MMuJ3RzscqbfjPdJ
5ejH3V2aYlO52KlG6fmFoWXI6Fak4StdLtbhqPOBZ6GlyNHc1V/hABebu9jr
o+65EpTod0j42k0u9tP3fdyE88Wonnvs05r3XOyQt67lUY8iNGhxVP7QZy5W
R85o60FUiNLEPuwXVuBhS/NdLnBRARK/hT483czDph7zd/41j4qyotbW0i/x
sHE73UViiz8gV6MHUfKveFgP++WO1sl5yCR/gm0Nk4c1cqz6POn6ezRj88Wl
T2fwsT4La7vGer9DzuMjG+9s4mOjOvbztujkoqcNC8Zb+POx4vT17xE9B2Ut
OsQeSuVjTRXrJ+vdyUaqWafqx7D4WNb6WZ/YczMRP0dxjeJsAZYlY/XJ7kE6
MsxwiWqyEmAb9ynmlUq9QFmrs9YLXRJgLTTWZw/fe46EUm2dLT8I/mpR4LIj
Igl5ZmTsjfglwKqXUb3SxR4jymn5U/tW92IdVazXax56gJyVH+rnu/Vic8W1
14w7eBsdyK/ZHBjXizUYNhF9nh+CctOC7qS29GKF1DPDJur44n4kJZDVcoA5
wt/zoMPaaPuArL9K1hxfaU/WS/W9Js+aPsK/C3/qssnZcjLvfbX38/XiC2Td
e0iz1MJohP/+jb9MldgI//32NVviC0f4+8lNfmgGnyXrNzcw7A6uHeHPe878
mqUuNMLvi9C76sHOGSGH30jp2+lL1q05ieW7dMi69iZts/+LvXePqql9/39T
CQklh6QSJZUkJZJyh0RJopCEIokcQkhOi45S9IikRCcJpRSVSFHSUaWjzjqs
tVrHiCTFXt/x3c+8jede1/h8v7/919778c97jNeYY7WsOed9Xdf7PQ/e34U8
zyGvmxeTRvLe3Jr57NMkb/4Z7tu5jORJk9b8uCZK8qxDZfN+vBXyvPrynGUb
r5A8VX146qG1Qp6Tf777aMdokjuU3IhXrBBy3ULJDjPjMJJbpg+ijK0kD+Fn
pt1TInm43KvMjE4yn2J2tTIzYklecNfh6hYXkitrH5cao0Ly8G0oL4lO5mvt
rQcD+AlC+HKJUf77SW6wa8+XDdpC3gehO7Rd/jOZDzoP1JcpPia5zqbw53GH
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
Iagr8Yo19j7vKO71I85JpUzQ/7fpMVOHCinen23oGv6EgSoTZo8ZPIl5+iWZ
d9m3GIiWuqXzngjmEtn5yik0BlKO/RDn5v2W4o5eX6us3QRzxe7CadflMLe8
LXKuwFbwOePETtTdL8D70V3F6+cKBjLRe7KrxwrzkISZR8R1BN/HJFF/Sm8+
xUM/pQ8emCX4/L3e3cpJmGudm3n+vqyAn7h/etUuzA3FtDSsJAXfU7q53E8P
c+kl8ZXbRRjIWlFftnYE5um/6Vt2DdER7dfFTDb3DV5/nK26rv+go7zv/seZ
bf+ZQ58D/V3oe0L/L+h3gH436HeG9gu0H6H9Dh0n0HEFHYfQcQsd5+B5AZxH
0HkHnafQeQ2tA9C6Aa0z0LoErWPQugetk9C6Cq3D0LoNrfNQXYDqCFR3oDoF
1TWoDkJ1E6qzUF2G6jhU96E+AeoroD4E6lugPgfqi6A+Cuq7oD4N6uugPhDq
G//7H9ln/s2hvhTqY6G+F+qTob4a6sOhvh3q86G5AJojoLkDmlOguQaag6C5
CZqzoLkMmuOguQ+aE6G5EppDobkVmnOhuRiao6G5G5rTobke8gEg3wDyGSBf
AvIxIN8D8kkgXwXyYSDfBvJ5IF8I8pEg3wnyqSBfC/LBIN8M8tkgXw7y8SDf
D/IJIV8R8iEh3xLyOSFfFPJRId8V8mn/6etCPjDkG0M+M+RLQz425HtDPjnk
q0M+POTbQz4/lAtAOQKUO0A5BZRrQDkIlJtAOQuUy0A5DpT7QDkRlCtBORSY
WwE5F5SLQTkalLtBOR2U60E5IJQbQjkjlEtCOSaUe0I5KZSrQjkslNtCOS+U
C0M5MpQ7/3u9x7/6r5IqP5S0OCuT+z/WhJiX29w3cgg95lzNL5jHIrQw46X5
l2k9hIZp+qD3KkxCE3ascNlryCA0P6Jlie0+OqG0nqlS+Xe7CbUwYU650NhF
aPXhhBPT5pJ6QCTi/KhLnYTSJiXmbziB1eSTt73v+w7UM7/zqdm4LkpnGjzq
ncz5hBRdVFdvi+6itNbFfPLJCZ/QseGEvhWa3ZRWe/teizRpR2Jjw9e8zeqm
tL91sVpqbSuq/uwQJmJCp9RPs8foF2pB3OMjj5i8pFNqeIeftKy0CSXIvfP7
tZhBqVTGQzdxu0YUffSZY10qg1LlxLaWM9wGlNP2USpInUlpiePRj9v86tHw
yqnJJ2OYlI5ZmD0QPr0O0VOzFF3keihdx61NKM+oQcPMZlcX3x5Kx6za97bs
cDWat2tWw/5vPZSe+hh+MnfGBxSdcSLRdi+LUuXmSAnRkkpUzZzmv/E9i1Kp
y8610poVSKvAc239QjalX1zmLv36pgzJc2ccMg5nU+pyxMTt6qESpLBKziBq
kE3pRqdDKdbKRchLr5w7YxuHUrVSnYMmLW+Rclrd9Fs5HEpNqr/b7buSj3oT
71a+n8Sl1FFyhcIc79dIDF1OiD7EpbRh7KkFnpWvkNpvp9a377iULpR0DX0e
m43Wrdc6XSjPo9R1DWdJ2qsMVCll/qP0EI9SE5dQa/f3aWhRFy/4Sx6P0vaI
iCcrepIR/Xn13gfT+ZQ6XlMzVXK9h+ylird/28On1CRl3f5fn26jvMS9tftT
+ZSKZCn/4NcHo8LeyLH3B/mUiiTN02qRtKbWg9HnNTy2PxLyHMtGGyXT9SQv
e1/+s/Qr2f+blt6KLIwludT90K/RliT3+f2hwkec5Mpe9ku/ppPzi7XU6AMj
9pFczv9+aoCSkOeIqlmGedUJeR7phxmrK/1IbiT26NQYY5Jbl7reufpZyHsZ
1B/0WD0keUN8Tv/gXiHXP7x7YHJcUwiPGrXGhEnOszXztRePvS9kzk24eDln
L8k9XkgreCqT/PpRo6TkT+Q8XuRCP/clVsh7nING3fF2FjK/z1waXKBB8iSD
vh3mHNJPkAto2jj2sZD3Vh/8HcY/QPKAoLmd8upCeMCX7S5MIf7J5PujRe+R
XPyaSquDM8m/7lm8t1+d5AU9/d4Xekg/x/L21fCIOJKHr1i9Wd5RyPvEC+Kn
O8wkubj2z3rlT0L8qP3RRwbukjxvwVbtFVtIHnCnjD5SmuQ1X85+DisnfTOR
wSMjKq6SfLRYxdqt60meFcZptpog5DqK56woJWH35TWtCrX2F8L3KTDOmArx
FTV+B134IcTn3Butk5dB8hof14e1R0junLbswSsdkjNlGa4LP5P+6tPCuJiH
SSSnKaxy236Q5Oo3orfnzyR5qkiRwqV20h9+mjDxoeIdkkubnPRsdiQ57dHE
tWEKmPtdEC2e1clHlSv9+usy/3iuAn9DYF6KYD2vLdvqtBjzQZnT7SPO8VFv
kt4T8RfYPzcMP3v07Fo+Chlacue5Eebu0VUam6fxkZxMkOuWXOzPpy9eqHK0
R1CHLovaRa3GvHGg/JP2Sx5S5l1ceLwO+/+Ol55sbPThIff6F+9nWmKuNuKO
2Z6NgrolellnuBznC6GVDrS9MwTbj2HmXbTCXFbE3p/3hYt0RJw22rbh/MJF
/LHV1xeCdXxsekHHJsyte4rCnC5z0ZrV/QPHmnE+Uk1XyzXaykXSyz+1TN2J
+aDiyfkj5grqeMmD/otsnL/M07919fwPDuoV/01/dRhzx5qOw27FAj4x82bQ
d5zvjLvv6mB9k4OiY0Yy1nhhXrJxyrDMfg4aeJ85oDUGc++7Euo+BhxUdEXa
2SIY50rtu+jLeWM4SOd7bny1HObj4r1lrWvZSFm+WGfNDZxbuY81b9GMZ6Pw
24s03OT/eN5CTtHVr0fZyL3x+N7dd3EupjJ3jjZjCRs1sJ36Xktj3rtglvOz
MQJ+ZpPXqnCcu62bWDWJWcdCecmSC02nYU7/2WY5OUrAv803eRaAcz2TUu2w
+//Vtw15fJ8lhrlaTrGHqI5g/rYbUJHw/OO6iPAZT7cM9qCAIasVTZ9x/rjS
sS/nwpselOjebm/qgrnfZY6LXnAPin5+R3TEmwr8/90kUSZp24Pak2YM6cfj
3DM9e6CDL9uDaPeaDqXsxjlp6qHinc/rmchdg996Z9Ef10tERE24GMhENIlJ
VoFPSyhu8drXKdJasH3hbcboUJzbnthpJ1E9j4msW57PmNGN89/9pmf3v5Zi
IunNRye9Q39cF9FWk7ubI6grDuq5X6JwvnxMwtpoWTkDmSiHzFss+sf1Eu32
PlLJDOS4q/DGMqc/rouYHLri3RUGoh1os+wqxjl4+4eLIecPC7ZXuvLh7DzM
U/d6nL5gzUDuEmb7/K/hnD094NsEjQWCz3lUur78G87rHVcFjaiayEDt9jmj
Ju/A/GHrqdCoPjqy3ur0SfYNvq7gtmOxhm09HUl38irjF2I+qPdZcX02HbWL
Zdy4HPcaf8/QJI0v0XTk2LmjMlsV88D0uKY4fzpKvaBroZeQh3//i16GhYfp
yP2ys2qbNuZJI8YO3rGnozzpQwX6gbkUj1CZmjDxv3IaZ8aZ7MRXFNf5mt31
REfwfS6t43+h51D85VT3zvMzBN+H69jxyxDzEsMyX+MJgu3XDi7ZG/6S4mJv
e2WMRemCuWBv+q4pmEekzs0O6RfUXfrTVfdjXlA8QX+R82KuYP6UU2JpmGJu
Hz9RXZcp4G7ZId9kMN8/xuupc3c3Ut5RIMX/lv0fOfQ50N+Fvif0/4J+B+h3
g35naL9A+xHa79BxAh1X0HEIHbfQcQ6dF9B5BJ130HkKndfQOgCtG9A6A61L
0DoGrXvQOgmtq9A6DK3b0DoP1QWojkB1B6pTUF2D6iBUN6E6C9VlqI5DdR/q
E6C+AupDoL4F6nOgvgjqo6C+C+rToL4O6gOhvhHqM6G+FOpjob4X6pOhvhrq
w6G+Herz//sfORf8zaE5Apo7oDkFmmugOQiam6A5C5rLoDkOmvugORGaK6E5
FJpboTkXmouhORqau6E5HZrrIR8A8g0gnwHyJSAfA/I9IJ8E8lUgHwbybSCf
B/KFIB8J8p0gnwrytSAfDPLNIJ8N8uUgHw/y/SCfEPIVIR8S8i0hnxPyRSEf
FfJdIZ8W8nUhHxjyjSGfGfKlIR/7n7435JNDvjrkw0O+PeTzQ7kAlCNAuQOU
U0C5BpSDQLkJlLNAuQyU40C5D5QTQbkSlEOBuRWQc0G5GJSjQbkblNNBuR6U
A0K5IZQzQrkklGNCuSeUk0K5KpTDQrktlPNCuTCUI0O5M5RT/2/z7r/Xh3/1
X/3/gkLHubvklHuLBP3BP7VXXI2rc51FaHtTbANvZg+hetpBugrjmYSqBVvv
/thLJzTu3JYdbsPdhFroTV4fM4rUiE5NhQ6jLkJvj6sebhSsa//UfZzLv8Ju
Y3VS1L6oeKMDmVRMubnEootS5eLtUQ9CPqGteQ/u6nG7KD2180KI7u12pGbR
dzn1UjelQTPVHHi72tBmJ+n1g3PolA41vZ8oE9CCzF52Vvlk0inVKrUNPPKx
CalZr5i4fjmD0qAJS4onGjWicV3RG6eVMihttFEc/fROA3JZmWnUacGktEy/
0XzzjHrkt3DqprW1TEoP7soWUaLVos2lVkvOW/dQOhwla3txfA3KzneS8y3p
obT6aWOGe/QHtO4qs4ZrzqJ02kazC4tmVSHaXgtXei6LUpHQ5Vdu0SqQ2bQR
RXcWsCm1d/2xfnVdGSrkm8uV32VTau9kemjB8hKUHvymOFaSQ2lZsvuq+Xnv
UN81n5vfTnMotbzSdXSZ3Ftk3DFqvX8bh9LraZWza968QWozVoxvNeVSKr/q
2MPSXXmIFVlWlB7HpVTqiWvYNZuXSDbzdECmGI9SOTe9iD3VmchsrG/8hF08
SlM9881N96ajzuG0tzde8yhN1TU4+e1jMkq/JZUzUYVPqc7NKrNlGfGIZhvo
bX+KT6mIuvTmUegW8v4UpZn5nk9p3qFScevTF6nzj/k6x6yxluw/g06J6Pi7
ktwkelNP5y+yjxU/Ok3qcLiQ95n+NenuGGOSj07YM5fXKeR9qdYZkjSaEB44
clPhXJI3/6LLhdaS/b8Cc9wb8ZNCnjPZ9dHpt6qQ51X6fppx4R05j6jKpXuw
z5Lc9qHjvQFdkruX/xy5uYucm9onr9I/d4fkCzXGjz9rQ/KCHY92y4qR3OfT
eY3nOeTc537MpDTmNMmtZ5U8KDcg+cvaOJXw7+R8OknerTwtTch1DsbnOeUH
Sd6155622SyS99rZ7XTsIOdrzo/XQ+PukFxO/deaj9tJbtsxOfamMsmZqiK/
3D6R/oCj7n6xqVEkz2tITo51ILmWeliMsxLJpXaeGnWiTcj7rDmZKhvukLzy
1IH3HHshvooK61npFJJHB7APPasn/RlapQp72y2SG1T2HfbZQfIuxyeqwzNI
7qEQs/utkPeJ9/qunjAzkuRS91QOPLMnufL0bedl5UguEu27IaeO9MEadqyI
4oaSvD2+0XyMFcmlim+G+Uwgedapc84570kfz875+6MzQSTXORTpX7SG5L0r
cqXYv0m/8WWg223fVyS/fvrl8c3nSf51x5fj3UsxbxzBLej/wUfRPtYcZi/2
SyXXXszte8tH4S/e7vh0CHPpKscCy+t8lCj5hZX7BfuxxzZLBD3bwUfKDRNa
3x7APFXu23avuXyUldPFesL543njUZdeKfYL6sFoOweLvZiXB+xduuydYJ2t
u3h9+hfsJ0c/nGBoEcpDIZpz/lrijnllq8iCv7bz0Oh5FwdZPdivLkxMcxCb
y0O9917tDXD7w9+WuRQc94OL2h/WfZLrxX645MK0zi7BnC930XjJy2OY07Iy
Fg5c5yKT8iLvA1//uG80T5JTuYuLKj/JW0mexFxT7vM9kwVc5Pqy8c7Mn9jP
zzmZsm/uSC6ye7QogBOE+cHx5lPeVXOQdHxG5hEZzPX89CU3xnAQrcJ32rpQ
nCNIBA5LVh4RbP/x1PQABcxXtgaJli/noMS5jn60eJxf0HQVBotlOMjknNln
Ty3MCzVohkfbBP2oq8m1qMc4H0kdH3mx7TEbZcV7F2rr//EcfruF7NZzbBTQ
LGo5LwfnL4pPp1hOW8dGa94YLMs1wXyc5xeF09PYSFlrR1F6Ls53qj2nDhgw
WUj6seGBK6aYJ2+LvvDoGQvpdEsXaBXi/Eh6ksaPoXMspJ5GP+RpjHlf0ugR
ZpYs5Jh6QzTlFc6nhkff/aU7lYU8w4LP/F6CueyY6UkhbT0oNWzl457HOOeq
vqhxKCGpB0m/2ysbPR9ziXlVU74d70HKnyYfLV6HczSxAPrLpGWC7RNpqTuX
4NzNsEB0tYSYYPvacbtnTMA53TGRGVU73zGRiWjk5LYufH965biMLP/TTCS9
6kpkwj6cAx7MOioTb85EyhHGWxa649wwWm5x4ih1AT8ta65W9Mf98lOVTW+N
Eny+R7Ttr9l/5I/PllkqMRnIPXDJ2ZsBOMdUEC/dIFXEQCGTvocbM3EeqlMx
6vPC+wzUO3bOs9GmmCcZ7Ltx2Z+BHKePZz+/h3PVhFvyEtdcGMhExFepUQRz
6Vu9pwvNGMh6OM2t3emP3FbVSz1/tuBzsnaVVLzEOa+X05EP6uICzlikUDYJ
c8nkRbMXdtKRjpNMtrj7H9dLDPw8id7QkXQTe4txKc6jpY/Mfbs0jo6s9T9+
1NTB3LvHfqKBDx2FXC3cJncD593yqw7vUXIR1Mt0u/75wzg399rw+dnB1XSU
p31wunkJztmVHTU2NmrQkcnrKH3/WJzLFx5y4plJCba3eb/+rRfO9+mm4YGH
+YJ6+eTLvm32+DoBrVZfBaPKbpSXbKi4dRa+DiHC+JKiZoZge1eHOfcUn+Pz
jqM0M+V2N1I21F9br5SFz+sfZY2zfQXb544I8tLLxJ8/rSCo3k3w+T8Tz7st
yqC4vfkb82mbuxGtJezTkMMzivudypPYZtKNTHJ9Vl7xfoqPEwvnVYNagr/b
zXpW+Dod8+dal97JC/jS3G2lYzEP80rWSR/bjdqLC+m/PdJwfeFE1o4a6kI0
k6l2Vg1PMD/x8+KlzwIe/0Fx52HMLe6e11/C7ELtBkNTjCZiLjLe4Ydep6A/
CArPGdWeivfL9O1vHNoE8+aEuJt3n/9nDn0O9Heh7wn9v6DfAfrdoN8Z2i/Q
foT2O3ScQMcVdBxCxy10nEPnBXQeQecddJ5C5zW0DkDrBrTOQOsStI5B6x60
TkLrKrQOQ+s2tM5DdQGqI1DdgeoUVNegOgjVTajOQnUZquNQ3Yf6BKivgPoQ
qG+B+hyoL4L6KKjvgvo0qK+D+kCob4T6TKgvhfpYqO+F+mSor4b6cKhvh/p8
aC6A5gho7oDmFGiugeYgaG6C5ixoLvvvf+Qc9zeH5j5oToTmSmgOheZWaM6F
5mJojobmbmhOh+Z6yAeAfAPIZ4B8CcjHgHwPyCeBfBXIh4F8G8jngXwhyEeC
fCfIp4J8LcgHg3wzyGeDfDnIx4N8P8gnhHxFyIeEfEvI54R8UchHhXxXyKeF
fF3IB4Z8Y8hnhnxpyMeGfG/IJ4d8dciHh3x7yOf/Zy4A5QhQ7gDlFFCuAeUg
UG4C5SxQLgPlOFDuA+VEUK4E5VBQbgXlXFAuBuVoUO4G5XRQrgflgFBuCOWM
UC4J5ZhQ7gnlpFCuCuWwUG4L5bxQLgzlyFDuDOXUUK797/Ue/+r/H9TknHXQ
x7FcQncbz/meZ8omVC+zk/W8s4fQDP7SKnN3JqES19SGi9cyCB2aMGF4gwqd
ULFMse8JKt2EZny//bVCp4tQb5WMKxo7OwlNLj7el1SG9eyGimtDlh2oT+OI
lOnFLkpll2/m3jL6hKLNV6Ws0O2mNERG7kfkwnZ07Nim8uHObkoT7v2+KWHb
ilpYm16ji3RK96NfL0xONSPWlOLc03IMSle+iM8LymhEfZdsHDjJDErVdo1k
G/Y3IMMdm+v9jZiU2nQPnXK1qEcmYauXza1gYjXWWHXumqCOTNQ/UWTTQ2l5
kWNUgngNKh9WO+hb10PpLYnLWYfPfEDpWhPtBnewKKWfKv4u3VmJ1nlkLrn5
kUWprln6PQ/6e1Stu+kGx4pNqVSFCM1DrQxJjs1U7y5gU1qY82xszK5ilHHl
/a0CfQ6l2ffV9zjnFKLAMkcJ94ccSgsXvvi4c0QBctln5ygty6U0wp+bExX8
GhlWflPX9+ZSamnsNenixxwksWrgYZug3/pbU/Mdhrw3PEc5utF7767hUap+
96yqf/hTlD77Q/+cJB6lOictm02aUxBtwiT+7Gl8SkWClMKOxN9DoT0rmmke
fEodF3qk182JQCrWN3plq/iU5n0ZUeQbfoE6b27v121tLxXSp9VNOvV0E8kb
Iu13XaYLea7FR4Nf+0+S3PO9befLySQ3uGNFX/9YyHMtPt3jfLUS1pdeSWnj
C7m+YnGAdEmQkOsxLp9dcm0uyYvuhc1eV0T24ZX3bPqljpO8SGRuAUeZ5AaL
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
L7M5kxjzRch7RqwN3059SnLlToZBmqeQ5822PA+6a4C59EOXjjLB+qX+QGQR
bRD7RcHdH+TOlPBRu/GEZYu8MN98WKfpQAQf2U35oSIt+sdzM9iObuP2CtbN
tUeDYi5gn0rCgv551GI+kn6e2xw6BnMXzRuxhuKCdZDlEXYtEPtg3gyvmiO1
PFS0Qi/09mTM6wr8dnZFC9ZxTiXP8Br22XK2md6KPcRDdt2a58MmYd7yU7u3
cykPJR4/3vD8BvbxNJsCgsdP4CGmSp1T/GzMj50amX7yIxdFpwSjR3f/eD5G
cl3gnUQuck+T2xY0+4/71/bxR9h4cFFvQJ1PRSz2IVt0LeVzVnOR+vlXr+30
MBeZcfTJrKlcRFsX9aLuOfY5xQ70b53D4KDR45mOHcv/uC/P3u+jw1MOcu2o
mMF8g33UaJruomWXOChk+Tn/6VswP2u44dm1rRxkMHHtW14b9m/lvc3vG2kJ
5sl3i2NvHsLcOCzTS/8HG4V/L0kbycf+sOEzqdlVJWwk/fZus+TpP56bkXxv
q9NNNjLRVXI8Noj955zQJz3H3NjI7vPSopggzHffXvfir8VsNCCxwpYj+cdz
M04vrbOSYqPeZ9envr3zx32XxZXdcs0s1DtwadkyNcxTvQ/p6j5gIQPzSeeG
E7CvHtx4+e7ME4K+JLZlvO0czFmS05p0zVhoTeQrlfMp2LcPnHmUpyOoKw02
iraD8zHP7rtzbmRHD7J2Cn457hnOBfIXbDrn/KQHuQ7VLD29FPPorbp+s2k9
SDnv550XNJw7SITnpWxdK+ADbw7leeKcwr1Ga6zY1B6ko9a+eMIxnGuU1Bgt
6mtnot45OhPynHEOojw3/ExSlKCvqx84tGMSzk0UPQ6/Or6diUJM52VZVuOc
xWaDzsltxoLtwz7bFOtiHvx8bfcvRSbKu+vlNXgD5zhm6esPzR7BRI60K3Ne
jMTc5bfRy02dgvo0rJOc5I5zosL1oqrahQzUfmXsU3orzpVevmuYJJ/IQKn0
pa4X12BOv7J8dFQgA9FKVmvIPPvjPug13OfogIC7xsYsU8T82MTkw/rrGMjE
wUl77EWci3V6fxvcNo+B3ENL6aUdOEdr5Ot4fhkn2D7lq93LVZgbqUodiODQ
kc4zIwXxuzinC3z7WU30PR2lNmW9kZTAnLVmaYjSY8G8fkC9KtwF5302lQb/
F3vvGk1V9/9/K5IcoqiEpHQVKiklSc1dOiiU0kGilJJEKSpJUeQUpUgI7RRR
FCkkyilJyKEkIWLvjb23Q4R0utd1//7XmsZ37s/43veT3/g/uHryGeM91lh2
e6815/vzfq01p0/uZTZijlO6mV+OuaF7fdg6/lE2ctrw9UjsEqwXeD5cEreZ
On70J4aLHn7PvWbX4bHftdnI+vHG4KzRmFdmfW6IeS/LRoycewvNizD3ZAjd
VSvuZSHPkT5hlRcwJ01vGamoX/X3vhVKY3fo4Pf0ZfqKR996xEJMv48m64cw
hxVaPs7YI5Savx2SBgdLMbdVsHTi3/p7vo+wWWMWizmv07M7G0+bs5D15iNK
lS6YC0deWif2UI86/urnzTXrMUeuP9/8jqlE/V2lt6aGyngdA+FSfVT/q5W6
/ne7RnZgTs0ucG67UE/N93cvyC2NxlzbcoOcSNuLVsSYGrZJ5Tfm4PWXJGJU
blO6Osc88Dnm5ts+Rd9/4NuKcqdvtYuLwJx9SHdVzuVDrcjTectrvQOYy/u0
X4yZt5HSl3fuzZyHOf5P99DBsIXUeQoiDr1RxNxf++aJl2ZK1Od0WuV4USeW
1j1nt+YuEKF02+pxA2ZMWp9jubTOm0/5jANrJucr4ecTnPQSNcuoftFz2tH1
0pn4OQcDg6yuKfmUfl7hePIW/LyEGevEXzcfUud5H1LX4BRC6+Jz8624N6nj
x2yPL/oZTOuld611gq9Qxzst/C1zJojW428FdaX6ULr3yvrISQG07pA/hVPs
Sen5xkuKl/vRejdnmfAyd0o/bS48rtrnv+rQeaC/C31O6P8FfQ/Q9wZ9z9Dv
Av2O0O8OXSfQdQVdh9B1C13n0H0B3UfQfQfdp9B9DY0D0LgBjTPQuASNY9C4
B42T0LgKjcPQuA2N89C8AM0j0LwDzVPQvAbNg9C8Cc2z0LwMzePQvA/5BMhX
QD4E8i2Qz4F8EeSjIN8F+TTI10E+EPKNkM+EfCnkYyHfC/lkyFdDPhzy7ZDP
h/oCqI+A+g6oT4H6GqgPgvomqM+C+jKoj4P6PqhPhPpKqA+F+laoz4X6YqiP
hvpuqE+H+nooB/iff2Ru8I8O5QxQLgHlGFDuAeUkUK4C5TBQbgPlPFAuBOVI
UO4E5VRQrgXlYFBuBuVsUC4H5XhQ7gflhFCuCOaQQG4J5ZxQLgrlqGDuCuS0
UK4L5cBQbgzlzFAuDeXYUO4N5eRQrg7l8FBuD+X8EBeAOALEHSBOAXENiINA
3OQ/OQvEZSCOA3EfiBNBXAniUBC3gjgXxMUgjgZxN4jTQVwP4oAQN4Q4I8Ql
IY4JcU+Ik0JcFeKwELeFOC/EhSGODHFniFNDXBvk4P8/efo/98W/9d/6v1Gh
67DhtO/sZYvIOsVXa9FXcR5RmYGHpvysbSeqmZGC67hdbUSt/mhx0+IDm6hC
hWH3XZgsotbtT7av395KVLe557lCFi1ETfQy/3parJWu5/ROy62hfCV7VLfz
pJZWus4cmFRleb8JiW5KkhxZwKIrT/LHx+/p1Hh1ZL2klTebrsYpKp/ajtWj
oQa3sRvXcOgqa3v53fi5dSgte+O4pj4OXdmvZUp3T6tFUv6fFHXi2uj6cZ9j
kpVMDZLti6jWXdlO1yLVBRe2LnmHbItu3c1ktdO1LElhTM2GKtRy0+fMSa8O
um5TcfCNOF6BgnaukY+T5dL1Ud2Ow9MCylDk/OzmmnAuXW1rwp7025cg2fht
KTpTeXQNVBxsyFj1Ct1bffPT+9s8uoruWlX3U60Q9Z6J6RiYxqerseQ6T62F
eeh2h2J5QQSfruZCqduqSrKRHvpyPVGik66mY/Y3S7pkoKG++pCT7p10NfW+
M26/xiO0nn/pmfFAJ11V8iLsyysSkOq+jYype7voar1kSo9qZDTS1oh95VfW
RdfcOVqqT3jn6eva+uC8By0vSL9hXRT09ZqugOdRa1+pHX0hYP2NXTM37zAg
9UHTbNeTlaQvsnuH3rJ2Cniu4+muL6xO0ndlvrR3bXEmddfyprDUUQKe7/X8
8ftJBOn3sk8d8IhfQupKrqzpfVWkzxyMlJX5eJzUE5zEgx5Ikbqfm6Z3/CPS
97rIaPpdsSB1kXEvn84aRequ3+9UfkgkfXjwdeG7G0xJnbl59lOxftL/i0Vk
o0uxpO5+SL1adLOA/U0aLmlqjyL1Gb/v9X9NI/sUuRUfdF/sI3Vwn9CxhU/y
PpD9FMPn8/fDQQLWh8w+7vBzuYB9SMULBo/0k/2dU0mkuFq6gPcLmsuqEp0F
9ImxHqt15wt472BGkGJLv4D3IHInvE5MIXVLl63B25xIPSl307PLWgL2ge0L
K/3SQfbXdlzNFvcHpJ67bGH1soOkPuf8899R80nd2+VP2OVvZD4gN6Y7bvMT
Ae+hSPZ6v3QVsG7GdNGpXjqk7hk/2797QMD6GAtGHDr1lNS9e7fdnu1J6oXP
JadKrRDw3s3EmLvNIlhXcb2x5GNFFzJNEpGZGoBzm3ifHa+33OpCzIrdA2ay
WA/WitBdfrQL2X0/G6R4A+dFUvqPY7+jLqQSlj+xeyrWndOKHR6Oo86T++2y
ThLOo7RS109PbuxEg1lZ71PmDFtH90Ff8vuHncj6ccuCsAycdy1bIPnXGmq8
Dj8TY/lQB+tZI5ZuzDT6exyXLTLOwXmaTuXBUxqKnUjsot+8DgOsh12d9XIM
n49cO784hFfgvK5hqebAyKd8lHCt96DvhmHrCTcuD6j056OK2dEfL9biPLDb
QFR2lTkf1SZennfPEuumImkDVhp8VByAuB3tOG88c7zsY9MPHsqMO6fy6Piw
99dujuIrlfNQk/QlU0PhYft0d73tLo/iobb3oy1G+Q3b73tSfoKVEw8F67H+
6pDH+ppbl3c+X8lDWrKc1k/xOEdN/+idUjeBhwxVjJ/G6mC9RUey34HFRbr+
ygeCc3BOG7/yWUPWEy5iztyiYbYG644b7F+K+XCRTKE/f8JbnANXS7S6VJlz
UfAUvRljd2FdJTVePP0vLqrIYiqsbcT5s6nFwWCHgQ5UvGf0wcv2WG+acHzs
rlcdKCV9xoxDX3G+XXS6Qs7megdyWjTm8Uk3rJ+4GiFfaduB1Do9csRHYH2u
8eL9HdrU8cvFf70+h3P1svLvxZtFqXnlglN/uTTWc6z3/ln0vh3V9hz/LXoN
5/YTr3TprY1rR5kd22QXTMG63gfGc7Wj7Uhl4aqMN4uGrU8++Mc0lEHpn/6E
slYO4wgtIRu+S1L6sRa/RsawfU96n+q/e9+GmnJvzftr7rDnN95nbA6+QvW/
6tejKz/g9dXjDf+EdWxvQ4xDP7+GZmAO4ujQeW6fHtUnKyf496tivaQn80CK
YhvqzowSPRaAOYvMzq1z/X9zkOmre1+SBzGvMSvs+bqnmYOY7zOft9ti3UDK
7+zUl9TxKxNcoz9i7qO9TVm8IYGazx5eX7DJGOth8S1Hn1zkoG7GsSUXszBX
Krg78UO/IwdVrDmqXfUX1j0rLF4abeQgz/FFdW6Bw/ZDuV6QWT6fg6z7K2+M
+Y45V2TBroNh46i/W/VxbPd2rAd0fZ+8q4eNUpKbz9WkY47W/X1H1PRqSm/O
k0qeinX2/muTn1LzruevDo/o85jTMeNuftwQxkYq+sqMgC7M9VTDJl03caXO
03m812sH1gOnTAjq2kGdZ1b1+Z1emBv23xnvdWUpGzGPZik/NMOcUX/dbOd1
SmxkXZ/i0aiA3083jkm1tv9Jzcfzuotm1WOO+fPtpc6Hn1ioaWrops+hmHtO
ZAafU82mdEa8tM0O/L58xS4Lr2kxLKTy2HfaxrmYn6p4/PHoOctCjIGhP4e/
YQ5bc+pJnq41C1nnT7yyOB9z26HxwWIPVrJQbg5za2nksPU3VBfYdatS59n9
bdy+A5gL14Q+zBcRoc5T8SlynhpeTyCpY3pAcWsrytWw2v++C3Nn0x7hjd8K
WxGjbsMcDRu8X0bL3jLJ7QnU8U8lhMpm4v01nN+FlWRepPxERHH1kQ7MwQNO
HNxd4Egdv3KZi0EI5uaR8vp9ZRup43mpcpP0MWcXn2UqLK9NHS9psLLpF17P
wfRYstJzeerzdAYuq+v87+tsyNaM/tTGonTnJUv28m7Q+hzZlmqtMkr/46Z4
Szqc1iVHzClpTqN0jaawtYqh+DpkHJ/8M4rSZ2wesvHFzzNYHz7u9MmX0s8+
mhHigp+LED0mdUvThdJjtbdc3eCNrwe5kpqHeyj9kvFyttQZWnd3n5oxeSul
lyc7j9c6jr/nVpfrXoaUrqS8+cwde1p3Sj8WKLyS0iX3XT7ivRf7Bz+nc15L
//ZbWyIKirf8Vx06D/R3oc8J/b+g7wH63qDvGfpdoN8R+t2h6wS6rqDrELpu
oescui+g+wi676D7FLqvoXEAGjegcQYal6BxDBr3oHESGlehcRgat6FxHpoX
oHkEmnegeQqa16B5EJo3oXkWmpeheRya9yGfAPkKyIdAvgXyOZAvgnwU5Lsg
nwb5OsgHQr4R8pmQL4V8LOR7IZ8M+WrIh0O+HfL5UF8A9RFQ3wH1KVBfA/VB
UN8E9VlQXwb1cVDfB/WJUF8J9aFQ3wr1uVBfDPXRUN8N9elQXw/lAFBuAOUM
/+dbJXKJf3Qox4ByDygngXIVKIeBchso54FyIShHgnInKKeCci0oB4NyMyhn
g3I5KMeDcj8oJ4RyRSiHhHJLKOeEclEoR4VyVyinhXJdKAeGcmMoZ4ZyaSjH
hnJvKCeHcnUoh4dyeyjnh7gAxBEg7gBxCohrQBwE4iYQZ4G4zH9yHIj7QJwI
4koQh4K4FcS5IC4GcTSIu0GcDuJ6EAeEuCHEGSEuCXFMiHtCnBTkqgCHhbgt
xHkhLgxxZIg7Q5wa4toQB4e4+b/Pe/xb/2+oznO7L09kdBI1IOtP0bhoPlFL
knb3FBVxiXri+Ka3LlfbiRqpd38WZ3obURVeczdoRbGJOrHQfud4CxZRmZ9l
5y2Y2EpUnZdVHilGLXTVrDVgnBzbghz11o5pM2qlq5XahK+ql5qRlqT6gLAa
i66ZjiulhgyaUI1U3oOR0my6utdk9w5UNSDmjefJU0vZdFWZW9jPvPEJFVwr
yRa5wqFr+nLm6x7jj+j24m1Plixro+vEHb8+bzb8gLLGmDbrfWuja/UXacuN
Ku+RnuOR0kfB7XQ1y0yN5JhUI2exqIxzSzroGs+e/dHNrBKFSMz+Ef66g66B
Wb+U7Ne8RdVqRcHhVD/4T5WU2HnDgfcG1UerJ7k2celaZSw6MDunGLG3nI7/
TPVr/9TIkUqT8y1eorTHihviuDy6lhbsmK3ilo/m6ifv3mXPp2vb3GavEOEX
iPlb+cCOej5dPWUCNd7ef4p8sjRNsrd00jVlxds9c0Y/Rg17F23RKOqkq+mz
3wpiDsloSGLrKTtGF12ZTaLMhf23kFfkRdWZd7roaj26eutH3Sv09Ws42t4+
kEf6BOYU0xNfDpF6+PWTAx9aSL9hWLuo3PEQqbsXh95J+E76Gd6MyW/GeQvY
b2XSw5554wUc3+2l2XWT9FFKz7mzxswldRe33d3aOaR/M181/5jydlLPHb28
uqqf9If6I+6ZFYSReutqp9ySOaSe+eK7zaky0q+qePnY9rmQupiZfOt+RQHP
P48uEUp+RfpnXQ39qy32pF6suuZpvoyA9fp+6IjlPhHg2/Uz2Y8PkrrcDSFf
FSVSb63IE5IrI/sLlf0js5tcSb3VQFZtsbYAfbziyX422e8kjWEqPblF6vLz
jpV92yxgXY5iz/U7R5N6tt0k+6UFZF8m9muT/gUfUmfIXRAZvUrA8x6TvflN
o0hdy49XOvKFgOc0DNe15XiRetvkzbzklaTeLV42gfeT7H8N9YREvuQIeJ/i
6QeTM2dJvVY1dPsMJGA/WY3YZwwxUr9TEpFb9Irs67Nd455dCBLw/ohUWImh
CakHP076ekuS1IWUxqiUlpO5xKorpwzmXSd1Rkv2/fkWpC5m92lB2BSsxw+9
CbZgU+Pa118Hv7zAeUuHj/Cci+ldyLBSrHOnIdbXVIkX7fXvQilSil0nPuA8
J3f3ya2nzalx8Mi9rQutsN5kvu7VD7UupLVr8bHjbJwXleWbW/gMUeMap6F5
4zGsM2uvqNuXdaLgaN4B/xFYX/NnyTKD6E6k9Vtmspo/zqkincSyXanx0XPy
hJpkSayvf69Zfk2/E+lOOO514jrOwaKb40fuG9uJxBbeEh1SxXpySA8LNfCR
Vs+n51MTcc5mf2BQ3SKZj/xG8u32zMe67YP4kxvcqfH0scrswnSc451Zfnj8
lw18pBslq7loNdadM0vj1qrykUqZh7J2Lc4Jo9U5viV9PCTWlmc2ZIP1ZWxn
q54iHgp/cevgzh6cT8Z7V9johfEQ08j/+5WTw9Y9Lr8mc+AwDzl5nUgcIYd1
LUWFp4eW89CgQd4GqSici1rflUrYIUcdP336jKYFWA8QucbntnCR+cW+yrKn
w97La0xKDs/gIsZsrUe/1mO9oX3nNbYvFyUU7z+eW41zXcaj3ZsYllzEXHbk
DdN22Loc39bwNmlwUbdtanlpO86NLTiPH73+0YGsVxYudz0+7P1EzahlD8o7
kNNx0cg0Eax7OXxv+hnTgQwvH1ngGoTzaqGFWl+qHan547zrkyvjsW4itnua
7IoOlBvqWP0wFufkTtbTnC2kO5D80eqpe2cOe95j+ucW7aZ2VFuT/PRcCs7h
sxiqs8QftaOKabV7Ji8bltvvXLgo2LsdpZSMEq8Mwzn/esa9nJub2pHTCrPH
yuGYC7D92Z4+U9qRZ6qnNzMEcwQZ3fkulzltyFS+f1XZBcwdbNeufBR1n5qH
9hudlrbA77HyPya/zLOl+r8V++uLR2B+4dh8xnHK6jakcuC4asgOzDt+Panb
KjSrDXUHrU4eUYC5ifajzAxbcer8p2+EjViI9SR7jkcNn4OsJ1zw0IrD/GXO
9FHNnpUc1HRv8n7vSVhPKT1xQOYxBzn92TRqszfmOxp5V468DuOgipe1c7t6
hj3vYd3+UdeN0lsurVCywXrKveDSZ1bUebZW/773DnMoh+p3WTKIg1SmqcWb
LcX6iZ7pCnYqHGSa8eC8WCzmWdXPvry1GkEdf99R+r1owbDrp9EkpZmNgpXN
Lxy1w7wsbVZSWUM+G3kWWYpsLR+2Pn90Asv/DhtVjDNyT9XB+onll5g9F9jI
VPfV9MxozO8i3zo9f3OAmqfHLswcEsV66ej61BpDSt8Q/nVvLeaG1fES06ap
sxHD22W90Q3MGRWMZoz7OIY6vsv+vtte/H66yqxNsxa0sxDDd7b/N0XMK4UT
cjPGvmYhlWCfuSF1mHvaDkwQP3OPmtfvfdr3JWHY8x7pnyVOB1LnmZJzotwd
v19vzOAlrj9MHe+ld7tjA+atoktjuVc2Usdv2LYwTRHzWe2A6pSG+dTxtgZt
CV8x5+X9MJX4Oo46/oP6UZc0zIVtMswspHpbUZP6at8LZ/F6ApFTZRQkqyh/
oH9L5NRCzJetpxw8J/ukFXka6Sj5/IXXK/DpltJbe53SSyb6B1fep/VtsTc2
Rbq1otwHatZjQxPx/BIi1L7UijreT2LhA8O7eNyY3dBpiKi/a7k28VEPXoeh
7sME4TxVSm94vEzuDV63oddv5vxmMUpPG/nheipe50FSnH1VqpvyJVd7epXP
43UhhKfYLrn6voX6u30DtbvwOhJJz5TmJj2jjjc7I8nZjPc9mdn8MsnoDqVr
cn9X3b9C6zpOt37/DKL0cc5XpXcH4s8/Zq8r+ySlV8TGjHK9gMeT+8oPDuyn
9A6N6lJrD1rXO2UusngLpRcaZeyNdcHfT3NyK3MtpYtZfJzifxD/vyS37P+0
jNJV/n4ewwL/Xg2bLHYu/ue5jlX/VYfOA/1d6HNC/y/oe4C+N+h7hn4X6HeE
fnfoOoGuK+g6hK5b6DqH7gvoPoLuO+g+he5raByAxg1onIHGJWgcg8Y9aJyE
xlVoHIbGbWich+YFaB6B5h1onoLmNWgehOZNaJ6F5mVoHofmfcgnQL4C8iGQ
b4F8DuSLIB8F+S7Ip0G+DvKBoG8EfCbkSyEfC/leyCdDvhr04YBvh3w+1BdA
fQTUd0B9CtTXQH0Q1DdBfRbUl0F9HNT3QX0i1FdCfSjUt0J9LtQXQ3001HdD
fTrU10M5AJQbQDkDlEv8zz8yx/hHh3IPKCeBchUoh4FyGyjngXIhKEeCcico
p4JyLSgHg3IzKGeDcjkox4NyPygnhHJFKIeEckso54RyUShHBXNXIKeFcl0o
B4ZyYyhnBnNpIMeGcm8oJ4dydSiHh3J7KOeHuADEESDuAHEKkGsAHATiJhBn
gbgMxHH+k/tAnAjiShCHgrgVxLkgLgZxNIi7QZwO4noQB4S4IcQZIS4JcUyI
e0KcFOKqEIeFuC3EeSEuDHFkiDtDnBri2hAHh7g5xNn/uZ7/rf/W/40KXYdW
2ZrmASP5RGVErQ4Q0eQSVfWG58V1G9qJ6qR65ePueg5Rw2ZqVxzYxiaqwkBq
iZoMi6jVAzGDT963ELWhPTjX7xKui27N/Lzg3hc0Octi8e3QVrp+bBuYIzGt
GQlv7FWwOcyia//4mQ9rHn9G22wCF/psYdP153uLvY4jG1DQ5Qe6leM5dLXY
1Lc18FUdUnn4bX9gHYeuzK/K5RZOtchntNWZ90FtdHVsb/P12FaDogfdXG/p
tdNVfeLlMEXTd0jHZdOZP5/a6Wp1W8JvhEMVipcyyekM6KCr1Af5Yu3dFai3
+mp/ojyXrsZil3VFHMrQiXb7BT/juXTV8z1bOXFiCZLNTTR8QM3r/9RAj1HG
HfwiJPx7/umGLB5deRLvlN7GFKCQsQwVyUV8ugYmeCzPyMtFJZKjyv6k8Oka
aFtgM/LxM5T2/QRbcVYnXcONHBakaqSjgsSb3z5FdtK1VtzbPSUnBdVsl1P+
JttF16aCSZqjpsUj2TYbiTMeXXS1dl/VECQfjrzQi1L/ti66eloFO8WHH6Wv
X8YW499mYaQf8Gvc9it9vID9Wfr0x0hdFeAr7kilbJ5C6paXnCqU7wrwOcWT
r3N0SX3Lbq3FH/JIv9TUnJhTuonUTQ8uOjD1E+nHardOspl4ktQduNEJBhNI
vXSUaG7eI9IHzrAQ2lS0gdSbuqU36bWT/rP+zA/xvmBSZ+zatP7RYlKP2ulU
lNYgYJ2957UbL10gdV75wOqfaqTueelI75YK0p9r2cZkhZwhdV781Ai/+aQe
vvOlfcAXAesKTneRK79M6rqtMjceG5A6z0x68c4hAesiLl5QNPYBqZvGftpV
t5/UB7OW7lsymdSZC46c+/2O7L8sdc7eTw8hdaaI0YDPVlJ/ZzPK+a4sqXeb
mqy88ZbsH+dsM559/IqAdSmb1bpFNwl4T6HQ+tDesaTuXnb1gU852edG1RT2
3LtE6plbo5au2SigL56ZI79BTkDfPbh+5opasn9v1eUKt94k9fpyxMreTerv
zlkJf1Qmdd3REW+usMj8IVTou8/2RFKvPX7wXtZRAfvhdnG73bSxLiw74vW6
713I7+H5E7pdOD9Ju5h1cntpF2JYbb5fdxbrNukT5dOju9DgK139teJYb7jS
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
HlGXpaC7WxW5RDU5Nj9m+ZJ2oupP9NexesMhakenhuKqFWyi5kq9CIr+1UpU
SSff9J95LUSduzH2YQ8T12X+ga7XKF82c9Xviedvt9K1KOJ8Q7Z4MxKN/ZNT
7c6iK2/yiCJv/8/IRCOnRNiaTVeFc8U3+z7XI7ZX7F+mUzl0NXaRvywdW4fY
K8aaL2nj0NVY7/2A2dpadEZcMW4grI2u/k0PZCYvrUEhP3SZBQbtdF0jtXXq
k4XvkDPzwdm5X9rpGq/c53VyRxWS+mX9OPdSB10/ijV8yTGrQE1zxKedmsyl
a+7X/CXqB8qQzcovlm/ucumadPRR1dJxJahi/5R1k9R5dFWJ3rjOZcwrpLGy
xNMlg0dXUeeVP1alFSBmufemT3P4dGWotUys/5qLpJTqhWwT+XS1e/jg22Lp
bFQmHjx6rkInXe3OoriWl+nIZEeDouLlTrraVdxMzVqfiiLTfT4/EumiK7N5
l8TSy3dRS1Xqx7nOXXS1Pp6geeBAJLJOz7YR+tBFVyHdkwuevDhLX78pq3+t
fZpM+oFiK4aB0jxSnyM00nJ/KukrJO+P4X1ikHrpydtv970hfYv8EtXL9ZYC
/Ezyrrez+aQv0tqFnvi6CVg/bbHc1zVipG7O1Io3jCX9GG9RBvc4g9T9Ciqt
PjaSPlB+9lGWrS+pp9weI/tDmdTDG+8vMcwXsD/LirtXFx8SsK5dcm1jm5yg
55nTrUcWkn7Y+pQbM/4gqc9xGb0tW5bUc00NGeZZpD8XmiL3YcCJ1DOtrj3h
zSB16yM1111ryX5B7efXV4t8SZ3JVzeZvoLUTa9n7d3YT/Yv5k/tH25JFfCc
/GgjiYaDAnSh03LO00i9dJlSZmoj2X/pLlT7gm6Suou+792w3QKe259bGb1r
uoDnQ/xnLxv5hewfrc0fvDRikrpI0Lx3snsF9Kc9z/vezyR1/YuNB9a3kP1v
Qo1vuvt9Uk9R+ZzYaUvqpt8t7i7XJvXi5KmunQNk/y6f1xbilk3qWptnb+4/
L2DfljGZryrXknpxyKg0zmgB74lMz/+WXUbmEszHP7baXCN1yx/ZlXFWpD5H
3TOWoYp1GXfP5H38LqSmk5d6uhLnKjnx9SYFz7tQLfPuyjZLrA9995mudr0L
dTtt2tb6fdi+Lb69qQxbajytasq+5YF1HZfUhUuXdiG/2GfCcnJYz0JR+dcl
upDpTR/bH1E4R/I8sEh5YlMnyj1/wWixFtYZ8aFG7590IubNXv1rRTinMv09
vuejfycqPv2wjmmOdevj53/M39GJnP4q6vvZiHMwC27U13Oancja2K9xlQvW
fZ7EdBkId6KKl5If1MWGPTeivHXm8/fUfFP2bvfOMJy/WYmonWqK46M28VbN
VGWse+m3/R57io8Mr686E/cA534poz6GSvz9Xtgl5T4lA6yLLr59WnomHwWP
kX8y8zPOFeN7523SGaTmy+aBEl8HrFdHKSsqUD5Ixq/UYIXUsByyfM4D6zs8
xBR2SuuJxHlmunJx3XV3Hio27os9vXjY/i85Ivm5pjyk9VGC1fwa56jdF6J+
JM3kodoNo4+nWGO94eivtNBBLkqI+p7nzMc5rdCoV9ODyrnIM7Cnxtob65FK
Vs1nblP6K7u0LHmsi2oeTLjvxkUyvaJ/JT8atk6Ipcopjw1cxGRXPFi+Cusd
JtNz/KdxUXH+e/Paapw/mxQX2y/s60C5fd/EvfZiXWZx7fjA1x0owV9pXuPA
sPWrPWavro3oQIbPeUlRnlhPzpA2V3foQFpGsywPjB2Wnx/wrni1vAOJCRv5
90bhvD2SUW3QJ9OBPKcFJ+7VGKbvbN3k1kLNQ6ys0tRMnOdrLXhdX5PRjlx/
9c+KMMK6QsuGbL2AduR5JCD5r7Rhz42oOo932NmOgtOQpdJrzBe2GS213/1X
O0pxVZNtyMI8wmR5+obQnjbkufiyPysD8wuhauvrSlnUfDa1te9S7LDnRjaI
Tx9zitJ9tO/NtcJ8xJTJWco1akPB03xmh5/GPMVZS/7WnXltiPHV9a/FnZjL
mA6dHfIfRx3f4taauh3rc4yl3tX3cVCT+8oZpsWY76zX/Nxi8ZHqYzk7nYuW
Yz3SOC93VTY1X3oUFWxPxvxIadDgQUQMBwXXmh0Qmoz1mnSHXfrnOUjr6tTa
uRcxn2p6l5UTYsNB1mrxj7/0YM6lMdCkE7Kagyqq941v2on1NWtGZMnOoo7f
LRq7twDzMqavn1+NKAepxN+7pzV92PvU0uXhOWw2MjUR/Zl2DvO4mUYzSste
UX3DySc/RTjDuF6QC0cmkTo+b82FLSZYF103b0VzABupOPJW26YPez5kcc+j
/EPU8XLpZ8sUsJ704o+0hgl1fvdfN+8IY/7I7niupjCX8gdzj18fVYA5ZlNk
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
RqjS9xHVOAdzdkn0ygvqRCq3Z7222Yt1m11tjsrWnWiQWzjeuBvnbAzbgsQi
7U7E9LBLcDqH9ZDwmIHLEp3I6Ywkl6OE9e6pPR5bP/NR7du6F1sf4NzP5K6B
mGIa1XdNTwwtQMP2cTZe8GW2Hx+5vjjzxPEdzhUnrkh7Xm3FR5nTcy2v2GO9
zuiMl78O1ccte1q8XQzrWpnTDcaNpc5TWjNr9m2cZxahCPPvTTzkNNXD6siC
Yc+N9Eh7jszkoeD6WQzRUpyjpo3Ry75wiYcY8le2bdiHdcddySP3H6B8mEOq
j/vIYfvIfJ57ajriocHkr5o10Ti/DTHZP3BHnoe6V5yxj1qG9W2sxkQFLheZ
L0tOyH+D8+Ggu+aHU/Oo/jG2IWTpPqzfXuyR0X6Ni+Qlnq8v7se5dHRwyaSj
R7jI76Dbs8gwrJs6/370fgUXGaq4o7AZw/YTN2jf+mcC5UvUX237nY7zcLOW
iRfKOjuQqe7T0hFbh603ovjjunJeB2K87D1d+mVYPv9FSFbmWgcqXnR+XoIL
1rN2uFy0t6PO0xRrKT4K69WjdojE63ag4EuN4jeDcP6vFXQ/8JBkBxpsSvos
ORXrJWeXNY1qaEeD2REplxIwX1izpG9916N2pHV579JtCOu5X9Zv0PVpR7mO
J3wn38T8oozvbmxmTs2LcU5nmU8x75hpaSSUokIdX+o6wuk25iNaq5KKC/lt
qHuLFffDHcxTbHJmJFQ+ovRHGYbyZzF/qbhjtoPh2IZkdGOfr5iOeU3Oreax
mwzbUIqa3fprB4etK3KngSU5m5pHdbacYXzAPMjTeW7ubqk25LmiJbdx5bD1
Rppv3Wzq5iCV/erKNo8xb9o2In791moOShFdfvyeCtZvT7v37fUTDtJK2Fza
E4h5Fs+g4vDr6xzENBun0dWPudhtEUV+vxt1/CTfW1W2WGdq7yg4a0n93ZHP
K06VY75mKzvq+pFl1Py9Z3LvXG2sx6fovNxEzesM53F14Vcxv1OJHvpW8ouN
mONYZf19mAMylBxWowY2YgQp7dTfjHXLGw2hadlsVCG2pe3cQ8wTg9/t6PKK
pvSZeUkhsljvt7Qz5p6l9IoxZ8Pdcof9vgqLfu1mI8+I0bKtLzD3VJHUU3Rl
UH/31CqZVG/8PnuwcV4hYxr1OX8FPvQ1xvw0pFP14CchNsrddEDxqhjmrVE5
d+5M/sxCKnZHDgtl4Pfr17vVc5ResFBTUdTYaScxz2W4nb5XyWQhz6KqBC3D
YfsyzPaz7zr3N+fdpG4hi3mxqfHycu+9lP7j8Fitj5g76++8v+TzKhayDk5l
ZKbg9QTmNJVvW0H5ldw8uX1BZzG/bplgfVRyNPV56nId3ddg3l1i0ZJ3k9OK
mi42X10mifk4u3NQrqSY8iX3jt1+/RCvh+DcMmP3hiRKf9l8eOqJZFrXntVy
/2Awpcu8cFxhiHn9UOy6qEyXVuT5LHeRgzLm+4FvpwQ4mVPHL95SUtIWT+v1
yzwMQvVbEeN99+prz/C+HsLt6qPlVCl94ZrLwTl4H5CikaXB3RJ/rwvRvfFN
J943JFDpsEJZH+V7TiycJsnAzzMUnTt/3aSR0tfuS5qajZ9/EOKEyZW/onT5
0MXautdpXSnxpWjtoxbk6fBlbF4Pfr4ifszk39I3qePPt6d51AX/Vx06D/R3
oc8J/r+A7wH63qDvGfpdoN8R+t2h6wS6rqDrELpuoescui+g+wi676D7FLqv
oXEAGjegcQYal6BxDBr3oHESGlehcRgat6FxHpoXoHkEmnfAeQqY16B5EJo3
oXkWmpeheRya9yGfAPkKyIdAvgXyOZAvgnwU5Lsgnwb5OsgHQr4R8pmQL4V8
LOR7IZ8M+WrIh0O+HfL5UF8A9RFQ3wH1KVBfA/VBUN8E9VlQXwb1cVDfB/WJ
UF8J9aFQ3wr1uVBfDPXRUN8N9elQXw/lAP/n2yNyg390KGeAcgkox4ByDygn
gXIVKIeBchso54FyIShHgnInKKeCci0oB4NyMyhng3I5KMeDcj8oJ4RyRSiH
hHJLKOeEclEoR4VyVyinBXNdIAeGcmMoZ4ZyaSjHhnJvKCeHcnUoh4dyeyjn
h7gAxBEg7gBxCohrQBwE4iYQZ4G4DMRx/pP7QJwI4koQh4K4FcS5IC4GcTSI
u0GcDuJ6EAeEuCHEGSEuCXFMiHtCnBTiqhCHhbgtxHkhLgxxZIg7Q5wa4toQ
B4e4+b/Pe/xb/2+oeuzJ70XWdxKVfbpC1+gTj6i9jFEG8WO5RK0Idr1wb3k7
URU6DncrV3CIaqB4S93emE3UYAdb4XApFlELzk69uae6haj+5uvC5wTgOv/H
FcWclC+I4Tb/oXBgK12ZxYtODVE+lDHvT3/xLhaux0YqxrV8RsGSI96dWcWm
q2ndTy8fytdrOL1rzv/BpqvXw/MWGZKf0Fy7xhXLsjl0dXu1T8/wDdUPbQw+
NHpfG66yG3Paq2tQme28Z5ay7XSNeHO0vP3lOxRkMbpjbnw7XXd0t684IVWN
ep+Yc+4bddB1ZuO3dT+VKhGz27jySGUHXRmWC+T3THqL9Cttll7ZyaXrVfnE
G+F1b9BMm+27ntRy6aqQ3Pv6BbcYuW3M2GO6m0fXmaqPn0wpfIlyZ2kslqvh
0dVznPATnx/5iLl5jFSiMZ+uDJni1DELc1HWxt4Kz0w+XY0Nwhf273iG3Jbf
/bBWvZOupuPVW2/JpKPqxewIi4uddJXfu+h17slUtK11mrX/iC66Nl2v+qn8
6S6yNtlgYrmri65CZzedS90Qg7yUZT73FnTRNfdS345Abx/6ui72l0t0qBew
n8tzlebxVgL0E/Wru9tJv5HAs/FY5iLg+ZBfreXZ4wSsP3ZgTK19nIB969rq
4zavJnUxdt+PnAbSX4VW2clUupC64b3roefHk3rS6NN2mx8K2P9lW8+yqq2k
7mTsqlgxgtSNz1n4qyaQPjP4fEvf3W0C9oUpnbUw9TvpYx3Klo8emyRg3Y+4
AOlblgKei35mKP17HKkP7rDj8gQ8X62mduyJ6ykB+zAGLLv58i8Bvj3E8ujY
BrIvMPZ7N3H7FVJ/l6es37mB1E3DAr2vjyH11iIJh4uFZP/SZNl0P9pdwDoh
l//sVUKk7rru4tvy3wLWReyysLXNI3XDk1tyV50l9bbAdwF8PVKX/LrSJX+I
7AdlspP64/JIPVczP67Yj9QfX5aJ1zQj9dq5CxgnJ5K60Gi/mOgmss811XOr
bo8VsH6I/Ihxl+xJvXBtbeHdhaQeuHr10kt9ZJ8+6PTSSejF//ccwMHswUC3
sYD9Xl/WTOpSInXPpsMHMlhkLpHrbWlYmiLgfRaXfKnVpwWsOzr2XCPTgNT1
P+i/4YiS+k+DA1n3Ksm8pbv/meOfSAH755o2u00+ROqthvrlsfNJ3U9luvRh
IayH1Fzem1BN9U3hB/pnXMH50pqZy5/o3+9CKbsVX06aM2wdkkPOe0XPdaHu
IJX+y/k4vzLz9Wu8tL0LmW7eOodlMSzXqpVh2WlR559yT1/0+7D3oT4fXtw4
ijp+3rWA+5ew7jgj5MyXT51I5lPXkvS/hq1DcvD6naL0TqTi63ajuxjndVKX
xy7IouYb5v4ZZzZZYd1s+YnUa3s7UcWNu0tP9OM8UHs1w8dVhxrfk5kb5/ph
vSlN4nzQuL/39Zzysnn2sOdPFgwtMeXwkdPZnmDDfJxPai/foh2czUeeNzZ7
2m3HujOystIKpeZT5YPtrl9x/lnWve2GqCM1T1js8A4OxrrC3bj6jFV8lDst
5u6b2VifySsLfq7MR9blI+3rS3EeK6s16tfUPh7SGgwc3LgX69sKX6TllPNQ
rf3uFXUiWA/yWeK6JY6HrCsuzzGLxjmwhWn+d5YHDzUV7+9+jrAuW35zfctW
6vxel/Uya3D+vGywvGqXFg+FO4yS5rsO278m3emMiSjlJ15FPM2Txnr1O+Ok
zAYukpHLfWByD+fe9xbPr9R4zEVqEj/ED63EesWrV+LVAVzk59wbKf0J5+p1
c74GfN1N9cNOVjsbj2A999A+4TELucha6rTfxJFY1/C4Gp4nzkVtyw7/aonE
Ob9NRv5Y66YO5FrCntGtNWydbVa0w7a0DhT8PEDaPBdzhDU19tmuvh0oZZLE
h+TNWFe5Kp7507wDmToqlJ5sxPzCaWKWwsjZHUhet3LlhUPDuMZHv6/MH+3I
VGXbrvHfMB+ZGFM77Xh5O9K9GP1uhjfWZRMj56nEtKOU+JEnTSWwHvn++qHy
v98vmjMwWUwRcxmz2Az++KXtiDk77M6uWZjjTNQbZblzVDtymq5QWqyAuc/M
Z3mvTMvbUO7dYnbIaMyJLBTiDs3zo3SvJQr8hGH72lzUS3bZ3IZUMmbsXRuF
+VSQk6+k30Lq+AVxyxNEh71fvG3f6dly1Dz94Jvdx32YczHytU9s6ecgxpuR
G+PfYl6m13PUuP4DB6mkLzlrshjrXh/LzKZkcVAwGnX7aizmcVoTZvjOvcFB
3Qcf324ZjXXZT5xr5u4cZL3Wl5/lOGz/GosdrNKd1Lxe8NxN6A3mg/qHNW/u
WMpBWrPaFHPVsC46xqfvhwL1eebGFHF9MH+0ZoRO6Rtko6YVrJDCeswrVW9N
G1Fby0YpfyWM0tXHehp/ICshg40873yINwrDPFRF02Pf0XA2YrJP9+sMYa6q
VxCnvOcUG6lU6EewdmE9Tctod5k55Sc4XZmjXDGf9ZTc0ia8hNLPGMrO0sM8
l/k2kWkpz0YMpdg1Mb2YC/NsJ6Z/H6D6olFNSnkP8fv+1kZe0to1LJTbo3Lj
txXmy0Xv0/T+yvh73wdRI5dZmEd7Sqze2n2d8h/Oj7bYdGGuXf1I6JCdG3X+
n6KacsV4vQILll5BriULeX4zZvrexHw8KsHJ8juDhVTCbKNy/DFPz/598tZG
VRay7n24QWnPsH0uCn1li0dTnyfJpKDCBPN65ubFPzd1UP2gnnqd9qxh6zCc
GGmRWEb5lRh572ixFPz9VykoXk1rRZ728sr2o/E6Dw6NGY4GUZRubXV11SK8
f0eI+O0uCy9Kr87OVDDA+33U6ZQJDThR518nJmNcjfcHif+V7bpuB6VXFhzO
+Y6fc+hPOmmTZ0x9Tq8dLxX/4PUr1j/XNd+r24pyGw63Pjhw57/q0Hmgvwt9
Tuj/BX0P0PcGfc/Q7wL9jtDvDl0n0HUFXYfQdQtd59B9Ad1H0H0H3afQfQ2N
A9C4AY0z0LgEjWPQuAeNk9C4Co3D0LgNjfPQvADNI9C8A81T0LwGzYPQvAnN
s9C8DM3j0LwP+QTIV0A+BPItkM+BfBHkoyDfBfk0yNdBPhDyjZDPhHwp5GMh
3wv5ZMhXQz4c8u2Qz4f6AqiPgPoOqE+B+hqoD4L6JqjPgvoyqI+D+j6oT4T6
SqgPhfpWqM+F+uL/+Uf20f/oUN8N9elQXw/lAFBuAOUMUC4B5hhA7gHlJFCu
AuUwUG4D5TxQLgTlSFDuBOVUUK4F5WBQbgblbFAuB+V4UO4H5YRQrgjlkFBu
CeWcUC4K5ahQ7grltFCuC+XAUG4M5cxQLg3l2FDuDeXkUK4O5fBQbg/l/BAX
gDgCxB0gTgFxDYiDQNwE4iwQl/lPjgNxH4gTQVwJ4lAQt4I4F8TFII4GcTeI
00FcD+KAEDeEOCPEJSGOCXFPiJNCXBXisBC3hTgvxIUhjgxxZ4hTQ1wb4uAQ
N4c4+z/X+b/13/q/UaHr0IDxpu6WHJ+oQjHpxR4ruESVuaV91GlXO1Fn3r/+
0aSLQ9SsKau+NjuyieokpVm5TItFVEvje4+0eluI+nTpnPNFB3E9GJ+jv635
C+LLuh45dKCVrlO+vKlt3NeMeotXZ2hR/umfGrJ5Ej9drQnp6FmhJ4psulpu
alvRlNSAhqw5K2Mq2HSVbVi3+K9Ln5DjCJGdKIBD16wfvZ0r9nxEcy3rTk6c
10ZXN65TePaxD6jG4/19/Y9tdD3j6fFznct7VJaPGu44tNM1IoNhNy6rGjl5
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
P8vyEgH6qEn+EncE3Mcy05579Tipi1XdnTrRkNRLLNgSq2aRen9Wq+2sb2RO
IlbkpxxVIeD7Jh3CtuJ3SD27KQ61nRSQzxwXr/iyScDPe9/coiBP6usfG0+o
55F5UcWPirE1rwTc78Xp1Pr9UaQu1DHr3GdXUk+1zjz+2ZDU3SXLc6erCLhv
qqj14tVDAvK0uCsDYe8E3JdV8wct8L6A5+funyCfeUrA/WEyrkdZbxeQ761J
u3FxnoD88PJqWU0RUn8mZylt00LmkJrb749rTxLwHOGP7KQngQK+b5UW6WZj
Seqff87e8mMBqTukMfesHCUg/8z+KtrdJOB5x+5uUbLpAvLey1v7pgUJuE7G
elmZ5T4B31P7EmV+fBmpL2DILjooRepVHx6q5/SQeXXdcLY2yhLwPb7nTmHf
L5H6g6Mc+2M2pB44zUI+YBmpm606cGuOMKlrh3904tWSef7rq+Xhpx+Sumb6
Wfk4V1JfX9Kae3I9qdsdmuqwSlbA65RyDuoyBfQa0QwroyxSz1CziXzmR+rO
EzTCBreRes/2sr4WGQE/X9l3ndVF9jtm29P1DFNIXTv7aco+D1KnZZtuUlwn
4P7htjc0xMUp3fzZQuW0Jj5qbDixUzeG6rNcfUO+pSfxUUxJJ//lIkpPrDa4
EePJR2riT05NevrH/c8Zsze3buOj/g3WOfEb/3iOvNfBpaIjfj0hU1hEoorq
6cxd/OWE+DxkEVWJfHZSehnH2HnVKx4aevcqIryX6gdVTPYmh10e+XlDpydM
+z++76zv2a1kxUPZczO0d3RS/WOyytZZJ1V5SNNS33Qu7Y/vX7NozppfuUhs
00fZb0yq3zy82zUq4QUXBdrF+M3ZS+nNXYmzxIO5SGnFfLMZ7VR/muw1PybR
nItSsxzDEi0oXclusYjKXC4y8fh+4X0n1c9On7XCzOMTB5XUXKx5QqP05GC7
jSEFHJS613OJbSfVC0s8+r1iXAgHxaj+nnCTRumqC3WLxfdwEO1TBH8mm+qd
a6eYb+vS4CCppbuKnx6ndN9Z8cn+39moxHTmkrefqV5ba+HghHmlbOTj2neb
fpLSw/b4btS5xUYOjiVpk35TvXnVrmWRkU5sFLjb/9z58D/0hfvQ6rVsJObm
dkdG5Y/nE2leHvw1jY2yhw44/MyjevmfHw7XGX1hoaFFE6T1DvzxfIeFR7JK
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
3oTK0lFepN4fuqLGwFTA/XWTjc4f1RDwOqHlMkdHCciZK4XOezeTubRjbZPk
s0ek7tM261O2t4D8/FVQ/QlTUn8942dYvpqAPFzn7qdL3wXk/6Gfx7ytJnVG
7PaHd++TutT8w0ILXEk9VWmtactKUnevmTGmYpyAvqAybiqnmew1sltaH3cm
k7qJ0N2Hql6kntAxX1jbiNQD7b4mXZ9G6tZfjFo5dAHfb52ckc5MJnUHoSdr
pDxJ3cR6xrbL+gL6KfPtgcpjBVy38zy+Rr+c7LliFr76WB5O6pwpRn5XzQR8
n7dHudtBSUAfZ0//EtxF9ncJ+SJHjj4idQfFHO/th0k9MDz3yUM1UqfdPvu6
g0n2klUJd7dYJZH67MaalSZHSb3uoZHd6wWU3lyQeieMz0dKXTnBzAaqbw35
4FJ+a2Re6UiJ9hLaS+mfLjBKxC6P6KYbBq/3Un2uj0XE5lQaH+m1eeVmu1B6
yPbh8oKFIz9fPvCz8/Mf18+w2taKC/HRUFnigxk+lB7kOy75fhUPNZbcTL0x
jtLjTatePYrjIaVqsYNqd6ieWsTP5leuGw+JlTE9TVUp/fCyNwtGbeehQNGP
/PNlf1xv02fbuWDuyBxZeEKr35bSXTMSgjrG/9f3/eOsFitQevH2Vc6fmFzk
bBQe0VFC9e9jRnPGFdZykdT4txEHr/xxX5rx2gZZOSM/Lx+8aLMJpRs/1BdT
SOciPeVH4YXoj37/+SbZ6EQuEtudvTpA/X/WodeBfi/0d0L/L+h9gN436H2G
Phfoc4Q+d+g4gY4r6DiEjlvoOIfOi//+R55Hf+vQeQedp9B5Da0D0LoBrTPQ
ugStY9C6B62T0LoKrcPQug2t89C+AO0j0L4D7VPQvgbug8C+Ce2z0L4M7ePQ
vg/NCdBcAc0h0NwCzTnQXATNUdDcBc1p0FwHzYHQ3AjNmdBcCs2x0NwLzcnQ
XA3N4dDcDs35kC+AfATkOyCfAvkayAdBvgnyWZAvg3wc5Psgnwj5SsiHQr4V
8rmQL4Z8NOS7IZ8O+XooB4ByAyhngHIJKMeAcg8oJ4FyFSiHgXIbKOeBciEo
R4JyJyingnItKAeDcjMoZ4NyOSjH+2fuB+WEUK4I5ZBQbgnlnFAuCuWoUO4K
5bRQrgvlwGBuDOTMUC4N5dhQ7g3l5FCuDuXwUG4P5fxQLwD1CFDvAPUUUK8B
9SBQbwL1LFAvA/U4UO8D9URQrwT1UFBvBfVcUC8G9WhQ7wb1dFCvB/WAUG8I
9YxQLwn1mFDvCfWkUK8K9bBQbwv1vFAvDPXIUO8M9dRQrw314H+vz//yX/5v
IHScB3y9OphhyiF4Rq7N5hyXRVDmoOqRhONMgs7K6i+KDjEIqvafnDBjbx9B
K6b/a4PbdIKtF1S1z5f3EvSNnOK7cwHJT17hkdbnegga7Lrwo0+cpN6anctE
LncTlCqMfsnWoejQEm5zZ243KuS7+Ex+RHG37E5kd74L6c/fIzVlTA+mwovj
fZ2DnciyZE5U38g6+zdPm268OftoJ/q5Ynbkq9weTNGkUtnWvg70SSPMr1ey
F1M6b27Ow0MdaIzVwXXbrHsxOQOl2pPZH1CuWbV2emYvZu2o4J30lnaksbfs
6JLxdEyPrphMh842FBvY5+K1g44pY78pMUisDRVEz4u8EUWnOM938WqNVqRb
mJHL7qJjbs7sfLd6VwuSvvLz7N55fZjFRmN9On2bUYjRT6MIlz5MK3kxuRV/
NSF7z2+TctL7MCtCpMvqehqRfN+azmVDfZjpm/Wt90xrRP0r9uoNL2Vgalp0
rZlk+x75hHILDp1mUDRbkf/qWgPSCj185f3Iev837XcWbDndUo8G5QqdtL8y
MKenZaaby9cjidOPIm8vYGI2hYtozvWoQxL3Mtq2H2RiNil22Y8vq0UG8wIM
pG4zMTX8ji54p1aLlO5KZl2rY2LGKNc1rz9fg4xTTNsnS7Ew5b6MPvDmXTUq
1h8z0GTAwkxeyl1wfH41kh+eFlnhycJMn5S9ODK4Cn3yn7f4ThIL06h1TNPm
z+/QcgPZLc9H/PDfzLVy0g1iv0U27+Z7aYxnY9aofJPhv6pE4i6Tb0euYGOm
WV7ZTkurQKYn6rKb9rMxxQ1E/+pNKEdBxeGW0y+zMYstfOnb4srQM9mdw7Rc
NubVI6OUc++VIi27/QnPetiYFfF/SYTHliCZrTd2G0hxMD3mezRb3nmD7OOd
RdqWczAj5azZ1ZnFaL9724v5+ziYSRrvfL6lFSH5mjbvnSEcTHvpyjG/H79G
vq/DZwmncTA5dr7LP9UWogBNJ8ZgIwezufVwyHLWK9Sh/DRS6zsHs2Dhy71l
iq8Q65hL9sMZXMwA2q7kSYYvkVZEVG/cBi5mhZPVHcU9BcjY08cl8QAX00F7
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
N43XpWOabL5z/INhG3JtyGo9fpCOGe/VeOhhaSuqlBKX3RdDx4ysbMlqmtGK
uOmbZj8opWPq9Chfk45tQTaXki9/+03HZNl8NZEWakE0r9AtN+f2YXYEmU3X
udiM9vfpGela9WE2bNJVMBxoQkfFRdx+nuvDzG0ejBnr0YQkNp0fp53Wh9k8
+3T3LmYjinxofmtUUx+m1rgfWt9PNCLzqxuK1o1jYP4wXJS6ouc98vgmsezu
fAbmNekGmvKZ96jgxzuT9l0MiuPCJA4MNaCCI61GKt4Mis8Oy93wb0Cf8qO5
9o8YmKrF81aUizSgkPNMZ7VKBqalu35yQEQ90pkeNEthiIFpmmAblTKtHhlk
2d/fMpWJqdFcLju9oA6ZLq3VsdBmYo7ZH7Dtq3kd6l5pO2qNFRPTfEfr9w0D
tUjlkG2KwTkm5o3XLZ/ne9UiWoeNouJdJmbHHnriX8q1yMd3csXLAiZFt5Ko
3PwapDo79PP5DiZmyLWdyqf21KDNF0ctaBvHwlSx++7p0FWNxqcWpxXOYWF2
8//qywitRq7Dn602GLEw46Vm8RcpVKPEX0eN9h9mYYqMzpRvKKhCIWt/zrW6
zMK0XCUWOLC9Cvm822O2M55F8Uq3sJBEFZIennxRv5iFGawSWnrY6h0yUBvL
Wd/JwrSSrD+1L/stMigNOC8mysa0MnzfX9FZiTzG/5RfpszGVH05ac/LJZXI
3l/MfAliY0Z+qPhe7VeBDGgGKx/uZGNaPbdMmPKrHCW1DXU5nmZjfqxUTzk+
txzVhj9dvfgaG1Pc9/m1xuAyVNyUePXLEzamVe+vy2vqSpFi53hzmQo25o6c
599PrygdOX+YtCweG7Ng6oXc9IMlKH7I2ztRlIMpv2DMuFHtb1DzWasfLBUO
Jl2oc6q32htkvmf0jhhdDuZwaa/0mtBiFH95Qnm1NQdT/n6u7tTaImSaqfG1
youDKZ7LXSovXYRqt1ZPnXaTgyk+V/aMm9uIn72QdUs6hYOZVJt2IIhdiHTm
B/ltrOBgxv941bNjeSHSWzvb1bOXg+njrmqscPcVSnQ2LrP7zcEcY71oXazI
K6ThvcLfcBoX8/P49A6jEyM+/Y3N9qJlXMwCk8pptPwCpLGlWTPUmIv5eXVX
c+LCAjRo96nV0oGLeWL9zQelCi9Q/22e1Gw/LmZBRNXSbW/zkRCtKEDsNpei
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
VoLGP3E2WP2bjVnctNvyxugSpF9qEjZ9GgfT0VDhzla3Nyj6os7YA5oczB3F
MXX32opR4fAVz6mbOJiOM8Plz24qRvIxb+fNtOdg2iM10Q1RRWj5oHv9lfMc
zFwd9d/h/a9HfP4Bl923OJjN4vd2tRx8jRSXv1B8nM7B3JHnZ9pbWoiu3eJW
TKrkYAbbOy25vrgQ6RmlnJ3Qx8H0Wc4alXf9FdKb6eaoJMTF9Fm/1k3390vU
/eEjbViei5lUsDV31p6X6FpbG2fHCi5m8NuK45IZBSieO8mFvp2LKe8Ubnlr
SgESQZfiY5y4mI0TTi92r3qOKhfO6wwM5mI6vJ10/PqhfLQ/754X8yEX02LF
ETXJWc9Qrd9+5fgiLqZs8c79y5/louWbaHXTuriYzle8JnTZ56AxSecuZf3m
Yqby2W4HRLKRVsz7grkqPMyIMz1flK0ykbRGT5O8Hg9Tttu4NP9XBtJ5O03i
Co2HabKza5/W6XSkqpSj6+zDw9T03qGQP/wEqRfMPer0gIcp9Uu5q2ZzKjq6
anTSYDkPs+po5IcPHUko/6rTGpUBHqbJmvtz0uweIY/An/VnpvExY5au6teq
iEMm9C+Vx9bwMX0cPqb6zbmPlvO592ba8DEL5uyPnRR0B8U7pwdM9ONjFnRY
PZfRvYl8wm47ayTxMYWqmK+/OF1GQkUBd2Jr+RSVToY8uO+DWDfDqzf+4GMK
BTr7yWw3wD5J/PqN6wvek71VHc1m7PQYAfd5vvV0mekhUncQj2mbuJjUvYxW
mZ78TvZ04TvWbzN/I+D7sCXfRTyDBfSM5odr/HeReoKnCW/uXFL3yf9tIDEo
4D7etIs7xV+SuqJuXNuVIFL32ivqHWJJ6nV5X29OnCvgfuMrL588O0T2uc9o
5XfmVJA6o3pl+9rbpK7EMToY7iygL74iNMwyI3Wp1cWP7ywR8PpPTCOdpwu4
7mii+hFrYVLvyDIJjfgp4PvjkgtnOHz+z3XodaDfC/2d0P8Leh+g9w16n6HP
Bfococ8dOk6g4wo6DqHjFjrOofMCOo+g8w46T6HzGloHoHXjn+sMuC4B6xi0
7kHrJLSuQuswtG5D6zy0L0D7CLTvQPsUtK9B+yC0b0L7LLQvQ/s4tO9DcwI0
V0BzCDS3QHMONBdBcxQ0d0FzGjTXQXMgNDdCcyY0l0JzLDT3QnMyNFdDczg4
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
Oeyn+QWLbvpyWI0qy7da+NwtO3R9dn5B9TaHz9nxlOVbfeCnG3ourjG/oOe9
yx594urlW+14Y9NTjp0wr2DRht//+vbx5VstrLrnju1OmFcwq8QLF1YYu3yr
D/9dftmHC+cWdD3pwg1TFy7/r8csr/ZS+7kFg1/b74BfS67YapVVg5+q8vsX
BWO23bXpvoes2OrSn2ZUffHeLwoGHz71nK+ardhqlRtGbO603xcFXc/dYY+j
b17xXzcuHddm8JyCmecf2mj44yu2+tTPnettWzCnoPKa7ydNenfFVocf0+aN
N2Z8XrD0yTUXdFuyYqstjjp69R3nfF7QaMauPe/+z8qt1nt6+jXdvphdUGPx
C1V+OWLlVrufv+ugAzvMLmhyZ+V5H5y/cqu1+gzrMu7nWQWF9x01b5vbV251
UfuLu/z52KyCWi2GLv3x6ZVbvX3Pss1bHjqroN75VU997/WVWx23vNrpvT/7
rGDi5BoH9Z+1cqtdL9xS4Y59Pito8sfCo8svW7nVNofNGP3A458WlN80u93G
zSu3+kDlCsMPKv1pQfdzVvxWq+yqra7e3Kve6tEzC8r99dnQFvut2urgPars
cVjjmQUNH7yxVK+qq7badcQZq+ZWnVlwy/ofV6w5eNVW61/4zL0dy+T/nn1O
9r3Z78z+ruw5ZM8te87Ze8neY/bes3WSratsHWbrNlvn2b7I9lG675J9mu3r
rA5kdSOrM1ldyupYVveyOpnV1awOZ3U7q/PZuZCdI9m5k51T2bmWnYPZuZmd
s9m5nJ3j2bmf5YQsV2Q5JMstWc7JclGWo7LcleW0LNdlOTDLjVnOzHJplmOz
3Jvl5CxXZzk8y+1Zzs/6gqyPyPqOrE/J+pqsD8r6pqzPyvqyrI/L+r6sT8z6
yqwPzfrWrM/N+uKsj8767qxPz/r6bA6QzQ2yOUM2l8jmGNncI5uTZHOVbA6T
zW2yOU82F8rmSNncKZtTZXOtbA6Wzc2yOVs6l0vmeNncL5sTZnPFbA6ZzS2z
OWc2F83mqNncNZvTZnPdbA6czY2zOXM2l87m2NncO5uTZ3P1bA6fze2zOX92
L5DdI2T3Dtk9RXavkd2DZPcm2T1Ldi+T3eNk9z7ZPVF2r5TdQ2X3Vtk9V3Yv
lt2jZfdu2T1ddq+X3QNm94bFvX8s7v1mce9Pi3s/W9z73+LeL//b9+Ek+b86
a9aK1Qf/vi7Y/f59Jl69PDriiGve6fdGtP1xT43qe3d0XN19NvZqFO1966Rq
15aIXrjX1Sd9PXVtsE3DbmNbD4mOuqHJvH17RFsdcvv3h10aLXPtixUbN4p2
md/u+M+qRKtU7HH36pLRAY+sm3H5sjXBMffXvq3BjGjp2aWqv/xadPoO+/w8
8PHob9+eN2lC5+j0P7686rNLolWWn7f5/cbRSvNLbil3WLTTl7/+/szu0XrP
njttv82rg61vK/nIwh+iXfsMbLF0xj/4dbcKp70VbVT1ggfeei5afuMuu+7x
ULTDFQu+OvGOaOujuw48oX20/rTxXd47M/rn4yddOaAgOvbkpe+9fnh0VON9
9ry0SnTODd2H3rFrdP1uuxz8/JZVwdItd9n55J+jzZpP+bHP4miDhsOn9f0s
WqfuAyMfGh/tW/W3Ou1fiTY5aPgbtw6KLj3l821PfTB6xl5XndWtS/Sabpec
dtw10VYDpp54Udvo4KF37zjtlOjAQ6f/uOLo6Kyjv9vy14HRBXc3qNpxt2iz
rhXmz9myMjhl56n9D1sfLZx32JQ3F0XXlH93edNPo9fX2XvHoydEpz/0UZ2u
r0SrlH94z1lPRyveu9t2P/aOzuw1b/W7naNlLxnw4Q3toxX3Oe/WE8+Jdllx
UdXmJ0VrtXtz9pwjop1OWHZ7rSrRiXO2mf/BbtH+J+xzwFHb/IOr5p318s8r
gr13HntL7e+jXebX/rHpnGjfr3oeX2FitN+QY/ap+Fq09/f/WVf12Wj5WbWn
vfpQtP11EwcNuTtaY2nNdfddG/1z+Y3NLymMXl975zPePTM65JmjG/cpiJbY
subiqYdHJ3Ra0+mEfaNVOo4YtqJstOtlV3z92N/Lg0N3GXv9VWujM8dtW/qE
76Jtyq3aNOfTaKU32/1S4v3ow4/MqH7bK9HaR6xu2e/paP+37rnh8gejFW/+
5c7ld0R7nnfA3hWui44tXDz8zYui07/f74IRLaOz5nXbMvK46BnzHnnniBrR
UtXq3tJyr2i/T2Zst9320dUHzHm06i/LgtULTq3w5eJoz31v6nP4Z9F+XZtV
mzguWqfxX+8c8GK0/oEtb7iuX3RwhRVVfr87WrHUDRdUujJaep+Nwy46O/rw
h40GTjk+Oufav8Z8dWj05RIl+h63R7R5oxvald4mOr5ey+e2Xb402Pv4m+Y3
mBl95vrSdV54JzrvitPvfWVI9NBhI8ue2itaYtcdhpe8Ljrj9pqTj2oVrf52
y89OqRN9+febN26pFF3yWavtj/vrx+CsamfVPWhxtPPgxWfe/1F0Qf/ranwz
PLq62pilr90XfaDstX3evzLa+u3vqt3QJDrxhMfbNd8/WqrkYyO7b/4hWPqq
nU+44Oto29Y/v9t5TLRJp50GNHwkOmJc1d4HdYrWGXftQ33Pib5ca2GvEkdF
C2u+c8GDFaLlD3n88H1+WRKs//n97w7+IrrP4HLHPP1adMNDq96b/Xi0+TlT
6iy7OTp42efHzD032vGF707/oUG0/+GLbjz0hP866O1XW004YElB2QX3fHVk
6/+65u133xmzeXFB9Wt3/bHb1Uu2OmXB5QdP+PZ/3k+tWL7T3Uu2Wu6S5w+4
9oPFBUNmfX3Lbg8s2epOp4xt8cOoxQUN1g7fsvKJJVt9sVK3rvs98z8+57Nv
L3p34JKtPjzttZ/a9/sf/7/E0IkHvLBkqy9uKf3dJ/fn/55+TvK92e/M/q7s
OWTPLXvO2XvJ3mP23rN1kq2rbB1m6zZb59m+yPZRtu+yfZrt66wOZHUjqzNZ
XcrqWFb3sjqZ1dWsDmd1O6vz2bmQnSPZuZOdU9m5lp2D2bmZnbPZuZyd49m5
n+WELFdkOSTLLVnOyXJRlqOy3JXltCzXZTkwy41ZzsxyaZZjs9yb5eQsV2c5
PMvtWc7P+oKsj8j6jqxPyfqarA/K+qasz8r6sqyPy/q+rE/M+sqsD8361qzP
zfrirI/O+u6sT8/6+mwOkM0NsjlDNpfI5hjZ3CObk2RzlWwOk81tsjlPNhfK
5kjZ3CmbU2VzrWwOls3NsjlbNpfL5njZ3C+bE2ZzxWwOmc0tszlnNhfN5qjZ
3DWb02Zz3WwOnM2NszlzNpfO5tjZ3Dubk2dz9WwOn83tszl/di+Q3SNk9w7Z
PUV6r5Hcg2T3Jtk9S3Yvk93jZPc+2T1Rdq+U3UNl91bZPVd2L5bdo2X3btk9
XXavl90D/tv3kyTJ/7Nm9T+zVNX6H/7n3aLb9YPT6y7uVXTH3Nywae8WRXfw
5S1m37tz0W04q0yfprPXFtlR7z/1yWevF90L9xp7w+39i+5vffc4deqdRXfK
sCfWftmu6FYZ3nvZZacV3VtmT339nSOLbp0mJ3R4bK+iW2rvDWs3lC66Uw5a
PL75L2uK7LjGfw5/f3HRbfTiTpsbfl50Nwy7sfOx7xfdwY1bnv/K6KJbr/ry
Rjc/W3QPvK3W1MoPR2fVv/PLDn2jnS548eDjukS771TupnNujNaZu+SK7wuj
/ace89lOZ0crHdj9qZ0bRgeM+/qKKfWiC86c8eCMatGlFXod89fe0da7X7Sq
3Y7RLv23KbvTltXBgUddVeOGVdEJk3a+66mF0RHdHhnyxsxo+5fOnfHnxGiH
F9+cXHJMtPT4D98fNCzaav9Lnz+lf3R0w8dXL+8brT7g1qFLu0T/rlli2eAb
o6NebP3YwZdGVw59ZeDS1tH+LXfb8OYp0Qnv7PDJww3+wfaTNm1/eLTKxrtb
LKgW7Xrpfh/sv1e08sKmZ2/ZJbrm3KuO6FAiWmbk9PKLf1sV7DDvqN+nrYjW
mtv42qsXRc+4aOPYPjOjtUZtXtv9w+i8RjV+vemNaPllJ6zu+HJ06JO9yjQc
GP2z6YoNnfpFpyyafmiLe6Pldtqz33/uiDY66aSj5l0bbTPn8JpdL49Wvu2l
A0edE213z5C+s5tGuzSfNLXscdH21x+z6afDoheeN2LP/lWiLca/v2fT3aNj
yu82ott20cIeA765/M+VwYZvndxn0oroyvp7len2XbT2qv4fXDczWr/T52WO
+CA678Umwxa8Fu35XMVHu70YrTzri52ufzTaZNag7V/uHu3ZbfsX5lwXnTf7
0CPeuzQ6q+qQr/doGW3/1wGfvX18dMD6PWv2OjS6aLdlzzWp/A8uOWL4ZztG
S717cv8v/lwRHHP/o7c/uizadbd+99b9Mlrn+4Wzx38YHTNmr3b3jIku2rfX
sKcGRBc0+mVuxfuji/5a3OnKG6Kjht+86syLo70H3VThtibRhWU2HvBBnWjX
bpuOqlEx2qbhxne+3LI8WPaUy3+o9WN00lcfXHD0p9H1XccfseH16IKqp5e6
4cnohnplxj17Z7Tcl3V/X9U+uuDMXS46+rRo6Y8aLH7iiOiaDQv6vFc+2rzW
TY+eunFZsFyveZ07fBWdPq/qYdtPjHYs22yffQdGO++48/gHe0R773XEfee2
i1avuO7b95tEHx5wZudPa0T3Wf9yl0fLRVv9POuvUhuWBifVHr1p0JfRNoNq
lNvjvWj15p+unTwyOua5mve93y/68PXzx63pFr3lm1NfHdQxun78tFNHtot2
vfS1N285J/rNbqNWPn9GdOd+rXq+0LToZp+TfW/2O7O/K3sO2XPLnnP2XrL3
mL33bJ1k6ypbh9m6zdZ5ti+yfZTtu2yfZvs6qwNZ3cjqTFaXsjqW1b2sTmZ1
NavDWd3O6nx2LmTnSHbupOdUcq5l52B2bmbnbHYuZ+d4du5nOSHLFVkOyXJL
lnOyXJTlqCx3ZTkty3VZDsxyY5Yzs1ya5dgs92Y5OcvVWQ7PcnuW87O+IOsj
sr4j61Oyvibrg7K+Keuzsr4s6+PSvi/pE7O+MutDs74163Ozvjjro7O+O+vT
s74+mwNkc4NszpDNJbI5Rjb3yOYk2Vwlm8Nkc5tszpPNhbI5UjZ3yuZU2Vwr
m4Nlc7NszpbN5bI5Xjb3y+aE2VyxuPPJ4s4/iztfLe78trjz4eLOn4s73y7u
/Ly48/nizv+Le79Q3PuL4t6PFPf+pbj3O8W9Pyru/VRx77+Ke79W3Pu7f/u+
kSRJkv97HPVhy11b/L0u2KbHwAMG/BktnHZG7Qe+jy46atsznp0RLfvVlDeO
fD9aqtbvFQ9/LdqmyoT3dnk2umHt+ps7PxytX+XSn3a6M1pqh1f7vHZttPLf
twy+/JLokFd73b9bs+iAp54ce0md6KKVP2+pdWB01Pi3tz3yP9FKT5+/aPK6
tcE5y0+ctNt30fqjx4/bY0601S/dfj1sarTJzQ/Xf35CtPeLDbr2HhOdPnfl
5BuHR2f1Gj3jqYHRJZPPXDTmsWjDrgvGVesTHVi/3eNPdIvWeHjeN2Vvia6s
+031va+OVt518RvTC6MbFgxqVnBe9JqGTav93Dxa+dceJY8/KTrqhZK3nnJM
tH/7aUv6HhodsW3hvpUPiPZsdXnr3feIrnmndqPXdo5Wv/Dk+sO3jY6+8Njq
N21aE6x3Ua3dCn6Ojp2/8x1PrIjWO3P1knWLoi0Wf/XVU/Oj7TtN/azRp9El
M84+fsuH0frtao6pOC466aZz177/arRT0/r7lR0SLf106YN6PBX9bfPeBx3z
YHTB+/XajukerdxvwP1X3RrtflyJjc9cFa1S548OV7SNLv1u8guDmke7f/zN
8iMKooPbzf6ydN3ouL8nT/v64GiLZ974+OS9o6NWlZu2Z9nowEPWtJ22TXTE
oBcWHPzT6mCLkiW+Hr84Oq7ix1++Myda775Dzio3OdpqWcM5Nd+Ojii77MOp
w6OFTeaNGPRUdMA1m8Zd2yc657Eqn5zQJbpy2tHnzusYLfF3yyXXtI3WuqFl
hXtOi/aru+iUWsdFZ979xEeNa0QXbv/kaW/vHW1Q4o/2v+wUbVN55Y1D/1gV
XHRO553KLou2KXn4E10/j14/7IvSk9+Jtt/92b7nDY2WqPNRpwcfjhZuc+65
tTpHW383fdDc9tE5j57wRdvTo9PfXHBO9aOipd/4Yent+0Yb1Jj6+8WloyPW
HbfTwrUrg/XvnDNt7vxoYYcm3Qa/Hy179vsHzxsebVj+mPdWPhSd+GWlQ5+/
Ldqv6tU9nmsbbf3xeX3+Oim6YcRDT4+pGS3fbptXS1eM1tm704fnl4gOGTvz
pZnrVgRn3jLu7re+jrZ5/48pAz+N1nvwhY2fjI+2bvv1gIFvRmuf/sKhP46I
1lrT+qp5w6ITV/8w+KkhRTf7nOx7s9+Z/V3Zc8ieW/acs/eSvcfsvWfrJFtX
2TrM1m22zrN9ke2jbN9l+zTb11kdyOpGVmeyupTVsazuZXUyq6tpHU7qdlbn
s3MhO0eycyc7p7JzLTsHs3MzO2ezczk7x7NzP8sJWa7IckiWW7Kck+WiLEdl
uSvLaVmuy3JglhuznJnl0izHZrk3y8lZrs5yeJbbs5yf9QVZH5H1HWmfkvQ1
WR+U9U1Zn5X1ZVkfl/V9WZ+Y9ZVZH5r1rVmfm/XFWR+d9d1Zn5719dkcIJsb
ZHOGbC6RzTGyuUc2J8nmKtkcJpvbZHOebC6UzZGyuVM2p8rmWtkcLJubZXO2
bC6XzfGyuV82J/y355ckSZIkyeKZ9XeZY7YruV/BD0V3TauPLn7406I78Ybe
ez06sei2KnPya4NfL7r9Ppz07h/PF90mr59UZkO/otvlgFoVqnUtugsunLG5
3g1Fd8JZW+q9dVnRnfftXq2nnFl0y3Qat3/bY4pu18v2/fGuQ6Llvr6zwZ9V
o4tq3NNu8q7ROr/vN+bJnaJlt1Rd9vzqtcEB52487NCV0QZd22y555to6y+q
f1Hy62jZU9qc8Pqn0aF9K45fNzNaffrnm17+KFp+12rnXzgpesYbx55xzrvR
hb+eevMT46K1ho246JPR0fXPf9Nl86vRoVe3XLFmWHTDhDe/L/0Pdrhk9Wer
no6ecfmvTT4dEB266ZMJPz4SnbV2/z3+fChau8ETbbf0ig7d/aT3N/eIFtaY
PL5S5+ifs07dv8zN0es3nHDmuVdFK3c64j+7tI9W37Flj+3bRMstnTvtlbOj
nbu2KTOySbTZpr5b2p4YnTTsk2Ud60YLfy/b78zDo61eOvmB3/aLDvym+25X
VIquOXT4s2eWjS4Z0rp5jx2j1X+98uxv/1oTXL9D7dGt/4iWvfKUI25cFa19
0c6NRy6NFn6wqcGQBdEB50366Pwvoh2+n/TZpo+iXQ8865kxE6L1T65Su9yr
0e41n7l2zNBo5RMmvvBr/2jrt4e9XvOh6PrdXzrorjuj7Tr0ffKpm6LlV7R5
tnJhtPujJfccd1Z0+rqqz/VvEK3ecNy+Px0Zbf13xZf2rhItf0DtUw7dNbro
wWWHb9y0Otjiku0+HroyWv2gD3+7cnZ07EWvdSuYGJ3y1LaV142MLri/wSd7
Px0ds2bekin3Rge82OOV2Z2ivRu3v2y7C6IHVlu3rHSz6Mz/XPnQ8XWj5btv
emaPatFGH16/X6/dot0Lu9W9o2R0QMe3W7datyrY9dq2wwZ/H73wtMKRV02L
Th9Qes8q70av6bGhRM2R0Ul73XNQzeeio27a8Yrmj0arNJx8/FsPRGvfU2X2
4/dEe29X9acRXaMTfr6ydp27im72Odn3Zr8z+7uy55A9t+w5Z+8le4/Ze8/W
SbausnWYrdtsnWf7IttH2b7L9mm2r7M6kNWNrM5kdSmrY1ndy+pkVlezOpzV
7azOZ+dCdo5k5052TmXnWnYOZudmds5m53J2jmfnfpYTslyR5ZAst2Q5J8tF
WY7KcleW07Jcl+XALDdmOTPLpVmOzXJvlpOzXJ3l8Cy3Zzk/6wuyPiLrO7I+
Jetrsj4o65uyPivry7I+Luv7sj4x6yuzPjTrW7M+N+uLsz4667uL278Xdz5Q
3PlDcecbxZ2fFHc+U9z5T3HnS8WdXxV3Plbc+Vtx53v/9jySJEmSJEn+3+uU
yevb7PbXumDXLdsNP+LXaO1vV68vWBPtPqJ3w/LLok3O+ql3nR+jpf88d26r
JdHWA8e+3GFxtNNP93RbuSha9piCLQf9g0Pv2nTn5d9F+09usWD3b6Pddx58
9JRvouVavtp2h39w8EPvdWv2dbSwz/rBXRZED+x1wMTRX0Wv/+r+tz/+Mjqh
5k+jF8+PXrPoimqHzYsuPbn5E4vnRMsf+/z632ZHGx76R9OdZkW7vFluRKeZ
0Z7r+m9/8vRolf6VOtadHK3+9Ydzz/wg+mfljveNejc6s3D343YcG23x7G23
3/NqtFSta8c9Ojw6qtQu91/9dLRKx409Fj8RHX14YdUvHoq2uPv5z97uHW3S
/IljX74reuDi0ePW3hpduuOMy/p0ipZuXHv7dtdEa3VoeEHFK6KtHz7j1Y8L
o/VGDnv9tvOi7Zt3fO6606Llnrvzr32Pi3ba9Odttx8ZHVOi4XFzD472vqLw
j5L7Rtff+9Z+55aLNqtYp/7bW9YGBy/dq0SHZdFSVd8u1XhhdMrmMoXDZkUL
Kw6b0n5KtOLT41v2HR+9sNuo2T1ei55RZ99mr78YXdCkw4TRT0aH/H7RVW88
EJ057pmyG+6Kdr7y4LE1bohumLJ/208ujbY5rs1Pf7eK9iwsce9TjaMDzjj2
yCl1opW+6/9jlarRDWU6DDmmXHRpy1861ysZbd1xyg6PbVgTnHL/k/1/+iHa
qMV7Q9vNi/b+4Mw3Tpgarbe556eFb0cbttju+wnDohcOOq7u8wOiC7Z59+4P
+kRHr+vx04t3R1s9+F7hhhuj188Zd2/bK6MP7/nWS5MvjBb+9u4tV7eOTjrq
mYIlLaJjKt3RZnqzaNlBd3X+7tSim31O9r3Z78z+ruw5ZM8te87Ze8neY/be
s3WSratsHWbrNlvn2b7I9lG277J9mu3rrA5kdSOrM1ldyupYVveyOpnV1awO
Z3U7q/PZuZCdI9m5k51T2bmWnYPZuZmds9m5nJ3j2bmf5YQsV2Q5JMstWc7J
clGWo7LcleW0LNdlOTDLjVnOzHJplmOz3Jvl5CxXZzk8y+1Zzs/6gqyPyPqO
rE/J+pqsD8r6pqzPyvqyrI/L+r6sT8z6yqwPzfrWrM/N+uKsj/63+3uSJEmS
JEnyf5rNrzIrPfrgiB9/LbpDV17687Ubiu5vfT/4uMfPRffAeuef9Pj6oruw
1l4DX1lbdDtcd/CH69cU3d/2nvbtA6uLbtn9Bn7xn1VFd8Kc8k3brCi6XQ4+
eWDDpdFZp763zafzoqWabDq70exoq4Grf//qw+iB/UpeXPhedMjHd3/b/ZXo
LTsf8sh3L0UnrX6n/emPRwc3aD+wVN/oyos619/QJVpp9W8HLbolWuquP/Yq
f2O0w10vfVjYMdq71sf7vNwh2mHS4oFr20U7b3Nx6b8vjc7sfc7Iqy+Mlrjm
19d3vyjaea9OP5drFV108tNTNv2DQ089bvRHJ0e7LDz5iUGnRqfsV/bP3epH
K38/8vZvjotWf+KiY587IrrktbE7Njwq2nXfwXVqHhxtX3nL3mVqRkedtHS7
zZWiC04ttaBS5eiiyssrzNkhOuHFZ/5z2D/Y9Ze5Jy5cuTZYbvgFtXovj/au
PaPf419GzzjplBGvz42OPnuPM++bFq1//AMld/0o2uq+40ff8la0w4lDbh3z
RrTWtKrb7f9CtPunO7/85+DokGb7X1GpX7TL6S3OmvJwtFO/+Yd8dE90zk3n
7vfz3dF5G7Z9af/ro6Mu+3rj/Guiv3157fZjLooueeTW/b5qG33405eP3dQi
WuPHUWd/0iy64In3n+92fHT0NZUWLzj2H9z3mabtakbrnDBwzq2HRCvX3f7X
pvtGR+/b++Ea+0THnrb/JVfsHu08fXmf2ypE2786dejFuxbd7HOy781+Z/Z3
Zc8he27Zc87eS/Yes/eerZNsXWXrMFu32TrP9kW2j7J9l+3TbF9ndSCrG1md
yepSVseyupfVyayuZnU4q9tZnc/Ohewcyc6d7JzKzrXsHMzOzeyczc7l7BzP
zv0sJ2S5IsshWW5Jc06Si7IcleWuLKdluS7LgVluzHJmlkuzHJvl3iwnZ7m6
uPm8uPm/uP1FcfuX4vZHxe2/itvfFbd/LG5/Wtz+99/u10mSJEmSJEnyf7Xy
7KWX/LZuXXBmqeHvvfdttMGjNzcr/Um074r2a54ZHy1b5YeOE1+ONli3x6z2
/aMX7vzzq0f2iFbsM6z3rBujnT+68cShV0U7XbzXhhYXRytVHDX3t9bRlQ/9
PqpR8+iUdiP+2PaU6DXLpzc8/MRok/lvDB1aEF15y85lejWIVjr/5V2POCHa
4rjme339D64cW3p924bRnkd+MOXbE6M1bjt25P6No9MnvPbQZU2ivSvfXKFt
02jXGdOfXtk8OufUze0vOD3apsJHddudFW1Q/sDKJ50T7Vr1k78vaB1dcnvn
L3Y5P1q26xMvHXpBdOn2zZ/v1SY66aESzyw+P9qqcc9eD50bHTX89utfPDs6
Z2aDu/8+PTrx+ev6vNcsWubVW2pNOCm64aW687seH61d7azHLjk6Wu6h6udv
Xzdau8mdfzetHR339G9Dx9WK1ii5+YFjakQHXLldp7HVo3837XHlDwdGJzRo
2brFftHq5UoMmbt3dPoRjX/+Zc9o+b8fL9l692iN288pV2XX6NhSd+z7d5lo
54VHHn7DdtFRk+e1326b6Lgdl986ccPaYO2BZX/9fm200/eDr+u4Ijrrzkd2
GLs02u6KCi/0/yFafenXnw5bEl152ZCNby8uutnnZN+b/c7s78qeQ/bcsuec
vZfsPWbvPVsn2brK1mG2brN1nu2LbB9l+y7bp+m+TupAVjeyOpPVpayOZXUv
q5NZXc3qcFa3szqfnQvZOZKdO9k5lZ1r2TmYnZvZOZudy9k5np37WU7IckWW
Q7LckuWcLBdlOSrLXVlOy3JdlgOz3JjlzCyXZjk2y71ZTv638ztJkiRJkiRJ
kv9/ZvPtzFnnnzzj0S+K7pKfBja5b1LRLf90qzqnvFl0b/li35X7vFx0Wy1o
/FnbF4pu+7/v3+fNZ4vunBand9n8TNGtf3e3XgWDim7ZZp8Wnje46HZu+MZJ
2z5fdOsPvnXqpheK7qSrGzxe6qWie/3eZe44bUS08+1vrK34TPT62gUTnxkY
nT5kdddXHo0Orflc5x3/wQNvPr109c7RytM2/lbi9ugZI7f5+qkroxUn3PnT
2MujSya3vPWultH+13fed+Qp0fVv3dvoubrRWnWfL3HP4dHCcr9s2qV6tMvU
poPPOiC65POVa9pWik6cX/GrHfaM9p9frcWTFaK1dzjm5At3i/acsrL2+v/8
g3/eeluzMtF6ly9/77Edo5Ue3X361G2jDR745IMdS0c7bPvS/JHbRIcsGf7j
NSWjPS/bdpsev68NDu542cZFf0TnVN3nitvWR0f/8cfFR/wUHfLrRxuar4lO
+OXjduv/wfJzO94/Z1XRzT4n+97sd2Z/V/YcsueWPefsvWTvMXvv2TrJ1lW2
DrN1m63zbF9k+yjbd9k+zfZ1VgeyupHVmawuZXUsq3tZnczqalaHs7qd1vnk
XCju+VLc86u452Nxz9/inu/FzQ/FzSfFzT/FzVfFzW/FzYfFzZ/Fzbf/dh4n
SZIkSZIkSZL8f9Vx84+/r/tv64J9l5698a1l0dZ7nPbgh59Hyw088ZRdpkTH
9L5n47ZvRbse1/m5QS9G2711zFXjHowOPrnhIbveEu3/8wtzX7siOrDZjheV
OzPaZM9u17Y8NrpmyhevfnBotEn7hYM3VImWfaHME60qRhe2mLWizy7RsmW+
q7uldHTpjmtferBUtPI+TXY/f/PaYKcFf5RY/We0X9O9Vi77Lbpg98trbvtr
tMri0R2rbIg2+qb9ZZf+Em0/b5+2L/wabTRk7g01/4iOmX3VPfdujPbvffRt
Tf+Mjnr0ietf3BTt3f6mqy76K9q+/pmX7vF3tPuxrT8f9w/O6bWm8a+bi272
Odn3Zr8z+7uy55A9t+w5p+8leY/Ze8/WSbausnWYrdtsnWf7It1Hyb7L9mm6
r5M6kNWNrM5kdSmrY1ndy+pkVlezOpzV7azO/9vnD0mSJEmSJEmSJMn//Wb3
g5llvj1yp2sWFt1+Y8YPuXNa0Z3U/6Neu79ddJeUXnRIm2FFt8mCyRc0eqLo
dh67x7mz+xbd1qvfHvvX/UW39uqpNR7oWXR7juhccb/uRXfmLVPOPa5b0R23
/8rmS4th4bPlCud1L7qNzvv2nKfvLbqt7mhx5qoeRXfoxz9Mqtar6Bb384v7
+4v7fIr7/Iv7fou7foq7Pou7/ou7v4q7f4tbH4pbf4pb34pbP4tbn//t84Qk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSf6/5/8H5Sn8tw==
     "], {{0, 0}, {
     362, 360}}, {0, 1}], {
    Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
     Automatic, FrameTicks -> {{{{359.5, 
          FormBox[
           RowBox[{"-", "162.45000000000002`"}], TraditionalForm]}, {269.5, 
          FormBox[
           RowBox[{"-", "81.22500000000001`"}], TraditionalForm]}, {179.5, 
          FormBox["0", TraditionalForm]}, {89.5, 
          FormBox["81.22500000000001`", TraditionalForm]}, {-0.5, 
          FormBox["162.45000000000002`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "162.45000000000002`"}], TraditionalForm]}, {90.5, 
          FormBox[
           RowBox[{"-", "81.22500000000001`"}], TraditionalForm]}, {180.5, 
          FormBox["0", TraditionalForm]}, {270.5, 
          FormBox["81.22500000000001`", TraditionalForm]}, {360.5, 
          FormBox["162.45000000000002`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 90.5, 180.5, 270.5, 360.5}, {0.5, 90.5, 180.5, 270.5,
       360.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
       TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -136.87830349034857`}, 
                    Offset[{4., 0}, {7.5, -136.87830349034857`}]}, {{
                    7.5, -2.9923510373250792`}, 
                    Offset[{4., 0}, {7.5, -2.9923510373250792`}]}, {{7.5, 
                    147.62934547232624`}, 
                    Offset[{4., 0}, {7.5, 147.62934547232624`}]}, {{7.5, 
                    281.51529792534984`}, 
                    Offset[{4., 0}, {7.5, 281.51529792534984`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -136.87830349034857`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.7\"", 1.7000000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -2.9923510373250792`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 147.62934547232624`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.4\"", 3.4000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 281.51529792534984`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6309753882692621`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.7473979556197173`", ",", "1.7000000000000002`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8783733438889794`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9947959112394347`", ",", "3.4000000000000004`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7576720557274957`*^9, 3.7576721292201605`*^9, {3.7576723141476855`*^9, 
   3.7576723329134703`*^9}, 3.7576724505142345`*^9, 3.7576727564265985`*^9, {
   3.757672861560854*^9, 3.7576728788581305`*^9}, {3.757672915316574*^9, 
   3.757672918643919*^9}, 3.7576729659824295`*^9, {3.757912154515978*^9, 
   3.75791218511029*^9}, {3.757921480602399*^9, 3.757921493958638*^9}, 
   3.75792154140067*^9, 3.7579215938773108`*^9, 3.7584308403021417`*^9, 
   3.7584389878143835`*^9, 3.7584419896438413`*^9, 3.7607801371630836`*^9, 
   3.7607865007714543`*^9, 3.7607869511232123`*^9, 3.760788425323146*^9, 
   3.7608491235034227`*^9, {3.7608513596830235`*^9, 3.760851382932526*^9}, 
   3.7608544026494102`*^9},ExpressionUUID->"743867eb-dfda-43cf-b272-\
4b3ee2b940ad"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{1912, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 457, 7, 101, "Title", "ExpressionUUID" -> \
"5040d5b2-880b-45cc-a231-0e6954975e21",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1040, 31, 932, 17, 47, "Input", "ExpressionUUID" -> \
"9e617440-68c8-4c7d-87fe-cd9d2efca97f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1975, 50, 450, 7, 56, "Subtitle", "ExpressionUUID" -> \
"e25394e1-9c35-4f6a-8495-86623345b352",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2428, 59, 557, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"0fcc0597-25c9-4843-be60-e01aeb713b6b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2988, 70, 1773, 36, 66, "Input", "ExpressionUUID" -> \
"100d6a29-6bda-47fc-8ee9-d0d4d8524fab",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4764, 108, 491, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"a26e5cb8-621f-473e-9817-1af4aa08599c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[5258, 118, 2931, 66, 200, "Input", "ExpressionUUID" -> \
"10ceb89e-20df-48f1-a321-ff7ea6718edd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8192, 186, 542, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"d7ba3c85-2ecc-4633-b74f-86fb15d632b7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8737, 196, 1586, 32, 87, "Input", "ExpressionUUID" -> \
"2132100d-0f03-4edf-8750-0a4cfeec3cf8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10326, 230, 499, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"a1f5bcd3-ad1c-4608-8d2e-184dd5d3b14f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10828, 240, 6861, 183, 632, "Input", "ExpressionUUID" -> \
"064c7d03-91ae-4e2d-a5a1-1e6c1a61dace",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[17692, 425, 541, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"ba1976cb-53a4-4ebe-af03-95fcd4651050",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[18236, 435, 3041, 74, 497, "Input", "ExpressionUUID" -> \
"98de9a1d-6124-4724-8226-daf84a86a835",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21280, 511, 604, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"36014964-da04-4894-82b2-12a8ee0727f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21887, 522, 5582, 133, 794, "Input", "ExpressionUUID" -> \
"01047cc0-f16a-427d-b7ce-0c29435e4e64",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[27472, 657, 726, 11, 33, "Subsubtitle", "ExpressionUUID" -> \
"21ae29e2-a91d-4224-a123-209e3951a365",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[28201, 670, 5232, 118, 366, "Input", "ExpressionUUID" -> \
"b438da06-2c58-4df8-acea-37ef3435337f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[33436, 790, 965, 14, 33, "Subsubtitle", "ExpressionUUID" -> \
"f292807d-09b1-495c-8b9c-9b6b00df497f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[34404, 806, 1367, 35, 47, "Input", "ExpressionUUID" -> \
"72bf3732-c3a2-4f97-80cb-c1e43b95ecdf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[35774, 843, 1052, 17, 33, "Subsubtitle", "ExpressionUUID" -> \
"b0004f69-f221-4be9-a8c1-e15c829973e9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[36829, 862, 2409, 52, 385, "Input", "ExpressionUUID" -> \
"88e4f2ea-e727-4648-a92f-4e85f1dbd17f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[39241, 916, 854, 13, 33, "Subsubtitle", "ExpressionUUID" -> \
"394e299f-9abe-4d8b-a9b5-36a2d37636ef",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[40098, 931, 10499, 241, 1075, "Input", "ExpressionUUID" -> \
"de53eaa8-5f9f-4f21-90ff-43a6ff9125cd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[50600, 1174, 547, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"1a670f20-a3b6-450a-ad8b-342673b49f03",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[51150, 1184, 1737, 41, 236, "Input", "ExpressionUUID" -> \
"22d0e063-4a2f-4302-8b76-c318fb3d02c1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[52890, 1227, 506, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"573585d3-2ab7-4012-9bde-ee091976122e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[53399, 1237, 1470, 34, 158, "Input", "ExpressionUUID" -> \
"dbe4cd76-4469-4ba0-8820-019c7d484c1a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[54872, 1273, 1773, 44, 140, "Input", "ExpressionUUID" -> \
"a97292b3-e790-4763-b444-aa3c9e960ac0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[56648, 1319, 558, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"5f65bd77-40eb-4e12-b562-42a327fbbec3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[57209, 1329, 1256, 31, 84, "Input", "ExpressionUUID" -> \
"38a1c404-a80a-4f37-b880-ecc92f0fda32",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[58468, 1362, 5314, 80, 36, "Print", "ExpressionUUID" -> \
"e6d4ff13-76f4-4688-8136-a486d2f82b3c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[63785, 1444, 458, 7, 33, "Subsubtitle", "ExpressionUUID" -> \
"c9835767-2b4a-4bf0-9d05-9ee1c3d7ac31",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[64246, 1453, 9440, 225, 1150, "Input", "ExpressionUUID" -> \
"d92d7a12-ebcc-4f18-83e0-f681f54b8eec",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[73701, 1681, 2627, 44, 72, "Print", "ExpressionUUID" -> \
"586d658b-db1c-40cd-8f80-77591e0c2a10"],
Cell[76331, 1727, 73798, 1278, 602, "Output", "ExpressionUUID" -> \
"129cf440-cf6c-400c-b052-d6cfd2e1d5b2"],
Cell[150132, 3007, 29126, 497, 327, "Output", "ExpressionUUID" -> \
"594b6345-5814-4f2c-ad42-082009ab3583"],
Cell[179261, 3506, 19685, 419, 449, "Output", "ExpressionUUID" -> \
"8ea717b7-fe45-4512-8bec-6a1c461d8e5d"],
Cell[198949, 3927, 4107, 86, 518, "Output", "ExpressionUUID" -> \
"dae88803-574c-4111-a549-15949c166ac1"],
Cell[203059, 4015, 7175, 147, 43, InheritFromParent, "ExpressionUUID" -> \
"a7769b9f-372c-4fea-9038-cf2a26ffc08b"],
Cell[210237, 4164, 13603, 279, 635, "Output", "ExpressionUUID" -> \
"723e47bb-3c7a-4c07-818b-1ebc2cb5024b"],
Cell[CellGroupData[{
Cell[223865, 4447, 519, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"feb92d43-f673-4dd7-9b42-b50ab362b68f"],
Cell[CellGroupData[{
Cell[224409, 4459, 2002, 50, 252, "Input", "ExpressionUUID" -> \
"b0245563-8792-413f-a4c1-ff322b233949"],
Cell[226414, 4511, 674, 13, 21, "Message", "ExpressionUUID" -> \
"d5fefa77-202b-441c-a917-2c230eb78421"],
Cell[227091, 4526, 558, 9, 30, "Output", "ExpressionUUID" -> \
"5fc1d415-0894-4da3-8caa-74015f94858a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[227698, 4541, 568, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"190e1697-5378-40fd-b7b7-68e948097639"],
Cell[CellGroupData[{
Cell[228291, 4554, 6756, 170, 758, "Input", "ExpressionUUID" -> \
"af6ea415-d276-4505-81d8-a9c6f689f1a0"],
Cell[235050, 4726, 243647, 4055, 602, "Output", "ExpressionUUID" -> \
"743867eb-dfda-43cf-b272-4b3ee2b940ad"]
}, Open  ]]
}, Open  ]]
}
]
*)

