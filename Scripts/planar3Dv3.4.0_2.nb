(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    350911,       6746]
NotebookOptionsPosition[    343707,       6595]
NotebookOutlinePosition[    344051,       6610]
CellTagsIndexPosition[    344008,       6607]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Planar3D v3.4.0", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660668673644*^9, 3.7476606793673363`*^9}, {
   3.748934775835075*^9, 3.748934775947117*^9}, 3.748969785632721*^9, {
   3.7503603825095043`*^9, 3.750360384337364*^9}, 3.75103985134317*^9, 
   3.756183760446571*^9, 3.757328984108018*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"5040d5b2-880b-45cc-a231-\
0e6954975e21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "folder", ",", "parameters", ",", "size", ",", "middle", ",", "cellLength",
     ",", "showAllBarriers", ",", "textPadding", ",", "ticks", ",", 
    "barriers", ",", "concentration", ",", "fracture", ",", "opening", ",", 
    "pressure", ",", "openingFilenames", ",", "openingAtCheckStep", ",", 
    "numberOfCheckSteps", ",", "measuredTimes", ",", "totalTime"}], "]"}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.750653482361023*^9, 3.750653486415388*^9}, {
  3.750653571387208*^9, 3.750653605937574*^9}, {3.750653638308257*^9, 
  3.750653669910097*^9}, {3.750660681648044*^9, 3.750660692605433*^9}, {
  3.7579120167949066`*^9, 3.7579120214810743`*^9}, {3.757912589794462*^9, 
  3.757912590809856*^9}, {3.7579216351176195`*^9, 
  3.757921637429574*^9}},ExpressionUUID->"9e617440-68c8-4c7d-87fe-\
cd9d2efca97f"],

Cell["\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0441\
\:0435\:0442\:043e\:0447\:043d\:044b\:0445 \:0433\:0440\:0430\:0444\:0438\
\:043a\:043e\:0432 \:0432 2D", "Subtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660650798229*^9, 3.7476606629055977`*^9}, 
   3.748969785633028*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"e25394e1-9c35-4f6a-8495-\
86623345b352"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:043f\:0443\
\:0442\:044c \:0434\:043e \:043f\:0430\:043f\:043a\:0438 \:0441 \:0432\:0445\
\:043e\:0434\:043d\:044b\:043c\:0438 \:0434\:0430\:043d\:043d\:044b\:043c\
\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.747660720326604*^9}, 
   3.747661032741356*^9, 3.7489697348519917`*^9, 3.748969785633336*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"0fcc0597-25c9-4843-be60-\
e01aeb713b6b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "folder", "=", 
   "\"\<C:\\\\Users\\\\Nikita\\\\Desktop\\\\Planar3D-master \
(2)\\\\Planar3D-master\\\\build\\\\Results\\\\\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747656893552808*^9, 3.747656906633217*^9}, 
   3.747661032741767*^9, {3.747664018501865*^9, 3.747664019128312*^9}, {
   3.747664057817404*^9, 3.7476641073677397`*^9}, 3.747665488148735*^9, 
   3.748933628112026*^9, {3.748933678444969*^9, 3.748933682795598*^9}, {
   3.748967116456512*^9, 3.748967124377589*^9}, {3.748968117085099*^9, 
   3.748968118090468*^9}, 3.748968199603396*^9, {3.748969393672985*^9, 
   3.74896939903098*^9}, 3.74896973485242*^9, 3.748969785633741*^9, {
   3.749002313128289*^9, 3.749002345037242*^9}, {3.749002429317358*^9, 
   3.7490025155955677`*^9}, {3.7490032762745247`*^9, 
   3.7490033047957563`*^9}, {3.749195504804994*^9, 3.749195505707028*^9}, {
   3.7497457636414347`*^9, 3.749745764379126*^9}, {3.7524855357661276`*^9, 
   3.7524855374845*^9}, {3.7546389669086523`*^9, 3.754638975297113*^9}, {
   3.754651973510044*^9, 3.7546519738226357`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}, {3.7607801304205627`*^9, 
   3.760780131826845*^9}},ExpressionUUID->"100d6a29-6bda-47fc-8ee9-\
d0d4d8524fab"],

Cell["\:0421\:0447\:0438\:0442\:044b\:0432\:0430\:0435\:043c \:043f\:0430\
\:0440\:0430\:043c\:0435\:0442\:0440\:044b \:0440\:0430\:0441\:0447\:0451\
\:0442\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, 3.7489697348525867`*^9, 3.7489697856339073`*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"a26e5cb8-621f-473e-9817-\
1af4aa08599c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"parameters", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<parameters.json\>\""}], ",", 
      "\"\<RawJSON\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"height", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"length", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<length\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"middleH", " ", "=", " ", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "height"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"middleL", "=", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "length"}], "]"}], "+", "1"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"size", "=", 
   RowBox[{
    RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"middle", "=", 
   RowBox[{
    RowBox[{"Floor", "[", 
     RowBox[{"0.5", "*", "size"}], "]"}], "+", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cellLength", "=", 
   RowBox[{"2", "*", 
    RowBox[{
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<cell\>\"", 
      "]"}], "[", "\"\<length\>\"", "]"}]}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747655287287675*^9, {3.747656648179721*^9, 3.74765664850766*^9}, {
   3.747656733330495*^9, 3.747656752436288*^9}, {3.747656912578596*^9, 
   3.7476569586085052`*^9}, {3.7476569957355824`*^9, 3.747657000350354*^9}, {
   3.747657434800095*^9, 3.747657435013611*^9}, {3.747657489717287*^9, 
   3.747657567951728*^9}, {3.7476576237958593`*^9, 3.747657744332275*^9}, 
   3.7476579502511377`*^9, 3.74765802117413*^9, 3.747659478052923*^9, 
   3.747659922966485*^9, {3.747659991785955*^9, 3.747660041283514*^9}, {
   3.7476600785009727`*^9, 3.747660104489366*^9}, {3.747660507830991*^9, 
   3.747660518100801*^9}, {3.747660570048667*^9, 3.747660584277534*^9}, {
   3.7476606203847427`*^9, 3.747660620713311*^9}, 3.747661032742475*^9, {
   3.7489336188607807`*^9, 3.748933619107676*^9}, {3.7489338681042213`*^9, 
   3.748933945735607*^9}, {3.7489340816532583`*^9, 3.7489340850716543`*^9}, {
   3.748934703289136*^9, 3.748934761141674*^9}, 3.748969734852895*^9, 
   3.74896978563422*^9, 3.7506535748684483`*^9, {3.7524857559405956`*^9, 
   3.752485761689149*^9}, {3.754653259405737*^9, 3.7546532596400566`*^9}, {
   3.756111089452158*^9, 3.75611109843443*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}, {3.75844143024053*^9, 
   3.758441430842722*^9}},ExpressionUUID->"10ceb89e-20df-48f1-a321-\
ff7ea6718edd"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:043f\:0430\:0440\:0430\:043c\
\:0435\:0442\:0440\:044b \:043e\:0442\:043e\:0431\:0440\:0430\:0436\:0435\
\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, {3.748934769874744*^9, 3.7489347748029413`*^9}, 
   3.74896973485305*^9, 3.7489697856343813`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"d7ba3c85-2ecc-4633-b74f-\
86fb15d632b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\:0415\:0441\:043b\:0438", " ", "True"}], ",", " ", 
    RowBox[{
    "\:043d\:0430", " ", "\:0433\:0440\:0430\:0444\:0438\:043a\:0435", " ", 
     "\:0431\:0443\:0434\:0443\:0442", " ", 
     "\:0432\:044b\:0432\:043e\:0434\:0438\:0442\:044c\:0441\:044f", " ", 
     "\:0433\:0440\:0430\:043d\:0438\:0446\:044b", " ", 
     "\:0441\:043b\:043e\:0451\:0432"}], ",", 
    RowBox[{
    "\:0440\:0430\:0441\:043f\:043e\:043b\:043e\:0436\:0435\:043d\:043d\:044b\
\:0445", " ", "\:0437\:0430", " ", 
     "\:043f\:0440\:0435\:0434\:0435\:043b\:0430\:043c\:0438", " ", 
     "\:0440\:0430\:0441\:0447\:0451\:0442\:043d\:043e\:0439", " ", 
     "\:043e\:0431\:043b\:0430\:0441\:0442\:0438"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"showAllBarriers", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"textPadding", "=", "1"}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748936129152269*^9, 3.748936131996414*^9}, {
   3.748936437491951*^9, 3.748936446079194*^9}, {3.748936835688491*^9, 
   3.748936836198721*^9}, {3.7489370016931553`*^9, 3.748937002355495*^9}, 
   3.7489687346210823`*^9, 3.7489697856346483`*^9, {3.748970588914028*^9, 
   3.748970589224121*^9}, {3.750355327100403*^9, 3.750355327233083*^9}, {
   3.75035545494031*^9, 3.750355455090455*^9}, 3.750656912157938*^9, 
   3.7516154744310207`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"2132100d-0f03-4edf-8750-\
0a4cfeec3cf8"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:0440\:0438\
\:0441\:043a\:0438 \:043f\:043e \:043e\:0441\:044f\:043c \:0433\:0440\:0430\
\:0444\:0438\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, 
   3.747661032742928*^9, 3.748969734853208*^9, 3.748969785634802*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"a1f5bcd3-ad1c-4608-8d2e-\
184dd5d3b14f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ticksSetVertical", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"height", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"height", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ticksSetHorizontal", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"length", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"length", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ticks", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ticksSetHorizontal", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ticksSetVertical", ",", "None"}], "}"}]}], "}"}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"createTicks", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cellLength", ",", "middle", ",", "size"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ticksSet", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"-", "cellLength"}], "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"size", "/", "4"}], "]"}]}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"-", "cellLength"}], "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"size", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"3", 
                RowBox[{"size", "/", "4"}]}], "]"}]}], ",", 
             RowBox[{"N", "[", 
              RowBox[{"cellLength", "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"size", ",", 
             RowBox[{"N", "[", 
              RowBox[{"cellLength", "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ticksSet", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ticksSet", ",", "None"}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ticks", "=", 
     RowBox[{"createTicks", "[", 
      RowBox[{"cellLength", ",", "middle", ",", "size"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.74766059129346*^9, 3.74766061456117*^9}, 
   3.747661032743846*^9, {3.748933853433467*^9, 3.748933890369454*^9}, {
   3.7489339519881077`*^9, 3.748934022178279*^9}, {3.748934089035924*^9, 
   3.748934096639612*^9}, 3.74896973485367*^9, 3.748969785635269*^9, {
   3.757672639256096*^9, 3.7576726982404222`*^9}, {3.7576728052825923`*^9, 
   3.757672817092346*^9}, {3.757672891902179*^9, 3.7576729030401917`*^9}, {
   3.7576729381237707`*^9, 3.757672945169193*^9}, {3.757921512969803*^9, 
   3.757921520186861*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"064c7d03-91ae-4e2d-a5a1-\
1e6c1a61dace"],

Cell["\:041f\:043e \:0440\:0438\:0441\:043a\:0430\:043c \:043d\:0430\:043c\
\:0435\:0447\:0430\:0435\:043c \:043b\:0438\:043d\:0438\:0438 \:0441\:0435\
\:0442\:043a\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660845455511*^9}, 3.747661032744216*^9, 
   3.748969734853849*^9, 3.7489697856354237`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"ba1976cb-53a4-4ebe-af03-\
95fcd4651050"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"createLines", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "ticks", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lines", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lines", ",", 
           RowBox[{"{", "}"}]}], "]"}], ";", 
         RowBox[{"leftTicks", "=", 
          RowBox[{
           RowBox[{"ticks", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "leftTicks", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"lines", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"leftTicks", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lines", ",", 
           RowBox[{"{", "}"}]}], "]"}], ";", 
         RowBox[{"rightTicks", "=", 
          RowBox[{
           RowBox[{"ticks", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "rightTicks", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"lines", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"rightTicks", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "lines"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lines", "=", 
   RowBox[{"createLines", "[", "ticks", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747661032744575*^9, 3.748969734854225*^9, 3.7489697856357327`*^9, {
   3.757672495233093*^9, 3.7576726309613447`*^9}, {3.757672685223899*^9, 
   3.7576726858954177`*^9}, {3.7576727860678577`*^9, 
   3.7576728004399943`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"98de9a1d-6124-4724-8226-\
daf84a86a835"],

Cell["\:0421\:043e\:0437\:0434\:0430\:0451\:043c \:043c\:0430\:0441\:0441\
\:0438\:0432 \:043b\:0438\:043d\:0438\:0439\[Dash]\:0433\:0440\:0430\:043d\
\:0438\:0446 \:0441\:043b\:043e\:0451\:0432 \:043f\:043b\:0430\:0441\:0442\
\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660912488222*^9}, 3.747661032744845*^9, 
   3.7489697348543863`*^9, 3.748969785635898*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"36014964-da04-4894-82b2-\
12a8ee0727f9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lineBarriers", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nominalStress", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"0", ">", 
      RowBox[{
       RowBox[{
        RowBox[{"layers", "[", 
         RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", "]"}],
        "*", 
       RowBox[{
        RowBox[{"layers", "[", 
         RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y2\>\"", 
        "]"}]}]}], ",", 
     RowBox[{"nominalStress", "=", 
      RowBox[{
       RowBox[{"layers", "[", 
        RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<stress\>\"", 
       "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"barrierCoordinate", "=", 
     RowBox[{"middle", "+", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"layers", "[", 
           RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
          "]"}], "/", "cellLength"}], "-", "0.5"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"showAllBarriers", "||", 
       RowBox[{
        RowBox[{"1", "\[LessEqual]", "barrierCoordinate"}], " ", "&&", " ", 
        RowBox[{"size", "\[GreaterEqual]", "barrierCoordinate"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "barrierCoordinate"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"size", ",", "barrierCoordinate"}], "}"}]}], "}"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"barrierCoordinate", ">", "middle"}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}], "[", "\"\<stress\>\"", 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<stress\>\"",
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stress", "-=", "nominalStress"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"stress", "/=", 
        SuperscriptBox["10", "6"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"signum", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"stress", " ", ">", " ", "0"}], ",", " ", 
         RowBox[{"signum", "=", "\"\<+\>\""}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"signum", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", "stress", "]"}], "]"}], "<>", 
            "\"\< \:041c\:041f\:0430\>\""}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"2", "+", "textPadding"}], ",", 
             RowBox[{"textPadding", "+", "barrierCoordinate"}]}], "}"}]}], 
          "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"barriers", "=", 
   RowBox[{"Graphics", "[", "lineBarriers", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747661032745192*^9, {3.748934559310659*^9, 3.7489346973352013`*^9}, {
   3.748936028834214*^9, 3.74893640178518*^9}, {3.748936537538189*^9, 
   3.74893659455238*^9}, {3.748936626625805*^9, 3.748936705526024*^9}, 
   3.748936851846299*^9, {3.7489369647365932`*^9, 3.748936969645989*^9}, 
   3.7489697348547573`*^9, 3.7489697856362667`*^9, {3.749746386574204*^9, 
   3.7497463871546*^9}, {3.7497465169733543`*^9, 3.7497465172756653`*^9}, {
   3.749746575601492*^9, 3.749746575932219*^9}, {3.7497467735023746`*^9, 
   3.749746911372019*^9}, {3.750355373538177*^9, 3.7503553959537697`*^9}, {
   3.750360862816245*^9, 3.75036091965701*^9}, {3.75065554275772*^9, 
   3.750655545907774*^9}, {3.750655612889615*^9, 3.750655613558167*^9}, {
   3.750655741547908*^9, 3.750655792393737*^9}, 3.750656931278842*^9, {
   3.7571468034507365`*^9, 3.7571468366775255`*^9}, {3.7571468766358757`*^9, 
   3.7571468862076864`*^9}, {3.7576635407774744`*^9, 
   3.7576635425425215`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"01047cc0-f16a-427d-b7ce-\
0c29435e4e64"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:0438 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:0442\:0440\:0435\:0449\:0438\:043d\:044b \:0438 \:0446\
\:0432\:0435\:0442\:043e\:0432\:0443\:044e \:0433\:0430\:043c\:043c\:0443", \
"Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660953767308*^9}, 3.7476610327454557`*^9, 
   3.748969734854912*^9, 3.7489697856364202`*^9, {3.750660427182559*^9, 
   3.750660432292466*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"21ae29e2-a91d-4224-a123-\
209e3951a365"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "LightBlue", ",", "Green", ",", "LightGreen", ",", "White", ",", 
           "Yellow", ",", "Orange", ",", "\[IndentingNewLine]", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "White", ",", "White", ",", "White", ",", "White", ",", "White", 
           ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0.6", ",", "0.6"}], "]"}], ",", "Yellow", 
           ",", "Orange", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"myRainbow", "=", 
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"0.5", ">", "x"}], ",", "White", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"\"\<Rainbow\>\"", ",", "x"}], "]"}]}], "]"}]}], "]"}]}], 
     ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myRainbow3D", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"ColorData", "[", 
        RowBox[{"\"\<Rainbow\>\"", ",", "z"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GlueMatrix", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "matrix", "}"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"TakeList", "[", 
            RowBox[{
             RowBox[{"Reverse", "[", 
              RowBox[{"Transpose", "[", "matrix", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"matrix", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}], "}"}]}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Transpose", "[", "matrix", "]"}]}], "]"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PlotMatrix", "=", " ", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"matrix", ",", "matrixName"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"GlueMatrix", "[", "matrix", "]"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "matrixName"}], ",", " ", 
           RowBox[{"FrameTicks", "\[Rule]", "ticks"}], ",", 
           RowBox[{"GridLines", "\[Rule]", "lines"}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", "myRainbow"}], ",", 
           RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "barriers"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7476531195786133`*^9, 3.747653120240994*^9}, {
   3.7476534505006332`*^9, 3.747653485458448*^9}, 3.7476535222351294`*^9, {
   3.7476535950633698`*^9, 3.7476536054617443`*^9}, {3.747653655142853*^9, 
   3.747653656807279*^9}, {3.747653688090948*^9, 3.747653739282906*^9}, {
   3.7476538118536386`*^9, 3.747653827707106*^9}, {3.747656704788455*^9, 
   3.747656729694378*^9}, 3.74765701664755*^9, {3.7476584586379547`*^9, 
   3.7476584675487127`*^9}, {3.747658699447795*^9, 3.7476587124774933`*^9}, {
   3.7476587568371267`*^9, 3.747658782431654*^9}, {3.747660465335277*^9, 
   3.747660479701996*^9}, 3.7476610327461433`*^9, {3.7489348068714037`*^9, 
   3.748934817133738*^9}, {3.74893485538281*^9, 3.7489349552592983`*^9}, {
   3.7489349950905046`*^9, 3.748935017743618*^9}, {3.748935079617112*^9, 
   3.748935148106749*^9}, {3.748935208873681*^9, 3.7489353309778967`*^9}, {
   3.74893543472754*^9, 3.7489354449637127`*^9}, {3.748935604513166*^9, 
   3.748935774112791*^9}, {3.7489358857234097`*^9, 3.748935920285569*^9}, {
   3.748937178914475*^9, 3.748937196849533*^9}, {3.748937233907132*^9, 
   3.74893723762293*^9}, {3.7489372857884893`*^9, 3.74893733649858*^9}, {
   3.74893736830401*^9, 3.748937501097311*^9}, {3.748937550591075*^9, 
   3.748937608682899*^9}, {3.748937665178151*^9, 3.748937688168676*^9}, 
   3.748969734855296*^9, 3.7489697856368*^9, {3.750658527075471*^9, 
   3.750658533734511*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"b438da06-2c58-4df8-acea-\
37ef3435337f"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:0433\:0440\:0430\:0444\:0438\:043a\:0430 \:0445\:0430\
\:0440\:0430\:043a\:0442\:0435\:0440\:0438\:0441\:0442\:0438\:043a\:0438 \
\:0442\:0440\:0435\:0449\:0438\:043d\:044b", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.750666372371853*^9, 3.750666386564352*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"f292807d-09b1-495c-8b9c-\
9b6b00df497f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotCharacteristic", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"index", ",", "valueName"}], "}"}], ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"fracture", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"fracture", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "index", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{"Length", "[", "fracture", "]"}], ",", "1"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\:0412\:0440\:0435\:043c\:044f, \:043c\:0438\:043d\>\"", ",", 
          "valueName"}], "}"}]}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7506665343051243`*^9, 3.750666577544717*^9}, {
  3.750666634387631*^9, 3.75066664314911*^9}, {3.7579216351176195`*^9, 
  3.757921637429574*^9}},ExpressionUUID->"72bf3732-c3a2-4f97-80cb-\
c1e43b95ecdf"],

Cell["\<\
\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\:0438\
\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\
\:0438\:044f \:043a\:043e\:043d\:0442\:0443\:0440\:0430 \:0444\:0440\:043e\
\:043d\:0442\:0430 \:0442\:0440\:0435\:0449\:0438\:043d\:044b \:043f\:043e \
\:0433\:0440\:0430\:043d\:0438\:0447\:043d\:044b\:043c \:044d\:043b\:0435\
\:043c\:0435\:043d\:0442\:0430\:043c\
\>", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.751040043497757*^9, 3.7510400775702553`*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"b0004f69-f221-4be9-a8c1-\
e15c829973e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotCircles", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "distances", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"step", "=", "16"}], ";", "\[IndentingNewLine]", 
      RowBox[{"margin", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"color", "=", "Orange"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"color", ",", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Circle", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"i", "*", "step"}], ",", " ", 
                RowBox[{
                 RowBox[{"-", "j"}], "*", "step"}]}], "}"}], ",", 
              RowBox[{"4", "*", 
               RowBox[{
                RowBox[{"distances", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
             "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "margin", ",", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"distances", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "margin", " ", 
               "+", " ", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "margin", ",", 
              RowBox[{
               RowBox[{"Length", "[", "distances", "]"}], "-", "margin", " ", 
               "+", " ", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7510400351290483`*^9, {3.751040082955327*^9, 3.751040201282288*^9}, {
   3.751040352870755*^9, 3.751040354389183*^9}, {3.7510404023651247`*^9, 
   3.751040408893008*^9}, 3.7510404920256357`*^9, {3.7576533191945534`*^9, 
   3.757653335925003*^9}, {3.757653431925517*^9, 3.757653449333905*^9}, {
   3.7576715103027487`*^9, 3.7576715560901613`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"88e4f2ea-e727-4648-a92f-\
4e85f1dbd17f"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:043a\:0430\:0440\:0442\:044b \:0441\:043b\:043e\:0451\
\:0432", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.751040040004345*^9, 3.751040041480859*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"394e299f-9abe-4d8b-a9b5-\
36a2d37636ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotLayersMap", "=", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"stressLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plainModulusLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"carterLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"minY", "=", "100000"}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxY", "=", 
       RowBox[{"-", "100000"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"layers", "=", 
       RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"i", "=", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "<", " ", 
         RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"y1", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y2", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y2\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"plainModulus", "=", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"layers", "[", 
              RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
             "\"\<Young's modulus\>\"", "]"}], "*", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "9"}]], "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Power", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"layers", "[", 
                   RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                  "\"\<Poisson's ratio\>\"", "]"}], ",", "2"}], "]"}]}], 
              ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<stress\>\"", "]"}], "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "y1"}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<stress\>\"", "]"}], "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "y2"}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plainModulusLine", ",", 
           RowBox[{"{", 
            RowBox[{"plainModulus", ",", "y1"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plainModulusLine", ",", 
           RowBox[{"{", 
            RowBox[{"plainModulus", ",", "y2"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"carterLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<Carter's coefficient\>\"", "]"}], "*", 
               SuperscriptBox["10", "6"]}], "]"}], ",", "y1"}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"carterLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<Carter's coefficient\>\"", "]"}], "*", 
               SuperscriptBox["10", "6"]}], "]"}], ",", "y2"}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"minY", "=", 
          RowBox[{"Min", "[", 
           RowBox[{"{", 
            RowBox[{"y1", ",", "y2", ",", "minY"}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"maxY", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"{", 
            RowBox[{"y1", ",", "y2", ",", "maxY"}], "}"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"minY", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.5"}], "*", "cellLength", "*", "size"}], ",", 
          "minY"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxY", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "minY"}], ",", "maxY"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plotStyles", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dotted"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Green", ",", "Dashed"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Purple", ",", "Dotted"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plotLegend", "=", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\:041d\:0430\:043f\:0440\:044f\:0436\:0435\:043d\:0438\:044f\
\>\"", ",", 
             "\"\<\:041f\:043b\:043e\:0441\:043a\:0438\:0439 \:043c\:043e\
\:0434\:0443\:043b\:044c \:042e\:043d\:0433\:0430\>\"", ",", 
             "\"\<\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\
\:0442 \:041a\:0430\:0440\:0442\:0435\:0440\:0430\>\""}], "}"}], ",", 
           RowBox[{
           "LegendLabel", "\[Rule]", 
            "\"\<\:041a\:0430\:0440\:0442\:0430 \
\:0441\:043b\:043e\:0451\:0432\>\""}], ",", " ", 
           RowBox[{"LegendFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Framed", "[", 
               RowBox[{"#", ",", 
                RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], "&"}], 
             ")"}]}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}], ",", "Right"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"commonPlotParameters", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Tiny", ",", "Medium"}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         RowBox[{"AxesStyle", "\[Rule]", "Transparent"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"minY", ",", "maxY"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"False", ",", "True", ",", "False", ",", "False"}], 
           "}"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"stressLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", "None", "}"}], ",", 
           RowBox[{"{", "None", "}"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "plotStyles"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "plotLegend"}], ",", 
         "commonPlotParameters"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plainModulusLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"plainModulusLine", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"plotStyles", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "commonPlotParameters"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"carterLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"carterLine", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"plotStyles", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", "commonPlotParameters"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Overlay", "[", 
       RowBox[{"{", 
        RowBox[{
        "stressLinePlot", ",", "plainModulusLinePlot", ",", 
         "carterLinePlot"}], "}"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.750355499782115*^9, 3.750355793596572*^9}, {
   3.7503558631512537`*^9, 3.75035595668403*^9}, {3.750356028597644*^9, 
   3.7503561318033533`*^9}, {3.750356194818742*^9, 3.750356208887875*^9}, {
   3.7503563618567467`*^9, 3.750356363361658*^9}, {3.750356423863585*^9, 
   3.750356473236062*^9}, {3.750356504013914*^9, 3.750356817174099*^9}, {
   3.7503568624727697`*^9, 3.7503569686281157`*^9}, {3.750357008792891*^9, 
   3.750357226835019*^9}, {3.750357435011059*^9, 3.7503574352471*^9}, {
   3.750357508025413*^9, 3.7503575160456057`*^9}, {3.750357547885824*^9, 
   3.750357583085084*^9}, {3.750357887241557*^9, 3.750357889461896*^9}, {
   3.7503579481465197`*^9, 3.750357984969563*^9}, {3.7503580226450663`*^9, 
   3.750358024481966*^9}, 3.750361185626094*^9, {3.750658720102997*^9, 
   3.750658726408321*^9}, {3.7506587623250723`*^9, 3.750658810269313*^9}, {
   3.750658848101965*^9, 3.750658944354722*^9}, {3.750658984747673*^9, 
   3.750659069691119*^9}, {3.7506592334858294`*^9, 3.750659554818267*^9}, 
   3.7506595987503633`*^9, {3.750660239574378*^9, 3.750660403592054*^9}, 
   3.750660460234714*^9, {3.750660513265897*^9, 3.7506606132287827`*^9}, {
   3.757146186440631*^9, 3.7571462480997224`*^9}, {3.7571463308534384`*^9, 
   3.757146374077917*^9}, {3.7571464264808116`*^9, 3.757146456638303*^9}, {
   3.7571467048801203`*^9, 3.7571467219542065`*^9}, {3.7579216351176195`*^9, 
   3.7579216374451947`*^9}},ExpressionUUID->"de53eaa8-5f9f-4f21-90ff-\
43a6ff9125cd"],

Cell["\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0443\
\:0434\:0432\:043e\:0435\:043d\:043d\:043e\:0433\:043e \:0433\:0440\:0430\
\:0444\:0438\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.7579216318215137`*^9, 
   3.757921647114832*^9}},ExpressionUUID->"1a670f20-a3b6-450a-ad8b-\
342673b49f03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotDoubleMatrix", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "matrixName"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"doubleTicks", "=", 
       RowBox[{"createTicks", "[", 
        RowBox[{
         RowBox[{"0.5", "*", "cellLength"}], ",", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"middle", "-", "1"}], ")"}]}], "+", "1"}], ",", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"size", "-", "1"}], ")"}]}], "+", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"doubleLines", "=", 
       RowBox[{"createLines", "[", "doubleTicks", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"GlueMatrix", "[", "matrix", "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "matrixName"}], ",", " ", 
         RowBox[{"FrameTicks", "\[Rule]", "doubleTicks"}], ",", 
         RowBox[{"GridLines", "\[Rule]", "doubleLines"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", "myRainbow"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7579216318215137`*^9, 
  3.7579216374451947`*^9}},ExpressionUUID->"22d0e063-4a2f-4302-8b76-\
c318fb3d02c1"],

Cell["\:0417\:0430\:0433\:0440\:0443\:0436\:0430\:0435\:043c \:0434\:0430\
\:043d\:043d\:044b\:0435 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\
\:043e\:0435\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 
   3.7489697856369534`*^9},ExpressionUUID->"573585d3-2ab7-4012-9bde-\
ee091976122e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"concentration", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<concentration_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fracture", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<fracture_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opening", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<opening_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressure", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<pressure_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748933665070517*^9, 3.748933667635915*^9}, {
   3.748967897373295*^9, 3.748967952408773*^9}, 3.748968045615181*^9, 
   3.748969785637787*^9, {3.748969873450966*^9, 3.7489698881760197`*^9}, {
   3.748970008078432*^9, 3.748970029339315*^9}, {3.749002589036405*^9, 
   3.749002591800912*^9}, {3.749197428231081*^9, 3.74919743718463*^9}, {
   3.750355267359632*^9, 3.7503553082320023`*^9}, {3.750361141233561*^9, 
   3.75036114372082*^9}, {3.75036139017474*^9, 
   3.7503613910997057`*^9}},ExpressionUUID->"dbe4cd76-4469-4ba0-8820-\
019c7d484c1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"openingFilenames", "=", 
    RowBox[{"FileNames", "[", 
     RowBox[{"\"\<*_m.txt\>\"", ",", 
      RowBox[{"folder", "<>", "\"\<Opening/\>\""}]}], "]"}]}], ";"}], 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"1", " ", "<", 
       RowBox[{"Length", "[", "openingFilenames", "]"}]}], ",", 
      RowBox[{"openingFilenames", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{"openingFilenames", ",", 
         RowBox[{"ToExpression", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringSplit", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<=\>\"", ",", "\"\<_\>\""}], "}"}]}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "]"}]}], "]"}]}]}], "]"}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"openingAtCheckStep", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"openingFilenames", "[", 
        RowBox[{"[", "t", "]"}], "]"}], ",", " ", "\"\<Table\>\""}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numberOfCheckSteps", "=", 
   RowBox[{"Length", "[", "openingFilenames", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7503554730398903`*^9, {3.750657168634218*^9, 3.7506572226324253`*^9}, {
   3.750657269550213*^9, 3.75065727758918*^9}, {3.750657360637339*^9, 
   3.750657373821903*^9}, {3.7506574159365473`*^9, 3.750657416799019*^9}, {
   3.752485685149294*^9, 3.752485723856041*^9}, {3.753164422442254*^9, 
   3.75316447320899*^9}},ExpressionUUID->"a97292b3-e790-4763-b444-\
aa3c9e960ac0"],

Cell["\:0412\:044b\:0432\:043e\:0434\:0438\:043c \:0432\:0440\:0435\:043c\
\:044f \:043f\:043e\:0441\:043b\:0435\:0434\:043d\:0435\:0433\:043e \:0437\
\:0430\:043f\:0443\:0441\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}},ExpressionUUID->"5f65bd77-40eb-4e12-b562-\
42a327fbbec3"],

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
    "\"\<\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\:0434\
\:043d\:0435\:0433\:043e \:0437\:0430\:043f\:0443\:0441\:043a\:0430:\>\"", 
     " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"DateString", "[", "]"}], ",", "Orange"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.749195512564392*^9, 3.749195545569838*^9}, {
  3.749195598370927*^9, 3.749195681354604*^9}, {3.749197676357965*^9, 
  3.749197687499799*^9}, {3.7491981127205763`*^9, 
  3.749198119614801*^9}},ExpressionUUID->"38a1c404-a80a-4f37-b880-\
ecc92f0fda32"],

Cell[BoxData[
 StyleBox[
  RowBox[{"\<\"\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\
\:0434\:043d\:0435\:0433\:043e \
\:0437\:0430\:043f\:0443\:0441\:043a\:0430:\"\>", " ", 
   StyleBox["\<\"Tue 5 Mar 2019 17:54:59\"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0.5, 0],
    FrontFaceColor->RGBColor[1, 0.5, 0],
    BackFaceColor->RGBColor[1, 0.5, 0],
    GraphicsColor->RGBColor[1, 0.5, 0],
    FontColor->RGBColor[1, 0.5, 0]]}],
  StripOnInput->False,
  FontSize->24]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.749195659419508*^9, 3.749195673211211*^9}, 
   3.749195717683158*^9, 3.7491976880563498`*^9, {3.74919811272084*^9, 
   3.749198124508636*^9}, 3.749198547581563*^9, 3.74974577318449*^9, 
   3.7497458945699177`*^9, 3.749746363493379*^9, 3.749746523405265*^9, 
   3.749746676390993*^9, 3.749746717948832*^9, {3.749746796696604*^9, 
   3.749746814039156*^9}, 3.749746914039852*^9, 3.750355233686296*^9, 
   3.7503554477398863`*^9, {3.750360556216104*^9, 3.7503605666632433`*^9}, 
   3.7503607801969137`*^9, 3.7503611476314583`*^9, 3.750361263438398*^9, 
   3.7503613949006863`*^9, 3.7503614744322433`*^9, 3.750655374338236*^9, 
   3.7506554082503853`*^9, {3.750655458531261*^9, 3.750655464638625*^9}, 
   3.7506557512823467`*^9, 3.750655795952038*^9, 3.7506560265283737`*^9, 
   3.750656136604802*^9, 3.7506564375125713`*^9, {3.750656915409037*^9, 
   3.750656934849925*^9}, 3.750658504368836*^9, 3.750658566935512*^9, 
   3.750659695607489*^9, 3.750660462939427*^9, 3.750660582327619*^9, 
   3.750660616680229*^9, 3.7506663258812857`*^9, 3.750666757135747*^9, {
   3.751040182747201*^9, 3.751040192950671*^9}, 3.751040360329432*^9, 
   3.751040412204547*^9, 3.7515227620073433`*^9, 3.7515261687620907`*^9, 
   3.751615377030303*^9, {3.751615463201515*^9, 3.751615477707189*^9}, 
   3.751615682300685*^9, 3.751615917177168*^9, 3.751615995074151*^9, 
   3.751616095693368*^9, 3.7516183414337597`*^9, 3.7524855465523653`*^9, {
   3.7524855804109573`*^9, 3.7524856094127126`*^9}, 3.7524856461426153`*^9, 
   3.7524857590646477`*^9, 3.753164440016218*^9, 3.7538625516409483`*^9, 
   3.7538626010512495`*^9, 3.7538627623884706`*^9, 3.754638725719348*^9, 
   3.754638979218073*^9, 3.7546391083282213`*^9, 3.7546392253821335`*^9, 
   3.7546393299616723`*^9, 3.754639792915779*^9, 3.754640136856781*^9, 
   3.754642428063615*^9, 3.754646200280037*^9, 3.754649657661769*^9, 
   3.7546504264040556`*^9, 3.7546505727445335`*^9, 3.7546519768998513`*^9, 
   3.75465208037519*^9, 3.7546523291861*^9, 3.7546525047837963`*^9, 
   3.7546531259332304`*^9, 3.75465323619244*^9, 3.7561110952789073`*^9, 
   3.756183767554145*^9, 3.7561838191099224`*^9, 3.756188248790681*^9, 
   3.7561882858664894`*^9, 3.7561959488481665`*^9, 3.757146255714679*^9, 
   3.7571465394105883`*^9, {3.757146679426608*^9, 3.7571467254847383`*^9}, {
   3.7571468087151065`*^9, 3.757146839098605*^9}, {3.7571468791351013`*^9, 
   3.7571468881290636`*^9}, 3.757147012508487*^9, 3.757147053309069*^9, 
   3.75714709071288*^9, 3.757147139474738*^9, 3.757147282024349*^9, 
   3.757147439329136*^9, 3.757148048138564*^9, 3.757148390117943*^9, 
   3.757149543401328*^9, 3.7573124901220355`*^9, 3.757312806925419*^9, 
   3.757313095773717*^9, 3.7573132106623006`*^9, 3.75731326216355*^9, 
   3.757313384022509*^9, 3.757313518103788*^9, 3.7573136926188917`*^9, 
   3.7573137480517673`*^9, 3.7573138330349555`*^9, 3.757314482294738*^9, 
   3.7573145228180227`*^9, 3.7573145899272633`*^9, 3.757314712860545*^9, 
   3.7573147663542857`*^9, 3.757315101863775*^9, 3.757315707041792*^9, 
   3.757315973157895*^9, 3.7573165752591634`*^9, 3.757323338833152*^9, 
   3.757323657121977*^9, 3.757327845501257*^9, 3.757328738569846*^9, 
   3.7573298575505896`*^9, 3.757393788709646*^9, 3.7573950029163485`*^9, 
   3.7574076969767027`*^9, 3.7574089268359537`*^9, 3.7574114422623997`*^9, 
   3.757415015625086*^9, 3.7576527927824078`*^9, 3.757652850347029*^9, 
   3.757660420367476*^9, 3.7576630996657834`*^9, 3.757663546775882*^9, 
   3.757671560698409*^9, 3.7576720854083395`*^9, 3.7576727139398627`*^9, 
   3.7576728118433695`*^9, 3.757672846095731*^9, {3.7576728960884647`*^9, 
   3.7576729061173906`*^9}, 3.7576729476683617`*^9, 3.7579120251677094`*^9, 
   3.7579210121227283`*^9, 3.7579212537288756`*^9, 3.757921429520739*^9, 
   3.7579215247170496`*^9, 3.757925447983324*^9, 3.75792739758609*^9, 
   3.7579276460377007`*^9, 3.7584308130387497`*^9, 3.758431088071436*^9, 
   3.7584314333747234`*^9, 3.758431869639453*^9, 3.758431981983164*^9, 
   3.758432020462161*^9, 3.758432081701499*^9, 3.7584323369175463`*^9, 
   3.7584326706889896`*^9, 3.75843284677746*^9, 3.758433888144831*^9, 
   3.7584347756995645`*^9, 3.7584389799787865`*^9, {3.7584414130548944`*^9, 
   3.7584414342552605`*^9}, 3.758441881257159*^9, 3.7590590926429453`*^9, 
   3.7592211796408396`*^9, 3.759221267962756*^9, 3.7592219257789297`*^9, 
   3.759222067464307*^9, 3.7592242962870893`*^9, 3.759224783216329*^9, 
   3.7607801356086664`*^9, 3.7607819373382883`*^9, 3.76078469609286*^9, 
   3.7607864994541593`*^9},ExpressionUUID->"de594772-22bf-4f54-a09d-\
175a7f600a80"],

Cell["\:0421\:0442\:0440\:043e\:0438\:043c \:0433\:0440\:0430\:0444\:0438\
\:043a\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660984637878*^9}, 3.7476611498754272`*^9, 
   3.747664166427878*^9, 3.7489697348559017`*^9, {3.749746711959444*^9, 
   3.749746715762725*^9}},ExpressionUUID->"c9835767-2b4a-4bf0-9d05-\
9ee1c3d7ac31"],

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
    "\"\<\:0414\:043b\:0438\:043d\:0430, \
\:0432\:044b\:0441\:043e\:0442\:0430, \:0440\:0430\:0441\:043a\:0440\:044b\
\:0442\:0438\:0435 \:0432 \:0438\:0441\:0442\:043e\:0447\:043d\:0438\:043a\
\:0435 {\:043c,\:043c,\:043c\:043c}:\\n\\t\\t\>\"", " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "Orange"}], "]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotMatrix", "[", 
  RowBox[{
  "opening", ",", " ", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotCharacteristic", "[", 
  RowBox[{
  "3", ",", 
   "\"\<\:041f\:0440\:0438\:0437\:0430\:0431\:043e\:0439\:043d\:043e\:0435 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:0435, \:041c\:041f\:0430\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"0", "<", 
    RowBox[{"Max", "[", "concentration", "]"}]}], ",", 
   RowBox[{"PlotMatrix", "[", 
    RowBox[{
    "concentration", ",", " ", 
     "\"\<\:041a\:043e\:043d\:0446\:0435\:043d\:0442\:0440\:0430\:0446\:0438\
\:044f \:043f\:0440\:043e\:043f\:043f\:0430\:043d\:0442\:0430\>\""}], "]"}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotLayersMap", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"opening", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"middle", "-", "i"}], ")"}], "*", "cellLength"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "opening", "]"}], ",", "1"}], "}"}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", "All"}], "}"}]}], 
      ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">=", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              RowBox[{"opening", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"middle", "-", "i"}], ")"}], "*", "cellLength"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "opening", "]"}], ",", "1"}], "}"}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"FileExistsQ", "[", 
    RowBox[{"folder", "<>", "\"\<times_v.txt\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<\:0417\:0430\:043c\:0435\:0440\:044b \
\:0432\:0440\:0435\:043c\:0435\:043d\:0438\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"measuredTimes", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"folder", "<>", "\"\<times_v.txt\>\""}], ",", " ", 
        "\"\<Table\>\""}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"totalTime", "=", 
     RowBox[{"measuredTimes", "[", 
      RowBox[{"[", 
       RowBox[{"Length", "[", "measuredTimes", "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{"Length", "[", "measuredTimes", "]"}]}], ",", 
      RowBox[{"++", "i"}], ",", 
      RowBox[{
       RowBox[{"measuredTimes", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "/=", 
       RowBox[{"0.01", "*", "totalTime"}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Grid", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
            "\"\<\:0420\:0430\:0441\:0447\:0451\:0442 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:044f\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<\:041f\:0440\:0438\:0440\:043e\:0441\:0442 \:0440\:0430\
\:0441\:043a\:0440\:044b\:0442\:0438\:044f\\n(\:0438 \:043a\:043e\:043d\:0446\
\:0435\:043d\:0442\:0440\:0430\:0446\:0438\:0438)\>\"", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\:041f\:0435\:0440\:0435\:0441\:0447\:0451\:0442 \:0440\
\:0430\:0441\:0441\:0442\:043e\:044f\:043d\:0438\:0439\\n\:0434\:043e \:0444\
\:0440\:043e\:043d\:0442\:0430\>\"", ",", 
               RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             "\"\<\:0418\:043d\:0442\:0435\:0433\:0440\:0438\:0440\:043e\:0432\
\:0430\:043d\:0438\:0435\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:041f\:0435\:0440\:0435\:0441\:0442\:0440\:043e\:0435\:043d\
\:0438\:0435 \:0441\:043f\:0438\:0441\:043a\:043e\:0432\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<\:0421\:043e\:0445\:0440\:0430\:043d\:0435\:043d\:0438\:0435\
 \:0448\:0430\:0433\:0430\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:0418\:0437\:043c\:0435\:043d\:0435\:043d\:0438\:0435 \
\:0437\:0430\:043a\:0430\:0447\:043a\:0438\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:041c\:0430\:0441\:0448\:0442\:0430\:0431\:0438\:0440\:043e\
\:0432\:0430\:043d\:0438\:0435\>\""}], "\[IndentingNewLine]", "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"measuredTimes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{
                RowBox[{"Length", "[", "measuredTimes", "]"}], "-", "1"}], 
               ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
         "\[IndentingNewLine]", "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "All"}], ",", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"totalTime", "/", "1000000"}], 
       "\"\<\:0441\:0435\:043a\:0443\:043d\:0434 \:0432\:0441\:0435\:0433\
\:043e\>\""}], ",", "Bottom"}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.749746711959631*^9, {3.7503604496962852`*^9, 3.7503605102226467`*^9}, {
   3.750658187684452*^9, 3.7506581966759377`*^9}, 3.750658599559669*^9, {
   3.750660410623929*^9, 3.7506604108938932`*^9}, {3.750666592966673*^9, 
   3.750666609429427*^9}, {3.750666647089669*^9, 3.750666650063033*^9}, {
   3.7510398594727287`*^9, 3.751039878653421*^9}, {3.757313894301865*^9, 
   3.7573142039637947`*^9}, {3.7579135982458677`*^9, 3.757913608602586*^9}, {
   3.7579142495638924`*^9, 3.7579143338119197`*^9}, 3.75791440434883*^9, {
   3.757914587589645*^9, 3.7579145929167037`*^9}, {3.7579146284265175`*^9, 
   3.7579146349248953`*^9}, {3.7579213280693846`*^9, 
   3.7579213309280586`*^9}, {3.75922430234816*^9, 
   3.7592243128300653`*^9}},ExpressionUUID->"d92d7a12-ebcc-4f18-83e0-\
f681f54b8eec"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"\<\"\:0414\:043b\:0438\:043d\:0430, \:0432\:044b\:0441\:043e\:0442\
\:0430, \:0440\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435 \:0432 \:0438\
\:0441\:0442\:043e\:0447\:043d\:0438\:043a\:0435 \
{\:043c,\:043c,\:043c\:043c}:\\n\\t\\t\"\>", " ", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"140.369`", ",", "27.5578`", ",", "3.47267`"}], "}"}],
    StripOnInput->False,
    LineColor->RGBColor[1, 0.5, 0],
    FrontFaceColor->RGBColor[1, 0.5, 0],
    BackFaceColor->RGBColor[1, 0.5, 0],
    GraphicsColor->RGBColor[1, 0.5, 0],
    FontColor->RGBColor[1, 0.5, 0]]}],
  StripOnInput->False,
  FontSize->24]], "Print",
 CellChangeTimes->{{3.7573140571074085`*^9, 3.7573142043853965`*^9}, 
   3.757314482310359*^9, 3.7573145228180227`*^9, 3.7573145899585056`*^9, 
   3.757314712876047*^9, 3.7573147663857603`*^9, 3.7573151018793845`*^9, 
   3.757315707057434*^9, 3.757315973173514*^9, 3.757316575290423*^9, 
   3.757323338833152*^9, 3.757323657121977*^9, 3.757327845516865*^9, 
   3.7573287385855427`*^9, 3.7573298575609694`*^9, 3.7573937887252316`*^9, 
   3.757395002931969*^9, 3.7574076969767027`*^9, 3.757408926842561*^9, 
   3.757411442278022*^9, 3.757415015640706*^9, 3.757652792813685*^9, 
   3.7576528503626814`*^9, 3.7576604203831*^9, 3.7576630996657834`*^9, 
   3.757663546807126*^9, 3.757671560698409*^9, 3.7576720854241066`*^9, 
   3.7576727139554834`*^9, 3.757672811858959*^9, 3.7576728461113534`*^9, {
   3.757672896104086*^9, 3.7576729061486063`*^9}, 3.757672947699605*^9, 
   3.757912025198925*^9, 3.757913618506505*^9, 3.7579146467513285`*^9, 
   3.75792101213837*^9, 3.7579212537429314`*^9, 3.7579214295362797`*^9, 
   3.757921524732671*^9, 3.7579254479989767`*^9, 3.7579273976017113`*^9, 
   3.757927646053316*^9, 3.758430813069991*^9, 3.758431088071436*^9, 
   3.7584314333903723`*^9, 3.758431869655073*^9, 3.758431981983164*^9, 
   3.7584320204777665`*^9, 3.7584320817171535`*^9, 3.758432336933195*^9, 
   3.758432670704612*^9, 3.758432846793081*^9, 3.7584338881604366`*^9, 
   3.7584347757307854`*^9, 3.758438979994408*^9, {3.758441413070539*^9, 
   3.758441434286497*^9}, 3.7584418812727795`*^9, 3.7590590926740355`*^9, 
   3.759221179656455*^9, 3.759221267978345*^9, 3.7592219257789297`*^9, 
   3.75922206747991*^9, 3.7592242963027105`*^9, 3.7592247832319508`*^9, 
   3.76078013566068*^9, 3.7607819373562927`*^9, 3.760784696106863*^9, 
   3.7607864994661617`*^9},ExpressionUUID->"c5897818-6bb8-422f-8936-\
ed79cfd0d7e1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1:eJzs3QlUze37L/4oSZKIUIaQJEpkSOIOiSSiUIkyJRGRkgYyJRGRoVJEhlQI
SVJEFKWkUknzsPduj5nJdPb3PH+fj/XcXet51jrrf36/c87VWs96Peta1t67
z+e+r+t9164Gr9y0cI2sjIxMqPS/w9L//vP/f320EhRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRF/+83/GOhieU3CaWb3dCBAxtp8yQd
pha/pF0cpj/+8wNa07zwJxtv0n4KnZBme4429tJPu4uRtKp9Jipv3k27J2WW
c0DAvxd6HOh5odcJfV7QdYCuG3SdofvyX71eUBRFURRF/2/TMOBCnPYhCeWM
7EM5Mp/FlDH3rn0a60Rbkvt2T+NTEaVVoWKHFQtp9/yqHeXeJKT0tnDONz1I
q37QqqO9Ae1Q/SLzi28FlCreA1W2Z9MGeTtnq8bS5pyK1ru+mbZk36SPygto
Pbd41NmMoZ0Sn9Xtrno72vbIF73nU2Z6HuvkV0NrbRmwTZhBe+ngSiOTC7Ru
YxJ65e+n9R4VG3VqLW0CUZo42ZrWPLStl/p42rgNu2UeD6FN/rJ1sZIcreH0
Xh1viFoonesqA+eV0FaOXOAz+zZtDmeU5cZoWr0oQzvBXtq8hAybJD/akqqL
PpL1tDIu2fJJLv9e6HGg54VeJ/R5QdcBum7QdYbuC3QfofsOrRNoXUHrEFq3
0DqH9gW0j6B9B+1TaF9DfQDqG1CfgfoS1Megvgf1SaivQn0Y6ttQn4fmwn/1
vEJRFEX/31K7kKw56yyhtC7wHjjuuZhS23v8VANd2sVuJj21Y0WU2eVmsT90
aQ36f6lUfiykzPI9LUO8aJ0/rixtHUR7iTctf889AWXOkNRbFbNpw5OXtQaW
8Sm7eXGTetjRusx9v8ukqYVStmJoxfDNtEVl1hmTh9JO+e6TMP0xjzI064ii
6WFaZ5e+1/XW0vKfj/xVM4pWRTU29oGESxn9/pXLo6e0Ltah5jZRtBOmJj4Z
7EUrWznNsa8ZrepQuTfLNGmVTkT039uBNuPYd++0Mg5lmc/Kgtxk2jZB0iFO
OG161Ymy6ytpfa/F2r+bTisvSZhZO5SWc3v4erUfzZSV3Q+rjiinbWsuqvty
n7YkkRO/JYnWdMhNc0EIreKRiW+s/Gnlq778erOeVlV7sIfOyn8v9DjQ80Kv
E/q8oOsAXTfoOkP3BbqP0H2H1gm0rqB1CK1baJ1D+wLaR9C+g/YptK+hPgD1
DajPQH0J6mNQ34P6JNRXoT4M9W2oz0NzAZoj0NyB5hQ016A5CM5NYM7+V89/
FEXR/y7q7u6zzfCxhNL8aKtHrxG0beqhMW2HxZTVbyMznn0VUZoPk1TzttJ6
uF4YMFWRNn2X6a2AWCFlkZ6au7cxrfGZC3HxjQJK59TtXdp8aCfcDvoo04GW
ox4wZVggn3JCbyvdkC8tlFnPJop53rRWCufcuijSxh27snDQdR6lWvf1N51W
0tZVd0h8/4FLm/ag/twx2tiRR5VW6tEqRqz/lPSGQ6k+Lz6kjz9tlsfZi5MH
0fpPrXvX+UkzpbGvscwYO9qoHQ/8DmnQ+u7qMehhUxOl6vvU8CXXaVfN23Bj
4U5a1cPbQx/MoDXPW1ov7Ef7PpajdpzXSKkdI89NfExruDKhWDeSNryyXqjs
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
o166/nm6LuPV8bPfFLoeNjy9+WZTM1VPrrrTYBdK1yP2T69aNJGulyYW6LZy
m6h6xZNmr/pIui533KMfbyxd/1J3eKXt50aqrqXzOe1cDF0/9PWk93oHuj7X
Ts3R+GsDVc94tU01MZuut+Zv1np7hK4bKQ7+ccWGrsf7jth5oR9dD5bLedPy
tp6+j+K7o6an0fWmpOvfQ87R9YwPr36t2UnX+04eOdhrA13XURg2tM3+39eh
x4GeF3qd0OcFXQfoukHXGbov0H2E7ju0TqB1Ba1DaN1C6xzaF9A+gvYdtE+h
fQ31AahvQH0G6ktQH4P6HtQnob4K9WGob0N9HpoL0ByB5g40p6C5Bs1BaG5C
c/bvcxma49Dch3IClCugHALlFijnQLkIylFQ7oJyGpTroBwI5UYoZ0K5FMqx
UO6FcjKUq6EcDuV2KOdD5wLoHAGdO6BzCrMv/jdbdM5yY9MjPmWO6ri0tCVc
St0w7W/eZU2UOdHfXr2d3MhYdlye9NZuJKsUfMYtKGliXP/ecox8dh0JvFuZ
XtqXw1qy6cWu29Uk60Ku1oihXNYeV47uPVlJ3PeOctOZymNM3+L7MGhmOTFu
c9+dMqyF0aZHqk/D4VIiL6n65NeTzygau07j0NOXxPrst9eiYj6jppl60wbl
F6Stvm6P31EBo3ZKOk/9VB75Pj7um/p0IWPPjFHqyz1zSMmUcPmin0JGpdBD
FYM6PyIixR69d54RMfL8DWW7HssgioYplaqTxYxhp0Mf9Jh8m6jum/flQZGY
0SAoLk1mYxLJafCuVnGVMGb53t5e5h/N3LdS51kld37S/c12b7RS01i6njzU
6Er/TXSfrHo+c/mjR3RfHdU119RQla4HBwzse30n3beDe60bq1FD93+thTn7
v1rRdVOfI8/npdPzpchUZDlfh677v3rDKTpFzy//Ifcq9X/S89Gg77o1B53p
uk7itCcvSuj5u/qNWdu3JXTdvzWmX2wBPd9TLobcfzuPrsfKmrdNe07nCruH
R9b+mt9ODqlemKrzhM4zdZFXQn7NpOsyqYfDZhTQOcrItLvxS1O6flxmyLhP
6XR+e/r4yKGDlnQ9q9v5b6UFdM4sHTIz6OwCui4TFKHl/qmOvg7jtkyYfIyu
Vwh9OncyZus299LHR9dJiHXpwqCgG7VMvXrwXvXhERISbzvn0YrvNUy9bsHE
0Ki5EpI8V3HFbsLWpzRPldPtKCF9p8QorttXzdRFb6J2vkoTk6Jhsg96F1Yx
9ffjLX9Fe4hJnbzJjuB+bL3b8GEe3DHSuV7vGPHI/w1Tb+PIBi35ICIeD7u8
qGyoZOpq23duPfRYRNKuTR3qtJ6tR1mkbhq1T7p/0mb1kTx/zdT1nCpqvOaL
SKuo/9VL5mz9R4FJ4dJBIvKlY8SeNYUVTD1kVGrgFqGQ2G3KnTZwPluvvqoz
Rf2OkMTfbI54+KycqcvL1ToNOi4kKiFXN83bwtZ1tyqbF6wUEtchWqM7fC5j
6rIVygUzZwuJQv+LgddS2LooyvOgygghsZY953jFha2bO7we0ldJSJJXDFpi
MvCPeu0jvcE/BMRAf+274i+v2Ndfon+DvBWQCpWPxoPe/HMdehzoeaHXCX1e
0HWArht0naH7At1H6L5D6wRaV9A6hNYttM6hfQHtI2jfQfsU2td/fdB94Hcd
6htQn4H6EtTHoL4H9Umor0J9GOrbUJ+H5gI0R6C5A80paK5BcxCam9CcheYy
NMehuQ/lBChXQDkEyi1QzoFyEZSj/p67oJwG5TooB0K5EcqZUC6FciyUe6Gc
DOVqKIdDuR3K+dC5ADpHgOcO4JwCnWt+38f/VT3k5I6HLpJQGo55qXLtGY+y
Vbss0NmsmdL5U5Bpz1WNjB6Hx59dLWggy9Yf71Pr2szYkjn97sontcRD9/OV
S2IOY3KgekelcW9I1KYjjVlreYyGNxYsynxaRhLGW9QVxbUwyjppOYX2KiHd
Tg1XW5nIZ7zp1dPv1rcXpPKC48gftwSMnCGl31SePiO3xEMVShOEjM/X6rzo
/Cub5ES8kqj7iBhTyr4/zFh+n+hFaL24Ml3MyKuePUexLoX4Ziml8aTz5bex
Hwru66dfJuq2xWG8TAljoLfmjWdPg5nrHb8sfUmQPb0flUbbC43X0PvXJMfj
88QQer+bcp4X5T2i+0bfd/u/+3eh61+IrOiBHd1/spqjsh5fbOec8kPn5J6P
dD90PDVx5PlZdF2n0j7Z4BzdV83E3qmyIro/y5kf8nwwn64fUjMOsU6h+39E
mfG05kF0XWVsy66I3fR88R9wLsTmLT2nomdpf/y0mK6PG26ocCONnoNhH5td
xvdo5/sIt11vBIXQc7b/hZOnG37R83rUz08+j1za+Xp7zq0WnRY6D9QZlpk+
3cDW32/0GL/vg4Q4947sZNXI5hCR55FwpXCJtC9wPM5K2NwS8MKi6ZS076cF
paX7/WTzT879E+/kX4hJq6P38qOd/qhP87xv7yomHlqajnVybI4yXHHi2Ibu
0nXp6bXxiPYfeSyt5alKlog4z5v9aYQzm988/Ax+JrqLSMS47d/0jrE5kLOl
x8pJfUXE9OxIryMZbJ40mPTZTZgtJF+U3bq+aGFzqaqcccszDyExUOyR+6Xf
H/n/+eSGT0OkuXfHifHrlrC513m0e3hDgYB4fArzSN3N5u1ly2KGpIUIiOu6
A4ufV5YydU8t36BrswVEc+kY65TxbL16XqI4q7OA6MxMsl0ZXsLel6bCRXnZ
0n1ivK9se0sxm3v7pMeP2SetT3457Ptcti4K8bLrNFc6p94MW9bt/kum7uDx
sENiVz6pi1i1d+QAth7lf+Tw/uoWEnjHpan4ShH7vDrhUcv/k0ue1sq9/vCC
qWt6jcjTdm0hsRYv3j1UYOuLO2xIch7TQpLl+y9v/FTA3t+XymuGybeQur5z
vqYPZOs2dh2nvavhkdi7XWfec3jO1K1u3d7nnckjgYGHoq1v5bPX2XZ7SWUk
j9RdXD7YvANbPynDSVq8VzofOu5wvnEij6k3dp456bELj3gMtx/4qgNbXzV+
6+YXG6T/XnHmxG6a/1yHHgd6Xuh1Qp8XdB2g6wZdZ+i+QPcRuu/QOoHWFbQO
oXULrXNoX0D7CNp30D6F9jXUB6C+AfUZqC9BfQzqe1CfhPoq1Iehvv3XB93n
f9ehuQDNEWjuQHMKmmvQHITmJjRnobkMzXFo7kM5AcoVUA6BcguUc6BcBOUo
KHdBOQ3KdVAO/HtuhHImlEuhHAvlXignQ7kayuFQbodyPnQugM4R0LkDOqdA
5xroHPT7+v9bZ6i9fPWgTEApG69XFriGSzkqvUNorVYTpfxt87tbH7N6t/bm
W7+uI1HyGRsEyRxGQ2H+3SmiN0Rlbo+3Vt48xiKN56PUYsqIy2TxlJWSFsYC
q/Hmr8cUE6vB/hs7DBEwjjXqs+6zYQHZYOyyXc9KyLjlXNRwiUEO8bTpoSZc
LmKMUDP4LD70gBS57hjgay9mNFVTPWNeeIuYPn609c50CaNMVGa3gvvn2HOQ
3k2Vi8X0OWhvxiSz3Hv0+g+s+ZarmUTvF4VXBZxdN+n9FbhtT+qFCnqfPo4/
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
JsdC15+Qrm+9N9n9BGx+m7FuTF6zBZdYK39+57+ZzXt5TunHZ3/jkNaaOK4b
j/2+wJyD1aExVzjEI83miao1mycb519dqmrPIXUDnxx/6PuAzUv9txQvVJPu
n/5eRia17PdBEmxGzD5QJO3bZjEvHYex3zeJ8pbcTYmQ7p/zDjO6f2Zzcg5/
fOfLy5pJ1kiN2UHxt9ncPkt7cKOOtO8/3WFZG3GLzZ97D8jclDSR2NFOnT44
3mDqvuk/BO9vSvP/0eJNyt+uMvUNC6bM2OYlrTvmmS7QY88LsTdPmixZLK1/
eHKv6P4lpj6047fwsf2l5w7d6CPvDc+zr99n9uLK3tJ9vuFKpvLtc+z1Mdi2
8G5mIwmMO9vw4cIJ9nlPbHzKaZbuf/tZC7oLTzN1tZNepv7e0jr3vlap/D72
/HL/bheDPGn9Vad9u06dYq9no+O6T/Ok9TnKlR0cNv9jHXoc6Hmh1wl9XtB1
gK4bdJ2h+wLdR+i+Q+sEWlfQOoTWLbTOoX0B7SNo30H7FNrXUB+A+gbUZ6C+
BPUxqO9BfRLqq1Afhvo21OehuQDNEWjuQHMKmmvQHITmJjRnobn81wc9x3/X
obkP5QQoV0A5BMotUM6BchGUo6DcBeU0KNdBORDKjVDOhHIplGOh3Pv3nAzl
aiiHQ7kdyvnQuQA6R0DnDuicAp1roHPQ7+vwbw0qTE3VeN5C6elgLjguXTd/
d8pXt3m3tzYyDgtxUmwtaiBXtwj7vBI1M7ZdNk4LnFBDSnZtfF/xmcsY5Jsy
zKtvBfE4Z2b/8GULY7LG2A/3QopJ3AXDoWE2AsZRWnmjzio+J9YRBUa+BUJG
zY36iUNGZ5Pk0GC5sl8ixqylkc8+d0gjhkc33Ps4VMJosKrY/VPsBebzzui6
rePT6/R5yprnmvVhEr2uFH54OQ/uQq/Dx99EhXO+t/NzkcYirc0d6fqX9R5x
eYr0vsiwSYzZ0IveR025jq+796L3Xez4vsNPTKH3qUfhWi2+B72vq17GFfWO
o/uA7Zy9wWNr6H7inBu8Yk0fuh5Y22eI87x2vi+/adPM2AC6j/WNLjy9+THd
D60P3urU2LOd89Q5qyU7fdi+WmSsIwjkSIhCeJPl9Cy2P4c9uW3yfp2E8Nxz
+tQFs183C09UeHeWLyatSb2rj8xh+7zx7ECX10vFJCzFNPBsMzsvdHObvxzm
ighv89SNzY/Y+eK+qEa/xV9Ewl6N/Giexs6jOfzUzK5dRSTNwsIh5jQ7v9J3
ratJPy9dn487jyo5yc67q03BHq36QpI8eXE/e68/vj7pdWHClAzp+hh2WiFy
MTs3tfPjsicskc5fv34tCg7snO0WYO+w+TOfxKbVrjjtxs5l3SWt3YKO8wnv
dcWQ+Z7sHA+0d63Zqs8nWbVyo7S2snkgtG+PkeOkfco5M2F9R3c2P6SeDhaf
sW0hYYqJ8eqX2byxJ0nhiWobj4QtH/l6ZQObT+Tnn/IqvMAjmgc/WCoYsV9P
Nk9+ve/zDB5x3mwa88qGfX/RoUuP4jp9lOYl04Kx/Z+xeSlIP/20fSKXxPLO
K2bZse9rivYNVLR34BKVNbvHZWazeUz78NWhccrSx8lZdXO0Bft1dY+JkuqN
dzjEoHfSIt0TbN5TMdsXvXgFh8TGjxuwsoDNh+kZQxImDOAQU6elF4dose8H
c3Zz4CiUSfPq8OBfdo5s/jTO7qm54HgzMY29Zzoyn82rc/qFlPKWNEvz0mqr
vpvYfFsm3jh1zeBm4my7yOODFZuHPYs0er1vkOZqLbVnO6rZ74OEz/I+VXNZ
Wj815dWqAWzevmRm6aPvIt2Hy+rXnPt2malrPvDmtZhL/73YfIR5CPv9GsMo
lRX3FKX/XmnuibiyWKZuUnZe5/MX6Tli+2b7M5wzbI417OldcVW6n+UrthSP
CGfz/+eFTs2PpfXET01l2SfZ88L53ZNzVkjrey+OadYIYO9Lep/NSy9K62q3
Ey3KjrKv539+/L1fyMg4/uz0au8xaT2g9ujuZ6Hkn+rQ40DPC71O6POCrgN0
3aDrDN0X6D5C9x1aJ9C6gtYhtG6hdQ7tC2gfQfsO2qfQvob6ANQ3oD4D9SWo
j0F9D+qTUF+F+jDUt6E+D80FaI5AcweaU9Bcg+YgNDehOQvNZWiO//VBz/3f
dSgngLkCyCFQboFyDpSLoBwF5S4op0G5DsqBUG6EciaUS6EcC+Xev+dkKFdD
ORzK7VDOh84F0DkCOndA5xToXAOdg35fh3+rGvflTEdpH/i7h67Jr2qK4lAm
jJyx0MuzkXKGV/EOp9BmxgmxwXvql9QS9dM7Fq0P5jLe0t/7K9PlNWk1mdBW
tbaF0cBiWY91T0uIt3a/K6ve8xmN+63rkmBZSHTL3h3vs1LIKP9t3u4tt56Q
yqCdcbGXRIzPr3Za7GOQQYzHztU6lS1mjJ3zJqL0ylXiMOJRt17NEkaZH87X
PhpsZa6H4xv/avM8el3t3at/lu/Zzu+F+Hrrl4Ij/XWApPzk9Rpr6fVsnRA3
9OhWel9kLXj97J0PvY8qyh728Qqm991Tx0qjETHtvK/vVUBq26t2fq5zj11r
Sje6/mF1cf0gC7o/VLyc+yNpN91P4mPykoIf032povbbxvgWuo8lm2tnukym
62ZXPjz0OdJOP9xmrBpYR/dVf0fVkFIrtu4ZeXlhaaaExP46X3jMge3Pxj3K
qounSojKyFO63Qew/bzNdKqP0xMx8Th/Ommj6I/fW8UvlY80FZMIi15Hd5xj
58UMxSs9Z5aJSHzkpWtJp9j5kpeXKxK6isgXX8+F1kHsPBrqIHBP/y4kdiue
9yzexs6vTze/+HmEConrA9H4yBXsvMteR7Z10pDWgwcmhM5g56PpzeNz664K
SGym54Pksew8dQ/x6rtqnoCoVA7L/DyDnb/Wg/Y7pwr4ZHbhgrezrNh5naM4
7nS3ED5pVe8oN8Sene/hu0sj3EfwiYe56s+ja9k8YKCRlvb8WQv5MuN5wU4f
Nj9Yx19WOLtcmjcszEdqvGbzRpT9lmvdO0jXa9Zk13md2PfhJMssL/2QxCMe
smXDnjqzecZFxrXIb4F0HXdU6Ln+FJt/tLOM/bf8kualrGHuJj/YvGRcXzOb
m8olmi4OG/YeY/NVoO7qsRPWc0lg6Ydvyn3Zr2+vOtc8P1qTS1q1/Y90i2Pz
W5Tfvc0Dy6Xr3u2KUYQh+/Vz68E/5Ybv5pCwS5/6Zoew749qK0rTOjWWQ7JG
GG3ifmXz5IQ9VmXhwmaiqdnZKWcK+/6rIJ0jO5yTpXn1xKm3jxvT2BwYvOOB
0/ZmErjorW9mJvu+r6riqGRz02YSa6LEebSbfZ+YSsOMdEFHab30kvn4Aez7
ytTdDy++VCzdhzPCVuw0ZnO191RryeqjTcS03uxmw9JEdn1eubfhsXsTyZpx
ZYddeDx7nb05AsE46eNM7rBx45ALTP35+QUFl/Wk9TRnxf5H49j1MLnwa8N/
/n7d/3y/TRRTVx0fu2GYrDTnD9vrL5zKniPM41SHhEdJ+8KeHjY/tMPY+zW9
4kaDUFpfnfdsvWwMU1f7UagZsVNa73PdNKR2/z/WoceBnhd6ndDnBV0H6LpB
1xm6L9B9hO47tE6gdQWtQ2jdQusc2hfQPoL2HbRPoX0N9QGob0B9BupLUB+D
+h7UJ6G+CvVhqG9DfR6aC9AcgeYONKeguQbNQWhuQnMWmst/fdBz/HcdmvtQ
ToByBZRDwNwC5BwoF0E5CspdUE6Dch2UA6HcCOVMKJdCOfbvuRfKyVCuhnI4
lNuhnA+dC6BzBHTugM4p0LkGOgf9vj7/1tj8I5Oz5gkpVU5eVRNd51IWXZq5
eo5tE+Un1aLomjhW5YbcXmMV68lVu9zmokQOY9vHK/NCv78hJR9t+ykd4TEG
DeyQ8mZhGdHu12/LlNF8xtCUlCuztrwkM+ZvXVoYLGDcoGX+ZkR+HpF17mYx
p0HIKHxw3WL6zUckZ3XqtI9tIsZkc09BoEkaCSrZbBjZXcLoPNJWL+7AJeZ6
JJUb66Xx6e9bha19oBVzlj5nRdeOOXt7Ob0+NS3f1PLc6PXc2n1ScfkOev0f
v5C1ihyn90tEddVX1fR2fs6x+KKyalE7Pxfp7T1S52M77+M9cONzpQ5dD1bW
GXTXrZ2/+2NfvGpjOt1PeJnfuW4/2vm+VZSkMMmIrgeHeYdNCmqnj5l1WnM2
v53v1w+yGGygQ9cVDvRz+OXdzu+R2CQjcitv5/fjdaxf/8qGrVeP6jQ4uFBC
dFoPLbTdy/Z5TkQF79VCCTHdMSBHbf4fP1dl5t8trEraLxJTB7sOZ7/+FhRa
XHBpsZgUrTjc8VwFO3esKvt4WEpEJOvc5AiTMnZOZaetF44PFRGeVbcX8vXs
XDP8+GXRr+HSdbNGvPhnIzsHp4RcOOF2T0gi7DW8Q0rZudn2+oe7gq2QtMa2
9exdzM7ZsLkD5s5oFhBXYjFVJ5Ody0Xb1tb23CsgwYm79UfnsXM8a5lT1946
AuLstjF6XBM7951/yhVZvJTmBD+lYKOubF3zUN88NU8+sV4+5WvaIDY/hJa+
dlRT5xPncE3exGls3lBV7DLs2l1pH4w86WhozeaT1vyRyfMcWkjyt0qPA9ls
nimxPN75oVIL0fRrHvaEsPlH1cGzU+UdHnF+ZKox/RSbl7oN27Mz24lHTO8e
CXhZw+arbvsmdT7WT1qPHKRVuZN9XxC/Rq1M5TmXhDls0bf9zua3yhcDTvaU
9mXT7ifEjvFs3uv/7fXpGTOl/547retCB/br58bPv+2/KivNgT/4l1f1ZHNj
uGeWat8HHFI37dFKn3vs1+eVuL3vyfpziOke98s9N7C59P2czfnaUzkkULTh
3R539udfFNOCcs505BBngxkPDdXZ91859228/jOnmWS9r6l594T9+Rql9KPi
UeekudrsxoKHlmx+HnVQGJ67UfrvN03Jzbdh8zbnwdY4WSvpft55ZKVWxz/e
J7Z+9I2tfaX1cZWCwx/YPF/pdHpcuJL08e/3UM4KYOue3Q/YfX4o3efjb/MX
Dmd//ig7cn1CdksTie0wLv7CYPZ9azJPO+plnpL++9iJe3Mr2fOFNlf167TX
0vNO59z0cP/kf6xDjwM9L/Q6oc8Lug7QdYOuM3RfoPsI3XdonUDrClqH0LqF
1jm0L6B9BO07aJ9C+xrqA1DfgPoM1JegPgb1PahPQn0V6sNQ34b6PDQXoDkC
zR1oTkFzDZqD0Nz8/+4ONWd/16G5DM1xaO5DOQHKFVAOgXILlHOgXATlKCh3
QTkNynVQDoRyI5QzoVwK5di/514oJ0O5GsrhUG6Hcj50LoDOEdC5AzqnQOca
6Bz0+/r8r8oJ7fxyzrQWyqGv+iWacZopc3or+kkWNFIath7oVmXXzOgyemX5
+o+1RGWmfEhiVy5jkYFoxY+qSqK2LKtvTSqPMZN3//aaN69I3cGC3orj+YzO
jqfu1zu/JI2v3IXl6wWMSd83eLX65BPPSct38y8IGedeznsbOOQxyb6+wGVX
ooix4tHIcZKP98iyvo9GbY0SM8a/4XBCHyUTq0l3zN0OSRhjp13M7Jl0grlO
wYpJWk4b6PPXhT72dz2m0evWzrTWUmYGvc4r0q95hayh98WFQ7ZTR4S383NY
3WUfv3lC7zsZj/3hnX60832ujWa2+kbtfN1j3rfbQ9bS+/3QZZNBp2618/tt
Fj5VnK7QztdbhGVnnR3o/tM38tjyKSl0v3L1Vdk2uCtdV/i4M/PURrrvKU2M
GirzgO6fsZc/6yXK03UfskXDwo3uw7ZXC/all9L9vOLKANexE9r5O6F6Jh1W
3Grn99amxMb/HMPWQz9+ttG7KyF1zYIFb+excyfKJmiXgp10fbx8MaO3Izun
fEsrUwIlYmKgOvTxw8XsXAs00+wwepuYmCYW7f444o/fg7G+26DSXmLCO3jO
quc4dj6GbMvbNuG6dB3r+o5UmMDO0xJ5h9s6S0REpceKJ832f/w+4fp5dy58
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
lkO03KLlHC0XaTlKy11aTtNynZYDtdyo5Uwtl2o5Vsu9Wk7WcrWWw7XcruV8
7e+C3/sR/2+c7Hz4oO2cfKHl12p+73rlCOPre6SGvpktdI7r++W7TzKFea/y
U+a1ki772af1R1PuCyM33E/58LJF2KHxUuvWNaTZZcucHOmeIYzMMgrb/pwu
dKz6ldPQGdI1pT+12/IyTRj2TlGzMkulVtOi84d6/g8HxtUuSk817Co87Frf
kmZ6Y3IN26tNUw2HIDe/siPTTX9qPOfI1KkpxtAd0Uez89NNP3/Z17JpfbLx
zrVFUwIGZJie6vbBrXdLJRsrrZ2O9N2fYdrjcbPrVdLuGcnGmpF2dhbTUY4d
U7ZsTTJ2Jz4+ecrTYvpgUr3IiAt3jehNW3Z9fsliGtqg7MOg4ETD/l7jq/bv
3jedO3bFsllfJRj+F5JXeK28bzomzL1XZPc7xraxA7tUKbxvah37qn1s09tG
YZWx/RJHZ5o2jYmr5H3rppE3vGnDqMhMU4esZRvCj98w3GJ31HuzepZp4Yqi
0MuR142ocjXKXZ6RZRr+8/GU7zfHG43cay5qfinLdE3mES+fjdeMGJeJAaWb
ZJuur3picEHgVcMqrOX0vZOz/7CSd1jmwTjD/8v87aMjsk2jKk14tmtzrOHq
VHit2CbHtIJLn0r1b8YYgU9LFp4dlmMa0jrfefSdS4ZP3A+zvzmcY2pl937r
hzsuGoMyHkxr/jTHtHiTm0uJthcM1wUdcoZ1zDWtkBzyxe3lUYa/w7tfPdmU
axoV9qKcg+NZw61E3c9W5+aaWp4OHvv1jNOGtWvhsmO/5aTfza3YZ++qokgj
uFNJu0ZeeaZbq2SEutmcNByvr/fw2Z9nalUx2un5kqOG74LCnYce5pnePr76
8pjth41BLmXbBrTON33gGuj76eYDxtyAawt+mZVv2m9Ew4jNk/Yas+zTuhWG
55smH9vn32rPLqNd//4Lf3iQb5o8etT4M1N+MqJmWzmXbFFgOurco/MXdoUa
Po0mxe77tMDUasiROj13BhtxqW6n438sMLX6/PG3vWutMBI6OMR3jCkw9clf
Eh1Xxtecc8mrPZ5ufyRz3YvrGyf7HpTPn5W2dxg+80/+77LIsdaNf8rnDao4
tMmpLZ9/sn3v6REPZM4clf9Z771n5fPcHovfeB4mnx8evC++Q5B8PjzqzY4O
X8jnLyxObokz/vpz7XO092rfU/td2jlo56ads3Yv2j3+571rdaLVlVaHWt1q
da71hdZHWt9pfar1tTYHtLmhzRltLmlzTJt72pzU5qo2h7W5rc15bS9oe0Tb
O9qe0vaatge1vantWW0va3tc2/taTtByhZZDtNyi5RwtF2k5SstdWk7Tcp2W
A7XcqOVMLZdqOVbLvVpO1nK1lsO13P773MP/DiNX1RzQP7NAGDa5ZOvbQ6X9
+n/h73ssX7iv69iCFw5/YsbcgKTrecKIC9ZzDo2RWlUqu/ZgTq6wx/xJq2fM
k3Z4Y/AjJytp0pqDNpY1OULnu8MjZ7wjHXTSpvJb+7OF7a7NLHXuPWngsT6J
1muzhI63b72oXU86PdGlp+fWTOEo9w5+swdIvbbf6nS56L4w5Hi48e1mqe/p
VodPG9J475OfBj62CM+8tL/S1E+6rfnsj/MrSiPrz+vYf12GcFJIvcaT/iFt
WZDfxyU2XZh2+Ubbs8ukL4JuJ45qJ51ruH3XIS9N+J2n48T6P0o3/PjBx0Hd
pXFHQyMLvv5Dp3HlRtaKTDUm3Lji+e2VNNOUkz09mvdKNdYvd+vepmH6H/7j
Wc02V1KMGm+t+SHi63TTe+n1Kox3TDGKxt241Dwp3XRJhnHF2J9sxDy9WOll
ywxT5wpXJ/i1SzZq7xufssU7w3Sf5dywMvt/NsLdB29asSvDtMhS1LD3w3tG
wBdrt7Z8lmHq5u9g413zntHL3sfX/iOLaaM5X8+c3TvJCB8YG13tM4tp8a8r
Np3ae9doUzVxYU6ExXRclPfEjrGJRtd2Q95e9Vtd/G4796frutZPNKxuhG4q
2/7+H86v1jBtcIIxZa1jZIep9013O3Q62XfHHaNH8xEXD+65b/re/IzQxOzb
RtM3zoV1Sb9vuix7d/n2rreNhMxprxa2yDSd3n1LiYkzbhltRpbbdcc703Rc
avIv0/bdNBKWBzkuXpdpOr2fUyfPdjeNiGmvmtSJyTSN31Li253rbhijYnqX
z8vONE1eW/dee+OG0eDC1joulbNMQ7aUDq9+7boR169Li6y2WaaBFR1mdhtx
3Whw8MSyZ/2zTEOSzgytUe664TZrZVjKZ1mmhRu6Vxi2O96wDp1S/OvCLNMn
NXZWsZ4Yb9geanO2xm9z4nf3JXjsO9oh3ggouS7YY2uW6dBnHza7ZhNv+BuP
pry3M8t0TOdG4XMfX1Ofa5+jvVf7ntrv0s5BPTflnLV70e5Ru3e1TpS60upQ
q1utzrW+0PpI6zutT7W+1uaANje0OaPNJW2OaXNPm5PaXNXmsDa3tTmv7QVt
j2h7R9tT2l7T9qC2N7U9q+1lbY9re1/LCVqu0HKIllu0nKPlIi1HablLy2la
rtNyoJYbtZyp5VItx2q5V8vJWq5+3Xkf8X8zsE/1YxOeFAjjLpRNtlskXTlz
1tvv1JMm3w044LkjX/gguPQJq67SjsvqLOiamydMmrX2t90rfVlrfVoLZ2m4
r3e31r/mCr0qXWzydrh0lsvqxt0+lXoFHQiu+zxHGNb9s/S+P0k75owebNdJ
unJb/OBJGdnClrVb9Dw0Q/pgTft5geWlT8r1mrByc5Zwin1IVrMO0rk2v4R6
ZWUKq7Z8/t3WYOnNVSlO2e5S6xrbz49+QxrptGfkoZP3hU2rdcsq7yV9b+Cc
Nk2rSY85LnDced4i/M7h2JXFM6QNps11uWorjdzs+bzmpQxhjyYNbZZ7Si2d
+0TWfFv60fHySR9npQtrhAwPDA6VNiiocPoLb2nVXRU+2v2eNM2hqHBDYZrw
zHaX8wOPSi2PL9qFz5aGhZRaethBauc471SLyX94o/75JIe7qUZR5Y9rnd+S
Zlp2/OphA/1SjcijabvLXk8zHTVu26yHnVONqKnZL4YXp5kOGhjiN6NMquFj
e/68e7N0U8chAz8pPJtifP5DhTJbB6Sb9qyQV2jtl2KsDPV88Xh2ummov0fp
yn1SjIV9d3aqtzbd9ODi4s0D7FKMgJxuN+vtTzcN37juxNWHycaS9u3+tSg6
3bTV9haLP4hLNvIKdkQvTE03tVv3IrbtjmTj5Z3+jRYVppuWdijd+0DQb393
FztOb1uUbnpncb349/3159rnaO/Vvqf2u7Rz0M5NO2ftXrR71O5dqxOtrrQ6
1OpWq3OtL7Q+0vpO61Otr7U5oM0Nbc5oc0mbY9rc0+akNle1OazNbW3Oa3tB
2yPa3tH2lLbXtD2o7U1tz2p7Wdvj6t5XcoKWK7QcouUWLedouUjLUVru0nKa
luted95ExL+Pox6WXjPiboFwSu8SMSVmSsdNjFgwprq0a4lqix7vzhdGJ5Qd
/WEv6baLxZ6zHuUJV06f39IqTDo31naD80ip3dq0B23tpLYDR64PvJMrjF/y
Zl3L91Kf48993nKVNrhpuVxYSmo7opVxdk+OMNrj6pZpg6S9Lg8cMK04W7jm
n+sSJv8kda98PKlLb2mxi01M0YssYeCXYUlXtkqjO0av8hgk9b1k9D1XW1rY
1NM9ODZT6FY3P71glbTXuej1xUOku6fumTa/sjTb/avKX1+7Lywev3xeToA0
zOdkiSGuUttVE/yP2Uon7Xt1YmWuRVjF8k1UycPShJpul5cvkU4626dy4CfS
gx4DjqbYS89cipk4u5R0x+I9Ib53M4Sz6p3YODZC6ui8bebwjdKDE+9VneMn
TYif96r5VGnx4L1jE1ylVr0O/9DN5a+rfY72Xu17ar9LOwft3LRz1u5Fu0ft
3rU60epKq0OtbrU61/pC6yOt77Q+1fpamwPa3NDmjDaXtDmmzT1tTmpzVZvD
2tzW5ry2F7Q9ou0dbU9pe03bg9re1Pastpe1Pa7t/dedRxAR8b9D63XOQ9v+
UiAMeOA7v/NqaYNBDl16/lMaNsY15khcvvD4oTS7xEnSbN+t1VdXkzr2WFtn
05k8odvBh6M3+0gDv7nhYe8kHWRXKfxY1T/xUemlZ5Nyhf1+Xl87fY90bljs
jpVTpKMejQj9spk01M6+TLXEHKH9497Z7wdKe/iX/mZ2N+nK0E3bb9tIR230
favgfLZw26u9NVotkxaH1zt1uIfUciXvm8K60mjrAQOuZGYJp5fvG2x/Uurv
H/BOgr+04qO88QdGSuNTjkx+v4c0JjQqKNb+T5y94vOIt6QV/ayX73mZKXR9
v1ZsyQKp878Gu0SkSqe7Bnm0Tfrrap+jvVf7ntrv0s5BOzftnLV70e5Ru3et
TrS60upQq1utzrW+0PpI6zutT7W+1uaANje0OaPNJW2OaXNPm5PaXNXmsDa3
tTmv7YXXva8QERHx/6+WczVOG9EFwuzqBUvdvaQ+Sy9EXGssHRSzLarqrXxh
L/8NF9Yukgb/OqRm4AdS65Y7KvqXkNqebjD04+N5wpBhB85UCpRanSq7aOpE
aVrFZR2DOkunNHnqFfS2tMq3E5JL2UjDo2ZWu/YgV2hp1cSpzlVpzPd+Np8c
kfoHZ9TyXi11Htb7bhdf6XT3vLadvaQhPxbEjhks7VC9Wvt7PaSOb9jOdOr8
19U+R3uv9j2136Wdg3Zu2jlr96Ldo3bvWp1odaXVoVa3Wp1rfaH1kdZ3Wp9q
fa3Ngdc9nxARERHx76mrQ5B31M0C4dyeDufPbJE2PX0hKstbOs5+Z8PqfaSu
Y+2yZ7SShta/OPV5FemTHh5N51lLw1w+adTxYb5w8sgq2/2y/7ra52jv1b6n
9ru0c9DOTTtn7V5ed70gIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIuLfx38DLTuJEA==
      "], {{0, 0}, {142, 141}}, {0, 
      1}], {
      LineBox[{{1, 79}, {141, 79}}], 
      InsetBox[
       FormBox["\"+6.9289 \:041c\:041f\:0430\"", TraditionalForm], {3, 80}], 
      LineBox[{{1, 77}, {141, 77}}], 
      InsetBox[
       FormBox["\"+3.2789 \:041c\:041f\:0430\"", TraditionalForm], {3, 78}], 
      LineBox[{{1, 75}, {141, 75}}], 
      InsetBox[
       FormBox["\"+3.2089 \:041c\:041f\:0430\"", TraditionalForm], {3, 76}], 
      LineBox[{{1, 75}, {141, 75}}], 
      InsetBox[
       FormBox["\"+1.1889 \:041c\:041f\:0430\"", TraditionalForm], {3, 76}], 
      LineBox[{{1, 73}, {141, 73}}], 
      InsetBox[
       FormBox["\"+1.1789 \:041c\:041f\:0430\"", TraditionalForm], {3, 74}], 
      LineBox[{{1, 68}, {141, 68}}], 
      InsetBox[
       FormBox["\"+2.8989 \:041c\:041f\:0430\"", TraditionalForm], {3, 69}], 
      LineBox[{{1, 67}, {141, 67}}], 
      InsetBox[
       FormBox["\"+2.8889 \:041c\:041f\:0430\"", TraditionalForm], {3, 68}], 
      LineBox[{{1, 66}, {141, 66}}], 
      InsetBox[
       FormBox["\"+2.8489 \:041c\:041f\:0430\"", TraditionalForm], {3, 67}], 
      LineBox[{{1, 65}, {141, 65}}], 
      InsetBox[
       FormBox["\"+2.8289 \:041c\:041f\:0430\"", TraditionalForm], {3, 66}], 
      LineBox[{{1, 65}, {141, 65}}], 
      InsetBox[
       FormBox["\"+4.7489 \:041c\:041f\:0430\"", TraditionalForm], {3, 66}], 
      LineBox[{{1, 64}, {141, 64}}], 
      InsetBox[
       FormBox["\"+6.6489 \:041c\:041f\:0430\"", TraditionalForm], {3, 65}], 
      LineBox[{{1, 63}, {141, 63}}], 
      InsetBox[
       FormBox["\"+6.6389 \:041c\:041f\:0430\"", TraditionalForm], {3, 64}], 
      LineBox[{{1, 63}, {141, 63}}], 
      InsetBox[
       FormBox["\"+4.6789 \:041c\:041f\:0430\"", TraditionalForm], {3, 64}], 
      LineBox[{{1, 62}, {141, 62}}], 
      InsetBox[
       FormBox["\"+6.5489 \:041c\:041f\:0430\"", TraditionalForm], {3, 63}], 
      LineBox[{{1, 61}, {141, 61}}], 
      InsetBox[
       FormBox["\"+8.4889 \:041c\:041f\:0430\"", TraditionalForm], {3, 62}], 
      LineBox[{{1, 60}, {141, 60}}], 
      InsetBox[
       FormBox["\"+4.6089 \:041c\:041f\:0430\"", TraditionalForm], {3, 61}], 
      LineBox[{{1, 58}, {141, 58}}], 
      InsetBox[
       FormBox["\"+4.5389 \:041c\:041f\:0430\"", TraditionalForm], {3, 
       59}]}}, {
    Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
     Automatic, FrameTicks -> {{{{140.5, 
          FormBox[
           RowBox[{"-", "142.12800000000001`"}], TraditionalForm]}, {105.5, 
          FormBox[
           RowBox[{"-", "71.06400000000001`"}], TraditionalForm]}, {70.5, 
          FormBox["0", TraditionalForm]}, {35.5, 
          FormBox["71.06400000000001`", TraditionalForm]}, {0.5, 
          FormBox["142.12800000000001`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "142.12800000000001`"}], TraditionalForm]}, {35.5, 
          FormBox[
           RowBox[{"-", "71.06400000000001`"}], TraditionalForm]}, {70.5, 
          FormBox["0", TraditionalForm]}, {105.5, 
          FormBox["71.06400000000001`", TraditionalForm]}, {140.5, 
          FormBox["142.12800000000001`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 35.5, 70.5, 105.5, 140.5}, {0.5, 35.5, 70.5, 105.5, 
      140.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
       TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -139.01497761964868`}, 
                    Offset[{4., 0}, {7.5, -139.01497761964868`}]}, {{
                    7.5, -7.028291059336539}, 
                    Offset[{4., 0}, {7.5, -7.028291059336539}]}, {{7.5, 
                    141.45673132101467`}, 
                    Offset[{4., 0}, {7.5, 141.45673132101467`}]}, {{7.5, 
                    273.4434178813269}, 
                    Offset[{4., 0}, {7.5, 273.4434178813269}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -139.01497761964868`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.7\"", 1.7000000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -7.028291059336539}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 141.45673132101467`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.4\"", 3.4000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 273.4434178813269}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6291174107655229`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.7438884425570986`", ",", "1.7000000000000002`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8730058533226215`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9877768851141973`", ",", "3.4000000000000004`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7607864997662287`*^9},ExpressionUUID->"a88b0b72-25ba-4053-aa28-\
ce6605e238f1"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxdm3dcTv///6/rnNNOIWQrmWVFUYrni5CVUVGSZJWdiChUygqRFUWSPZJ2
FFpa2ntr73FdLbP8nudcfd7f2+3XP2/39+sa5zrn+Xo+H8/xUt5pY7iH4vF4
wPB47H+piFszF3y6AR1Hh3y/XCxLuvvyTjZN8QRxlzt6V97KkgXm3kNue3qC
WVGunNM1WaJf7T6n+Z8nvKoYXaTqIkv8hhmq3He4CbPGSqZQVrJk+BvxHYd/
3ISZma5RIfNlieNRujvI9hZ0yo7+PfWnDEnMH6qb2XQLzo5U1i2JlCGBms/E
a81vg/PKL2fGnZQhzxvb7K5m3Ybe0PjttzRlSN/E4C2gfwc+LUxybu2RJkpJ
SrG+MXcgJOfpMLsoaXIqYm/EWt270KuyfLfpeWliPm29fEz0XUi+F3X3xnpp
YvD6oFziYi94e6Pz1v4J0uR77Pqx5IsXfO5Nu8nrkSL3tRUu/1x0D04sWH88
OV2KjHvkZLv90z3Iv5PZqRspRWqTP9Bqi+7DpNA6c/c3UiTgyvyJx2Lug7V8
KKV3V4okJ/yQn7fcG87aNadan5IiRZYXDphleMOwiZWDXxtLkdDqmA0zzH3g
448jKbZTpci+XaWm0OoDMVMO5Ol1S5IvC3SPfXV8AGXd1mCYIEkUjpnxMyUe
Qpa8ipu+jyTJzZlyz/HmQ/CVsLduOyFJkndc0fo5zhfEDpenG22TJE3nNm14
+84XFp8yfalpIEk6s+wjgpc9El2/liSZO737vXjFI1jcWPz291hJsvX2WWsl
HT8wT/G4Rv5KEJXAT2LJF/xAetbmPMsSCSI+5NU+xVw/8LZ/4K/yQYL0f1l+
jlF6DMIV9Z5wT4L4OjyNPXToMdx7ktRxyEGCjPhtOWrMx8cw4XzLxkgLCRLu
dTZXTNwfYu60FkkukyBXxOyGLzH0B71/jKKaqgSZ+3ftzjBffyiXUAq7rCBB
2ipHVOu3+MOY2eWTxPkSZNjXDV2/tZ6A0V1lj+NCcSIRaidWeukJHGAvqEac
HDJz+1Rb8gQef1inMjNfnBi3d2vPnPUUKpJ1OyXixYkTE7qr+NxTWPytq7L9
rTjpHh21rKfgKfyWzrm6/JY4GeJEr/JQfQYurT3t1+3FScbJIeY+p59Bk9xO
a+lt4mRUkd26vvRnsGbLBa2C5eJEk9JZeX/8cxjFbJabOVecRB8SZG62eQ42
Q11jUpXFyeMpj+KVY54Duz0MRoiTuhn6Kr8Hv4DT8l5j7aXFyWqTTXliO17A
SfZ2/hUjLtL6N1YHvQCd7+uvebWLkREX533xpl/C82VDP12tFiMy6aN39Jq8
BL++lUNGFYgROddfarvfvQS5rjqxoiQxUuOkKyYt/grUFM6+ehQhRoxur6lR
tHgFnxVCLGSfiZGjgrs9b8Newb/FNXEuN8QIfeCKcofMa9j2a0amq6MYyQo0
rL+y8zU4n2ENVoxU/bba6BH5GvaC4bILm/DzNZYN75d9A6w5jF6B33/tnM4b
yzfQtvvI7eiFYoQKn2Z6KeQNVGUnDjmgLkYWUtv8Vkm8hRW5xSmV08TI1I5L
gWO2vgXtaTuet00QIzknXtyVDHwLrhf6pWaNECONECajSAdA2rS7W80GiZHC
l9XKDaYBsLYv+tVKMTGSX5lUvTIoAJpPppE9fxkyaY660F/6HXwfHvtvcydD
tii8j8vZ8w5W7Qr1eF3PkIsPj/FPxbyD8MG1fm7FDDl/q/hr8ahA2Fa2gj75
jSFvVlbu/2kbCGIaQ+brfmKIydS4KsvUQBinhBYcyJDcGcc1xw95DyMMrKe6
PmGI26yqrK267+G0tLNQ1pshQzue3Wmweg82s/ddLfBkyOgL1y9N93wPZ0DT
4uNlhhzL19WvjXoPV0v38mxcGJIiPtNpVMN7kE226Og/yZBkve/lqUODYFPv
tiF/bRgSvzMvrHdxEPhO2jbvlxVDnppYGPw6EASm/xrmbLdgyJeffb1Z94PA
TVXT0W8TQ/5qi/0qTg6Ck15Xfq5byxCDfX0z+T+DwH3CrnazpQwR32bduGxq
MDzcRXodFiDn+Wzs2hQM6D3G6M9gyBjt2LYvbsGQ0PJbLEqZIa1axTtehODr
H8p63FRkyETnOsPn1cFw/NZItHCGpNZ5bzMcHALFp83HqIozZFu/b4jlohBI
7ZNb7tJPE9uGuJWz94fAnmerpjf20uR96vnUL3dDYKHOqLGTO2gy0XKXwZiE
EPjoWnR/aQNN4lXZnRkCmyMc1jl8pwnt7r/xm1IoPDy/qE1QSJOR6y7ZKG4I
Ba3hr+aEZ9HkuvcesePOoSDjWFIVmEKTwoz6qVeCQuHPt/aU+DiatAYO+rap
OhROhtommEXTJOejyY/ioWFQPPl1hHg4TSqXxkuM0QuDuh2PCzQCaTJf1iH1
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
uJnPDq9MAkdUBz9HU0RLIfe8aV8STMMo8XkURQK3lRwxHZ0Mu5yKF50aSZF+
1Rh7nwXJ4BtWOktDkSIlY07vmLspGYauk7HoHk4RmaWnJugfS4Z9NoLzKcMo
Mtk8WSXSMxnWE4Ud8QoUWd/gbrj0fTIoerdo5AxFf8Ev2RySkQyGkePPtwyh
yAF5x8fObclwZLtExihkq3NVaKEpoDXzZLbJYIrcWenvtXFGCmxe+WtVmDxF
CBv21qbAjXWosJF3bBzy4tbBFLBzRIUqh/5PMadK+WoKYHaWroPchmnHj9cp
oNy8mPdqEEWgP8d/cUoKiD25uZCPfO+xcNnghhTgzEuWIlIbP/udZ1LBK7V0
yDoZivifeVsZoZwK29mEVBr9pbyl53ZIhY4x2x2tpCgSI1YcfHpbKjgpSA85
IkmRzTnuNtNOp8JH9UUYMihST1MPV/mkwmAdo8ZocYpcfN7a7foxFVxnr30u
jZx+cmtTWHEq7G18VLlTDPfvd4UW41+pwMqLVAb3o7T3XdNR3+DngeAVi5A9
tvROeq/9DdazCQaN328WdmCp2Te4VIgbCNl/h3qzmeM3YN3fDOSWw77NN3y+
gWJENq+Cwvh929pCLuobbFTP+O6GPFaPd6S1+Bscjmm4OAR5cmvpqmU/v4HN
7vG/XPnoX2yryMoRaXDNCf/Fo4j0hWOD5mmkga1W1xtt5KGz2SecBm9TP6ud
+8cnFg9+7te3TYMJXyKaMvv5RJQXpUHq8Iq6icjWXVqy9YFpYNbzocS9j0+m
n5T+YJiZBlvvC9b0/eUTzxmWVER7Gtx5ZPzHDjkleQumeulA9itM/fGHTzQj
A2bqzk4HNpu5jLw+4PNH1Q3pkJW/uXU2csn4T1WLj6bDZJ35lPA3n6xaJa/3
5lY6sHI+DVnJwXCKZmg6SKP7f4HscutQpVwe8l6MGMhnOEGfDpbp/HPayJph
BwNmD82A+/r9lpW/+IQ5EnIyaE4GTPM5et4euVe26t6e9RmQt0c96NdPPsl6
aPnv+OEMyJfCD0Ru6wyQb7mWAQUBvrcqfvDJ9jO63eUBGeByctsXS2SDjzM9
ZTIyBvQ9n3gleXsuac+A6Ls35B2QLzBXZ9nIZcKaZkZjCLJCQWKR1OxMwN1p
+rKHT3J/b6UE6zNhr2fbaUBWD12orWebCaWHcMd184ms0ulp2Tcz4eeRFNsX
yEvNtR2tQ5H/zll6EjlSOfGARX4mqLd83bAOOSJTdd6znkyYaz9TeQIyo7uv
Klg6Cy6WyS6o7OKT8uX3/M1HZ8E8VOueyGOnjH5aOR2Z/UPumb1qj7t2Flye
5DDqayefxM17vGrnqizQ7NBaro9cwfcNPbIlCyo//DiSIuSTHMNTOnH7sqAf
0+/NyIXDkltnOGSB8ULM0AT4fMR9Fl53z4Kxgl873JDlXVTwf2WBR5qK0xxk
u7PuNTFvsoB1p1UdfJJ+fPS+V9FZsFluZvBDZNbbRaVnwTgt62X7kOOnSY7/
XpEF4xMyhi1EPrP1vbGiIAtSTnx+NBr5wJCNayt42SI90c4nD6O2zTYYkg31
p47YFyDbqBruOKicDQFPXkv5I3v1T361Vj0baCk2Q+QTI0/pXTJLsqHhldyH
Ucjq4gW2fzdkg9IkmXsxbXg/j6c+GbMjG5R1MeIiv7N6KDxjmw1NQkdUXHyS
J537Y/S5bGiWWqPrh+xXcdU78GY2cH4QeUh1arHOk2xoCXAJGIpcraScqhia
Day7zW3hk22/vZ7O/ZoNkot8Nj1CnuYbIuZWkA2ZVvkN+5HttmccNGnMhiUR
XhorkM8lRdgP+p0NFrOqddSRRX4vB0IkzFyUke8IO+bNGpsDS9mCErJ4z0yU
ojnAqloJ5EfHr92lF+VA6K3YjZ3NfBKl584fapAD21cEleUgc3Uw8xy4h9/2
EvnA1NVLJx7KEcVX9vUrH884fSZHpM+QdT8Z3lX2yAGZ6fCqt4lPzuvZCAW+
ObDDYzx6FLwfVemjowNzYFqk6UZX5CinGcsuxiAvi1E2Rh5VbYquDl8/d9Mc
VeTa83YnJWtyQBR3+aTqdLPps+4cGGT79kopclrOuvQ68VzA6GUci7zi9FSr
TyNzIVLlwYho5MSYhR4TVP+PC0zjSkbq5AJu1puJyCbpx1CB58LO1ZOyvyGb
X4/rmWb+f1zr+67d9OD/vV6cE7y54BR7uCgceayMtOvca7ngo/Xh+2PksiJW
gOUC3q3959jrWSL42fsuF1R5ifP2IttHWXhPjMkFfXs2oqB9tYtnm2XnwoMN
l5z1kD9pCfM9qvH1bIKLPPjOirTWrlz4kJRzcRby49VsJpIH+vRJmUnI7LdP
Ufw/DhqWYkJNzwNnziGh//EYZ1y9MO+/zxu57OnzbWvz/vv+9ra7tc7b8uBB
gtL7o8iey2Y/MT2cB8Ih6pNvIkc27n7VczYPVmxf4h2EvHxXW8fB63n/3Y+D
Eiq9Un55kCfnZFCAfPGZy4T893mi+hYymx00xObBWU0JyXpkkd7NA858kbky
Ui1+HnvjkY+Vftbv68HPO6d4Rgyff8HLi3vtJPJBcOh3yARkqGotmDsqH3J7
A99qIDccdX0sp5YPHVU3a9Yh37IJ/6C+KB/OeGbdPdb0P/+eD6zqfIjMZhOv
d+D6KX5vNvJW2fHPzxzLh/ag7scyaL+fi+sTu93yIfvd0tT1yHEHvOaPvZsP
rDzxQOZ044t8aHPZbJmMLDUqOeRbRD5MNh2b8Rd552BT7dBk5LTQPjXcXzI5
V5fnFudDa/mEjk3IV0b4HdJsyYclanN2H0cO78l1KvibD5klrMNH+86TuGkv
VwDb3N+kfkZ+X/OFDFZC7tf73YYsN2Jdzl/1AlAZHNiiiP5jeM1fg2nLCkT6
F/mgwwaUmAVwO5ptAPDJLKNblYP2FQC375HfLth/vsmx4D9/9bJ/ySQ9jwIQ
24gZFPqzMyfvKqn4FYDZUL/nd5G96jdLvgkqgHe5K/GX88lZ/qcjDXEFQLOO
Bf3jtfvLPlXmFgBmS5jRon4o8g6Iri0Atlwejfw2xWhzbk8B6LDtCOSYNHuB
gkQhsFmcKvprznxGFsLbY2wFkE++qRWWWqkWwpuGpz+uIe9c+9txui7y1kVT
PyH/PDhubKtBIdSqs1fAJ8/2bUBJVwhsO2UKxhM2rTY/WggeJPrddsH/nmch
/DsZaHYf2dA7vWbOvUKoPt53rhzZC8P0/DeFsGDB86kzMH713yt4HvSpEK6i
3HBA5tL7zELAJDkwA9kgmsaIWggv4I/nRIyHGTzF3d86C0FzV7bdCeR/DufF
ftBF/8XPOT1dzycOLxLVizC+um5c9dB5ShHgbn9piPzj+vnGwVpF/8VjW20L
l8ZVRXBAOJ2XiLwwoNSvdyvynrjZPcgfYjdcHH64CPYXm22fhPFdpl1Cd44z
skGXhxHyzvNbF9+8WQSl5zFBRZ5k4Zsx/FmRKP9Cbn3MCuIiOH8bBRqy0tS1
I9NTi+BH2k2eJuqPPeM83uWUF8Fj65DmY8jnEtf6WwiKwG03XyES2fzNotbz
VDFY71iv8xfZ0c1bedOwYlhtwVZU+WTcm9u+TZOLga3+uSEfkWi+rb+gWJQf
Iptfa139bWUxrJr1T7kPuVr3QYydWTF8tOpMn4966pBJo+ueg8WieiByZvfQ
XffPFkPn+w0HvJF/PXk578eNYvgQF2WegHxGha1YFINz3pR17cjPc9ZrRYUV
gz5rkKjfJqx1v74+GdlM1UYfuWB871J+aTEMOnjH0hZ5wdVzlcI25MqZN/yQ
GZ1+GYZfAoOME79kIvdnL9g3eliJqD6NHPb0ydi0KSWwnCtI84mb66fLytol
EF6gKHUI2Wszm+iVwDQ2QUfmXX+5ody85D/9eTy91ufQ4RLgyny///f8kLsv
665Cvitp/E/pZsl/etboxO8l256WQPapa9v8kUesX5RTGV4C26d/G5yErPHz
z9eDKSUQegKfOLIPL76zobQEpNgCNurpJTujHJ3bS8DrGCuI+ET/37ewvfxS
aI3RVlmNPHlClMztYaWwRG71vX3INs73OyqnlkLmp4trPJAf7J+ZtlSnFLYd
+tofjOzUE2kTtg65atusamTdebFH3u0oBXOuYMYnoW//JC21K4U7atHfliOn
N487fPFCKbBy3AF50PMdPy/dQ2Z1HvIMp88zTV8jNwXfK0I+tJCK3BJdCmnb
1iRLYH7R96U52TOjFMzYAjDynuSgHtmqUmiMTpy1ETlbZ/iRzK5SWCRd+OQI
8pCkj5HXxMvglknDyBvIPS61D/VGlUEguvPXyHFzLFM2zSgD5kZJQgry91fO
jr5QBlvKm7WbkFe3LQ8dZ1QGeLPeSWK+w1YD4qzKgJV7M5EXRZ1uiXcog9TL
J4YbIjuOcOtc7FE2UO/nk9HlS1rXPi4T1beRT3xX1+0NKQOd195KzchHn0uV
rk8sg2POlh7jMd9KyIm5vr+oDN5unvLXEHldm6zR1uYyUT0TeVpO34Nzf5H9
3O6HI3PlSrlyqB02LqUO2YgTeuVQcyns5zDM57ZsGHl7n0Y5sF+3GLlQgxXu
5cDKpb3IgU1Llkw3K4d/W9FDI/9arTT5xKFySDyk4RyBXJb/JrnRGbkqLbAe
2cBt0PrA2+VwtWvB48GYT2qsZhUzsnVWFiBzz+FTOXxddHexHfIe23+eTVnl
MP/E5eYAdj3mqJtsbTlwOgB5k0ZBf0ZvObDhTQ3zVQ23XXcXSVWAJiuYkBOk
1r44PqYCNj6zkg9FjslSWZE5swLY8n8j8rlXVgWGpEJU30K23n0jStKoAgyG
X13dzPyvvlIBt3vFt9+TpUjETrYQUiG6v0CRNSpWvaeuVsBwtuBgh+9/cOFl
3KMKWHPiIFN9nCKrpw5dqxlSAQsuL7Gsu8EnlmI/D3clVoDPmFyFuycp4vU1
ob6mpALC5lZ5/T5Fkcpe5nJbe4WoXuGB+bHLiYvD6O8iez5Nka1njm/yG/Ed
gg5ttHK9ivqv945E0/TvIGlv3RZ+BfXk2sqCct3vkLWsSNDtjvvZamjPufXf
gTXnRciHL4zBzOk7hM9MPXjjMuYzfgZyj+y+w/SJ8aoVlzCehr5cf/Tid2DV
rRpy4zw24/guqg9eRP/bHjj+R8B3WO6y2HPqZYr8fPnFYkfsd5gyf0LhBXeK
OO/K9P2W9x0kWv6Nrb9CEZEu/A5PxHPnnHZDf/Ju6sdZf78DJvX1rzwokupe
1cyTrIS48i1RbecwHxOgUBxaCYZsWEMeOfVzycaxlfDSkDXM/8W7StBiBwic
+cQ3aHbxyTmVwGMNyAnzCX1bj4ULK2HGHlT+XhR5Ot/26Be9SuB0/D2K2Na6
JE80qARLzC6UvSnClfM3V8KSlSPmuPhQZEi83K6c7ZUwcf3Nd/dP80n0iX3x
O/ZVgu4wsd/LfPF5hpwaK36sEjJXsRUf3E/4aypPV8KRpWzFnCJc++RCJeSM
w4TSAeMvW6e9UQlPj7AehSJPTOjbF7wr4UfTyTTyDJk8Sr71tBLOfcUN8pwi
cgdUr8S9qxTVA+z5ZOiXnYMUP1RClDQmQCf4ZO5RtnJfCWx3YsobirhMNgn6
mV4pqm+/pQhbzeAXVYKSrO6P8e8okm9+eE5eVSVw5myH+mHWpn1XWvB62YJI
EL5++gkNuZ5KcNdd9dEqmCKePlXip/vxeo1MFn8LociPo4/GiklWwXlJLTfV
MIr09R6vfDCkCh5NWCF5PRyf39WIOxZjquDDfOOrXREU+YxuXmdyFeQaoHL9
QBEfD97hEbOrRHrLBuP1+AMrxLWrRHoNGW5EH5umVwX0Gbzjh1EPW1vW7jGo
gi2/s8R6DqG+sGYzkCrwUCmoNoqhyAtzDBQ7q4Bt5wUe5JMkeUxoDlaB4iPK
UjeeIv8yehsH2VeJ+lkJFNku42Aj61IF0Z6nauUTKXLBdsGlAvcq4PKAJIr0
f9ibfPJ2FTj9WXgkI5kiUrGvHX49rBLli/tQH27wn3z9RRXkedePe7EX49Hx
I+8XBFWJ8iPk0tKZKfyoqoH+AZ+ksvI0oQqi5Ml+BeQU3U4JOrMKuLq0Fe7n
nOfN44urgCt37eGTjmOnQ7VqqoCtWofkon3erL++r60KLrDt2d18shLD/Icf
VaJ+QQFFZpeu26pCVYOzt1l4QSFF0k01Hj6UrRbVk3fyyWn9a1LqitUQmnzi
86MSijwcOvjWEeVqYNsv/0opclih/c4ptWqRve7gk7ycMukdmtWA6iTyiCXm
g3vHx0yEamDLx+XbMd+8P2huyspquP5MftsG5LoVnmEXDKthpNQhba9qinDh
27wa2HKTpgXGy1GbhSusqmEtu5HrKLK4OdDE9Eg1cPu2Hv25lm+ms0M1qAxP
HHHOHPNJWnlLjFs1BLPp0lY+OVVf9/6PRzVIHt0QtxY5bkTUmc33qwfyF4p0
GwapBz6phq2sQGpDe8W0bPq7atgRn6u2ZwvqJ5+rqvGR1aL9bop6fh1bCamG
V2zaJ6QIm+0EpFeDfHtGySETzC9myHrmFlbD0++f5R50UaQzN3LBl6pq2Pcq
elxVN0WoFV4LLrZUg4JVSf+dTZhv/dPxX9pTDaUvatRp5EmqxgsU/1XDftyO
B4z55E/Aw2lSUjXQoXTiedYvfD7vHNWGKtSA46UV9oP/UMQqNmHC8nE1MHKK
kdgTQz6R5xxpzYC+wP2z5tWaRPWagXopRdxWvLft06mBowlmp6V5NDmo4ttq
taIGkrrZhiOfbG+/9YS3sQaOrXmjbLueTzSXglHg1hr45erSUEHTpIe9rVY1
QG/FjHIdxvd3glmKtjUQGLTG2MaATwLWa0+54lgDW7kbzifuiyfsSThfAz5o
7o2SNIm+Wfvh8/UamIzpx9E1fDLRMHfW8/s1A/VwmnQ0DKu1flIDmK3M1VrN
J4H2TtEmATUD/SU++Wr8W8o6ogaWs0JtJZ/461Wu9IutgQfuxiO3Is/eYGjJ
T6sBNvoZDaEJqxpNCmqAtWqPoTSRHiw273llDUSfeq13eAU+L64uVQP+y8O7
+obRZCE7ntFTA2vZBGk5n3BxgVcLH4eZ3DmjSJP59t1fzGVq4UCensZHPfQX
BfPcdo2oBU4OIC8q/FGlpFwrmvcaQxMntx0xN9VqISFo1uEnS9D/DoPEMs1a
YMePgsfRZJrwg0Ir1Ir8EeGTZRv91teuqoU3i022BgHqSY3OU1+NaqFfaBE2
V5kmUxLMDcO21QIbHW0X4/3YMkQz27oWThhrLslbxCeqfHUpxaO1kJZd82M+
Mn5bmNvpWnBj07vJNJn6JHVO+4VaYKsdQh0+cV6mMG2nZy1MVmEzJry+aOVr
0g9qRfXrhRhvksVzvj6vhfbbcgX/tFEPZgxbGBhUK6oPzsD7O+2Mcm10LXDP
aSZNJrAN/KRakf9egHqBHdPJqYWkFUoWhbNpEuWtu0ezvBa4Ppc6Tbq2+ErY
N9SCe/J79wVzabJb4k6kh7AW2PbWbk0+kVQKu3zrTy0YsImyBp/ciHU3ChCr
g7KHbMMI/UNl96wK+To4wBZU5vHJU5scjWmj6+CPOSYEc/mkYayugvekOlE8
QnZSDLdSm10nypfV+SRH85ZNuHYdvPrDezof2Uh31uvly+pAq7Tsnu8c1BfG
KAjX1QEn25E3qd85G7elTlTvnY16+m/fzvDddSL9QHB/fFxu+damDhImJz3M
WUKTqw8FQx841IGi2v45g/RoskvoE7f6fJ2ovjED9fa8MufM63WgID/N5+hy
mojFf7gwyrsOotrYRjJNGjRkQnWe1onqqWp8YlrN32P0rg4cP/2p+aTKJ8Lu
1VsuRNaB3lctJ4XVNBHN1dRBuPVd5uV01C87RpRop9eJ6lPI/pKvSosL6yBw
cq2rrwFNJO79kjtbXQdcH2QdTe7LS9pNaasDFEVxF6Zi/vTzMt34ow76MX1Y
vJEmIt1bD0WqsdVHpvDJx0dGNx4Nqgc2vL0yookme7kj64ErhxrTRIYdj1Op
h2GnbtqlT0L7kWF3fD0Mx/QAkKOXhG4O1a6HyDQUpKY0uTfyW/eaZfXAhonk
LfRAPlcPSzFr6TKjSUTo6KE/TOuBi9sT+cQqaumEGbvqQbluav7ibTQJO+xa
YnOoHhaw5qfMJyGw4XCpfT2MYQWQEsaDiZe6jpyrB+OaZz4JljSx2s9afD2I
dCxNjIIfuOV41cOGpF3iqrtoMl18pYaLfz2oS74da7Yb/cfKPxMsA+pF813j
+STYZ1Tf3sh6sFqHytuKJotPtuVciK+HD0YLTf9ZD1x/Rj0sZwXXPpocGPSs
d2JJPag8ntlgOBbt0T94h0FdvSgeHUD/N0EmW1lQD1x75CDudzSj2N/1Iv11
mCY6V1c5zRZrEM13jsZ8NBnmXZJvANsU2xd2R2hS1JnaEz6qAZZxDoxPFig6
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
MaKf8uaY7Mpu0Xk8XP//+f8BsGJOAw==
        "]]}}}}, {}, {}, {{}, {}}, {{}, {}}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\:0412\:0440\:0435\:043c\:044f, \:043c\:0438\:043d\"", 
     TraditionalForm], 
    FormBox[
    "\"\:041f\:0440\:0438\:0437\:0430\:0431\:043e\:0439\:043d\:043e\:0435 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:0435, \:041c\:041f\:0430\"", 
     TraditionalForm]},
  AxesOrigin->{0, 2.0258649999999996`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{1041., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.26759}, {2.10112, 3.60622}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7607864998532486`*^9},ExpressionUUID->"067902ec-ae35-4b50-8d71-\
8ec503e755de"],

Cell[BoxData[
 OverlayBox[{
  TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{0, Small}]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQzXV9cYFtl5PD4a8aMf2HLB1gfEmWMD7dTYYOIC7X
dgcMfrvYzXPfg7Ud1rk/rBJZh8m/q8LWONVZGaI+3B6DX5wx8W2NvaKDCEhD
CCY/DQzEHL7khNWuU7PDxT8AptocMPjW9/17p+dJHWh9HbhDrhWTD3XPAQYQ
aMDke4C84a56wBYUILWY/E1z3y8/5q1+wBgEih0x+NDwgLgnzQmD/+mSb5JA
hC7EPamYfGBkAGNE/wA4PrIcMfjQ+DgwEwQinTD4zQdOLXTdZnwgCOjb14HO
GHwwtcPkANhbiY4YfGh6OAAWj8Dk64I9bH0AAG+Y9iU=
          
          "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {30.018460937500002`, 0}, 
      PlotRange -> {{30.1511, 38.64}, {-27.776, 25.76}}, PlotRangeClipping -> 
      True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      Full, Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {30.018460937500002`, 0}, AxesStyle -> GrayLevel[0, 0], 
      DisplayFunction :> Identity, Frame -> {{True, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {Tiny, Medium}, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{30.1511, 38.64}, {-27.776, 25.76}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{
       "\"\:041d\:0430\:043f\:0440\:044f\:0436\:0435\:043d\:0438\:044f\"", 
        "\"\:041f\:043b\:043e\:0441\:043a\:0438\:0439 \
\:043c\:043e\:0434\:0443\:043b\:044c \:042e\:043d\:0433\:0430\"", 
        "\"\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\:0442 \
\:041a\:0430\:0440\:0442\:0435\:0440\:0430\""}, "LineLegend", 
       DisplayFunction -> (FormBox[
         FrameBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"\:041a\:0430\:0440\:0442\:0430 \:0441\:043b\:043e\:0451\
\:0432\"", {FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                  False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], RoundingRadius -> 5, StripOnInput -> False], 
         TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
              "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendFunction", "\[Rule]", 
              RowBox[{"(", 
                RowBox[{
                  FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False], 
                  "&"}], ")"}]}], ",", 
            
            RowBox[{"LegendLabel", "\[Rule]", 
              "\"\:041a\:0430\:0440\:0442\:0430 \
\:0441\:043b\:043e\:0451\:0432\""}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
       True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  GraphicsBox[{{}, {{{}, {}, {
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQvdmBe4sDt6XD4a8aMf2HLB1gfEmWMD7dTYY4+e1i
N899D9bGyb+rwtY41VkZJ784Y+LbGntFnPw0MBAjxD+Ai2993793ep4UTj7U
PTj5Hg+rRNa5q+Lkb5r7fvkxb3WcfGh44OR/uuSbJBChi5MPjAxgjOjj5EPj
Aye/+cCpha7bjHHyd8i1vg7cYYKTD00POPm6YA9bHwAAw83eUw==
         
         "]]}}}}, {}, {}, {{}, {}}, {{}, {}}},
   AspectRatio->Full,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   AxesStyle->GrayLevel[0, 0],
   DisplayFunction->Identity,
   Frame->{{True, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{Tiny, Medium},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 50.08791208791208}, {-27.776, 25.76}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}], 
  GraphicsBox[{{}, {{{}, {}, {
       {RGBColor[0.5, 0, 0.5], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], Dashing[{0, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQOHv2rE9B+ydIDxJVnC+HQ3GeLkt4vdPPc9WBsn
/64KW+NUZ2Wc/OKMiW9r7BVx8tPAQIwQ/wAuvvV9/97peVI4+VD34OR7PKwS
WeeuipO/ae775ce81XHyoeGBk//pkm+SQIQuTj4wMoAxoo+TD40PnPzmA6cW
um4zxsnfIdf6OnCHCU4+ND3g5OuCPWx9AABA/oW7
         
         "]]}}}}, {}, {}, {{}, {}}, {{}, {}}},
   AspectRatio->Full,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   AxesStyle->GrayLevel[0, 0],
   DisplayFunction->Identity,
   Frame->{{True, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{Tiny, Medium},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-1., 1.}, {-27.776, 25.76}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}]}]], "Output",
 CellChangeTimes->{
  3.760786499981286*^9},ExpressionUUID->"90849f66-0c35-4c8a-a055-\
f997f46c081a"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQffva7icqlivt7biuLy6wtXNYXDF1q+/HM/aXfZME
IixtHKR33ZTX2H7LPmPi2xp7UyuH5mWqYW7KT+z/Xal4qWZo4bCZ00Cn3u6N
/RQJljA+XTMH/cC9phtCP9trxvQf+qph4uAVNzfZ4dtv+33zpfTvqhg5XD74
y759J4NDyOOls48oGDjM2lafupST2QFin45D6+vAHXKurA4Q8zUc9ms3/V+r
wuEAMU/F4cHnwxwPL3JC9Ss47Cg19y89wQVVL+HQ63r55skF3FB5AYeVN5nX
HpgA4zM48KXXmbKf4HZggAKeDf1+sT+5YPIHDGtcfDpVYHyBA9FOdi9uruGA
mX8gbNaUprz1bDD7D9SenqPXfZIZ5r4De0omS7Bc+wMNH40Db3n3Gcxc9Q0a
njoHph898uzxrY/2UP8f+Hyy6+Grhtew8Dmwl+H3iyuiT2Dhd+BitM2e5wdu
wML3gHL9VbMsrQmw8D8AAHrvzfM=
         
         "]]}}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.01388888888888889], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxd1gtMzVEcB/C78rgV1ozJY15dFqJCEaqDHqR3SnrpobFm2NCwlNXMsIZh
TeQxYlmleSSp/gexwkxK3JpNylus5bHkdf+d3/97tv/d7tpnt3vuOb/f7//7
nUkpmyLSrAwGQ57lrf7VXuc3e9k+P5fMNI8yP/4ZmSq9b3HSmyeTpX8Xdz8N
fp0Ebxqeyx+clW7fOaIsIFl6ZUfRibqJ0nn5Gy3fWANvWX+4K9NHOsbzWn1G
bSLsbdndZi9px7berPTqBNhYMi527ULpL5k+7olV8XBTcIp9jKd05fg9n8Ir
4+BTXy/eXzFPWj2NX0Us3L89d+kQdblrq+E5/S/p0QOih828EgP/bd7+Yaqb
dH84ylfBDRm1p8e4SJcFqBGMho86qAtK77CsZiyJghOrlg+xmiHte2DDu77i
lfC0+IN3vjtJWzZX+PViJPztj7pBaTX9HUURsLq7lyZpUS/hsKgPaVEPYbDI
v7TIdygs8hsCi3wGwyJ/QbDI1wpY5CcQFvlYDov4L4NFvANgEV9/WMTTDxbx
84VFvJbq4rNEF4/FuvMz1tZyq9PkWayI83qzc9uPXQ/ufqSI8y1iY6vME5xu
tCriPAtY7oUp0f6OnYrY/3x21cbVOdv7syL268Fcwmvcy6N6FLG/uSwwsTCV
/ehTxH5ms6bbv3z23jRw8fuurKAiO63IxpqL33Nm6lMw3m8gF+s7MWVGzr9S
k5GL9UzsVc9dY3ujDX1/IqvcNi90W70t/b8Dy/NrMjecsaPP7Vmx2bqUH9Js
YMPWZbkPrrfjWhyGlB8MSei11T7nbpm+QftMmu153BLv9+YSo7Y+jy44mrPx
8iDt9/muhydnHWiw1vbHq7cecRjQ8pvi48S7hta6Hr/0g+LpzPPv1b3taO1W
6Py8p2F/+8fdn7T48BpD3/vmkZ1a/Hhj3KLqd/yFFl/umP3MI336IS3+OAfl
B6b8wZRfmPIPU33AVD8w1RdM9QdTfcJUvzDVN0z1D9PzoTtPIEzPl+58QTA9
n7rzhsD0fOvOHwZTf9DFIxym/qKLTwRM/Qmm/gVTf4Op/8HUH2HqnzD1V5j6
L0z9Gab+DVN/h6n/wzQfYJofMM0XmOYPTPMJpvkF03yDaf7BNB9hmp8wzVeY
5i9M8xmm+Q3TfIdp/sN0P4Dp/gDT/QKm+wdM9xOY7i/8P0BnfZw=
         
         "]]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
    TraditionalForm],
  PlotRange->{{-100, 100}, {-24.192, 30.240000000000002`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7607865000313015`*^9},ExpressionUUID->"e7f590f2-c18d-42f8-8db0-\
938bbb7058a9"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"",FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
          "", Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], StripOnInput -> False, LineIndent -> 0], 
         StripOnInput -> False, FontFamily -> "Arial", Background -> 
         Automatic], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
       InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6297544181379376`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.7450916787049933`", ",", "1.7000000000000002`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8748460968429308`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9901833574099865`", ",", "3.4000000000000004`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.7607864895849547`*^9, 
  3.7607864906261826`*^9}},ExpressionUUID->"a7769b9f-372c-4fea-9038-\
cf2a26ffc08b"],

Cell[BoxData[
 TemplateBox[{"Null",FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          GraphicsBox[{{}, {}, 
            RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
             "], {{
               Rational[-15, 2], 
               Rational[-575, 2]}, {
               Rational[15, 2], 
               Rational[575, 2]}}], {Antialiasing -> False, 
             AbsoluteThickness[0.1], 
             Directive[
              Opacity[0.3], 
              GrayLevel[0]], 
             LineBox[
              NCache[{{
                 Rational[15, 2], 
                 Rational[-575, 2]}, {
                 Rational[-15, 2], 
                 Rational[-575, 2]}, {
                 Rational[-15, 2], 
                 Rational[575, 2]}, {
                 Rational[15, 2], 
                 Rational[575, 2]}, {
                 Rational[15, 2], 
                 Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
               287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
             CapForm[None], {}}, {Antialiasing -> False, 
             StyleBox[
              LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
              Directive[
               AbsoluteThickness[0.2], 
               Opacity[0.3], 
               GrayLevel[0]], StripOnInput -> False], 
             StyleBox[
              StyleBox[{{
                 StyleBox[
                  LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -138.28241914137175`}, 
                    Offset[{4., 0}, {7.5, -138.28241914137175`}]}, {{
                    7.5, -5.644569489257719}, 
                    Offset[{4., 0}, {7.5, -5.644569489257719}]}, {{7.5, 
                    143.57301136937042`}, 
                    Offset[{4., 0}, {7.5, 143.57301136937042`}]}, {{7.5, 
                    276.21086102148456`}, 
                    Offset[{4., 0}, {7.5, 276.21086102148456`}]}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], StripOnInput -> False]}, 
                StyleBox[
                 StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -138.28241914137175`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.7\"", 1.7000000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -5.644569489257719}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 143.57301136937042`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.4\"", 3.4000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 276.21086102148456`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                   Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                 StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
               False], 
              Directive[
               AbsoluteThickness[0.2], 
               Opacity[0.3], 
               GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
           Scaled[0.02], PlotRange -> All, Frame -> True, 
           FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
           Opacity[0], FrameTicksStyle -> Opacity[0], 
           ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> Left,
           AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
          ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
         False], {FontFamily -> "Arial"}, Background -> Automatic, 
        StripOnInput -> False], TraditionalForm]}, "BarLegend", 
     DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Function", "[", 
                RowBox[{"x", ",", 
                  RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
                RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"0.6297544181379376`", ",", "0.9`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.7450916787049933`", ",", "1.7000000000000002`"}],
                   "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.8748460968429308`", ",", "2.6`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.9901833574099865`", ",", "3.4000000000000004`"}],
                   "}"}]}], "}"}]}], ",", 
          RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
          RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
          RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7607846962979064`*^9, 
  3.760786500171319*^9},ExpressionUUID->"ab0f297a-dc1b-44bf-b0ce-\
10443c238262"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:0421\:043e\:0437\:0434\:0430\:0451\:043c GIF-\:0430\:043d\:0438\:043c\
\:0430\:0446\:0438\:044e", "Subsubtitle",
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, 
   3.750659590603606*^9, 
   3.750659634100629*^9},ExpressionUUID->"feb92d43-f673-4dd7-9b42-\
b50ab362b68f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"iterationStep", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "plotName", "=", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotDataList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"openingAtCheckStep", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "i", ",", "1", ",", "numberOfCheckSteps", ",", "iterationStep"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotList", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PlotMatrix", "[", 
      RowBox[{
       RowBox[{"plotDataList", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
       "plotName", "<>", 
        "\"\< \:043d\:0430 \:0448\:0430\:0433\:0435 \:043f\:0440\:043e\:0432\
\:0435\:0440\:043a\:0438 \:2116\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "iterationStep"}]}], 
         "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "plotDataList", "]"}], ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"folder", "<>", "\"\</opening.gif\>\""}], ",", "plotList"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.750657229716831*^9, 3.750657323541009*^9}, {
   3.750657442512285*^9, 3.7506577065181427`*^9}, 3.750657806502049*^9, {
   3.750657865720697*^9, 3.7506578660603857`*^9}, {3.750658171413033*^9, 
   3.750658171660262*^9}, 3.750659590604125*^9, 3.7506596341012383`*^9, {
   3.7592248138310814`*^9, 3.7592248170522895`*^9}, {3.7592248487311068`*^9, 
   3.7592248766307635`*^9}, {3.7592249197998433`*^9, 
   3.7592249455084496`*^9}},ExpressionUUID->"b0245563-8792-413f-a4c1-\
ff322b233949"],

Cell[BoxData[
 TemplateBox[{
  "Export","errelem",
   "\"The Export element \\!\\(\\*RowBox[{\\\"\\\\\\\"ImageList\\\\\\\"\\\"}]\
\\) contains a malformed data structure and could not be exported to \
\\!\\(\\*RowBox[{\\\"\\\\\\\"GIF\\\\\\\"\\\"}]\\) format.\"",2,48,1,
   23215205653714838992,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7607801366809754`*^9, 3.7607819378934135`*^9, 
  3.760784696636993*^9, 
  3.760786500282345*^9},ExpressionUUID->"bf9e0781-55e3-434b-98a1-\
bd6a37be219e"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.750659652156084*^9, 3.750666699563397*^9, 3.750666774903749*^9, {
   3.759224797990833*^9, 3.7592248186298594`*^9}, 3.759224850386752*^9, {
   3.7592249324687567`*^9, 3.7592249472268243`*^9}, 3.7607801367149954`*^9, 
   3.760781937914418*^9, 3.760784696658987*^9, 
   3.7607865003113513`*^9},ExpressionUUID->"1aaf0156-3bd1-4e4e-8271-\
64406c21ebbf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:042d\:043a\:0441\:043f\:0435\:0440\:0438\:043c\:0435\:043d\:0442\:0430\
\:043b\:044c\:043d\:0430\:044f \:0441\:0435\:043a\:0446\:0438\:044f!", \
"Subsubtitle",
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.750659590603606*^9, 
   3.750659634101563*^9}},ExpressionUUID->"190e1697-5378-40fd-b7b7-\
68e948097639"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"openingDouble", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", "\[IndentingNewLine]", 
   RowBox[{"i", "<", 
    RowBox[{"Length", "[", "opening", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"openingDouble", ",", 
        RowBox[{"{", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"j", "<", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}]}],
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{
        RowBox[{"openingDouble", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], ",", 
        
        RowBox[{
         RowBox[{"opening", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", 
           RowBox[{"opening", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"openingDouble", ",", 
        RowBox[{"{", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"j", "<", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}]}],
        "\[IndentingNewLine]", "]"}], ";"}], ".", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"openingDouble", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"opening", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
    ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDoubleMatrix", "[", 
  RowBox[{
  "openingDouble", ",", " ", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.750358232133493*^9, 3.750358247083275*^9}, {
   3.750358316158638*^9, 3.750358512340169*^9}, {3.7503585544026327`*^9, 
   3.750358555974053*^9}, {3.750358591934741*^9, 3.750358599614847*^9}, {
   3.750358635248437*^9, 3.750358637785039*^9}, {3.750358703052411*^9, 
   3.7503588070893993`*^9}, {3.75035885757069*^9, 3.75035888174489*^9}, {
   3.750358931136982*^9, 3.7503589382940197`*^9}, {3.750359001423706*^9, 
   3.750359052574259*^9}, {3.75035919521389*^9, 3.7503592947409153`*^9}, {
   3.7503595831699047`*^9, 3.750359627071444*^9}, {3.750359720953223*^9, 
   3.7503598303588943`*^9}, 3.750360044553823*^9, {3.7503602219784393`*^9, 
   3.750360333147932*^9}, 3.750360417313128*^9, {3.7576716605038176`*^9, 
   3.7576716619096375`*^9}, {3.757672101273732*^9, 3.757672128470461*^9}, 
   3.75844198944094*^9},ExpressionUUID->"af6ea415-d276-4505-81d8-\
a9c6f689f1a0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    RasterBox[CompressedData["
1:eJzs3XdQVtnW73tMaBtRzNlGMUeMGKa2ihHFLBjaiLlFUVtRzGKOqK2YaANG
TKjdZhTFBAqioghKzkHFiOn0W/fuZdWZe1RB1T13n/Oeb1d1fXatP+B51ppr
jN8YVO2uNmpq37F5TExMyuYyMSn/z7//9b//n39eKURERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RPy/yyWd3lw9+S0j22aG9y3k9Tb75pnTslxCcvY1q1re/2t0DuxeZHeT8Owb
s6z/qL8fZ1/fp9usI4Kz79237Qe2v5V9C66qnd/vxv86c/p5cvp9c3o/c/q8
cnoecnrecnqec/q+/Kffb0RERERERERERETE/z+U9uSmK2MXjPyq61Kt872B
mboX/Hu7uqXpOqY2HZwZrxuxbur2Pi9145v1sRkfqutrv8Le6b7uhUzLxkOv
67p5TJ26+ILusCfnrAqc0W1U4tuHtd66+4an7dxyUNenaXjRO/t1/SKf1pm5
R9fUbGFkwx26LrXM617brpvW3mtm323ZV/o50u+VPqf0vaT7IN036T5Lz0V6
jtJzl86JdK6kcyidW+mcS+8Ff29CRERERERERMT/HQwq36L4zwEZ2fZu/Lgu
Z2Zl31eh3dIDKmTf8nku3FgQnJ5tXX5rOrirR/Z1XR+QemhK9o18OHVq8U7Z
1/vjQ/861bOv3b0eMfdNs6+V+aphW9LTsu25qrmdPJ5mX8cafxSb4pd9y1dt
+/LQ0ezrY5W3aMDO7Os0+Hr5CRuyr+OogcVqL8q+7u8GZbRxzr5Z1473HjMq
+676ZXKDNg7ZN+ZA8Yw7XbOv19opXndbZ98pbzs+a2uVfd3+dsx13DL7hjXY
GjK8Qva1jfYoXM9Md9e+6Cb3i+iuKvUtdbaJrkk7n5Z/fU7V3Oqd2n3LK932
IcE1cifrhkxOG9U5SteliEt4u1Bdz3XjT2cE6k5pdupVKX/dgud+/brwim7k
a69rpn/r+vj2uDXaR9eySOvJk7x117plfbl0WNf60vu4zQd1B96KO5OxX3fr
0Ptjp+/NvtLPkX6v9Dml7yXdB+m+SfdZei7Sc5Seu3ROpHMlnUPp3ErnXHov
pPcop+9jTt/3nNaTnNarnNbDnNbbnNbznPaLnPajnPa7nPbTnPbrnOaBnOaN
nOaZnOalnOaxnOa9nObJnObVnObhnObtnOb5nM4L/+n5BhEREREREf8zSnNi
+97XM/721I28sSOzgL2ub8TtjZ8q6taZ/u3h6cB0zcufVno3dtENiT242Le8
blvLSqs2eqdpeuTqWKn4NN0LdyaUbtVAt1Kwd0T1T6mapR/unJZ5Tbfjpi0O
tn/oej1uGXF2iu6TaTvH7euuuyv/0SvONXSfhNw/mJVPN/LYzg8Xk1M0A5c2
nH4vVNd24JTzl6/rekRaNzlzVNdifv7OuXfoOhXeecpkpe7aMm5LX83UnVWj
bvqSMbrv682tnmWnW8c6rYpJe11/2zO9LBrrukZXGvJ7FV3r/OHjSprrZq29
ef1mbt0LJU9U+v1NsubCP4fcnRKte7LpsCOLHul2Xzp8/183/o3dRwRfO6Vr
0qBKt9KeulXLWr1dvkHXdsXiCnZLdGO+Wc5qNlvXK35x/eaTdD36rJzf+Vfd
+s3OljkyQHdgiTWur7vpetnbK6d2ums9ggODG+keWTvQdEZ13UbLG023Kq/b
tmnk7zGFdU8mxJ48mUvXqt/RFu3eJGmuHeJUo3eq7uUb/fOavdS1a7qudHqI
ruut/lVL3tE94lChjvUV3V2Df3UM99F1H7hv7/zDuv5BX+YG7NHN6j5wQPmt
uoHlPjv8vlF3yth3/jdX61oPOLsqZamuaeeZvYrP161qN6bS5Lm6zi++Lns8
J/tKP0f6vdLnlL6XdB+k+ybdZ+m5SM9Reu7SOZHOlXQOpXMrnXPpvZDeI+m9
k95T6b2W6oBUN6Q6I9UlqY5JdU+qk1JdleqwVLelOi/1BamPSH1H6lNSX5P6
oNQ3pT4r9WWpj0t9X8oJUq6QcoiUW6ScI+UiKUeJuUvIaVKuk3KglBulnCnl
UinHSrlXyslSrpZyuJTbpZwvzQX8vQkREREREf9P93L9eetbnM3ItkHXrwSa
Dc++a3/95NA5d/at3zKlZ+Ur6dn2/b4S+71XZt+OhWKD947MvrbXB18saZ19
I6x3X82ooGtRuFa+gllpmgvHNfrZ947uwBFnrlZeovtk2+X3v3fRXTv6zwlR
L1M1Kw3dUOvWNl2HIye2Pmyo61R29LnrH1I0TX63irG7pOt4fOeF46t1m/dc
ddZkuK53nYsrnjbUjXQpMH1uQd34xtFxzSOTNc3avZ76/C9dpwUhHceu0Y0c
/t6/o7PusCHbVWY/3SJV61c9aq3rajlh5bKKulvrrxk/Ja+uc4W0xV2SkjQd
9tW7VOux7qoulfP/8bfuvq7lCr7aq+t3YuSb60v+ja1q978wTbf7epvMKQ66
gZ75HH266Fr9PfFj7Ra6Dmf7u52w0K00Y/LP1Qrrds//W+5m3xI1XU94ecfE
6tou7tuh1hPdJ9/Gfxp3Tdd9+rxp+c7qfj2+PddrL93MHe3WH9mm2zzJ9fiS
Jbp3I5YEXHHRLf+iyrCfxuvaXHx/3W6o7qxFHWYU7anrd7to87XtdV/dv9ro
RGNdz7o7mqVU0vXIqLptQXHdyBMPWiwvqHukrYt7xY8JmltPbLG9laybuvWn
SeYvdM+tTCtt8kjX7eKyBvv8dH169Wx552/dsFNTbnY6qju51an7JfbrmpwI
jd+4Xdfx2HP79A26BZ1X2h5cpRvZoUG/vG66azo3vJu6UDfzSrpDO1dd67dT
2kyeozvw+9BCt2ZlX+nnSL9X+pzS95Lug3TfpPssPRfpOUrPXTon0rmSzqF0
bqVzLr0X0nskvXfSeyq911IdkOqGVGekuiTVManuSXVSqqtSHZbqtlTnpb4g
9RGp70h9SuprUh+U+qbUZ6W+LPVxqe9LOUHKFVIOkXKLlHOkXCTlKCl3STlN
ynVSDpRyo5QzpVwq5Vgp90o5WcrVUg6XcruU86W5QJojcjqP5HTeyek8ldN5
LafzYE7nzZzOs//p+RsRERER8b+zUg633PIudaarruuwyJstW+iGna2yp9P7
dM0pGYPdv+zTvTB2S+qi1rphH14eLheZpjl6wwKP+266q6L7Vk/qput6am7J
d4V0Labun1HvSaqm47mAP9fv0933KqW6matu98YjnnsP1m2+oU+Jkk106yz4
o5ufma5DQrdAn9gUzcsPvZJPn9ctUtZhhc1i3Tpho9bc66brPtXudNPCuu9n
JIX2v5OsGai6Ddu/TPfkBa+Y+310XcabpZtU1o0oVuNmqcQkzX7pA7alndf1
PRYx0WqRblb8yNlfB+lOaRpXpUoz3cCZtzIP/aTbqMu3W3NjEjVn+b73quin
+75nepVSh3WtghZkRK7UPeJoZp93mm783Wlep/vq1r9a8+3hVrq+z8pNTy2n
67fqrMWWXLo+3w5O3xufoLlvuse1E/d0/a6Nqm9zWten0uPvpXfp2mxrXbfg
El2nwrYWkY66Qf3HrHHtq+u/1fL619a69a7/lP+ihe5W1w49r5npXsjMHRzz
KV5zVqbfz03idTt6RcW9fqRrZv/90Ck/3YHN3W+H+Oh6mtdMfLdP95W53+z2
G3Ujdw1/cm6Rrtew/v0HTdV1qtT94Yehunnq2Jm0sNMdYTFoc+W2upeGRdRe
Xl83vuT5GlEVdX2a/L3oajHdJXZ/RezKrRty8EmW56s4TYfFnqdOv9TN8o1u
uCFEd+f36sen3NL1G2XTOum87qWHxRvuOalb8eZa72IHdI9Zn7m5zkO3X65R
57ts1t1w7cKcmNW6pr8UH3R5mW787UvjzizSHb0oPvrVfN3wVmbD68/LvtLP
kX6v9Dml7yXdB+m+SfdZei7Sc5Seu3ROpHMlnUPp3ErnXHovpPdIeu+k91R6
r6U6INUNqc5IdUmqY1Ldk+qkVFelOizVbanOS31B6iNS35H6lNTXpD4o9U2p
z0p9WerjUt+XcoKUK6QcIuUWKedIuUjKUVLuknKalOukHCjlRilnSrlUyrFS
7pVyspSrpRwu5XYp50tzgTRHSHOHNKdIc400B0lzkzRnSXOZNMdJc580J0pz
pTSHSnMrf29CRERE/L/Ttg+W3DSLzci2aUMD791al30LtjhWvlCr7Os+8ff5
yQnp2dY8T5DvoWPZ18Ss44NJ87JvWLWSC0Ltsu/CPIPetqmdfR03zPrzzvc0
TefinQLmBemGJFZKO7pF12H/8F+b9tCtf+LlH7vy65pMvXOpztpUTYewQz7e
vXUjojP3lXudoplZtmnqtyu6S6YNPdx8qe7JGY/DH/TW3fq4T+jBGrpezk1v
Ob5P1vSpc/jk0/u652oufxCyXbe92eyQsbN0204+VXRpV13HTsU21S2juy9w
/tIOkUmaPlNfLG+6S7dtgSnjOozQLbL/hO+t6rqBQx6u2JycqOlt87zorFO6
w2KPnqy+WNe91tX0SwN0A9d16Lv9Z93uX/1rXPiUoGnl+XmB2V3dyWEL1oZ5
6va0b9B07wxdnzpjC8zspftkYp2lf1jq2o0L/GKTX9fhbv5Ce2PjNZuPSzsY
HaiblbvB9frHdb2+tuz4yx+6/nYWNu1m675/W3LjsSG6IV8+u8/toJuVuW3e
HzV1Pfr8+T6isO4FzwmjZmTGaZZuE3Hj0yPd8FbpKz9f1L1w/Z1bUU/d7t9G
rZy2XLen5aTWZ8fpLhn+Mf5YP12vP+vmfd5WN+Bgh5U29XQ7Pp9fPqCU7rEy
O4/8lV83q3vd/g/exmpab5vofOilbvtBbQbUCtS17LPk9IC/dd3vlIrt4KW7
ofC5z6826x55O+Xw0KW6OxOqFKw5VTfP1tpnI4fo3n2Sd75jL127b9FHX7XX
9Sm19tGpxrqp1UInX/5ZNzz3+4Gp5rqW8QFN1+TWNTl0vufsDzGa5k2KzOma
qmu9pYHpjRe67TdGXPkjRHfnEvu2BW7rrum70LLvdd0vW5Ys/HJB17rFsSsu
Prrx1t7NRh/X3dfHuujmY7r91ha1eHkk+0o/R/q90ueUvpd0H6T7Jt1n6blI
z1F67tI5kc6VdA6lcyudc+m9kN4j6b2T3lPpvZbqgFQ3pDoj1SWpjkl1T6qT
Ul2V6rBUt6U6L/UFqY9IfUfqU1Jfk/qg1DelPiv1ZamPS31fyglSrpByiJRb
pJwj5SIpR0m5S8ppUq6TcqCUG6WcKeVSKcdKuVfKyVKulnK4lNulnC/NBdIc
Ic0d0pwizTXSHCTNTdKcJc1l0hwnzX3SnCjNldIcKs2t0pyb03k5p/N4Tuf9
nO4TcrqvyOk+JKf7lpzuc/7T+ydERET876+UQ5Kbnrqy/IHurr69by5foGti
rTxCu+iuPXKr4qJP6ZqVju7f43xS17F1xQmn++m2P7DlW4fkNE3vrztU+Hbd
zMXvEn4ZrGuaOWH94sq6lUa/aH49NlVz4JAh5c6f1B0xYvGo5IW6Tl3LF5oy
RNfco8DClQ103U/WzOpQQDey486wlMgUzZimd2+vP65b/vBeu19cdS1a3P/5
grWu49OP61Z+S9Zc6Lk0ZdJZXc+PY7r+MU03cqNX7U/NdO0qt9tf9X2SZnzN
woVC/XS9Nj8vWHCFbnyNkpvX9dcdfbfHXxNr6np0fzR1RmaipnPsyXdvbumG
2agxDXbqFrS0aDVkqm7pS202HW2j26/zsaXX8umGR1iPuX87QdNz5e2IJpt0
/bu0f1bRQffc4iKtP1bV9di3YtbZN/Ga8XcHx6331x3xqEFM4T26O+/m69Jk
mu77PLGP0rvqdveeMmpUBd3RqsK+Re/iNCO73Ck9M0A3IG/sxxX7dAdePHxw
wWzdOjtaVQzorxu03PlD32a6oxsNn/20nO77p10/DfsWqxl5aMWoHi90dy6b
3sT5um54HofxpQ/ouq3YGvxkpe6aoXvmv56km9X86/Dadv/GlBvrLKx1M81a
XnlUWdfRPXn5XRNd89o7U8okxWguHPQpaPY93VXFBi7Jd0rX7M7KkPzbdLcu
vmxRcIGuU73PCaPH6to5rj1m2kd35/aKAyu307XzGhM4Uf1whWnSvZdVY1S5
MYl9wu1++GyCxbKzpjHKp0Hptiscf5h5fvh+q/ho5X3pabvzLjGGX2MvVEu+
Fa1sHnkUKb0pxnDrtT9SXuyPVv5xa+ut9YwxHFizbtt666NVt+WPe9ieiTEs
flYVXTMtWkV0/d2z+/UYw7MlbIttGBqtOpbxG7L4UYxhhWFDZrXpEK38FrRq
0CEhxnCI72HryjWildfwk1aP3scYmk7//fS1ItHK87FZs1DTWMMNVx0bXX4X
pRzv+O+8VyrWMD748eZeL6NUzKjONSpZxhoeTSnT9ZF/lHLPKNelaZNYw31l
7becOhOlymXcTFjfPtbQvtyg6rX2RKm2iRUH3O8Za3hgX/+Fd9dEKc831x+U
cYg1NNs8pGv47H8+j/ME12ZjYg3jH0b5nZgQpSKP/HGrwORYw5MLdj56MyxK
XR7s3+mkU6xhnMuTbR8GRqluTTMnW/wea7ixsXt4d9so5fTTvZFz5sYaPp3W
O+2OzT+f/9OmS2MXxBrar7IYm9A+So2IzhfbdFGsoVO9D4cbtZOvSz9H+r3S
55S+l3QfpPsm3WfpuUjPUXru0jmRzpV0DqVzK51z6b2Q3iPpvZPeU+m9luqA
VDekOiPVJbGOCXVPqpNSXZXqsFS3pTov9QWpj0h9R+pTUl+T+qDUN6U+K/Vl
qY9LfV/KCVKukHKIlFuknCPlIilHSblLymlSrpNyoJQbpZwp5VIpx0q5V8rJ
Uq6WcriU26WcL80F0hwhzR3SnCLONcIcJM1N0pwlzWXSHCfNfdKcKM2V0hwq
za3SnCvNxdIcLc3d0pwuzfXSHkDaG0h7BmkvIe0xpL2HtCeR9irSHkba2/D3
JkRExOxr2e1avcFhGdnWacewardcsu+qlcsGxJTJvlbl5v606W56ts0837pK
b/fsm/UwcnzcqOzr3KpSiaCm2ddqSwvXrXl1bTcWPeL8IU3z3JGqVxL/1vVZ
ffHXCgt03VrYlbRsq+sf+/zzzqepmrZ/D233bLlu/dN1Hp2y0HXq82DchugU
zYX95s9K3PNvLJc66ONYXZMNZ5sMaKB7oenio48/JWu+v9RvXal7upkrjvdq
sU7XY+Jrv52OuidN7//WpKnuMLOOi0/+pNvvqMsRu/tJmucW97+3wF3XNubi
/ul9dYflavO7VSld6/QafR89TNT8+qvDvBl/6J5c2mD40VG6/TY7TY+y0P1i
n/u1bUaC5vtnQauentd1iN60uc5SXcdXVZd69ta1iRvmNLq8btUF1u+j0uM1
XWK2XXnmq2t2J9jfYqtu8tAo82mjdLPeZE2+1lDXfMbhXxua6Aatj37a/Uac
punSbem31+kObea4ZHZfXfdzs9aMrq0bP2XHZ7fcuv7Hf9pU4lGs5uSjzWoP
OKRb2rdDnnoLdT1TZ9Y53k/X58jR1u71dUc3z9ttSz7dnmG+AW0jYjS9djWK
/u2cbki9Pw99Xa/rVbhxpe6Tdesst5kb1UPXxrdpi7qtfrj1ZaP6qk6MmhLX
a2j+IT+MOLjy3YwP0cp12YU3QTNjDG+2SHS3eRCtJuSreqnkHzGGUR8exI3Y
Fa3Wfm15vvOpGEPvJXUmlpkVrSwHqjVe92IM/b951nfrFa2Svq3u7JoYY/hn
ruNlOllEq5MXnAu55I01/DjuYXrXT1Hq/BaT8NtVYg0nVPl+tm9QlDKZc/J6
G+tYw4XdPzzffyhKrX3/9aPN4FjD+kWXrNoyN0oFWS/z7+cca3i7ZsuBuftF
Kffvri5/r4k13GfSsWtKvX9+/uWJ9iP+ORf/cmHsyzlT80Qpm4Vrpvb2jTXc
qryfrngZqfr177Y5PCrWcEmuTdWaeUeqIiVH7az4NtYwLWpyqccbI9Xacvny
zMofZ+htP/vz/RmRyntelbU3qsUZfr1hV8/eNlJ1HNYnz6GmcYYV3ub7nKdx
pHKuVudi865xhiGB7RO8zSPVhPT1pmvs4wz9mtqlDsl8qRzn9S1weUqcYcCq
Agm3z71Urczd3zxZEmfYz9+m1twZL1W/48tezNkSZ2j67rcxm9RL9fU3p42h
B+MMf/I53mNOgZdqdNtLPYtdiDN80uVeuYfBL1TIL78texwQZ+jW4uzUBdtf
qIW7rV/bP4/7YXW7em+mvFBZz7N2OaXHGZpPLmZ5vOkL1e/OkIddPscZmu5P
XVGr6Av1JKFD+DGzeMN5Xa0nfQqMUG4zSn/zqxhvOHnvpXxnDkcoi9Wr51yq
HW+4dfgw97uLI5TN0uj4rGbxhvWcB/coNjxCVXW/7Xrvl3hDTxsvt10tIpRr
kfIf73WPN1wVeqrMzioRyvz6kjdV+scb+p+fUcszT4TynTf0Sa5h8T9cmTwv
KzFcVXJa1mXPyHjDIyem1v75ebjq2HlYm3dj4w2bN0rsXvV+uLJpvXJm+Lh4
w3q9xuyZeDtcra3+ZefRCfGGDpsK1f56Xb4u/Rzp90qfU/pe0n2Q7pt0n6Xn
Ij1H6blL50Q6V9I5lM6tdM6l90J6j6T3TnpPpfdaqgNS3ZDqjFSXpDom1T2p
Tkp1VarDUt2W6rzUF6Q+IvUdqU9JfU3qg1LflPqs1JelPi71fSknSLlCzCFC
bpFyjpSLpBwl5S4pp0m5TsqBUm6UcqaUS6UcK+VeKSdLuVrK4VJul3K+NBdI
c4Q0d0hzijTXSHOQNDdJc5Y0l0lznDT3SXOiNFdKc6g0t0pzrjQXS3O0NHdL
c7o010t7AGlvIO0ZpL2EtMeQ9h7SnkTaq0h7GGlvI+15crovyuk+Kqf7rpzu
03K6r8vpPjCn+8b/9H4UERH/v1Gq8z7bQtcEntP12lyxd9YY3SJdznSuUkM3
6MXSLp8epGtaRh4tNcVZ16521uaworpFwndHRu1N0/w69ez6MeN0j4yYvd+m
qm5EeOXl9vGpmk86+z8o6aXrumdwiZvOumu/qxWbOuomx9r7Li2ta3PX+eOs
pBRNX/clRW5d0DXpvnnF1WW6BeeEPHnaSdfl+LjBxUx1g9ZtyuV2Pllzw8wS
L8pN1Z1YdFS753V1j1Q6HewUl6QZ9mRmT5uDuoHzrOvfGKV7ef8p1a+hruex
BX3sXidqOpd6NvvdZd3uRZd7xqzXzbIaXfbACF1rvy1DTero5pn0e0rYmwRN
/8V5XSaf0x3h7NvvkIvu3chg98dtdc0fme11/xqvaTLto2uxe7pue2f5L/TQ
NTnTo+iIX3XDvyy3fF5X16JnuenOWXGaPTuER025ouvTbXfK1RW6mWeeFxxk
p2tmO3njBUtdj6YzM30/xWpmbgu5+Pc9Xc9Wa6e236nr5ftmQL8xuu69epz4
3FLXSx34s2peXRvrk8kXg2I0FzZwNLHeodu9XODjKxN1e5ax6ryjva7J55uv
Emx/uDB/aOnqhWJUv7a53050/WGe/V82vvSLVs4Heixctj/GMGT5uqstVkar
EauSp2+8G2Po1MgzpIZdtDr38Kctd97EGKZ3nOYZbB6t2u8OsTOrGGvouem6
W8LjKFX198lW9h1jDe1sI5pkeUSpPHb5Su+dGGv4Of/HF4VHRCnPtsln826I
Ndywr2rGx5pRqsih6pcGn4k1TMtzJ87ldaR67/f3xprhsYZFwyYeuHE2Ujl3
22e14UusYUjx1adrLotUJnGXV7evEGe4sNboBlUGRapMt/pliraJM3Q/2zoi
uUakapvWzjyif5xhjZ3VRp8xiVSWEb3DQ53iDNeMN5s02/ul8r155MSiDXE/
PP79lUuvl2rtn0Mqvj4aZ2hfIe1IvS8vlFtk2twvt+MMJw9vvqbggRfKdufj
Dp9i4wzL111gXbLPC7V1wbJaU77HGbZZNNXt71wvVPyblcXqVIk37FlzVPCi
vREq08exY61W8YaWsfeaLe8foUzzbft96uB4w9RXLbafeh+uwlouW5niFG/o
PMBpdFvvcDUr6VYu+xXxhjs7Hsp66xiu4vc1sp/2Z7xhz5K/vT1aIVxdGJMe
43Up3jAkuGn/QnefK0+neNdKD+MNqx7v6XZw5XNlafoi9mpyvOGatLF9fNVz
NdCpWK0HJgmGX44HL9/0NUxlRm7Z/blsgqHlsHbVi5wNU77ds+weWSX8sErx
IkvGhKm1Z4bn8e6VYOgQHfPuo3mYcjvu6dZxSILh5LeVJjdLf6YcOkc5DZuW
YJjZcKh3wtFnyuP7rFe7FiUYWuXa0cBy7jPl0rFw24JbEgzdmz3vGtX+merX
2/xw2uEEQ9MS/nlb5H6m1gaX73rgYoKhw+oTNc0CnyqPAm7XdgckGFrFT7lo
4fFUHVGvrbdFJBjm6VCvd4txT9XlW/WL/5GSYHj30KwA67ZPlUlH34VD3iX8
sMVV17QqT1WRVy8aXvgp0TCs4Win4OhQNWvJ4eL7SyUa7pyZ55751VCVvNp6
5qCqiYYdh9p5ftodqjLXzjqQVivR0HLgzmItloWqgVebmVo1TjT8cm14muPk
UFX1QzePLa0TDT3L/9xY2Yaqk1MqHejQIdHw1bmDZq3bhKonETvmBXVKNJzn
WG/VusahymzQ9N7+XRINg7IOFfeuFarMbXev8O6WaOhftobjh5/l69LPkX6v
9Dml7yXdB+m+SfdZei7Sc5Seu3ROpHMlnUPp3ErnXHovpPdIeu+k91R6r6U6
INUNqc5IdUmqY1Ldk+qkVFelOizVbanOS31B6iNS35H6lNTXpD4o9U2pz0p9
WerjUt+XcoKUK6QcIuUWKedIuUjKUVLuknKalOukHCjlRilnSrlUyrFS7hVz
spCrpRwu5XYp50tzgTRHSHOHNKdIc400B0lzkzhnCXOZNMdJc580J0pzpTSH
SnOrNOdKc7E0R0tztzSnS3O9tAeQ9gbSnkHaS0h7DGnvIe1JpL2KtIeR9jbS
nkfaC0l7JGnvJO2ppL2WtAeT9mbSnk3ay0l7PGnvJ+0Jpb0if29CxP/d/Jo7
5sKYDxnZtuC9/fvbb86+WRY7To+pm31nuR7d81dIera1jqi0793a7Fu/kFW7
jD7Z18RxY6GjpbJv5L0mZnNC0zRt/u4SOu2y7sSfZg/oMVvX45DZ6bJNdB2d
g27aPE/V9Nxvt8l2jO7oqnWOnSzxbzT9fdOff6Vonqsa+WDedF2Pzbbzp9TT
dcg/tleD5GRNC9dzXy2O6zo7Dq3w12TdfiFpH660111V/Ui56G9JmgvzTK38
1wNdiyNmZ+PW6Dq0n92wp62uy75Vt92K6p68WeXk2DuJmmHr9wb+vFrXtEhA
RMWuuiGVYkd3z6/rZfnS7/qVBM06gYeu1Fyg6+A2udXX9ro7V3Q65ZJLt471
xQ3NguM1O5p+rFbXU7f01D7dgibrnvNcU31tU11H//E7e+XTXZN3uFtrvzjN
5APJUR9X6r6yjWpyspuux3CbIvPL6voc2rM/IzZWM8+l5T7qhG5Qm9VNCrvo
lh9SMKpGR12XoTa+iwrrXqiwpFDw4xjNnosqf9qzU7f8hmbNi03QfV9r1fm7
rXTX/t3dd/3QH9ZPWf9rrXfRasrGApN91sQYRtTIjHhzLFp5Ww5w2v13jOHX
zgsHlZgUrXxsr+c/mxRj6Lx66AynatFql5dPVbMysYal3N7cHxcRpc7NC25X
tHusYfqNm38mb4hSrZb9XC5gXqxh7ZY9wwI7RalKNeosmnwy1nDA7fbthn2I
VOXOVM73NT7W8NnrPrOXHohUn+40/dihcJzhT8EnC+2aEqn8n87O2GMdZ/jk
wt2yZrUi1Zx9by5Z/hpn6F6q1p3V0S/Vp6dL7aeuijM0nzkt89SIlyqsvf2w
AafiDJ3bvk34nvJC1a9nu2T+szjDOXPLzlrq/EI5lLYbcC13vGHmpWImlz5E
qNJjbxwpXT/e8FLQ6e8XZ0eoDdtczm0cEG9o13xDePfv4epJgnnA8TnxhvO6
3tiRuSlc2fkt6dF4V7yh2bkZlSbXClcWTc2X7fWLN9w62t+p7Nnnyjw8Y3G3
mHhD/0mNfrcY+FxljWs4+EG+BEPz29M+bEwPU1Yr+xUf2CDB0HFMvoCvM8LU
2sZlg9r3STB0mPTX+raFw1TBI+vLL5mcYBiTq8/JWReeKTf3HidHuCUYTu5c
KSNi8jPl7/RLvbmHEgyPebecu870mXLvmbkt2S/B0Ka8ZbP2Z56qfaOdfBbG
JRiWfnw8zrX3UzWxyuA5rrkSDf3+/OC+/HOoWjj61L3+lRN/+DhlZ64Doequ
zcjTt1smGu6rG554YEComuKzI8JqYKLhhbh648Z8faJiXAI79Z6eaDhw/R+N
Sxx+onzsNh6ttDbRML5Iz69eg58ou1yPLFbvTzQ0+7Jk8/AST1SRWXO2XruU
aPhsl3ubi3ceK5dG0WnPHicauv9m33z6/McqsKTjgw1piYbbrwVutG3xWPU7
Mqy5lWmSoWmuhKGOaY9UUKP4hGmVkww3TLHtemT/I2Wyo0zdRU2Tftjw/Px5
ox6pEXstitfqkWQYWXZLwPLKj5TlPCu/v0YkGa5dPfbc04gQteTnEgWTZicZ
ztp2J6rTlhCVdvqr73/1vX/ZKsH0ci/7EHWk5j6Ho4eSDPOsLP3qa74QVXVs
jHPW+SRDz6AB+80ePlR1JnZdcf2fvvovl1yzHPf3hofKasKBtZMikwwdbxQb
dHn4Q+V+MCpf0zdJhjY/DUkfXfuhMhlgezqXSfIPc5VNyvoerDw27H95t1iy
oVWvEiP3BAWrjiXWLD5WIdmw+Z0hs7OOBav29qPMltRP/uHbp/dn/R6sbGbV
u7qtTbJh/V0u15t1D1aV1juuvNA52fBw34DRQQ2ClUNJ236/9k42zLxe1jS6
eLAyH/k+l8mgZEP/8IpZ37OClFepEV/6jUg2LHL1ZcG8L4PU2pUnH7pOTDa0
H52+3M03SCXPe9axwtRkw44rnZsePx2kyruZX2/hnGzoM+Xm+cFeQcpt8eYG
bX5PNpwy+5cZPTzk69LPkX6v9Dml7yXdB+m+SfdZei7Sc5Seu3ROpHMlnUPp
3ErnXHovpPdIeu+k91R6r6U6INUNqc5IdUmqY1Ldk+qkVFelOizVbanOS31B
6iNS35H6lNTXpD4o9U2pz0p9WerjUt+XcoKUK6QcIuUWKedIuUjKUVLuknKa
lOukHCjlRilnSrlUyrFS7pVyspSrpRwu5XYp50tzgTRHSHOHNKdIc400B0lz
kzRnSXOZNMdJc580J0pzpTSHSnOrNOdKc7E0R0tztzSnS3O9tAeQ9gbSnkHa
S0h7DGnvIe1JpL2KtIeR9jbSnkfaC0l7JGnvJO2ppL2WtAeT9mbSnk3ay0l7
PGnvJ+0Jpb2itIfM6T4zp/vSnO5jc7rvzek+Oaf76pzuw//T+3vE/5OU3iOP
9Td/efdat8jw8F/TN+iGFNte9pid7ujFMZmdXqVr1pn9dHzqBt3A/VvSp9fR
dd//vXD9s2madjMqmf08UdfTe+PLk2V0+x369tL3bqpmyIlSXQot1nVefsfl
7066LmMfRi3+Sdd/ZKXyfz1M0TwyyLzK/e26QYc67jrYX3eYyZ1eu4vr+vdf
0fDj5WTN+uUyi/00VjezerU6Z8vq2nocMPt8I0lzQ97itp+n6rqUrTHofC1d
q88Jlo2jEjXff+33wXq/7sKsj8drTNDNM66b461auu27OqywSk3QjNwzKcL5
mK6d36gw9/G6I5zs97+sqeszsHRoreR4TS//h092ndDNU9Jk3YTpuhv6L3mR
1Uj30vMdf3xJjdO8MHX4Xy29dR3n1O5Rfoyu76XXx3I30D02fvqbtl9iNd2X
7m7R6KZu+wuNt1xdozvwfTnLyQN13U/1v9+/mq7JiLhieRJjNH1rhvlXOKx7
Iff9MmucdK2Cr+9800Z3Zcjgo11G/vDU9az5JdOj1b7CR7xjt8QYFkpb+LnW
nmiV1rJPty7+MYa76piW2DIwWvVr/XH0yi8xhnkOFkpunO+f6y269zjeKNYw
j7fZ+qxzUWpYm9F7pk6INZxZI2XD05FRyrHDvMxGe2MN43fd3HSucJQyfdB8
T83QWMNZd+pv7HQ5UjX371Lm77xxhscHloxImR2pfK263irXPM5wxGnzAc8a
RKqOxd/OajIqzrB5gMWO8c9eKsvkUz8P3BRnuKZD8h9fu75Uzc/dHKeuxBkO
jTh+u8PNF2pfzPImzq/jDEsPGD/eq+6Lf+pW90Zzq8Ubek2oOnXdjgiVFjJ+
kW2feEPrpTfnlikcoSZWXf6wyqJ4Q7/dE1d4zgtX5t7rPccfjzf0/2hX2f/t
c+Xg90friBfxhplnW9qOH/1cmc86tuVAkQRD/11Z7YqFhinH076XtqsEw4DE
y3eadAhT3U3iLBqOTTC0+G63eXrQM9Wo10+rb6xKMHQqFTv89K/PlLlNk/WZ
5xIM/etP6Fvj+VO1toXpiHxRCYYO9mkvM4Y+VVVrDR87tnCioefyuAcPwkKV
2feRu+waJhoG5Q6rWXR6qFrbpOzhe4MSDR3G/5V318cnKiTaokLLBYmGboM2
Hx+0+ImK+avduF2eiYYDn3a8W7PyE+W/PU/5tv6Jht5N3p3q6v1YnesQWSY2
LtEwwvrXv/v1eqxc3jvOu/lTkqF7xXurTkQ/Umbfmo8PrZ1kGJRvyK05ix8p
r3z5+yd1SzIskpGcp9PPj1RWedd8J35LMjQ/sSLjjU+I6ui5+1zddUmGzatU
D583IERVzb/l+zSfJEPP5Pa5jsQ9VL4Oa46PeJj0wwyHtxErHiqP4QUb7klL
MrSKjZz+c4uHqkjq8nk/FU42fNZ6/KqY58Eq81jzZg9rJhtafhoyYuWKYGX6
ev3yw52SDdPq2U3I0yRYeQ+7e7rkqGTDT/GeCdeeBalzQfbFdy1KNoxY++Ze
rblBaqDPrRcHPJMNv8YdGl20cpBKm7nmaMWzyYbT25zN6nftgXIet3xpp4Bk
w57uIbFjmj9QHtGL6myLTzZ0PPnWZOq2+8qi+8kDw74nG9br+KLS/Tz31awG
TZeXLJNiaJ3k/2jpzEA1sO7lSTX/mV//ZdbnDXPMPwQo02avzs3onGIYdm34
uY6/BijHNl92VhiaYuixpXRfh9B7KrP58Iorfksx7Hnu7oAH4+8pn5iNW5+s
SDEMOLx59se7d5WzyTSz8F0phj2/2u8K7XlXZY0sY9bdJ8XQ8ozzno4Bd1Tp
y+PDPfxTDF02rn48fPAdtaTlfYsWz1IMU4/VqX028bbK9LGaFJKSYtjz9p15
hebcVnZvpsbs+JpiWLXviKODi95WpVvkWr+oeKqhy9mPB95vvaWOTR98qXu1
VMM3vdO2qJa3lPlFe7tezVIN1+yKq1TH11/tm+R25IpKNazn8sxkxSJ/FXTg
dLCDbaph1UpBpV429Fez7m3N/ZdDqqF1699fnX15U1V87WJlPj7VsK995Xtr
1t9U1p3mlAqelmro5VhrQbkBN9WlIrPrjJ6darjJu2Eu7/o31c7XziadXFMN
+w7s+nWc2U3Vve/NNqUXpRralBjh7vLphjIbcGR5qSWphp65cj+cn3ZDFX7e
arKFW6rh6Yj9s+o+l69LP0f6vdLnlL6XdB+k+ybdZ+m5SM9Reu7SOZHOlXQO
pXMrnXPpvZDeI+m9k95T6b2W6oBUN6Q6I9UlqY5JdU+qk1JdleqwVLelOi/1
BamPSH1H6lNSX5P6oNQ3pT4r9WWpj0t9X8oJUq6QcoiUW6ScI+UiKUdJuUvK
aVKuk3KglBulnCnmUiHHSrlXyslSrpZyuJTbpZwvzQXSHCHNHdKcIs010hwk
zU3SnCXNZdIcJ8190pwozZXSHCrNrdKcK83F0hwtzd3SnC7N9dIeQNobSHsG
aS8h7TGkvYe0J5H2KtIeRtrbSHseaS8k7ZGkvZO0p5L2WtIeTNqbSXs2aS8n
7fGkvZ+0J5T2itIeUtpbSntOaS8q7VGlvau0p5X2utIeWNobS3tmaS8t7bGl
vTd/b8L/FZ67cuhc0RcZ2TZ5ycfLoZ2yb1jPZve+hKZn22GZE/98PyP7JlsW
LvuLWfa1ihpR7NLxNM2gKR3/6HlYN77BjeXV++s+6bj42fCCuvvq/Drty5ZU
zX6RueIWVNOtH+dV65VviqbVijFR3Qfp3q2ztNHIz8maZp16fx+2W9d/fsib
Ora6rj9tyVyST9dz1dh7RU4kaZr2Lj929CTdjgWWzS1dUffCuOCet54nap7b
oXz6bNI1cyp/r1Uv3ZCopYcCPydomvpszyh7UHfo6uZPi/bXPWdy8Up/E92A
Zj67B16M17SMdAp3maub+SHJz6+Jbvcxx0aMS4/TfNVzUoE0L11TixJrav2q
WzW2zeMiNXS3Pu25MTg9VvOCRfmll0/r3h0xtlff33XdtuRqmdRM13nmhBal
3sdofjkRO3v5Cd01r8bdKfubrv/cSmZxzX440D9kXK2GMcq+z6lLv/z2w0/5
3sfuCPsnh3+r9KT80RjDQrlDrgxaEK1KtzwaZhEZY/ii7vcWdxtGq/j8zed2
rxRraPm2QRezR1HK8c3wCTP/ycWGm19H9Z4fpdYWq+KS2z3W0Ht8cNd5FlGq
vd2a3l1uxxp6LvcusCUkUrWvWC6tT644Q88BDhXzzf9nTgl98XtbqzjD+EuN
AyysIpVvyWD7YMe4H15b82b1vZcqs57VXssdcYaWcxzLrWnwUpXfsCnk8IM4
Q5/eXZfl3vhCPenUNbFP3njDeY1rdimYGaFsb8yvENAm3rC8zxLvHd0ilMny
B8mbZ8T/cNJG1WFvuIrYUMVz6qF4w4m2f1Y5ZRqunN0q9v89LN7Qa/KRPB5O
z9W+3ypHfDZLMCx9Zv/4woH/zLMua8aE9Ugw9N/o8NCpYphy6da5TodZCYbu
Fo0Wtdn1TJl3Ofo4/UCCoX+db/Otij5TkRNsT1s8SjAccb1M0uYlT5Wnw8fP
7qaJhlVflS7cKTVUTflz/dc1zRMNL1Tok99+aKiKd/44031MomHP/aV3d374
RMVHnSvUa0uioa3D8/BS7Z8o2wXVn7T0SzQst3iT64Bzj5Wzd/8rgzMSDb0+
5Lr5rvFj5ZZZKbxIpSTDKTW8Jj059Eh5lvmpzYWuSYZVz8f2CK7xSJU/ddGp
rUuSoU9qgHeXjSGqfJWs7VePJRn67C3e5Nqnh2rivfO+E58lGfrtenj5qvND
5ZjxS0GPb0mGgY1bRDXO+1D1C7w4bXbtZEPTbQFHti4J/uf85cvfoV+yYeCc
9OQ2psHK9kGDQk4Lkg3LbXJ+cWJRkHIveX6J26FkQ5vrj2ZMNg1SPi9KDGhx
K9kw4Na6XGf6P1D1f404uSMj2fDNjQdh9qPuqyfLkgaEm6cYZoW7fXm8IlC1
SfgwpnvzFMNNmxvt7XAhQF24Pi42wD7F0GvqxgNN4u6pLNOSc8+4phhaPlle
6WaRe6rf2c7HZu9JMSzsO+x93Y53VdXWW/Me/qcf/sv2u1xif5p3R7ldvTjw
2MsUw7DF2z+8u3Zb1WvpVnhdvlTDN8fDzhx9cUvZ3O1TvXPtVEOHX0pZjixw
Sy0pcXe6pU2qYeqGjr3LDfFXmdMnreg9IdWwZ6+5gT+vuKmsTq3f93JlqmHA
0z/rXL9xQ5l3HlV93JFUwzUjT9fYkuuGiq8b+cvOwFRDj49XfhvYwE/VH72+
Qav4VMO3x/YlHvK4rjycNvfZlDvN0HHostKbXl1Tpg7VY9L/67+j/P8aFlPD
29HmmnK/3qh9TJs0wzVOz+cf2+SrAnd3C7tvn2Y4ft2aG7Z3r6q0Eyesx7uk
GSb6+qlKHa+oiIPfbbzd0wwPVct7LNL8srKuuqWo9ZE0w56uuft0yXdJ+S33
W/n9eprh072PV+ULv6Da91h6NiM0zdBkToCrX+R5ldn/L5O2r9MMt+Ud/8Hi
1N/KucuetSZF0g23ea0Y+mn0X2pi14HtV1VLNzTb8fbz0innlPXe4StHt0g3
tBu7Yf2AcWeVb2v3CQ490g1NrMoV8fv9jHry2+k/No1MN3wVuDem6hQf5f/E
+26lOemGJ9OfLfDoe1rZfn/abNzqdMPxBR7Nqf37KeVb0N215750Q5MFFSpN
HHxS2S1d33nH6XTDhdtWu0zrcEJ5X793efSNdMOgq3FNvbZ6q0zT4w3uP0o3
bGR/Ys/RwsfUql/yDf0jNt2wqt+iXx9sPKJ2rXi56u27dEO7xoU+l3h9SN29
Xuj0hjwZhlUvx/WaeuSgcjNz/2WEWYbhCOfm1z/N8lJ+DX9uv6dChuHJZfe+
FJ9wQO3a/+u+x5YZhnYbC5z4OGS/euVSoMrexhmGC+c0LRM4eJ9qPjHP9dvN
MwwjCx5/UD9ir/IJ/TbmcbsMw0a3Kqz4VmGvqpT7Tu2M9hmGdoE1S21O+lPF
5z0+I/2XDMMRq04UO3Bevi79HOn3Sp9T+l7SfZDum3SfpeciPUfpuUvnRDpX
0jmUzq10zqX3QnqPpPdOek+l91qqA1LdkOqMVJekOibVPalOSnVVqsNS3Zbq
vNQXpD4i9R2pT0l9TeqDUt+U+qzUl6U+LvV9KSdIuULKIVJukXKOlIukHCXl
LimniblOyIFSbpRyppRLpRwr5V4pJ0u5WsrhUm6Xcr40F0hzhDR3iHOKMNdI
c5A0N0lzljSXSXOcNPdJc6I0V0pzqDS3SnOuNBdLc7Q0d0tzujTXS3sAaW8g
7RmkvYS0x5D2HtKeRNqrSHsYaW8j7XmkvZC0R5L2TtKeStprSXswaW8m7dmk
vZy0x5P2ftKeUNorSntIaW8p7Tmlvai0R5X2rtKeVtrrSntgaW8s7ZmlvbS0
x5b23tKePKf79pzu83P694Kc/j0ip3/v+E//fea/m9J9Lpi/j3W3q7oxM7sV
C7LSdW6XeDrjZrpmv0E1r7bqpvuqzZVGHhfTNHfZvNtj1ls3ZPuzsHVBqZob
fIOS94zTLf922siU3Lpefcpn5vNO0cyqWzal+EDdkG6dO3R7l6w58Ublry9X
6Jo/7fWlm4XukqcLRg79K0mz/JF5BWM66y4pO7t8WkSiZtqtDkFt3XSTnc71
nVZPN2j3hpd5QhM0IxtOzmc+W9e6acKsoz/regwulPQ4NF7TvMbM7ZHrdFe9
ftEtpbNu6g7bmG6f4jQ7WprPK71X17Ho/DXze+rm8W4d/KKA7pfd9ZZ3uxKr
OTB/ZacVTrrNz086N7eOrs3wYlub/pOH/mc7TnhRuqO7bszaXGP9e+lOsf9S
48ygH0bMyXdr2pdo5RuZ6Bq3PcYw8vjPfjW3R6v25SbkigmOMazqEO1at3O0
+jQmsXJLs1jDleP3BR9NiFKzrKZ+8u0fa3i/ybOVLxZGKd/5Paxbb4s1jLy2
rtbBClGqVaB98umwWMPaPed4Zv4VqbxXm3tElYkzdD0eva3+0Eg152DGqlN2
cYZ3lm478c40UvncqXpi9+o4w/i9u95YDHupRlxqv+LF9TjDyLttx43564WK
uVjw9uBvcYYDA14efJf3hfo6s1rXSSresODuHTWvdIhQ5p4xt5r+k4P+pX+V
AYdGrgtXs57daPruZLzhTudTI6um/ZP/92b9+S0l3nBiGbPyeds8V6ObX4z7
tUaC4ZOh93tFrg9TC/0s3+8bmvDDs6srlUx+piJn/urfam2C4YjdUcf6Dv5n
Trm59WvfWwmG/idb589/5KlqW8zKptr3BMPuDx3r78z9X/+/JTVqnW2SaGhT
fsPyyHGhyqHVUssxExMNM/s5rwnx/WcuKxG76uKOREPbW/1+Daz3RLktcxr0
+UGi4ZSpxz8V2fBYvZ/Rd1W9PEmGlf4sMNLl/SNlmtv2WamWSYZpn8rOuDLo
kfJe8eZt1MQkw09ja1VzuBqiXLIyu2/an2Tobla9SrcSIaqI/XvTlNAkw2dv
K6a0m/1QFTl9fLvrP/nrXz5LymyyPCNYeW92/NS6ebLhpw4B5j2HBat429M/
hU5KNrQtnRTtcilI9cvq59NiV7KhafG88YNr/TO/70+19fZLNmxiOaPeqwkP
VPmUJb29MpMNHV0Tfy7f/b6K7Nyxx0+VUwx9h05uc7tHoDrSaFCXs7Yphqbh
b/v51g9QAcOXN3w8J8Wwya2QaJMa95Sl2ahTeQ6mGJbf4xOaVOqu6tjUtvjJ
hymGk/0bbXtZ7I5qNDY6dOs//eRfRnqeejXr1S01wn+Wx4tGqYa+9i1G3g7z
V6m7Cm3IGpJqOL3nhT1Vn95UDoPbFdmwItUwPm3lyT0BN1TWlgrVm55LNbSc
51Dz1gW/f96Hsee/vEw1XKN2HzT3va4yLfOdPVcgzbBn6ahrf927pqwnr68f
2DjN0GvWvvRGj33VuaY31JshaYYzlgfmPnDyqjK53jL3xhVpP0wcGGe1/bIK
q3Viw8JDaYYBpe62+FTuknIuMr7V13tphtuGV+ldzemCivhtVtdJ6WmGhwKn
e3x8+Ld6dTWg89rS6Ya+JuMujHh9To34cH+mdfN0w4Xjerr8MvOsauRa5f7E
QemGvtXcBn6L91F53G9YxrqmGz6tcKdBr3KnVft81ocP/ZluaHKtS/Gyk08q
mzEnN5a6mm44YvusQVmljqt+5x/aNI5MN2zk2W7oyM9HlPvGPVuG5M4wbORQ
8NOEWweV9ZOysQVqZBh6Jh/dVWf5frVw/8bvUd0zDE02Dy4YlOWpTk67aLd3
bIahyYmw8A2vd6ryfWNbX3DLMGy/o9HNkpe3qrTHSRsT9mQYesbU3L857yY1
wrnj2ZXXMgxNLp0xHTp5ubLra9e5b3iGoUmn63l6XndRR1qcLtDyU4ahSV77
pLhB/Y3cV9i+kOuA+H/l6X/980odanhv6Zpr+vVGzVr3KLhfv/63W4fg1AX6
dbsLxcuHDNOvv3JtPjp3B/16wMTvpz9X1K+fbNhlSbSJfn1yv8s1d0ala9dr
XR3WM+uGfr1rw1ElUvbp1yc3vPi0+gr9+plHrzeWGKNfL+AR3GNTd/262YWj
fe411a+X/c3mjyIV9Os3ttVdtcJUvz6joV3brHdp2vWnxbb88meEfr390HIF
1B39etklHuaRF/Xrr5aZvmzgrV8PDy1q4eqpX78dlRpvuVG/fsah6/MCa/Tr
28aNKfZ2sX598+lxz/ot1K9veDZg9Mh52b8u/Rzp90qfU/pe0n2Q7pt0n6Xn
Ij1H6blL50Q6V9I5lM6tdM6l90J6j6T3TnpPpfdaqgNS3ZDqjFSXpDom1b3/
uU5KdVWqw1Ldluq81BekPiL1HalPSX1N6oNS35T6rNSXpT4u9X0pJ0i5Qsoh
Um6Rco6Ui6QcJeUuKadJuU7KgVJulHKmlEulHCvlXiknS7layuFSbpdyvjQX
SHOENHdIc4o010hzkDQ3SXOWNJdJc5w090lzojRXSnOoNLdKc640F0tz9P9g
792joXzb/29FUqkUlUQJSaKUSDadtLEpJEp9RJGSNkqRpJ1SUohSSCqhQpQS
Sch+l12RPY0wxpiNSkKl39zr/n2u0/qcc6z7/j7rt9bzrOd5/PNe67Wsy5i5
ruM8jtc5cw00d0NzOjTXQx4A8gaQZ4C8BOQxIO8BeRLIq0AeBvI2kOeBvBDk
kSDvBHkqyGtBHgzyZpBng7wc5PEg7wd5QsgrQh4S8paQ54S8KORRIe8KeVrI
64IeGPDGkGeGvDTksSHvDXlyyKtDHh7y9pDnh/YFoH0EaN8B2qeA9jX+//2m
/2vpKy039f5S9n+dTsn3mp9KsIgcvhMxdGUMmaEim3vfG/QSOfFof4DOSyaR
eieeRMb86iFScy1HP8iJTPq8xf6XyxhEhi7aPfzbjkzahNWtTR+6iSyT9/d9
vpfMDLW0z1+66URKLbZrDrpDpuGGXUb35MhMc1h5IP1tF5Eq3r61R9eTuSHj
5Xh/VieRiu0+Yy5eJlNzf03bWCUy1TeEHnF620GkimPaFwt7MqNan24124kz
OOXkH/+vn9FJ0fNLpOI6qDRxWZ3R4PMZefjt6RD82UGluXqPstf4z+jMgVux
A0adVK6nzZsw5WY7MpFeM70qqpPK6x8j95ROaUcxthdKRtidVE46rlsz5g5v
fZ/wJ3f9qi4qzxwdYzdLmYYmZ+peM/TqorLxnclWleufkLDgl6Hygi4qWQMq
028/b0MJ4y9vmixBp1Kw58C0hvxW5PVxq17OLjqVIedGjN7SWlByXYbsnEd0
KvtOVd19OrkFRZ198tuHQ6dS9uJvYfcVzSjf9sWrxlXdVKb1MBqOWTYh2gz6
2iSvbirts81WDAY1Im2Hw99pr7uptGp5Oc/uQwOy93goVfqrm0pa5NTk2AkN
aMMPXdSqy6BSXspkjbNJPTJc5h5CO8OgUuVQzPqdvnWoaH//zLZUBpVJeXJv
9rZ9RIb3PoTqfWdQqbrAT8dI9iPKME12XbG0h8qa2dyk3cdqEbtLusLkaA+V
q8zjw+USa9Cwap1J7PMeKsU9zsiJ935AM+uqnjf09lCZdSaYeVz3A0o+PGZC
BG99+zv7Un52Lrv1HrGVB/bf38OkctU5mbz5H6rRxJdvPdbHMKns6Mi5s3Rm
NbJy+RXY+ZFJpajrjMTYX5VoWGBGk9HEXioVh893WORVoOG+0OOXefXm71S0
8Vhd41GOAmQqT01266Xyhfni2c/M3iFFTbn1gs96qZR6s9yB1VWK9NVXbR2h
9VLpXR4nMDGjBOn+Wb/LQJJF5Q0h24ITh4tRTcGZ0iWbWFSKOk426lYoQtXs
4QAbfxaVsi5zX9DeFCDbp2Eiv9+yqPzQc7R8mnc+Yu+xz/IdYFHpHp0VVK+V
h2jrZmz9uYhNZc5u7zHSQrlI2HIoyMKRTeXLhRb6q7a/RTQjtYF74WwqvR9k
Hg9oyEQp9mc9vxWxqQw/IW4TmpiB+miV9tE/2FTmuJt5OO5JR1YvLDNrFnOo
lIydpyL+NRUl/d7aVrudQyVjzmDIuLoUJJ/gbBIcwKFyu7BkkO7+50hRcH6L
XAaHSvuX3bZvAp4i2euzrl7icqgU2Fs2+ZR/PLqq91qdLsulUlYnWvEgMxY9
Kogs+bCFS6V9sNkyPdEopO93RS3Lh0ulgLsm3dc0DMmbjJ0qmMKlMueGwq6m
tgDkq5pbf53GpVKgWWbpvRsnqHWyv/Og0HQO6Zf0UZ/DtxckF7m5dV/CKZIz
Hh3hTl9P8oC858ubxpNcwsTznEAl6d9WrIoyrwzl4/EGH3xZsI3kCj8dPjrI
kzygSahZ5hsfXzpDYIb/a5JvR1YjS3z5+Nv970XTzUku9PtM00c5kis8qsnK
/8oij197IaH8LcmVXhvsnB1G8uo5OQ4h+0geN1dG/pcuye0nnez3m0py2oy1
GemtvQSXXltQvyaD5DTlyM76yyT3c36Re9ma5PrbXk/erE5y19wHBwfHkzyK
Rj9xsp1JcNntxjf2ZJFcbfWBlu/BJHfWqOxTdiX5ng1RQ2M3kvxljM56pEDy
koh6sTlj+Bz/dW74QFsP6f/H1igGppNcIlJQVSKM5C+PVheJupPcYhqtqmcr
n+O3bRuyXUJyz5j7pWunk7xkinFAVR+D4N5T4vs0q0m+Qs5ONjaF5FvSPBS7
Q0huPzdt8jg3kiefsB5/bSvJGzrP++SvIjmNZmiSIEdy/Xul/R4TSM5i5S9c
N9BNcK0/1zXYn0gedWSxTms5yXNmJpiuyCT5zaS6bQHxJFegr8gVvE9yMQml
wj/BJA/e5xN/9jLJ3d3vt+4/S3LPWUGRGadI7jpg+Uj++H/PoeNAfxd6nND/
BT0P0PMGPc/Q6wK9jtDrDp0n0HkFnYfQeQud59B1AV1H0HUHXafQdQ3VAahu
QHUGqktQHYPqHlQnoboK1WGobkN1HloXoHUEWnegdQpa16B1EFw3gXUWWpeh
dRxa96E+AeoroD4E6lugPgfqi6A+Cuq7oD4N6uugPhDqG6E+E+pLoT4W6nv/
2SdDfTXUh0N9O9TnQ3MBNEdAcwc0p0BzDTQHQXMTNGdBcxk4xwFzHzQnQnMl
NIdCcys050JzMTRHQ3M3NKdDcz3kASBvAHkGyEtAHgPyHpAngbwK5GFAbwN4
HsgLQR4J8k6Qp4K8FuTBIG8GeTbIy0EeD/J+kCeEvCLkISFvCXlOyItCHhXy
rpCnhbwu5IEhbwx5ZshLQx4b8t6QJ4e8OuThIW8PeX5oXwDaR4D2HaB9Cmhf
A9oH+Z/up/y9bv5/JaHn4epu456UNUwitQWPSI8s7iHyt1WIhfwCBpEBYqYG
wVu7iRwY2na79CadSIG7k8VS6V1ETkw+7LtNnUzHorh71gmdRFoZrvLhziYz
UnGGU/m1DiIbU8s3/dmCcxXXVOS8QAeafNo84Gs+Tvb6q6oSNp+R+CavpbIr
O6l0vFKSvimpHaUkViwS/Nf3Pf7v/HZ6o8GpIRpK6iu3Pjq3i8rfoeW/t1rS
kMzYeuaGs11Uxg95oXmXPiE7Wf+unZ+7qGTe27mpY3sbov8Rm+djQqfSVKAi
2kO+Fd39wPpyKJFOpbLfKuXXw83od/3HkJui3VRO9Dy7bk1TEwqslqg679xN
pc213BteRY0oa+H+mU/edlNZ5leQOZLTgNhns+xqZzKo1PYppl94U4/STgx4
PnNmUNkSLn3rS2EdotOXFu98xaDSbKNrQkfjR+T23S8iVKiHykfz9qrpfq1F
Fd4ra99a9FB5+8xfPjmTaxHNzK4y/FEPlfYzGTc1RGt4f2/pkvd9PVS2hh89
HqD6ASVnd9zepsOksi9/y/Ihs/eI5rfmPsuXSaX9Xi057YPVaLJe1lvlMiaV
L64Hn/+zpgpNHGk3jJnWS2XRpJfWKqEV6NuMs/L5W3qpND09abGLYDkSf15w
+0t4L5UBjY57rQ+UIUd29Nuapl4qE48suTDhUwmiJy4+VyDDojLi65DQXrNi
lLBx99EGRxaVwtovtrHjCpFA51q1qscsnHHObQrTCpD6gwVz23tYVJZrzd34
+mIeUt0ocuzOAjaV/bqVVjvm5iKpmcELHA6xqSwfWK13rDcbhWTMfnjiEZtK
SYN3a/Ysz0RX9S/v0/jMpjJ4KG7Bub2vkdnaDcGd0hwqnRsu6po8TEPqzrd3
TrTmUBkuUxXs8yMFXZW/YR/Km4v+zuCtiie/9SUjG5PWQI1qDpVR8wxShr0S
0fCpD/OnTuFSGWW/rvbm00eI3vZK+JA5l0p7qfydnx5GobtL7m0+6selMmrN
thc5B0KR053jVtHZXCq9X3elyPr4ISf/H5z271wqBcrtZqvb7KTqopDgwF8/
i8h5ytj9wdzN5/nwzb+m9Wrz4Uu2jbvUz+d9xYIL3n99QvJq+Su2hbYkj3xS
MRwkTXLn4g8Njg3k3PpL7vjU5Jt83gc+veHSODOSXxz/Sm7BVJJ7yj75E/qB
nMdzol0rfoeQXKR10pwcS5K7xpvMcBYnee0E402zq0n/sCdAT3MohOSs6fdt
b5uTXEy7Pnp4OsnV9IbjJtSRvkXCtMPyawTJBaZq6nk4kbw2vcc8RpHkcZUt
ssVM0ju5Ns961JhM8hUMy8UsD5K3LEx4Ok6H5H4/ti53FiJ57KnVBqiU9HI5
zdPECgJI/jJb6ZuLOR+veDLbepwkySXnD1ns/0z6TO/YuZNOPSF5+mrj2W8O
k1xgrw3DR5/kskWXNlZMJrnukeYlb1rp5HGi1KIPPSV5SX/EVldvkkc+qwhd
YUVy15GcWWPlSN7nXnZXqb+L/P1zNx2355Fcq+aJWmcIyQVCxmY77Sf5y4r7
pTcRyfd0LrzlKkHy8I1h80P7OgleMBLpIltE8gZ38fTheyTvK3LPu+DBh//Z
MSnJkuQ03WchYQtIPnjq+KdZ40guMv4D81drB3ndhU8eWplB8u3jVhTL3iJ5
/406mvsRkgfLnhwuMSF5rcacWJoCySUXxk1+NPKZ4IcOVFnM6yJ5eqBZiHAu
yV0fjMl3iyW50u9Pxy5dJbmazPfGESeSG5d+HTPGks/xzxqPNGmRPDzGZPig
FMkH4wYWtAqS3H6g4v1XbjtZHzyNPlnWkrzvA3KJyiG52L2abJPnJFf7vdDi
112S52j4vnYLIbnxMYvdT86RvKAnx/f0CZKvc1j2xOwIn+PQJimbHuTDd9Hj
Nuz7H3DgONDfhR4n9H9BzwP0vEHPM/S6QK8j9LpD5wl0XkHnIXTeQuc5dF1A
1xF03UHXKXRdQ3UAqhtQnYHqElTHoLoH1UmorkJ1GKrbUJ2H1gVoHYHWHWid
gtY1aB2E1k1wnQXWZWgdh9Z9qE+A+gqoD4H6FqjPgfoiqI+C+i6oT4P6OqgP
hPpGqM+E+lKoj4X6XqhPhvpqqA+H+naoz4fmAmiOgOYOaE6B5hpoDoLmJmjO
guYyaI6D5j5oToTmSmgOheZWcM4F5uJ/ztHQ3A3N6dBcD3kAyBtAngHyEpDH
gLwH5EkgrwJ5GMjbQJ4H8kKQR4K8E+SpIK8FeTDIm0GeDfJykMeDvB/kCSGv
CHlIyFtCnhPyopBHhbwr5Gkhrwt5YMgbQ54Z8tKQx4a8N+TJIa8OeXjI20Oe
H9oXgPYRoH0HaJ8C2teA9kGgfZP/t+43WalpBAc5s//rzHop4XnwRS+RbDvd
3l9vGEQa6oWOZ13uJtJNYc+RE350IgUVligJXe8i0u3uNW/fj51EhkhkB3hM
JbM6oTRyoV0HkbLlMaK28TirzSayv5//jIa0JK4dVO+k8kpCe0Lbi3YUeN7E
fl9NJ5VJWde5nXk0FLLP9ZnPxi4qY/bUe2ZMoaGMt+urUsq6qKzJWXKj834b
yrlx9Fi7Hh2n0ZO4HYatKElv3jmPDDqVw4bRFyKrm9Hkwbmf0hW7qWyaFbP7
o38Tam1bN2ZOaDeVBxyX/Xqq14hSBmJKpg12U0mfI/GobFYD0hsSuGi7j0Hl
BonfbszSOhRYeFl+UQmDyr+eOd+6+Pgjot+VqElf2EOlmWKe70e/WqQvHu8e
dqEHZ5FQ9CrPGhQcq5VaSu+h0mK6NS164wfUx/l8K30Vk0o19W2r6yzfI8Hg
q+eUbjKpHNhkf953bTWy/zp73902JpU5m/fc2lRSifSS5l7IXtpL5Y0+o29+
7eUoVKviTfepXiq9EtVuX5d8hwai9rw49a6XSm3t2PezdUpRWZnm9JczWFQa
olc3is8Uo+QlVnq7D7GopHWLBr84Xohog8/X/HjFojJHufbIiuR8JPxrkkmP
EJvKplnpJn6fc9HdtObIdRvYVG5Jb7TcsyYHpYyVNtW6w6Yy/NOzw7avM1HE
VUelqY1sKsu9t87ZUPMa2a19sxnN41AZV6+1WORKGjI8uW6d0C4OlckWZeXl
/imoaa3rmF3xHCqr32dy/KcmoxBLy2+LmBwq1dYYq00TTUA2+W+H7NW4VEY9
GxfK8IhB1r8HzPYc5VKZcy7ZYVlWBKK/mc72fs6l0vvKkOTjI4FIzcWw5j2X
S6WAlu3MteudqbpycY3j7eECPvcPWble8acnyRv8xnbfVST5S3rqnpAGso/d
8m3u+pQrfO7rIsL2P6TF5/17FfLmGb1kv+1aeNi1/QHJk48kT51iyYd/0jJL
nERykZLcYd8Ccl6wKM19u+AiyWWF77lM1OHDOwbtY/vJuea07X6hiqck15p2
rSpuB8kz/Wifkubwed8pa+pqxSZyLlNacyfj+C2S53TtO+q0heQWUxQdLMVI
ri84buToBz77IGHHpKMDSV49W4spsonkkdFTzzZMJLmQ4JT0K8V85mX/rRmP
zpJcInpSe9Bqkm/fcMgy4Cef97ebBW2/k83n/e2zj3uu9CT5dqWdcrJ6JJcu
KfqiKUjyvtbX+TbFpMdwdqkOOOZPchXrgffLLUjuZ281e0CC5ErbvaUP1pF+
pmRO3QGD2yRnLRX3cnAkufv0bdOXq/HxPDNmDbj8In2UQGXlnLQCkh+6Pdf6
UDDJxVpSTIptSG5x7Kik0UI++xSXp9j8NUD6OlnGqqzofJKbylhtkL1BctFs
qyw/O5KLJVwWL1MiOS3ZQuJbPx+POrH7+ecCPl50hY1n7F0+/jPTIvyXM8k7
898/lDfgsy+QRfcrESe5xKDPzYEePp55n7xXXAbJqwfEfWnXSO4uYPX0y06S
+3mUDr5bSXLTmboKp8X4ePg7r1Um0WmkT5DUvi+bTXLb4ifMbeEk1/e/o+h1
jOTOg7n9u81ILlA7Lve6KsmjKrojWiZhXi298tcRFpdXn68MzKr6RPGJm9Nl
ZnzgovAy07IVgZg/+uxxpfEVb13UjK+/vxHztB1qXw2iuMi4y7M1Vgxz9hKh
9vhLXGRx/OoLpco2im9oUB1feZiL0iO/ThO8hbl2sN9+jW1cFOz88fI4G8zF
XbZkTtfnomSxmrolsphb7P353EWF93fP9OtO57ZSPMb2kfEmSd7j776vUZSJ
+bD/p7evx3J5debprmpfzJOtTz0L5nBQ+vaXafu3YK4/dV+V0icOkn10Xpiu
irnXLKabyjten6FdOp/7s4XiLre/LniQxUHB59rapjdhniUSWbHjOQc1zBC+
sPcN5imXvCxpMRykb768Mvk25oqG9Y1bb3OQ/dKIKOtzmG8IeqWTFsRBWvQN
t4z2YU4zv7Jg8mVeH7O+vjVqM+b6fyWIKVzgPf5P8Yts1mM+Ofrp1PYzPH5r
xeMX2v+ZQ8eB/i70OKH/C3oeoOcNep6h1wV6HaHXHTpPoPMKOg+h8xY6z6Hr
ArqOoOsOuk6h6xqqA//+IevG3xyqM1BdguoYVPegOgnVVagOQ3UbqvPQugCt
I9C6A61T0LoGrYPQugmts9C6DK3j0LoP9QlQXwH1IVDfAvU5UF8E9VFQ3wX1
aVBfB/WBUN8I9ZlQXwr1sVDfC/XJUF8N9eFQ3w71+dBcAM0R0NwBzSnQXAPN
QdDcBM1Z0FwGzXHQ3AfNidBcCc2h0NwKzbnQXAzN0dDcDc3p0FwPeQDIG0Ce
AfISkMeAvMc/PQnkVSAPA3kbyPNAXgjySJB3gjwV5LUgDwZ5M8izQV4O8niQ
94M8IeQVIQ8JeUvIc0JeFPKokHeFPC3kdSEPDHljyDNDXhry2JD3hjw55NUh
Dw95e8jzQ/sC0D4CtO8A7lMA+xrQPgi0bwLts/xP92v+rjP/T0nocV4Nzp/7
Io1JJLt/aNyv7wwiVWY2bNlh0k1kUfilSb2ydCIzx3zqH9fXSWT+q5/tVyeS
GeUXHXbfsINKMfWASLGZHeiRu7uCimAnlcKbN5fq/WxHr725zzeUdVLZky35
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
ngfyQpBHgrwT5Kn+6bUgDwZ5M8izQV4O8niQ94M8IeQVIQ8JeUvIc0JeFPKo
kHeFPC3kdSEPDHljyDNDXhry2JD3hjw55NUhDw95e8jzQ/sC0D4CtO8A7VNA
+xrQPgi0bwLts0D7Mv937Tf1fbyX9vgZ97/OkMv3p+acZBFZM77+nvuHHiLF
/B9uERNlECn/WnVigiOdSJuqGdWdM7uIVN6bJ1ve30Fkha+gh7HbqEwdNhev
+Yxy9G/4eVl1Ukm7p6BecqEdKa7+tFN0cReVRXLPj7ogGpKfKNIr3NpFZWh7
9+pe5zZkpfr76a9bdCqFPUW+TVjdgph2SV+f6HdTuZb+Y+EvvSakeHJgdmV9
N5UBN6Vf3PJsQPqTGl+938vA2ebecLWyDmXMYcY7fGFQWZNoMLZ58Ud05nd2
aJZbD5VXxufrFMfWIPszzYaXhnqopF12Wewq/gFZKV2xkvJgUil8ec+453er
kaDsZdupn5lUstDH2piUSnRAYPvGLZt6qfT9zdURVihHyfPK1MMze6mkGawt
PXyzFKnf+MC5rciisvyG2L49ksWoJry1MySERaXowcpov6sFKOTE22L97ywq
A5b7bD6ln4dU/zqxYaodm0rG+30XjGPeoqbqF1nl6WwqyzXuzdln/QYZvrPZ
7CnBoTLZM3up7cRXyKolSfv+fg6VkomN6IpoCjLzOXWlJ4dDZXXyQek5zCTk
uPnc6t2SXCqTd4oplKU9ROwoRYXZ7lwqo2pytUx0ItCGCdlSSflcKr0vZg7O
uO9LXTf6d3zFZRh8vjd8tenOrb58vhd4xpeff80luZZJ3TffN3zug92zV3HP
ZpJ7z1xtmjnM53uoYw6c0AolefrLG/n1OiQXo1dezaORfUun8Zh5jtdIviJF
qzthBcn17427b9BE9lGx1xcW213k04/dkfK+tYzkCvlrPUpb+Nw3vuhmfddV
kgttYwU8NSB5tf25ikQW2X82jO3XkL1Pcvfi5aF3zEhOO7/z4OM/ZD/MSNNX
TUwieQvt7UJHK5LL1iw2WiFMcqXFas2mr/i87+7bVL9be/nMBVWPDz2X5XNf
DsbhprV1fN43uKMk/0gQyXOS5RcaGpNc9H7+NZmxJD/tJHnP6AU5H50OCD5X
cIjkssLLdJ0Wkbzhcmh9Uxef+64MnjU6GEvy6v03Wmg7SS4pN0PHcQ7Joyra
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
QHMQNDdBcxY0l0FzHDT3QXMiNFdCcyg0t0JzLjQXQ3M0NHdDczo010MeAPIG
kGeAvATkMSDvAXkSyKtAHgbyNpDngbwQ5JEg7wR5KshrQR4M8maQZ4O8HOTx
IO8HeULIK0IeEvKWkOf8pxeFPCrkXSFPC3ldyAND3hjyzJCXhjw25L0hTw55
dcjDg94e8PzQvgC0jwDtO0D7FNC+BrQPAu2bQPss0L4MtI8D7ftA+0TUdfFf
JnQcYad7Kqsbe4m02FgvYX+nh0jBlXvV7u/qJlLt6qEngrldRKp7HQvsXdxJ
ZJJm+Igr73n9O38nzblg/fozii/r4R7O7KRyjMX88L+6aGhy0QTdwNQuKhuT
Pm/c/qkNrd2pxF2STqdSs8t3uVt9M/Lo47aOCe6mMnKJmtPwpkbkFeSgPvUQ
g8qQzc17P7ypQ1LbuSMM+R4qU34sE1x/sxYpv1IcUeroodKnyX/cJesPqObP
7srQK0wqfQXqb+o4ViM3pYG7xxb0Umk6WcfUYl4Fqq423ePwupdK2Tnqj149
LkXlY2N+nLJgUbmcq7pcUqYI+d45OU61nUVlk43ipy/peWjtCgvxtqNsKhsC
9CTD4rORx0HvmrF0NpWuA8Mz2la+Rh2pz1TP2XOo3H4yv3mCVwo6kPMJ3arn
UCk7ME5wbNkTFNLpOE92G5dKe4X1MsPx91HRlX7lWYVcKr23mnZumoXvO2d8
qVFnSQ5ZPxkK2wRq1pDcW4slyE0j63DcmLYjd5fz+b7FaHPbVWlk/a8+uqVh
w2qSl/tdrBUoJdeX/pztYS42JJfc3/DXdTqf77WsdY5+50ZytSqzXnNhktMm
5lhwo8n1NNhweVoQIvlgxlT/pgY+9zGe1DCvxpXkWxr7r6DJJDfd1e02/jHZ
P6RvEg6U0+Nzn7f+a/SGRrJv8futMCvdg+QsxT3Gi+aSvK8tcdntQj73nTZ/
F7HnAMlLEk8emCzO5/NBXjWrXNLIvm5w049mdXuSb7lus/rLZJIL7Xru+CqT
7DNfinwzXnyA5H2NF5j3JPncx/ubruirUj73D08/3OTqQXL7Mk3nIGmSC9Ul
NrlWkf157O3B8qRzfPZ95l0N37qS5L/6nsvvZpDzQqfRT4GOcD7zxfJxc13W
k3xQqugC5yefz+ksjFyYl0LyKO/F4i/2klx22PGPuhzm4hYz5LM/c5Gaceq2
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
wG3UNEtwqjyDS6WAzNOsl11HqfMofGaN5qIAsu6JtcyNyxoh62T1y4+et/eT
/ND2t6dHPpN12HOSa89aez6fM9LVqFPq4fO52uAAwSOufDiXfq70N7mOBEfa
zSs/S/Jk56/z14iS3GKCS3L2fXJdsxeyHDJYzufzxYsWX3IpJddNLRm3A/sd
Sb6iSE7gbT+5XgevPiRRdpHkp18drxGQ5vM+lu96egopfN4Po7B0rKgFyfX/
ErWd9JXsTxQOvl1feovP+3aEEjy+rOTT5yQ6Pl3YSPZLjOQ1236dJHnB6Zn5
kvJ8vo/12pIa2w9k/xZ8IqnN+hSf+8UJPRY4KUdy06TCnRpVZD/5y3r8uvjT
JE822qFwdS7JWZK9hb/L+bzva3nrvcxTfO7/5miu6qJC8oCwj8niLWS/rfCu
PHr8ZZK7H/lxeaUmyWWvmIQwesj+n+awNuhKJJ+5QOAV6+kmPny67qldIqPu
/6bBMhX61/d0+prnTPQZ9fkgiZGbQbe4aHD5qX76dzwHDWx0nWtsw0WMLEnT
lw6YK98QWuUk96/7afhf+/Nx1PsJ7cry7tA5yKJnyOmSPuYeTqlecxM5SMm7
cLnpUzzHyYTFjD3BqxclQ+G+8eNH7ROppLLereDNg5yCqt8+eB68e6lkstcY
DhIxPy73XBDzpJcXFu+v5M2t+UUs4Yt43vTalmGUEMnjTZtT4sdjruZQ+HOs
MxsNHnM5Pv4inmerHQaNMjXYyK+flWItPOp7B6qsdiWMZSPny5s58b54Xk4+
VRvbVc1CWhri0qsnjvp+nLKPl2zusVCyV6j5Z388p9dssFzy2ZmFxN5UuGkI
j9oPco99mLOChWTl59xr98EewO7l+tPPeHWNseZpmuYw9gnKB0Nz2EU8PsnT
wfIo5vT2tmXDEb0oZ0XS6aOCo96vG7Jo8gqXXuTa1y079jr2GExZV8lyg15k
bCmpd1YBczGhru8hEr1I6Wom/WgK9iRi+k/2P2EwkZKsil/i+lH+JM3NqC+D
Vx9NHrzYXjPq+z5Q8ILwICbafo9h98sJ86zuC+MO7ubxtcWBkwaw/+mbdrxr
G6/ONiTGZjWfGfX9Jl26N+8I8o6/Ovyr0ATMfZQuf/Zp7kHGXZvTSmOxjxI3
8FRNSulBydGJX9QMMNd/FrZB+GoP0j804D7vBfZdrUdSyq7v4vVnS89/b2jF
3ixUeZHlKc0e1FdbEeEshrldbsSE/Kk9qLponFqVOfZvwlVvltj0MJDspCc9
edewr1srkWQ+P4+BLPY6XHlUhr2fYe/Jddp3GMg+3MFaXgTztQKHnKOO835/
jPREOVPsD6vlg0pMNjGQWMo7pmsA9pAu8k+3b17M+7vPnd6ENmBv6RuyUN5/
HANFtRc+ezUHc+GpURkTad1IdqPsQw177EUn+hcHjMvuRmqvut7OScMeNcL8
zlLne7x15YoIR0QSc91UrovQ2X+9/+jpgpke2NMK2t0x6bXrRmLvRVzDP2Lf
Oxx5YomBfjeiiVkz1htgHlK970aqzL+88fgW/5vYJ9fd+Po8SoB3/LbMk/KC
mGuin2NftNORmC5jipcz9tUJpnLGO3hzuMW5J84lTdh7p9zZKRYXR0feExs3
G2/EvI8h97Q0gI6SA5469b0dtf9isLIt1YWO9NdLbAtUwPy06GnGd0s6op1u
kLijh31+ykVlo/GIt14ujS829sD+31Bjbc86BTrKkYiSfn4A7yOUhySamo/n
/X5R1sgUE7zvkBLNLXzF5q2XO2zfqJrgfQpd9Xijle1dyF4gslypHO+PtBxb
pClX3IWiTt+TsS5+TfFHJaE3lz7uQt51HRXNl9MpHjw/qMg2jPf7m8Jy7/e8
ovi3yNeK82/yfn++vs/GUsxZBWpHF53pQvrPuw/e60jDz09Cn0X/Nt7vxzot
8j+Siudf89APxpu6UI74p1UNkpjLz5qnq+PAe/zdmn9ZlGMu4HapftiQ9/+e
1TxYXviS4k2yNLs2Kd7xjXMTnomm4Ov3+9PwsbI8fvPjwGx9zAVKos/lruYd
p3rHr2tu+DjC9UZT4xbzHr9TZXjwy5T/yKHjQH8XepzQ/wU9D9DzBj3P0OsC
vY7Q6w6dJ9B5BZ2H0HkLnefQdQFdR9B1B12n0HUN1QGobkB1BqpLUB2D6h5U
J6G6CtVhqG5DdR5aF6B1BFp3oHUKXNeAdRBaN6F1FlqXoXUcWvehPgHqK6A+
BOpboD4H6ougPgrqu6A+DerroD4Q6huhPhPqS6E+Fup7oT4Z6quhPhzq26E+
H5oLoDkCmjugOQWaa6A5CJqboDkLmsugOQ6a+/79Q86JFAfmSmgOheZWaM6F
5mJojobmbmhOh+Z6yANA3gDyDJCXgDwG5D0gTwJ5FcjDQN4G8jyQF4I8EuSd
IE8FeS3Ig0HeDPJskJeDPB7k/SBPCHlFyENC3hLynJAXhTwq5F3/6Wkhrwt5
YMgbQ54Z8tKQx4a8N+TJIa8OeXjI20OeH9oXgPYRoH0HaJ8C2teA9kGgfRNo
nwXal4H2caB9H2if6O/z6r9N6DiqSwN15mxnEuml9misxxYGkU3tmWVP7OlE
yh4rsf3Gq5v/TNcbSlyfDR1Epsz/sm6sZSeVbmah4b8utqNVrCFP8ctdVFrp
TL9VeOATqpNWFfkTSKfydLxn91jrFqSt7fD7xrVuKq02t4w32tKIymSiBqV4
fe/fGfNo3sxnUXXIa93KgECjHipDltvs2LaoFmVMnf9k9zQmlTXVkSP1794j
2dWiji/fM6nU909LKpzB609Trv6sP96Ls/KtVJ/uO3T1/XOH1wtZVBbN/Jj6
eFoxijKalfq9lEWlvqV7rt66fDRzxRkd4f1sKvuvzddMFX+LAkUFFM9+ZVPp
vP/PypnR6aj6i8oJNW8OlfoJnfszfj9HXnfN7koLc6mM0n2tv9nlMbIpl7Sb
FcilUv/ZX/73/G9R58WWmNSivF/k/pFIRruAzQ4+38f31HPis1KyvpVccBI/
psqn7uX37bn4kKyf9u6KaWaSJHeXP9jx4R5Zny/ONazOnEtyV+GdeqLRZP3f
vnN+wnRZPveve3NrQ18yue5sTyxTrtfjc5+6zL70ieV83nfxZfHl4B0kT5Y6
anm6h1w3S3763813J3mBt+K3IiE+vBWVvorkc3+5KfNENiwjeazOjfHSVXy+
rzMlyTTuMMntP9+bFjyJz33nBrO0pzwi+xbJJb575m7k0898qLG9+Z3slwbz
Xkkcuc3ne1EPeOivMiB5HGeeyvNuPp/HP7jrxMsAPt/TWnDlwl41PveRMw6J
qmrm8z1Bl46tvnWRz+eGWm/fT1QnefqjQwKnWvl8bii/THL4AslpN28clVjK
5/4GrCUak2lkvx370mMw05/P+8rUZHc2rcF84mbT/VOHuCi8bPXlRxw8F0xW
qio/lsNFsp3jBOY5YB7jHPfriDfv98c9/DErd9R90RM+PXA04tWFRc8kTi7H
PKZhVtKf8bzfv/tG7U8Inl+qVZWVdpVzkN+x/Z3sETwHqXrc0L0YwEGuCw+H
bdg16n4X8QuzNphzEE2xoyEjH89Zgcecjp6YxUH2c73vJGhjzr5mkb+5g9eX
7DVxNk3Hc5zhE+0ZKs/YSC1xugZHA3PFrAd7j51kI9p2iZG7z/CcGLVdxKfT
kI2CW28a6SzDfOZIXs1jMTbSOrXvekz8qO+/jjmjcLCJhWiS2s2T5DBPSGmd
1P6YhZQMEu6+iBn1+aC0kADpoyxkb3J0V7EU5mZ3uHVt2rw6LrRttmoInqMF
BzZuOT6GhUS6sywfCmKuGmde6VTIm+tjCwTPu+B5fFhweMbMsF7UN+GL5qsh
PO/X6G9caLq/F4nJ6e5efRlzr+Ev99y0e5HaV9vJ86djnmbEmik5qRcZp5iv
yryDPcO3m/Rrmc1MXr3V37ttAeaC+i2ajU+YSCRKccL9pFHfI/9Fcbr4WSZK
3+GQtFRn1OeDNkbKPTNjouA3vnUaediTBMdOU98ow0TOcxL/6JhgnjZ/6bqk
Lz3IuPa48rIW7Gf0Zpj5deT1IMnUnFqtfZg36TPHFIb2IP11IRMav2D/o9/T
0h62n8evWez/MRVzWf1NykwdXt+kH1BzYzH2SNUxBxs9pvcgMXUpZGmLfZR9
pq1CFJOBaElVqbK3sL+SKYkRCcpmoGDG8sXv0rHvspn+dqthGAPl7HiTuKsf
e7PA8kvRLw/w+EikyuUZmLNtoxU/GTBQVPXi3B0m2L+dcd2/TlKKgVyXT7U+
eQH7OtnMZ2G/+rtRVOLhAU4J9n7KZwdkUsu7UbVH9a0rf7AntJkZ0rworhvl
HPlk8t4Y828vL5a/ucTjfmEjCZHYQw5kDAbRHHnHedRctfvbqM/prHTxbVzd
jWgSclFIG/OEpTr/i7V3D4fq/f7/VZJ0IKKSisi5UkpE3aSkopySRKkkCdFB
IhpCkkIKkUwpUZRSQirlGAk5JJ3GYY5mHNJBqL779Xv/mnuu1551vd9/fPyz
rut57eueMbP3Wuv5WLPvHbZ+OhNZ9ahdPHwMc1EdQ3EFmUEG6lPTiN7Rivlq
VOCieXvfMlDuvh+FY5ZinfHYccHjfAai3C5n3owTuK+BkZuem8hAPqGHFx/6
jnlvxu9xJzYeZCDjn2qBkYZYv6VvKUezZiCqnujnksWYJ5uNxAWkLmGgkra8
l6qTBeY4i5OT2qYT+vex308PYo6d/ukau/snHbncd1JcVoq5t5laVPDM93Ti
c9vTLx2DOXnR8ZkB4SV0ZPxZulwvHHN14/dhH8+l0xElVufmhd2Yw1cY9Bgn
RRDrmGw8/cUEc/uRe5fTsg7SEW1gthE1APP/BOqGRTHbCH3NV25iPJ4XMAIl
hk+vIOrrW/fXu/cKzDWYs8prVYjXFdfKG++D5xeaPW+PKcnSEdXywIuNjff5
+np/o6qTYsT6953ezDPB+vGm31vvsLoQzeLryTq5e1jPkbOpftmFSs6W73td
epevf1A3uX+uogsZL5rGm3cS64fU5LJ3lhH1W/ax79UtWB+R1nq27iqxTqBz
74tL2Xz9pHd3A8ufWOeaq5vOwSy+LqNZ3USN6EKUdTVpsWG3cL3j/pLwSyDW
8Wl5r//8Nl/PlbvzY/0+Qi+/tPW9QSY+/6ud721AxPt5b/ue3X8d/1/yN38P
OxHHT5lMv2t6E58PA73TW4MIXfzZl/amrP+qQ+tArwu9T+j/gj4H6HODPmfo
e4G+R+h7h84T6LyCzkPovIXOc+i6gK4j6LqDrlPouobyAJg3gDwD5SUoj0F5
D8qTUF6F8jCUt6E8D9UFqI5AdQeqU1Bdg+ogVDehOgvVZaiOQ3Uf6hOgvgLq
Q6C+BepzoL4I6qOgvgvq06C+DuoDob4R6jOhvhTqY6G+F+qTob4a6sOhvh3q
8yFfAPkIyHdAPgXyNZAPgnwT5LMgXwb5OMj3gT4R8JWQD4V863/+yD73rw75
YshHQ74b8umQr4c4AMQNIM4AcQmIY0DcA+IkEFeBOAzEbSDOA3EhiCNB3Ani
VBDXgjgYxM0gzgZxOYjjQdwP5IQAV4Q4JMQtIc4JcVGIo0LcFeK0ENf9NweG
uDHEmSEuDXFsiHtDnBzi6hCHh7g9xPmhuQA0R4DmDtCcApprQHMQaG4CzVmg
uQw0x4HmPv9X8yZL59VHFnVzSTHd+pH/lQkcUsxIjI16LMMiRYl3wzbL5zFI
UZ6ZdeUttYsUdzc7ub8hPqe/sfvZ4d1lkp1oDC0nJvp0Fz8OLwxUz1nUjuSn
Topd9ojOj3mlrZu2tn1CQb4WNjsrGfwYdVt+/Ies98gvUmtqazmTHy+7BZUe
vdOK/JYk86hZLH5M3bVo2SyiT6k4HL4xMozNjzlXD0zde7ARuai7Xesm+rS/
kRZRO32FXAOKb8woWTCpmx+jJaYdZ+bWomQ/k9OooJsf3fSPVoXeeYkcp8uc
Xrify48Mr7MvO46XI91NgdxRU3j8+EpF4cjXS89RQIHeuzFEH/I3WjgeaGio
eYwywi8f6zbq4Ued4iyL7yoPEcfjZXVqdQ8/Kg7N+rVkVA46S8uQFnXs5Ucq
/SHFaE4a0hk5qH+zrZcfRT68yLo4+jj/vOgLoI9inCfnn8yHqsfrvpDzVZ/3
pueLbMm6HWqIWlJCzoeRRR8iFiwi6w6mcQ7020Kei7Rn7nQ9TbKeFCa95uBt
cj6PnvOBvl2DrB/fNLvR5q6Q5xlValbdW0rW3S+sdzd7LuQ5jG3Vt8Zbk/Uu
x8v6X9+R611m2igLhpuQunl90dsTA+Q661CoXvPzpBD91uj2gWlkXVxCc3JO
Hrm+D/YcPNu2UUg/IL/77GM2ua8QUUXS1uFk3WnOIbNZamTd+JhV7olacj8T
9jbu8eEDZP1rd1Te1alknVpbF8R8LGR+dGyI5etI1hU9L8waP0zu6yY+t2H/
vEnWpXJzf6yzE9IHcmMuSv4S8lzX0OC7QRlkvTWBWZe7jqwrXN6oWvqd3Pfq
v9uMmjLIus/026KhtmTdSeRyVel4rBtHzT+vVkNct+98eR2BAs8bevDz+ONz
RL1f5VPQ1IX7/JbbzlyqFdHPz+dsPL8O69QD7Q+zp/QiqcS8ioXZAj5iIGD0
qmYiX7jois2TFXier1LepE8Xe5BUE5p72w/7kaL25ktZNj3I6kGCSOZr7GuK
TM8Hms4k9CzeA/XVWM9Yr+/vyuAhalG09vAz7JtME5Uq0nJ5SH3I9kCMgYDP
+nioQs6fh+pvKfXpZwv4siHn6f2mPJTbzylu08B60Fmxk4MTeKhgZ+xaXqrA
/GjudC/Lt4SvtC+ONZHHOuWpkc/060S/8iFx+opk7CuLrAZVw/ZyUf1Lz53V
owX2Cfnu40zV4aIk92R27DHsW2191Kbkfu9G9UkdmgUs7H9/NZcd0X3ajQbl
PDMo27B+tnaOo+W5bkQL2bTzeSf20RXmnU9ebyf89dKCNlEvgecFyMfo28zv
Ru6le85a9mP/HiQ+b9SiYQ7Sv/ghdOgQ1pVf1Pg7vOIghz2/5n/8LTAP+hlu
VJ3CQbE9GxOPhWO9DWmFWHtwEHUO90XNeKz79U78uMKAgzLtqZnyMZhL8KTG
FCwQ4yCrW+NeHZbEetuLCceev2Ujxb2pd3anYO6hq6HVl3ibyI/M/a3D2lif
9HZsZ14QGxnrzjpw8rDA/jllrwdeWbARrWl8qQgF8xn5W+oKF5TYiGJTE911
E/Oc/Obyi0e+sVCs9kfuhhrMf+TS5R/TXrGQz8Lwm7tFBH7/LNKhZ3WVhepH
eUjHqWKOJJPYob3Cn4VcBjxpi7Zi7kSdc+LorA0spHglcHP8UcyvjO9bp8XP
ZSHjwCSFjmzMu2gHvebMGWQil5XKqSmtmI9pL/NYp1zPRDQZmQO5UlgfqH0v
sj+LiUrGbhCdtklgn6XqLS7yYUxEHchvP3lBYE4keyXv93YmqveSC/3ZJsD3
PL8Ei+kR6ygWByhOxrrq2BijwCmEPqNmgfsWzA87H+tP3N/LQD63Z66YloN5
Y97K0XohrxiIYjBhcsRvzC09JT9MHspiIEVLi/Ud1lhXnPwHRYYzENVsGGWl
CNwv8PFD4aldDORym7rK8p3AfT0q274PmhJ16EBMWuFNzF0rxDbYP5jLQCWm
PdsnbMP3LzhqWSRFjyLez72fX4IkMb91Oh1h19FBR1RnE8u3HzAHdimt6T70
go5Krn5beioJc+PkqnmNTdeJutVyDFn5CMyD+k9GvQ0jjvdV27dfB3PpziKl
Uv19dESzsE5bpoA5dt/47WfCLejIZXe277JfmIfXf5uudm4ZHSkm/4w4q4X1
Ese3Tx4o0BHlzD4PyTl5AuebaRH3dxcqYaSboW+Y28tErz3RyyZ0/5pBR2Ws
Z0RcNNN424Uoq94+v7w3F/+/7lmmJo8JXc1o3Yyrd/h6lJf0r8mpxDrnfMq1
1uC5g2m/0nS76C5k/C6jI+47nl+MGVAPUSH6bOORxdPa8rGut6lbetN+QtfZ
FTB/F56PBGgvP2NkQrzusTO0ouk3cB646dotspKo67M+7pZuxXOWywZRtuJW
xDqUVxEZxhn4vL369VW7FnH8TYUx173S8fX+cc91bj9R76M5d3++SuXrt5JW
37z+pxNR2h7NLepPw/n8YMyMIDVinS9L/pTL4nW+Z7E9o38Tx58LFe0vx8dz
OzVmOxQQ66eeyS+rvYCvX4OqK/NaCX3Cujpa+aX/qkPrQK8LvU/o/4I+B+hz
gz5n6HuBvkfoe4fOE+i8gs5D6LyFznPouoCuI+i6g65T6LqG8gCUN6A8A+Ul
KI9BeQ/Kk1BehfIwlLehPA/VBaiOQHUHqlNQXYPqIFQ3oToL1WWojkN1H+oT
oL4C6kOgvgXqc6C+COqjoL4L6tOgvg7qA6G+Eeozob4U6mOhvhfqk6G+GurD
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
9XenqRJLe5HiPtbiS6JYn8Rpqpsz2IMU1104tckT9/MSjtf6VYt60PR2Waed
Dbj/V90SdGb/EaLuby38ED0P6/L99tG6y3tQieO7T5Q47C9o4l3unaI9SEdu
eYT+RIF99hJ9/fe+4qHYnzNzRp8Q8DVrwsriLvIQK2f9fu43gfueeCYfrzjx
kP4bFY2ze7HeFhFy0UONhxQbSo9EdWA/JaL43FLvC5EX6ne9OOWMdb2dWoau
RVwkfogbP9SA/ZrXtYvq50O5SErOb4+XGdZLdx1v32LBRazv+Xnvnwrsry5X
qNs5hYtyH20cVaCNdXmjKk5NE9GvJHyt/hWP/Wbp72Zx/avdiDUiJzdRBuu0
zE/K5j7dSCcje+uDJOxndVriWt2Mu5F/ouesUUoC+8ZrsbiDkt1o0HO1Vc9N
gecj/4rfe/wT4d+H+kcv08a6aeDZ9yE5HKT+oP162T3sx0sGIzadOs5BNK8G
M5tlWK++P7SFbs5Bg0+/bFuRj/1+o6e3i6ksB0lJTfVVX4r1fMuc+afYbGS+
atGXhkrME4auc+enFbGJPrnuy1kbrMs5qm1feIbQX5S1cB9hXhEfvut5vAMb
0VK4FR1FmG/UfrlgTZtP5NOnrMSddMxDCL8/dZQIoesw944VwfqK2RsMHzWy
kE7iUfULczFXWc/2Hw7MZCGfc07s/esxn5E/XMO+GUj0Jat/xq71ENiXJvDQ
ynJLQvcw0W8Lw/zH0h5tu6pC6HeNqlQfYV7kp5m/2uUnE1k1ndvS/gnzJR9Z
rapbr5lIZ/9b1ubxWK8X+xYsncFEUnNfBjitxJyqbZfrK+0QJjLu+fbrczjm
XVL3NfImOhDrB9SfQAWYj8lM5+n6L2QiF/+rY7byME9jRDnOnD2BiSj5ZZEJ
y7DutvCLqA2TyPu8ounJYZjX5Vp9tjtK9LU+8U6Zdq8w3zv5dK7k/CsMFFuQ
s6FdDuvF19xG8v0YKHf+qJ7z1pgTNm7Ytk3WjoGMv8fGNZsLPL/D94biHh3i
dX39zAY6MZ/UC1WwsZ/MQIpys5buiME886Qkm63fTUeKKfLKBjoCz3UK/W7A
qybqzayrpqt5mJdSjt1Rzr1N6M/qXdsfYL4qP7R4f3MUoZf/WmjviX/PLx8y
kTHNk9AnBI306GNOe7k+Qi2c8MOKqqvP6M7DXJdx2b6uU5c4XmnXDIYY5sDx
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
rtwV3PuQglf3lcz7HYH7as4nLyuexX352budG90p7hvOmx+fZY/7F2emNq3b
SLGf6CQea2RMcV/yGu/4wKUU1wWVP3Naaj7um5W8nnJGneL57FQofjQd960V
fe7oqP1zH3oc6O9CzxP6v6DXAXrdoNcZel+g9xF636HjBDquoOMQOm6h4xw6
L6DzCDrvoPMUOq+hdQBaN6B1BlqXoHUMWvegdRJaV6F1GFq3oXUemgvQHIHm
DjSnoLkGzUFobkJzFprL0ByH5j6UE6BcAeUQKLdAOQfKRVCOgnIXlNOgXAfl
QCg3QjkTyqVQjoVyL5SToVwN5XAot0M5H+oFUI+AegfUU6BeA/UgqDdBPQvq
ZVCPg3of1BP/3iuhHgr1VqjnQr0Y6tFQ74Z6OtTrIQ4AcQOIM0BcAuIYEPeA
OAnIVQAOA3EbiPNAXAjiSBB3gjgVxLUgDgZxM4izQVwO4ngQ94M4IcQVIQ4J
cUuIc0JcFOKoEHeFOC3EdSEODHFjiDNDXBri2BD3hjg5xNUhDg9xe4jzQ/sC
0D4CtO8A7VMQ6/9/9H+0Qu+vbr3IH8FXHqZSpapptwe4mOqUO8f+qWVjGnDG
1tNNmPP+rspp++a/L2ViGvNFNu08qwdTLfOKyYzfDEw1l9McDM1x7eMEz2Ld
6MZUp6Z2w+TPXZge1crsX3sA1+tXWtc+aurEtCrjpuoka1wZJWbrR10iVb0l
SNYnowP1vYlZK8HrJPT66zD5YyodyH5RyLSJu7oI9Xh815x+5BM65XUmcnpJ
F6Fr3hQqmX2go+M+3+efn9NNqGnlpaW5K+lI4b7+Vvnj3YQW/N4qUhL2EXnk
HdO88r6b0PSaWzTr0+2I/uvlmHANBqH24g9bDQPa0NHIsKw55xiEJuuu6jjr
1YoM9UVDU98wCF2//aepSNgHZLTI7nDSjB5SHZj3ZW60oE4tP9Vdrj2Ebjt+
PrG7sBkFoFHF0rk9hLqt7C1qbmxCRstl/PYO9ZC64d35Jtkm5B506kfVeiah
eTYXxkZObUQDI7S7NC4xCZ3y7ciW8/sakFyg7ZjKN0xCy/aw225df4/60r0O
5Y9nEarOi35cXVGPAjYlDS7cyiLUfYyswgGRemQz4dubvTdZhPaVK19vXFqH
zimmXx/dziLUK0ewunP/OxRQZtH/UYFNqPsD2Rn2+bVovXPJ7nXWbEJnlGbT
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
SnEfgQYtZtpC3C/f9O1mkSzF/QhUR6493k/xPbs7JfyGetzvfdi2b1sW7pdm
BjaMi6b4/Hm8b/wWP9xfftn17rXduN9lenizhSnF9XyM1p9TnYf7J7PM9p1U
wv1EmZqrTDHcb1JqfvaMh/NhmqtZydg63K9/7hO5pwz3tcwPhYbmUNy34sxI
/r27FNy7ueTpiJu4z+V5Zq69TPF9w2iXx1douG+/tiPB6zjFdZbConVaPCiu
L3pShqXujvseReb1mS7/3IceB/q70POE/i/odYBeN+h1ht4X6H2E3nfoOIGO
K+g4hI5b6DiHzgvoPILOO+g8hc5raB2A1g1onYHWJWgdg9Y9aJ2E1lVoHYbW
bWidh+YCNEeguQPNKWiuQXMQmpvQnP37XIbmODT3oZwA5Qooh0C5Bco5UC6C
chSYu4CcBuU6KAdCuRHMmUAuhXIslHuhnAzlaiiHQ7kdyvlQL4B6BNQ7oJ4C
9RqoB0G9CepZUC+DehzU+6CeCPVKqIdCvRXquVAvhno01Luhng71eogDQNwA
4gwQl4A4BsQ9IE4CcRWIw0DcBuI8EBeCOBLEnSBOBXEtiINB3AzibBCXgzge
xP0gTghxRYhDQtwS4pwQF4U4KsRdIU4LcV2IA0PcGOLMEJeGODbEvSFODnF1
iMND3P6/y///yhX/0f/o/0lVbtkee15LgKnBnruJU4V5/e9KXy75Y/cIHqY5
Y4rY+w9yMBV/eZF9VJgP/q4Bh1POrR2H63Uf5ohTl1iYNoTOVpEag+uvTL/D
EneYmAZ+0ByatgzXijDxqJzaHkwNVurXye7DNVlyiq/VaFy5biKBk3MZmKpc
4L4JdMVVLrj5+B1FXI0+q4z4+KYbU9tFTy5dOoGr5f9q7z6jsjq7du9jVyxR
sfcWVBR7xbJQFBU1GokNG7GgYu9dMSh2gzWKNaJEiUQUxa7YsCsKNhSlN8GG
JdbsPB/u5Rh7Zr4D3g87z372/9NvjGtkwMVa5znnMedd0rxrw9xNpUERywun
fIgXZnSd9S7oqNSu96nHF+dIA8tWbPqmpdQmet7PVT7FCXtFedkmH/wHk5o2
SJ4gde5Q6Fzvhl/Nsc6936cGcYb3vI3fJ4/+6u6QjQt9H8Ua9kNrzP1pb5zp
9pHn2racE2t4HCg4LTg+ztR+8qiuz2rEGul3L9mNrRJvuuXk7d9crsUYK+bW
2dDox3hT27bHytYfG2O4VrSdfH1LvOmL7idudbaKMcI61Sq/OiretGMRI2Jn
ULRh22eV3YbCCaYnP367u+zwaGOJ27veWx0STOsnFpi9uky0YTVh0MTFExNM
Q/fG7Hbb/cSwz3Wx79adCV994f+qWtEnhu3ixlbF7yWYzhg+KDRk5mOj6qY/
r0UUSjRdX6fExvnhUYZLcny2p/aJphmO339o3SrKWNP4VpNskxJNHQct7/fJ
7++cdvbW5pQdiabWh5fWdCj5yPAMn705OjzRdOrCJTYDFzw0Qqe1bVU2b5Lp
3g3NOv6RFGmMqTKgyKTWSabHNiRf9WsXadiOzHGqk3uS6czzby5UOfPAWNF8
T9MuG5NMXZxz9i3b6IFxzmvd6MFXk0yDRxnH7m+5b9hcvGfX+n2Sqaf/9G7t
i903Tg4/Ud+iVrLplUtX3P+ae88os/DtyqB+yaZB48s5J6TdNVb4DTwWtSzZ
tG+B+DC3/ncN19YXSz06kmwa3c7/0Kg7d4wSHj3c68Ynm56cl/fMBOc7xpYb
i6qctEoxrbl2xIZL5/+eCxZ9k3tgyxTTmiNvpSc4RRh2V9YH24xIMXX+tcWj
eRfDjYZt9/hd2JBi6tY8Z4F9jcMNa5vh60ueTzFdMf9Ky6NBt43wYhu/KfQ8
xdTrTKNbdxrcNgJfVapypXiq6YvqWzb+eurvuanDsiLb2qSaPrAZeLVKi1uG
3e5tw/+YkGrqnKfy5df+YYad2/fTDZ9UU+fr+X9pUz/MsCiS8/n0E6lf9Uka
ZrPupuF2oc6A53Gppj6DksKG7L5hjMnRd8OqQk9NJz5NGbN+93Xj2pJOfcMa
PjVtcMExufzla8aHcvEenQY8NbXu8dsHx7CrRki1PPtHLXhq6lH1zoMZCVeM
oH0RMzfvfWp6LSZHxZ6vLxteKWNvOd16ahrp5VbSKHXZqF0vaGXDD09NXz2+
9tuVKpcMrx2WawOqpJlG1gtZ9KzuRWNmoYJulp3STK337N90plOoYTmz7W/1
JqeZhladUOyR4wXjQ7/pZWttTjO1vm/b73Ov88aHM0MaLjuTZmo9ec/VE1PP
Gba/v49/n5Rm+vrTtzuqeZ815jTxLXLDMt202NHa62udPmNYtH93L/C//v9f
/uPgRi8ik0IMxy0nTlb7Pt3UpfvaFVVLhxiuqz0sy81JN/Wo+n7+viqnjIA7
pz3qbk03Tf6Y7d2FdScM76L+5749mW5qXzlPhF2V44bDRSM8/lG66f3d2Us7
7jpqfMhvE5eW7Zlp9/F5XBKSDxvOn04e71HpmWmp2qUaVpwdbFhl+F28Y//M
tNSm2js/vDlojLlxsN7DAc9Mk3t4HT66McjwdTxjMXTBM9M+gS/edru632jV
KalHV79npjVW1Sjv2ijQCD9+ZGf62Wem9Yb+sfLI0QCjzJpS4Q6xz0y3Nz7Q
eOdlf8Pi9bQbF3I+/2qlMzsnr/jN2LIx4MOKqs9Nu288Oi/Qf6dhf7Np9W0d
nptarD7fo1inX42gi8GRvwx+buq68thnL88txprQpWf+HmFNXc9/ODTqmw1G
3Kqr1skbnpu67oo4Ov2HNYZduuvyUYefm3pY/tbv96bLjMQ+dX7Jfvu5qcee
rd/lMeYbGXafIsakPDf1uBzednv6eDPHdfS8NfTFX3Jv2fIHJ2f3SPn5kQUz
8rU8Lj9vNrKoxZ4d//D/w7PVtvPqxf/w3xtfXqHEvVHy87w5Pti/6CE/31v/
96dDm8rP+wzw7FKhsvzcYkm/gHuW//A9H67s3+PdP+yNbc/mvx4nPz9xc8Gv
C8Pk54WPTTgce1p+fqloOecuB+TnC6puHltkh/y82c7lNbr6/MO/T9xixI4m
q+TnIWGvIyYsk58vLmybZ6jHP/x7AMsH/5V97j/87wJiik3/PD3zn2s/R/u9
2vfU/i7tOWjPTXvO2nvR3qP23rVzop0r7Rxq51Y759q90O6Rdu+0e6rd6/+9
Dmh1Q6szWl3S6phW97Q6qdVVrQ5rdVur81pf0PqI1ne0PqX1Na0Pan1T67Na
X9b6uNb3tZyg5Qoth2i5Rcs5Wi7ScpSWu7ScpuY6JQdquVHLmVou1XKslnu1
nKzlai2Ha7ldy/naXKDNEdrcoc0p2lyjzUHa3KTNWdpcps1x2tynzYnaXKnN
odrcqs252lyszdHa3K3N6dpcr+0BtL2BtmfQ9hLaHkPbe2h7Em2vou1htL2N
tufR9kLaHknbO2l7Km2vpe3BtL2ZtmfT9nLaHk/b+2l7Qm2vqO0htb2ltufU
9qLaHlXbu2p7Wm2vq+2Btb2xtmfW9tLaHlvbe2t7cm2vru3hzbyK+D9Y7fxr
OpXLV3PjqXRhcFTFgBLHpPb+yY6zi0qDRzbdHf8oTWg77ZpLUxdpYLZ+P/n/
9VTocLRf/kJbpbaLYnbM6CCNuus2dXJCqnDS2T5Lv1kjtSqYfPXH5lL/4HLr
Pr9OEY6xG+SX+1dpr+wXx277URqcfNA7tZTUc5H9ZM8nycLo1bW+L79Van9p
w5VWE6UBOxc7Lawutfvu+ykhr5OEU/860HB9gHT2mClfhkyQTk26lb1sTen2
adtzV09PFH5oFtJuxn5pvU1lWxabJnVqGDtlVBNp7WYT4tt8SRB6jh/slXJQ
etfv8MhyU6WjCxQ6s72F1Dvxrp1TIem1W2VTrR/EC0PD9pz4vFfqVtOhhfdk
ae37jcYV6yjdfjU0eUJR6aMed15ZxMUJff6OeH38pP5Lfnb0mCENnPiz1WhH
aXDLDbZunb76bOem44lF4ozQ9DyNH87/aq+yk+s1PRlrBPlMT7TeF2eaUbKz
X/sZsUZU0qTQMlFxpo2r9bjbu1Gs4fjX+pG3CsSblpi/JeZCWowRPOinZkb7
eNOx41vWqrwhxrBf/yo4eEq86fYKa9PHdIsxtjvMLxb0e7ypd5nWP076Em10
XVWr1/7oeNOCfqe+vPkj2nAul9p1Sr4EU887lfKHTYg23MYv+dTs71xmeq/+
QhvbaCPo99NlxrkmmCZ+Ctl34PETo2rtgzZ1lySYrp8VN2/i0CfGiqfebdKD
Ekz7turaoln8Y2Pp5zZzmzxOMB2Sx25h/2GPja6v9kScLZhoWqZm9p8O340y
nJ4dT1nZKNG0auNrbZ0HRxmhCb9cPj0k0XTvd818QyIeGScrXT8+bUmi6ZUt
G65tGPLISHy5vEjrg4mmXWz6Xm0f99Cw2b1wSedHiaaeecYNKT/qoWH7dpnP
t5ZJpjPL96/3c0yk8aH38u/PNU0ytfrTJX9wn0ij3pIC1rUGJpmOHxq5Ym7C
AyN6rfu82Z5Jpq5tQuYvnfLAmFrHJbLoviTTzZNfjr/46r6R7pD3ovvdJFO7
Rkn+p2ffN4Ieznt3J3uyaeJoj9Jz3937r3+v7bd+1smmXW5d+7ng8nuGdWP/
fcd6JJsud8328maee4Zt/dWFa81INp05utONuWvvGsHrjX3uW5JNo1q0eXW6
+l0jpGtJ2+/OJ3+1xLHpxYPuGNFVfO0KJSebuv5SovudDncM95G5prQpkGJ6
7tzz7S0eRhjuN18s/7V+ium5VbZ9y46KMCybhh6s0yPFNM4lIGZSvghjzZ2x
s1xmpZg6zgta8WJFuNHVvXbzy9tSTEufmfnDzkrhxpqzLyu0Opti6njExrfj
0dvG25GFkoYlpJiWPxvhdKPbbcM/aIf3+ryppjkSSn7XMvGWscZu0qwe1qmm
jt39VuRdccso8enAy85OqaYn8yfZlKt8y9he+q2Fy/hU00pB5T+//CPM+JBv
6YPTK1NNrWJ/nBTi/Pfnc3Jf+GFfqql1gQc/5oi/aax4dOriiOuppgcivL5f
Vvem4TyhYLEdaammBfrsW9Rw8g2je2rDjYPyPzWt9NOlEWePXzfqVV7v+sX6
qWl0s1kn8pW4buydtb3GkL/7/H98VbpVgQDna0aJnJ6Lfhry1HRmUvrtF/5X
jaA9R4Kcfnpqei3X3svGqyvGCbtDawM3PzVdvS3E85HzFePaiYbF7xx7atpg
zWWPbNsuG37Z14bNjnhqWubFonJWuS4btb+fd/PCs6emr0rlrDpg+CWj5TIr
25cF0kxXn1j6ss+Bi4anR3TOgzZppmmfTsRe/CvUcJl+48OsVmmmibY1K5b6
OdRY8+7tWMfeaabLGzRx6/v6glH1z2jvjePTTGvXPebj1v+CYf2lQYOxi9JM
y+S/cds9/Lzh2KLk7JhtaaYumyeXPGx/3rDwbzQp5L/+dxf/Mef5LnPOnTO6
bGnyqMO1NNMG3Y/c7d7knLEiZsPR1Mg004PB7n7zHp81Spx9kK1FeprpzEkJ
r7eMP2u4xIZ2jfmYZpq4v5ftkVJnjUm3jgxr+U26aZeSv29Zt/OMEVXl1wIn
y6WbRtRpfnCV8xnD8YllwJoa6aYu50+9XFLgjLHdfuCIl03STe1nX1nROzjE
qOeRLWZWm3TT6C9vj5aaFmJcid17pU6ndFPHfa+MpI4hxofB05t375Fuav2H
7W8VioYY49umTng8MN00JDbnntUrThufLT+9HzI03bTG7Lodu3c+bVSdNfPW
q+Hppn3s2tbZWum0Uca5Y8NI93TTa2U2b7jw+ZThfK1C7rAx6aalRq8MNiL1
z7Wfo/1e7Xtqf5f2HLTnpj1n7b1o71F779o50c6Vdg61c6udc+1eaPdIu3fa
PdXutVYHtLqh1RmtLml1TKt7Wp3U6qpWh7W6rdV5rS9ofUTrO1qf0vqa1ge1
vqn1Wa0va31c6/tqTlByhZZDtNyi5RwtF2k5SstdWk7Tcp2WA7XcqOVMLZdq
OVbLvVpO1nK1lsO13K7lfG0u0OYIbe7Q5hRtrtHmIG1u0uYsbS7T5jht7tPm
RG2u1OZQbW7V5lxtLtbmaG3u1uZ0ba7X9gDa3kDbM2h7CW2Poe09tD2JtlfR
9jDa3kbb82h7IW2PpO2dtD2VttdS92DK3kzbs2l7OW2Pp+39tD2htlfU9pDa
3lLbc2p7UW2Pqu1dtT2tttfV9sDa3ljbM6t7aWWPre29s7o//7f3/Yj/E3Sr
f9az0dvnwi3j6oz1fSG1y24zwtgr9Wh9o+7GKdLoN/tO3a8pnRPinTQu/pnQ
/8yp0he2SuuVbje3f2epXa1GoX65pNurhtnPPpwuLOieY8Km2VJH2+V59tpL
Gy7sGLYit7R7mEuDxpfShF5TWnR66i095z/eNXWg1DN0SYH1NlKr510qzv7w
VDhp1+nAl1elV65GtamwQWrZdZufw2BpQLsfW7eqKc1xaeHDQimpwox2Pduf
85M6Wx64EzlYWsntyMY+1tI1EVsiLiWmCMNP359i4ycNeX7/W/thUq8utVtV
aSh1y+hSLvZ1srB809GDvw2Rdj2684blOmlAnYYRh4ZJ7V1mjq3VTOo+b/Qd
z7xSyzmziibdSRLOfPfkUIsd0sT5Dyc8Gy19se7uh2t20sA9ZxaG5JJa3bN4
XONBojCkaov3p/dIR4+fUqz3TKn7zR47J3eQfqj+0GJKUand41HJux4mCK0q
fNqcfbd0iP1nl+NjpGm5egQVM6SFGw/YOqioNMeEoi/iU+KFrmMmOZYIkSb2
t2lScLXUo121UL9hUmej/ItfDOmJo/kLbS8uzQjstnpjapzQpX/o7dEnpMsX
rJ5Rf4W08HGf4dcGSjcX6dLrvZ10gG9Z26AeX32ztFfLjBxxhm2ucvHdPb7a
6s87e7xOxxoF11a7F/j3PPQf0yt3Ovl2Yaxh7XdvSMUbcaahXi1Tw5xijebt
F5b3/TPOtGapI87588caHsOjxjeuFm8aEh90d9/lGCMlx7lmA76LN60886HN
5KUxxpKqzj5rZsSb7nfy3LCjU4yxZt/PH7vsijf1nb7bq0DeGKNh42k1U27E
f7Xe9TY7Lkcbfq98I1PexZvmLmbZrPLyaKOTr/W3geUSTIvkd7z07odoY4vb
4wsRf5+j/1jcrcE9+0rRRvrGNm6BAxJMmzdocf1Z4hPDtdCZ19N+SjCNjjhR
ecP0J4bF1PXlcvkmfHVrS/8XJZ4Yxyx/iJx0McE0/EmOCTv3PDambiuyIfZp
gunmyleb9mn52JgUZmvb9O978x/9Vk6d7nI5yrB75lSjUYNEU+fGFRcNGRll
rMl/wbFX70RTx6jAWp/fPzLKlFv3pdX0RNOg3+1zOv7yyAivXee3Ij6Jpl4z
plherf/IyHAo55n9VKKpdaPfp/554aER0uhZxOKoxK/+2Hj+sOF/f77bPaT8
l8Sv5go55ZfroeHiNGTSqspJphmV7u7qvCnSCPkz1wqjU9JXiz/r06ZapGFX
06rymcFJps4LQjefuPfA6BpX8aex85JMy/TaPuPg/AdGrzfZ/ji6Ncn0U8UP
b25XfWAMyBP/IOepJNPUFOeJLy/cNyyqRC9a/zDpqz6DRrQcc98YUzNqU9ir
JNNjniNqr6x+3wjKlbT0sVWyaeIzp0FDz98zVnTu4Ohlm2zqUt7Gdsy0e0ZY
Xq9WIV2STb0TxnQ4XfqeYV8z9PrUwclfXRCwftP9u4bH4QHvds5O/uqDxNJF
lt41rE+8cf5tTbLpiqsVclq2v2t0DV7aNso/2bR01KBmI/66YxT0v/L5zelk
0wfZtueuEHLHcInMGVMnItk0Y/zL/pM87xhRK1IGTE1JNh3ZyyFxs8Mdw/rl
+tCDH5NNV9RusTemwB0j3GXj4MKFU0y9nje8f+NmhJHRaOE0h0opptY/jt/Y
eFuEYfXNhOVT66WYht7e67J5bIRhPbbQzsWtU0xXHIqwcmsXYYzv3qvnnq4p
poGFPv+Vo2SE4WBVvOaWfimmTUJDFtRIDzdmdomoO8wtxXRNGc/xYdfCjcgN
lb+xmZJiOqnxptvzt4cbDXuWebZrboqpm8X+xoUWhBufb3jX9F+YYppvTVfP
bOPCjTUX+l/dtizF1HFfypZKA8KNSivHOn+7KsV0e8+Duby7hBuO0fN2392Y
Ymo7yCP37AbhRsHGvuP3bUoxfeBa4o+XtcONsCWhzRZvSTH1Hry35/Dq+ufa
z9F+r/Y9tb9Lew7ac9Oes/ZetPeovXftnGjnSjuH2rnVzrl2L7R7pN077Z5q
91qrA1rd0OqMVpe0OqbVPa1OanVVq8Na3dbqvNYX1D6i9B2tT2l9TeuDWt/U
+qzWl7U+rvV9LSdouULLIVpu0XKOlou0HKXlLi2nablOy4FabtRyppZLtRyr
5V4tJ2u5WsvhWm7Xcr42F2hzhDZ3aHOKNtdoc5A2N2lzljaXaXOcNvdpc6I2
V2pzqDa3anOuNhdrc7Q2d2tzujbXa3sAbW+g7Rm0vYS2x9D2HtqeRNuraHsY
bW+j7Xm0vZC2R9L2TtqeSttraXswbW+m7dm0vZy2x9P2ftqeUNsrantIbW+p
7Tm1vai2R9X2rtqeVtvrantgbW+s7Zm1vbS2x/639+uI+P//P4fSDLO3ij8T
mHkrdXw3wbpn5nU6GubbwDLzXplvVWnK3WeZtuCw9odL7sq8Fl17ebQdn3kn
5WpSv7shtTV69djUUtrrx/P1h1pKw8fad7r3NF34Yv4g+737pdetCu2auFBq
X2qmr193aWTDEqOv5ZXaVE/M2/NcmjD37ORJlaZIwzr4NO3ZUOrkGDGx0Pun
wtCIwX8UPi/1nHs0o9M6acD3BVtbuEq3ezu+WNhEGhJ5bGRiDqlvsQq9Gz5M
FX4YmaN/l1+lYywfF7kzW9rk6M32fbtLfdzvJ4+zlYb/uPrVoT9ThO4/z+yQ
/5bUzntqk9UbpH5r015XGSG923p+0Gw7qWPg5Mvbc0iPpexzir6eLBzy7vd5
BTdJQ/s/btvRXTpzeXzzv5pIj7WdUrmehbSA7dY5a28kCdcM3npnp480dFXP
+ntGSuPqFSj3e1Ppia4/Tx74jdSxlePQnjGJwjVn3DaUPiX1MSz7l94oDS/1
yag2WTqpxLp3dp2lLdf0erqjotT/RuXap98mCJdG5bvy/VVppPfwCo83SZfu
L9220khpyJMxy67aS+2i6vxWqqy06tVZZfwz4oVuGc1KrLok9brX+G3ZbVKL
Zk7npk2SXqnwzbqBTtLQfdNKR1eTZvglfN/4Q5xw9MA5v3e6KbVe67em0A7p
C8fTLkM8pPXSB3jd7yltGOH28mVTafj7iM3Zun3VYUnI2jn54oywF4+mP5rw
1UvrDzo1vhNrZCx7PnLEhjhTqz9K/ThkU6zR1//PCxmH4kxnWOTvXXRcrFHp
UvEzL+7EmYY5D3pcwog1XHsscz76Js50fM592d2/iTWOjss18WGZeNOR999F
BN+LMXLMnTIsrmW86cezN5P8d8YYKzYdmfxycLxpQImnYetG/f3PFwluX3FR
vOmsxLElv28cY4xZtmjorT3xplF/NEppny3GSKyz88GRq/GmfkeXHHW/EW0k
3n15utPLeFO/VsVdi6yPNsKn5qr+U8EE03PXp104MSra8DxWpGc/2wTTFiOG
WbxrEW0EW26JzeWUYPpsXLHa7wpHG+nf3PmtxLAE0+ZhHnlPhD0xQj41TrCY
n/DVfAO7f579xHAr2WDN6q0JpteOjnTsWO2J4ec4YJfPkQTTArWTv6l397ER
9M2ID93DE0wTwy4WLuj12LC3r9zV/3nCV43NpbLV//uff3Eoao9lommi7WO3
7NFRhmvau0PvqySaRtuVelz0lyjDbrLdXssWiabOvt0/Pvkuysg447Zxdo9E
U+tjVxsuzRtleJ3tfvzmqETT0UcK3vA+8chIHxy+1GZuoqndvYWDPBY+Mlqt
KTh2yOpEUyfHe4fudHxkzLR+vurlzkTTNcsbONUq8siw9n5p2/VoounybrWm
lop4aMTVtkp6eyXRtNeMUKey2x4aPhb+lwo8SDRt+CWb34PJD405Lbtc+SM5
0XSpU9lfM9o/NEIrrJ11812i6V5fhxWrSj00nLosmWyfM8m0atmhO1pnRBpe
xbfM+r5Ykuno0zVW5D8XaYQPnDJ3aLkkU6+4bQtu+0caFjVKnS9jk/TVxYeD
9s2PNK703x2WXj/J1Dcl98om7pFGPdcKD8q3TDId/2TnZL/OkUarjzPtlrVN
MnUq9HP3gc0iDdeTTX/OaJ9kGn2xT49v60QaQZ47153ukGSaOLmocaZGpBHQ
b+I7P6ck0w9pu0vnr6R/rv0c7fdq31P7u7TnoD037Tlr70V7j9p7186Jdq60
c6idW+2ca/dCu0favdPuqXavtTqg1Q21zih1SatjWt3T6qRWV7U6rNVtrc5r
fUHrI1rf0fqU2teUPqj1Ta3Pan1Z6+Na39dygpYrtByi5RYt52i5SMtRWu7S
cpqW67QcqOVGLWdquVTLsVru1XKymquVHK7ldi3na3OBNkdoc4c2p2hzjTYH
aXOTNmdpc5k2x2lznzYnanOlNodqc6s252pzsTZHa3O3Nqdrc722B9D2Btqe
QdtLaHsMbe+h7Um0vYq2h9H2NtqeR9sLaXskbe+k7am0vZa2B9P2ZtqeTdvL
aXs8be+X1f1hVveTWd1/ZnW/mtX9bVb3w1ndP//b+3JExP/uLg2esqjlp+dC
xxfrdi96Lw04efrU3QvS8r+vvnN4szRjb1rzxqOkTdq/uFWqjXSqZeMRn3JL
bd5Oa/Dzg2dCp7lVmrXbLHWbOr1VYF9pwMs8T1wqSFMftfU4EZUuDEvxGThx
l9Rl+ybLxJlS53E1Tx7sJbWqdeROrdrSt0PLnpueQ+pXNqLE4QdpQo8G+/6y
OiC1Dn3y3eAl/2C25FM7R0pDGm/6eLmDtFL0/eDCFaWeS0tM7P32qTC01rJf
Rt2UjnGweOG8S1ri0qttNydLl162C27pIG1yr8nTkYWlhe8vPtr/Qaow3d27
k/dmqXvJNL9mI6QfihXb8rqlNHBKq9q2eaWpjTotnvkoRVhmqEX83N+lwVF1
d6yaJvX+cOBDu27SwtnnXippK01//vrSlOzSqs1X7216P1noWnSBd9sgqUXt
dk9tV0nHn+2713KsNPje+jnH2kldh0TMb11KGrQlcuKb9CSh+3cx6z1CpFMP
/Tl3+Brp7OXH3XL9KF1e/8alqEbSK5ebnJ+VU+p4bNuqSo8Thd7VB14IDpb2
b1wusKa3NON03WwrR0j9loa+fu8g7X4hb3K5MtJj2SrP3vIxQbi3ZItHY8Ok
BRKez7Dyl4bX2OW03ENqt3vLrwtdpH6HU/+82Fw6tdzyJp3LSx3m206+YSG1
GD4k5sTDeOHSvg6HEo5J/b6v8eaDj9TF4Ui2jOnSxOvH6l34QVog9kTtcw2l
rsfflL9eWJpY8sHuhGdxwqoPQyNrXpa6bj1YYKyv9MOVuQkHF0qXD3998sBg
adrnVmXudZB63W9YdXGLrzZp0eBqkHWc8X5pvptbe311yb4Jl4t8iTWaH2sU
4zc+znRPcr0/ct2LNd6P2XC90Mo403z9Nl1N8Y81SuTdnZbt7+/7Hx9n5Cg/
Z9nf/7zX2oGuJ+JMlzSuPHHcsFgjfErtsClhcaYO3U526NYh1rDt2mep1dM4
01bLZwUOrvj3z18ZWbjzlzjTxzZH3H7OHmsE7c8z82CReNNJU153nJAQY7wY
2CiwU4140w0T9k9bdS7GOPc0ZPuxZvGm/bY+LpTsH2OELetSy7NbvGnHOgWN
44tjjF67zjlVcI03/bIo8ufb42IMq7YJOS5NiDeNK1fjg3PPGGPAgkfNFnnG
m05pfsjmkF2MMcmhZkTTtfGm4WXOttlb+e/vkz6poc+2eNN+ZW8f2FA4xpiz
1Sq0dEC8afvVsb36foo2LEatH9wiON7UY1CFNL9n0UZ6q7ENZp6JNy3v63Lw
UlS00XX0nvz1Lsabroia/6zpnWgjyKZ5Qp3b8aYZhs3uo+ejjZAL6xw33483
de1dcX3x49HGdddXv+V7Ev/VscUWTNgfbSyxPRjzKjbedP/xCQFrfo82ojIq
JZ+KjzdtvPqGb8xu/XPt52i/V/ue2t+lPQftuWnPWXsv2nvU3rt2TrRzpZ1D
7dxq51y7F9o90u6ddk+1e63VAbVuKHVGrUtKHdPqnlYntbqq1WGtbmt1XusL
Wh/R+o7Wp7S+pvVBrW9qfVbry1of1/q+lhO0XKHlEC23aDlHy0VajtJyl5bT
tFyn5UAtN2o5U8ulWo7Vcq+Wk7VcreVwLbdrOV+bC7Q5Qps7tDlFm2u0OUib
m7Q5S5vLtDlOm/u0OVGbK7U5VJtbtTlXm4u1OVqbu7U5XZvrtT2AtjfQ9gza
XkLbY2h7D21Pou1VtD2MtrfR9jzaXkjbI2l7J21Ppe21tD2YtjfT9mzaXk7b
4/3b+0VERMT/L7X+pVk1j1NTn8uZ13nQx+t9l2bekJLrP2fvknkDyq0fuadg
5s3RsWqBurHPMq3N4qoLbxzLvCsG5B51bEPmjbK1Wj5mWua1fvjL7nq9pem9
3R4HdPkHV4/97kVtacFxf7S3LCD13bzeZ1B8utDn4N63NQKlfren/lRnsTRo
2cTl/btKQ7yGjdtbWtpq4G9Tt19OEzr26Pa4z0qp5a23zbx/kHrN6bG+WSXp
gMAZkS7PnwpftHobNuiytJ5r9zJXfKU59vRzcJglzVjxbnjj/lKf6mHWkQ2k
d3t/e8W2hDT1kuNQn7RUoU/S/KO3wv7BgMk5Fu6SDunR1C/HT1L32HcNz/WX
Bi352SmhhXTNhmnJ0wpLg1zsa62MSxG65+/QrXSw9MrR0A5+s6WWOxdf3tRd
Wtj6u88TqkgTD/944dXzZOEa202tjVCpVYWcBeK3SVNn17lcdIa064JfPEZ0
lzo0aJS9RS2py6SrNWblkDqemPPleGyS0O72LwNXHJaGusakb1svta6zflm7
8VILvxorr3SXhtWaWiqmtjTOvfa525bSvcYMi4IpiUL7WvnW7b0mvVI+ZcSd
36Wefat12LVM2qTzQectI6X+r1p/k8dJem1qmuWJqlLX3lfeWuWUOvj0PXj4
QYKwS0mfkvbB0ozoR7N/XS11OzZmaoC7dH10bNl7TlLXx384rawndRnrO2md
lbTliG4/bforXli79sx8fWOk51oOKFLtivTuOt9lbwOlj+6Etdq9UTpkQPO/
3H6SFh416P2DEdKl26N2Te0h7f7j+qq920m7NC22KKyOdE3ZNf0alJce+7Lf
fXoeaa9ixw4e+DNO2HCCw6Wn8VJnP/8W7+5Kcw8Nyt3sgjS4VM9ajY5IXR8f
urr4N6lXsY+Vzm2VXjt/PXX1WqnvzaRVL5ZJZ1br3aPTIqmH/4FN3/wk9V9t
ERE4W+rWs1CxlzOl0fnfTSoxPfNqP0f7vdr31P4u7Tloz017ztp70d6j9t61
c6KdK+0caudWO+favdDukXbvtHuq3WutDmh1Q6szWl3S6phW97Q6qdVVrQ5r
dVur81pf0PqI1ne0PqX1Na0Pan1T67NaX9b6uNb3tZyg5Qoth2i5Rcs5Wi7S
cpSWu7ScpuU6LQdquVHLmVou1XKslnu1nKzmaiWHa7ldy/naXKDNEdrcoc0p
2lyjzUHa3KTNWdpcps1x2tynzYnaXKnNodrcqs252lyszdHa3K3N6dpcr+0B
tL1BVvcPWd1vZHV/ktX9TFb3P1ndL2V1f5XV/VhW92//9r4QERER/991xcib
m759/ly4dGTHUfsTpA0rLq1T7oh0zsCrpw6skEYXWPZdrKs06PvXRaa3kA5Y
+zz5Vg5pXI7W1f+MfCacVPZ23cLbpRa+RZo9GSQ9V/no6hLWUo/CBdJzJqUL
01s+/pzvoNQ2974pq5dKx9TId/rTUGmA05C8ww1p2IE9ocMrS4/leZla+HOa
0Lv+S5cOj6WuVzdfaXRM6hf3U9p3m6VV51ntnjZPat30TnzXwVKX2LRjKfbS
Vp51tz4rL3X+rVzZ7J+eCgNmx78bd0fapH32sb7+Uj/fecPzz5c6vOnxoZmz
NGjOmB9rV5d6zV78MeNdqvDD47ORyRel4Yc/p+1fK/UvUcM/eozUY0qP4d90
kDpsb9ctvJLUvU1T91HvUoQh3q0nXb4v9e+0ueOZA9Lrt7x3Bv8sTe+70GLv
aOmAq2dvFussHd/rh9Gv6ks911mWjP9G2vDGqJVHniYLret96ln7mrT86uXl
t++Vhl+/+HHccumKfDkijdHSIdVXXprTSXr9j3GePStKbQr43tn6JUlYacj8
11ceSnuFl3xZ6qC09vWAY6t/lo4PSi7zYJQ0eGPVWRU7Ssus8pl6tJY0+kuR
XdULSHsNLuZx8UWi0KLTmddT7kp9+u78ZH9aWs99Uc4Cu6XbA/OlRq6WFn63
7OaeOVLr/Hk+N3eT2u+7a2P1gzSsv3ehzYbUZtG2PiVspLmHXX7vUkLq/GDz
jVyW/+CwXZ2L/Zkg9IzPMTg5RmpZKSRvkbvSkO9ud/zrgrSlx+XwtMPSqkeK
r373u3RSTKDHu63Saz7bx9n/Ih1fpfCcn1dIrfznLX3sKU3dW89u/RzpiX0x
KV2nSR2ft/OeN1ma+0CPsNMTM6/2c7Tfq31P7e/SnoP23LTnrL0X7T1q7107
J9q50s6hdm61c67dC+0eafdOu6favdbqgFY3tDqj1SWtjml1T6uTWl3V6rBW
t7U6r/UFrY9ofUfrU1pf0/qg1je1Pqv1Za2Pa31fywlartByiJZbtJyj5SIt
R2m5S8tpWq7TcqCWG7WcqeVSLcdquVfLyVqu1nK4ltu1nK/NBdococ0d2pyi
zTXaHKTNTdqcpc1l2hynzX3anKjNldocqs2t2pyrzcXaHK3N3dqcrs312h7g
395PICIiIuL/TLX8qZl7s9uF+SGZd0X58PT4BZm3ieuN8627Zl7XCQV9mhfO
vA23H3jTOfFZpi2c8ZOdRUjmzahT//snOzJviV+mfRO9IPOevF45sbu7tNJM
q1WbhkvHVPku6Mt30qVjQma0byC1rmjr+aWotNeL1BLZUtKFuQt5ur47L00c
vWfm+JXS8Y0vvvAdInX4EB4UW00adbyH48WXacLcXt7zyv4utZyeLWj3NKmT
3aJ9Gx2lK/aMenOpjNQ7e7lTd189FY556TPru1vSz21y+qQHSb1nbE9+ukqa
+3jDaUdmSDNyJHZ530d6129lsRetpRan742vU1naKmFwo56FpFYD3jR5+CxV
mLrqt259w6W254PWFA6QOs3I2DB7qdSyz4PQmJHSwiubbvnYWfr2xKViq6pL
raNepJ/5nCL8/GHWo78ipRkzJniHBkpn2vnNWu4lzfhlvWvlgdLrlefbxLeW
fuiyfWST8lLLwHr1xv6ZLPQvsv3e0AfS8fNK5g4/Km24zKH0yV1Sh+QXIcZi
aciTlZ9GTJE6u5bP+bSP1LX9rMdVHKXuC3d7R9SRnrMeueFcCWnUlWahm3NK
l5eNz33sZZLQ6+ar8q5PpMtnnW8Tc00aPsihhMNxqb3Pm32190in7tkd2mmD
NPfjm+O/WS49USA28PMsabj3JYdhY6WJx903NR4odd8xtlpMb+mJq/msYpyk
2+vP67+qndQqdENYGUNaptD7bc+bSa3X/pByqKE04+CndV/qS4OmWd5tXS/z
aj9H+73a99T+Lu05aM9Ne87ae9Heo/betXOinSvtHGrnVjvn6r1Q7pF277R7
qt1rrQ5odUOrM1pd0uqYVve0OqnVVa0Oa3Vbq/NqX1D6iNZ3tD6l9TWtD2p9
U+uzWl/W+rjW97WcoOUKLYdouUXLOVou0nKUlru0nKblOi0HarlRy5laLtVy
rJZ7tZys5Woth2u5Xcv52lygzRHa3JHV+SWr81FW56+szndZnR+zOp9mdf7N
8nydxfn93943ICIiIiLi/31+3rV5mu3H50LXHiurTP9T2sS9z3d3rkid1lUu
ttRX6uAcXbDxJKnTmc15j/eQujU8e2JZFalX45YTdr17JhxS5lWjqeekflN2
1yq7XBr9PG6YU89/sFel3FVKSbsX+LTpfmy6sFKz+0OH+Es/2C5a+3qZdMiK
5d4V3aRVb3XuuKCdtOvvBxt2s5FaD+n45nkhqW2hBt17PU8T+vsvjK8bLs1w
9nzicFx6Lm7ouJy/Sod4vBj211Kp7/F3+30mSAMm/TC0em9pvbopmwObSJ0n
z9kxrLS0/C+PHld/81QY0svupzGR0ozch/slHZJ6n1w8Yu4aaUi3OcGbx0md
+0xs+nNH6ZazBTwHVpOWD/x+RMts0uiIspMnRKUK7872Ln3omNTvVk+XCb9I
5wSP2zR1hjSs1quZHwZIz9lMru7fXjq++IhPG+pIg97n3upeXOrc8Xi7lh9T
hNcbju2xKlX6NuZ+yLG70hcFNq67c0bqHrmxZXyANPE3n7hXG6VLo0ZFbFsq
zfirVa03k6U+XZ8PbDJSOmnl21qt+krdmlfId6+TdM27dh6X7KUB+T2sZjST
ehc4UeB2TalDYvG6DhWlA0LPL7hVQuq7wy5br4JS54W59r/LJfXuXrjMQwup
xbYL5a5/Shb6tDxXN88HacPIkLZt3mVe7edov1f7ntrfpT0H7blpz1l7L9p7
1N67dk60c6WdQ+3caudcuxfaPdLunXZPtXut1QGtbmh1RqtLWh3T6p5WJ7W6
qtVhrW5rdV7rC1of0fqO1qe0vqb1Qa1van1W68taH9f6vpYTtFyh5RAtt2g5
R8tFWo7ScpeW07Rcp+VALTdqOVPLpVqO1XKvlpO1XK3mcCW3azlfmwu0OeLf
nm8QERERERHxv5fa/Kg5voPb+OCwzOuaMGvkzXWZ177dDs+OgzKvx7Y+M9Or
Z14X3zXzO75+lmnv5h1TKvJG5i2Ra8KsxQcyb+H+da+3+yXzpvuW/LnO/My7
3dn95KBR0qmVY46VGSgNPFxy7p/tpY597JqWqyNNzNc2eFkR6ZazLf449Dxd
WGluWGLrm9KuGbv+8t4kda6Z867/HKn1Not9XbtIXbrNWXyxujQjrPgju/Q0
oWen4P7xIdLAKXWeNVgtXfNgUu6EUdKTvsP8znSWelyqe+BtdWlUglchiwLS
OR3eHnqb9lQY4DPV/fAjaXg538ApF6Ruqd+2mBAoDRxYOmrZZql3zu5WX5ZL
m8T1OVZqujTsYKs/brtLfdJ+S6nuIi18932SW1epje2Hfr+2lIY9eBRWppG0
YL6+K/2rSEOLRVS4WlIadn/hwui80oLF3vWu9zlVaHG6QuMr6dLg35IKbIuT
5tg3vXnxe9L1YRWP+l6TzrGtNqXqOWnBWmVXXDwuTbVoebdOoNRt/bOxBX+X
FhzxXf5Cu6Wu1fKUqr9TWq/9vvMzdmRe7edov1f7ntrfpT0H7blpz1l7L9p7
1N67dk60c6WdQ+3caudcuxfaPdLunXZPtXut1QGtbmh1RqtLWh3T6p5WJ7W6
qtVhrW5rdV7rC1of0fqO1qe0vqb1Qa1van1W68taH9f6vpYTtFyR1XyS1fyT
1XyV1fyW1XyY1fyZ1Xyb1fyc1Xye1fz/b88riIiIiIiIiPjf1ysB1z/VSH4u
dBvR3nV5hNSrR/GEw/7S6G7xOVoskl5ZtnjdJDdpotO9kGOO0u5DLCYHVJCG
5J9bPeXjM+H2X6tmq3BHGh1wuWD136VVH1jW7TNXumJ415RcHaU2NuP+OFZJ
GtK/5STr1+lCz0oPniTckuZoU+VAzp3SJh+nTVm1Srqm1M1bPlOkXn26p+UY
JC2xenZ4N0dp4HPngWubSAPO1SoXUFUaklYgzba41G1eu8Ud/0oTuveeu6/i
639w25C7AXHSmT+5/nozQhoyvX/uTtektkXtY9xPSsPq3Oi5aZ/Uy/91wsRt
UvvgcVPXrJVGDY+ZdXihtKv156Tis6Rhy8paPxonXTo5/nPgMKnX5ujA/gOk
ZU4tqve0h9TqbPisvV2lYQcq2ZZoK+3aMfzC65bSevGRq140l6b7Jd+q10w6
NbHz9MGNM6/2c7Tfq31P7e/SnoP23LTnrL0X7T1q7107J9q50s6hdm61c67d
C+0eafdOu6favdbqgFY3tDqj1SWtjml1T6uTWl3V6rBWt7U6r/UFrY9ofUfr
U1pf0/qg1je1Pqv1Za2Pa31fywn/dn5BRERERERERMT/O9T2S5qeqzp+1/RE
5vXevnG67/LMu+bAmD+nD868TRoXa9arcead6dqz76K8mTf19JSFp1OfZVqn
gkVP+1/NvI7tTibXOJJ5p/7SakvKb5l30qji/bKvy7xea9/aeHpl3qWj6/Vw
mSX1db05uO1EaXB4pToBI6Q5AiuW2dFP6nctYOXtrlL/8U2KvGol/Tyl/9g3
9aR3i9fz3lVFWvj7Xwe/KSF1DZjZziGH1GPzhm6NP6YLA6Krjc2ZLi04r/IP
C2Kklnd3ljvwQHq9l+ONoeFS9/35vnS6Kk10PLG+RqjUp2hYx2NnpC53ohZ/
OJ15tZ+j/V7te2p/l/YctOemPWftvWjvUXvv2jnRzpV2DrVzq51z7V5o90i7
d1m9v1mtD1mtP1mtb1mtn1mtz1mt/1ntL1ntX1ntj1ntv1nt7/92HkFERERE
RERERET83y0Y8eabXmnPhSfPGOmVYqRXPqS2nnJJOunkugFvDvyDty4/ubrl
H0z4/OOOxdIy2aunOsyQhlToPjFhpNQq/9wfZveThn22cK/XTerWMfZ4OQep
T7lzkY3spLZjXo5rX08acrJirl7W0nMVmo3oU0m6/tOu+l1KSz06D52TVly6
pfz1wZusMq/2c7Tfq31P7e/SnoP23LTnrL0X7T1q7107J9q5Us+hcm61c67d
C+0e/dv3GxERERERERERERHx31Tbn2tW2vLmx4z7mTdxi43TxJOZ18vmr1tX
dmfeMR6eHh9XZ163NsNynfDMvEM2JF9PmZV516f1urJ/QuYNOnV6n+u4zJvV
n5/V75/V55PV55/V95vV85PV85nV8/9v31dERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERETE/xP+Lwzc6V4=
     "], {{0, 0}, {282, 280}}, {0, 
     1}], {Axes -> False, Frame -> True, FrameLabel -> {None, None}, 
     FrameStyle -> Automatic, FrameTicks -> {{{{279.5, 
          FormBox[
           RowBox[{"-", "141.624`"}], TraditionalForm]}, {209.5, 
          FormBox[
           RowBox[{"-", "70.812`"}], TraditionalForm]}, {139.5, 
          FormBox["0", TraditionalForm]}, {69.5, 
          FormBox["70.812`", TraditionalForm]}, {-0.5, 
          FormBox["141.624`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "141.624`"}], TraditionalForm]}, {70.5, 
          FormBox[
           RowBox[{"-", "70.812`"}], TraditionalForm]}, {140.5, 
          FormBox["0", TraditionalForm]}, {210.5, 
          FormBox["70.812`", TraditionalForm]}, {280.5, 
          FormBox["141.624`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 70.5, 140.5, 210.5, 280.5}, {0.5, 70.5, 140.5, 210.5,
       280.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
       TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -139.01497761964868`}, 
                    Offset[{4., 0}, {7.5, -139.01497761964868`}]}, {{
                    7.5, -7.028291059336539}, 
                    Offset[{4., 0}, {7.5, -7.028291059336539}]}, {{7.5, 
                    141.45673132101467`}, 
                    Offset[{4., 0}, {7.5, 141.45673132101467`}]}, {{7.5, 
                    273.4434178813269}, 
                    Offset[{4., 0}, {7.5, 273.4434178813269}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -139.01497761964868`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.7\"", 1.7000000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -7.028291059336539}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 141.45673132101467`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.4\"", 3.4000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 273.4434178813269}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6291174107655229`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.7438884425570986`", ",", "1.7000000000000002`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8730058533226215`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9877768851141973`", ",", "3.4000000000000004`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7576720557274957`*^9, 3.7576721292201605`*^9, {3.7576723141476855`*^9, 
   3.7576723329134703`*^9}, 3.7576724505142345`*^9, 3.7576727564265985`*^9, {
   3.757672861560854*^9, 3.7576728788581305`*^9}, {3.757672915316574*^9, 
   3.757672918643919*^9}, 3.7576729659824295`*^9, {3.757912154515978*^9, 
   3.75791218511029*^9}, {3.757921480602399*^9, 3.757921493958638*^9}, 
   3.75792154140067*^9, 3.7579215938773108`*^9, 3.7584308403021417`*^9, 
   3.7584389878143835`*^9, 3.7584419896438413`*^9, 3.7607801371630836`*^9, 
   3.7607865007714543`*^9},ExpressionUUID->"1c35b578-2fbf-48df-91c3-\
3508a8043629"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 457, 7, 101, "Title", "ExpressionUUID" -> \
"5040d5b2-880b-45cc-a231-0e6954975e21",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1040, 31, 932, 17, 47, "Input", "ExpressionUUID" -> \
"9e617440-68c8-4c7d-87fe-cd9d2efca97f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1975, 50, 450, 7, 56, "Subtitle", "ExpressionUUID" -> \
"e25394e1-9c35-4f6a-8495-86623345b352",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2428, 59, 557, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"0fcc0597-25c9-4843-be60-e01aeb713b6b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2988, 70, 1773, 36, 66, "Input", "ExpressionUUID" -> \
"100d6a29-6bda-47fc-8ee9-d0d4d8524fab",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4764, 108, 491, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"a26e5cb8-621f-473e-9817-1af4aa08599c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[5258, 118, 2909, 66, 200, "Input", "ExpressionUUID" -> \
"10ceb89e-20df-48f1-a321-ff7ea6718edd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8170, 186, 542, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"d7ba3c85-2ecc-4633-b74f-86fb15d632b7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8715, 196, 1586, 32, 87, "Input", "ExpressionUUID" -> \
"2132100d-0f03-4edf-8750-0a4cfeec3cf8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10304, 230, 499, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"a1f5bcd3-ad1c-4608-8d2e-184dd5d3b14f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10806, 240, 6861, 183, 632, "Input", "ExpressionUUID" -> \
"064c7d03-91ae-4e2d-a5a1-1e6c1a61dace",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[17670, 425, 541, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"ba1976cb-53a4-4ebe-af03-95fcd4651050",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[18214, 435, 3041, 74, 497, "Input", "ExpressionUUID" -> \
"98de9a1d-6124-4724-8226-daf84a86a835",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21258, 511, 604, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"36014964-da04-4894-82b2-12a8ee0727f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21865, 522, 5582, 133, 794, "Input", "ExpressionUUID" -> \
"01047cc0-f16a-427d-b7ce-0c29435e4e64",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[27450, 657, 726, 11, 33, "Subsubtitle", "ExpressionUUID" -> \
"21ae29e2-a91d-4224-a123-209e3951a365",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[28179, 670, 5232, 118, 366, "Input", "ExpressionUUID" -> \
"b438da06-2c58-4df8-acea-37ef3435337f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[33414, 790, 965, 14, 33, "Subsubtitle", "ExpressionUUID" -> \
"f292807d-09b1-495c-8b9c-9b6b00df497f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[34382, 806, 1367, 35, 47, "Input", "ExpressionUUID" -> \
"72bf3732-c3a2-4f97-80cb-c1e43b95ecdf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[35752, 843, 1052, 17, 33, "Subsubtitle", "ExpressionUUID" -> \
"b0004f69-f221-4be9-a8c1-e15c829973e9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[36807, 862, 2409, 52, 385, "Input", "ExpressionUUID" -> \
"88e4f2ea-e727-4648-a92f-4e85f1dbd17f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[39219, 916, 854, 13, 33, "Subsubtitle", "ExpressionUUID" -> \
"394e299f-9abe-4d8b-a9b5-36a2d37636ef",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[40076, 931, 10499, 241, 1075, "Input", "ExpressionUUID" -> \
"de53eaa8-5f9f-4f21-90ff-43a6ff9125cd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[50578, 1174, 547, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"1a670f20-a3b6-450a-ad8b-342673b49f03",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[51128, 1184, 1737, 41, 236, "Input", "ExpressionUUID" -> \
"22d0e063-4a2f-4302-8b76-c318fb3d02c1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[52868, 1227, 506, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"573585d3-2ab7-4012-9bde-ee091976122e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[53377, 1237, 1470, 34, 158, "Input", "ExpressionUUID" -> \
"dbe4cd76-4469-4ba0-8820-019c7d484c1a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[54850, 1273, 1773, 44, 140, "Input", "ExpressionUUID" -> \
"a97292b3-e790-4763-b444-aa3c9e960ac0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[56626, 1319, 558, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"5f65bd77-40eb-4e12-b562-42a327fbbec3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[57187, 1329, 1256, 31, 84, "Input", "ExpressionUUID" -> \
"38a1c404-a80a-4f37-b880-ecc92f0fda32",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[58446, 1362, 5164, 78, 36, "Print", "ExpressionUUID" -> \
"de594772-22bf-4f54-a09d-175a7f600a80",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[63613, 1442, 458, 7, 33, "Subsubtitle", "ExpressionUUID" -> \
"c9835767-2b4a-4bf0-9d05-9ee1c3d7ac31",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[64074, 1451, 9440, 225, 1150, "Input", "ExpressionUUID" -> \
"d92d7a12-ebcc-4f18-83e0-f681f54b8eec",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[73529, 1679, 2477, 42, 72, "Print", "ExpressionUUID" -> \
"c5897818-6bb8-422f-8936-ed79cfd0d7e1"],
Cell[76009, 1723, 49816, 895, 1148, "Output", "ExpressionUUID" -> \
"a88b0b72-25ba-4053-aa28-ce6605e238f1"],
Cell[125828, 2620, 21454, 372, 619, "Output", "ExpressionUUID" -> \
"067902ec-ae35-4b50-8d71-8ec503e755de"],
Cell[147285, 2994, 19625, 425, 449, "Output", "ExpressionUUID" -> \
"90849f66-0c35-4c8a-a055-f997f46c081a"],
Cell[166913, 3421, 3323, 73, 241, "Output", "ExpressionUUID" -> \
"e7f590f2-c18d-42f8-8db0-938bbb7058a9"],
Cell[CellGroupData[{
Cell[170261, 3498, 7175, 147, 43, InheritFromParent, "ExpressionUUID" -> \
"a7769b9f-372c-4fea-9038-cf2a26ffc08b"],
Cell[177439, 3647, 13451, 276, 602, "Output", "ExpressionUUID" -> \
"ab0f297a-dc1b-44bf-b0ce-10443c238262"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190927, 3928, 519, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"feb92d43-f673-4dd7-9b42-b50ab362b68f"],
Cell[CellGroupData[{
Cell[191471, 3940, 2002, 50, 252, "Input", "ExpressionUUID" -> \
"b0245563-8792-413f-a4c1-ff322b233949"],
Cell[193476, 3992, 519, 11, 21, "Message", "ExpressionUUID" -> \
"bf9e0781-55e3-434b-98a1-bd6a37be219e"],
Cell[193998, 4005, 408, 7, 30, "Output", "ExpressionUUID" -> \
"1aaf0156-3bd1-4e4e-8271-64406c21ebbf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194455, 4018, 568, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"190e1697-5378-40fd-b7b7-68e948097639"],
Cell[CellGroupData[{
Cell[195048, 4031, 6756, 170, 758, "Input", "ExpressionUUID" -> \
"af6ea415-d276-4505-81d8-a9c6f689f1a0"],
Cell[201807, 4203, 141872, 2388, 602, "Output", "ExpressionUUID" -> \
"1c35b578-2fbf-48df-91c3-3508a8043629"]
}, Open  ]]
}, Open  ]]
}
]
*)

