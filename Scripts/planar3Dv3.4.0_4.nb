(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    350760,       6741]
NotebookOptionsPosition[    343557,       6590]
NotebookOutlinePosition[    343901,       6605]
CellTagsIndexPosition[    343858,       6602]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Planar3D v3.4.0", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660668673644*^9, 3.7476606793673363`*^9}, {
   3.748934775835075*^9, 3.748934775947117*^9}, 3.748969785632721*^9, {
   3.7503603825095043`*^9, 3.750360384337364*^9}, 3.75103985134317*^9, 
   3.756183760446571*^9, 3.757328984108018*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"5040d5b2-880b-45cc-a231-\
0e6954975e21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "folder", ",", "parameters", ",", "size", ",", "middle", ",", "cellLength",
     ",", "showAllBarriers", ",", "textPadding", ",", "ticks", ",", 
    "barriers", ",", "concentration", ",", "fracture", ",", "opening", ",", 
    "pressure", ",", "openingFilenames", ",", "openingAtCheckStep", ",", 
    "numberOfCheckSteps", ",", "measuredTimes", ",", "totalTime"}], "]"}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.750653482361023*^9, 3.750653486415388*^9}, {
  3.750653571387208*^9, 3.750653605937574*^9}, {3.750653638308257*^9, 
  3.750653669910097*^9}, {3.750660681648044*^9, 3.750660692605433*^9}, {
  3.7579120167949066`*^9, 3.7579120214810743`*^9}, {3.757912589794462*^9, 
  3.757912590809856*^9}, {3.7579216351176195`*^9, 
  3.757921637429574*^9}},ExpressionUUID->"9e617440-68c8-4c7d-87fe-\
cd9d2efca97f"],

Cell["\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0441\
\:0435\:0442\:043e\:0447\:043d\:044b\:0445 \:0433\:0440\:0430\:0444\:0438\
\:043a\:043e\:0432 \:0432 2D", "Subtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660650798229*^9, 3.7476606629055977`*^9}, 
   3.748969785633028*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"e25394e1-9c35-4f6a-8495-\
86623345b352"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:043f\:0443\
\:0442\:044c \:0434\:043e \:043f\:0430\:043f\:043a\:0438 \:0441 \:0432\:0445\
\:043e\:0434\:043d\:044b\:043c\:0438 \:0434\:0430\:043d\:043d\:044b\:043c\
\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.747660720326604*^9}, 
   3.747661032741356*^9, 3.7489697348519917`*^9, 3.748969785633336*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"0fcc0597-25c9-4843-be60-\
e01aeb713b6b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "folder", "=", 
   "\"\<C:\\\\Users\\\\Nikita\\\\Desktop\\\\Planar3D-master \
(2)\\\\Planar3D-master\\\\build\\\\Results\\\\\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747656893552808*^9, 3.747656906633217*^9}, 
   3.747661032741767*^9, {3.747664018501865*^9, 3.747664019128312*^9}, {
   3.747664057817404*^9, 3.7476641073677397`*^9}, 3.747665488148735*^9, 
   3.748933628112026*^9, {3.748933678444969*^9, 3.748933682795598*^9}, {
   3.748967116456512*^9, 3.748967124377589*^9}, {3.748968117085099*^9, 
   3.748968118090468*^9}, 3.748968199603396*^9, {3.748969393672985*^9, 
   3.74896939903098*^9}, 3.74896973485242*^9, 3.748969785633741*^9, {
   3.749002313128289*^9, 3.749002345037242*^9}, {3.749002429317358*^9, 
   3.7490025155955677`*^9}, {3.7490032762745247`*^9, 
   3.7490033047957563`*^9}, {3.749195504804994*^9, 3.749195505707028*^9}, {
   3.7497457636414347`*^9, 3.749745764379126*^9}, {3.7524855357661276`*^9, 
   3.7524855374845*^9}, {3.7546389669086523`*^9, 3.754638975297113*^9}, {
   3.754651973510044*^9, 3.7546519738226357`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}, {3.7607801304205627`*^9, 
   3.760780131826845*^9}},ExpressionUUID->"100d6a29-6bda-47fc-8ee9-\
d0d4d8524fab"],

Cell["\:0421\:0447\:0438\:0442\:044b\:0432\:0430\:0435\:043c \:043f\:0430\
\:0440\:0430\:043c\:0435\:0442\:0440\:044b \:0440\:0430\:0441\:0447\:0451\
\:0442\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, 3.7489697348525867`*^9, 3.7489697856339073`*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"a26e5cb8-621f-473e-9817-\
1af4aa08599c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"parameters", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<parameters.json\>\""}], ",", 
      "\"\<RawJSON\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"height", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"length", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<length\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"middleH", " ", "=", " ", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "height"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"middleL", "=", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "length"}], "]"}], "+", "1"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"size", "=", 
   RowBox[{
    RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"middle", "=", 
   RowBox[{
    RowBox[{"Floor", "[", 
     RowBox[{"0.5", "*", "size"}], "]"}], "+", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cellLength", "=", 
   RowBox[{"2", "*", 
    RowBox[{
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<cell\>\"", 
      "]"}], "[", "\"\<length\>\"", "]"}]}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747655287287675*^9, {3.747656648179721*^9, 3.74765664850766*^9}, {
   3.747656733330495*^9, 3.747656752436288*^9}, {3.747656912578596*^9, 
   3.7476569586085052`*^9}, {3.7476569957355824`*^9, 3.747657000350354*^9}, {
   3.747657434800095*^9, 3.747657435013611*^9}, {3.747657489717287*^9, 
   3.747657567951728*^9}, {3.7476576237958593`*^9, 3.747657744332275*^9}, 
   3.7476579502511377`*^9, 3.74765802117413*^9, 3.747659478052923*^9, 
   3.747659922966485*^9, {3.747659991785955*^9, 3.747660041283514*^9}, {
   3.7476600785009727`*^9, 3.747660104489366*^9}, {3.747660507830991*^9, 
   3.747660518100801*^9}, {3.747660570048667*^9, 3.747660584277534*^9}, {
   3.7476606203847427`*^9, 3.747660620713311*^9}, 3.747661032742475*^9, {
   3.7489336188607807`*^9, 3.748933619107676*^9}, {3.7489338681042213`*^9, 
   3.748933945735607*^9}, {3.7489340816532583`*^9, 3.7489340850716543`*^9}, {
   3.748934703289136*^9, 3.748934761141674*^9}, 3.748969734852895*^9, 
   3.74896978563422*^9, 3.7506535748684483`*^9, {3.7524857559405956`*^9, 
   3.752485761689149*^9}, {3.754653259405737*^9, 3.7546532596400566`*^9}, {
   3.756111089452158*^9, 3.75611109843443*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}, {3.75844143024053*^9, 
   3.758441430842722*^9}},ExpressionUUID->"10ceb89e-20df-48f1-a321-\
ff7ea6718edd"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:043f\:0430\:0440\:0430\:043c\
\:0435\:0442\:0440\:044b \:043e\:0442\:043e\:0431\:0440\:0430\:0436\:0435\
\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, {3.748934769874744*^9, 3.7489347748029413`*^9}, 
   3.74896973485305*^9, 3.7489697856343813`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"d7ba3c85-2ecc-4633-b74f-\
86fb15d632b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\:0415\:0441\:043b\:0438", " ", "True"}], ",", " ", 
    RowBox[{
    "\:043d\:0430", " ", "\:0433\:0440\:0430\:0444\:0438\:043a\:0435", " ", 
     "\:0431\:0443\:0434\:0443\:0442", " ", 
     "\:0432\:044b\:0432\:043e\:0434\:0438\:0442\:044c\:0441\:044f", " ", 
     "\:0433\:0440\:0430\:043d\:0438\:0446\:044b", " ", 
     "\:0441\:043b\:043e\:0451\:0432"}], ",", 
    RowBox[{
    "\:0440\:0430\:0441\:043f\:043e\:043b\:043e\:0436\:0435\:043d\:043d\:044b\
\:0445", " ", "\:0437\:0430", " ", 
     "\:043f\:0440\:0435\:0434\:0435\:043b\:0430\:043c\:0438", " ", 
     "\:0440\:0430\:0441\:0447\:0451\:0442\:043d\:043e\:0439", " ", 
     "\:043e\:0431\:043b\:0430\:0441\:0442\:0438"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"showAllBarriers", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"textPadding", "=", "1"}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748936129152269*^9, 3.748936131996414*^9}, {
   3.748936437491951*^9, 3.748936446079194*^9}, {3.748936835688491*^9, 
   3.748936836198721*^9}, {3.7489370016931553`*^9, 3.748937002355495*^9}, 
   3.7489687346210823`*^9, 3.7489697856346483`*^9, {3.748970588914028*^9, 
   3.748970589224121*^9}, {3.750355327100403*^9, 3.750355327233083*^9}, {
   3.75035545494031*^9, 3.750355455090455*^9}, 3.750656912157938*^9, 
   3.7516154744310207`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"2132100d-0f03-4edf-8750-\
0a4cfeec3cf8"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:0440\:0438\
\:0441\:043a\:0438 \:043f\:043e \:043e\:0441\:044f\:043c \:0433\:0440\:0430\
\:0444\:0438\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, 
   3.747661032742928*^9, 3.748969734853208*^9, 3.748969785634802*^9, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"a1f5bcd3-ad1c-4608-8d2e-\
184dd5d3b14f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ticksSetVertical", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"height", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"height", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ticksSetHorizontal", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"length", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"length", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ticks", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ticksSetHorizontal", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ticksSetVertical", ",", "None"}], "}"}]}], "}"}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"createTicks", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cellLength", ",", "middle", ",", "size"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ticksSet", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"-", "cellLength"}], "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"size", "/", "4"}], "]"}]}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"-", "cellLength"}], "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"size", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"Floor", "[", 
               RowBox[{"3", 
                RowBox[{"size", "/", "4"}]}], "]"}]}], ",", 
             RowBox[{"N", "[", 
              RowBox[{"cellLength", "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"size", ",", 
             RowBox[{"N", "[", 
              RowBox[{"cellLength", "*", 
               RowBox[{"(", 
                RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ticksSet", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ticksSet", ",", "None"}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ticks", "=", 
     RowBox[{"createTicks", "[", 
      RowBox[{"cellLength", ",", "middle", ",", "size"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.74766059129346*^9, 3.74766061456117*^9}, 
   3.747661032743846*^9, {3.748933853433467*^9, 3.748933890369454*^9}, {
   3.7489339519881077`*^9, 3.748934022178279*^9}, {3.748934089035924*^9, 
   3.748934096639612*^9}, 3.74896973485367*^9, 3.748969785635269*^9, {
   3.757672639256096*^9, 3.7576726982404222`*^9}, {3.7576728052825923`*^9, 
   3.757672817092346*^9}, {3.757672891902179*^9, 3.7576729030401917`*^9}, {
   3.7576729381237707`*^9, 3.757672945169193*^9}, {3.757921512969803*^9, 
   3.757921520186861*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"064c7d03-91ae-4e2d-a5a1-\
1e6c1a61dace"],

Cell["\:041f\:043e \:0440\:0438\:0441\:043a\:0430\:043c \:043d\:0430\:043c\
\:0435\:0447\:0430\:0435\:043c \:043b\:0438\:043d\:0438\:0438 \:0441\:0435\
\:0442\:043a\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660845455511*^9}, 3.747661032744216*^9, 
   3.748969734853849*^9, 3.7489697856354237`*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"ba1976cb-53a4-4ebe-af03-\
95fcd4651050"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"createLines", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "ticks", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lines", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lines", ",", 
           RowBox[{"{", "}"}]}], "]"}], ";", 
         RowBox[{"leftTicks", "=", 
          RowBox[{
           RowBox[{"ticks", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "leftTicks", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"lines", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"leftTicks", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lines", ",", 
           RowBox[{"{", "}"}]}], "]"}], ";", 
         RowBox[{"rightTicks", "=", 
          RowBox[{
           RowBox[{"ticks", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"Length", "[", "rightTicks", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"lines", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"rightTicks", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "lines"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lines", "=", 
   RowBox[{"createLines", "[", "ticks", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747661032744575*^9, 3.748969734854225*^9, 3.7489697856357327`*^9, {
   3.757672495233093*^9, 3.7576726309613447`*^9}, {3.757672685223899*^9, 
   3.7576726858954177`*^9}, {3.7576727860678577`*^9, 
   3.7576728004399943`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"98de9a1d-6124-4724-8226-\
daf84a86a835"],

Cell["\:0421\:043e\:0437\:0434\:0430\:0451\:043c \:043c\:0430\:0441\:0441\
\:0438\:0432 \:043b\:0438\:043d\:0438\:0439\[Dash]\:0433\:0440\:0430\:043d\
\:0438\:0446 \:0441\:043b\:043e\:0451\:0432 \:043f\:043b\:0430\:0441\:0442\
\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660912488222*^9}, 3.747661032744845*^9, 
   3.7489697348543863`*^9, 3.748969785635898*^9, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"36014964-da04-4894-82b2-\
12a8ee0727f9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lineBarriers", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nominalStress", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"0", ">", 
      RowBox[{
       RowBox[{
        RowBox[{"layers", "[", 
         RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", "]"}],
        "*", 
       RowBox[{
        RowBox[{"layers", "[", 
         RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y2\>\"", 
        "]"}]}]}], ",", 
     RowBox[{"nominalStress", "=", 
      RowBox[{
       RowBox[{"layers", "[", 
        RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<stress\>\"", 
       "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"barrierCoordinate", "=", 
     RowBox[{"middle", "+", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"layers", "[", 
           RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
          "]"}], "/", "cellLength"}], "-", "0.5"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"showAllBarriers", "||", 
       RowBox[{
        RowBox[{"1", "\[LessEqual]", "barrierCoordinate"}], " ", "&&", " ", 
        RowBox[{"size", "\[GreaterEqual]", "barrierCoordinate"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "barrierCoordinate"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"size", ",", "barrierCoordinate"}], "}"}]}], "}"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"barrierCoordinate", ">", "middle"}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}], "[", "\"\<stress\>\"", 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<stress\>\"",
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stress", "-=", "nominalStress"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"stress", "/=", 
        SuperscriptBox["10", "6"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"signum", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"stress", " ", ">", " ", "0"}], ",", " ", 
         RowBox[{"signum", "=", "\"\<+\>\""}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"signum", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", "stress", "]"}], "]"}], "<>", 
            "\"\< \:041c\:041f\:0430\>\""}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"2", "+", "textPadding"}], ",", 
             RowBox[{"textPadding", "+", "barrierCoordinate"}]}], "}"}]}], 
          "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"barriers", "=", 
   RowBox[{"Graphics", "[", "lineBarriers", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747661032745192*^9, {3.748934559310659*^9, 3.7489346973352013`*^9}, {
   3.748936028834214*^9, 3.74893640178518*^9}, {3.748936537538189*^9, 
   3.74893659455238*^9}, {3.748936626625805*^9, 3.748936705526024*^9}, 
   3.748936851846299*^9, {3.7489369647365932`*^9, 3.748936969645989*^9}, 
   3.7489697348547573`*^9, 3.7489697856362667`*^9, {3.749746386574204*^9, 
   3.7497463871546*^9}, {3.7497465169733543`*^9, 3.7497465172756653`*^9}, {
   3.749746575601492*^9, 3.749746575932219*^9}, {3.7497467735023746`*^9, 
   3.749746911372019*^9}, {3.750355373538177*^9, 3.7503553959537697`*^9}, {
   3.750360862816245*^9, 3.75036091965701*^9}, {3.75065554275772*^9, 
   3.750655545907774*^9}, {3.750655612889615*^9, 3.750655613558167*^9}, {
   3.750655741547908*^9, 3.750655792393737*^9}, 3.750656931278842*^9, {
   3.7571468034507365`*^9, 3.7571468366775255`*^9}, {3.7571468766358757`*^9, 
   3.7571468862076864`*^9}, {3.7576635407774744`*^9, 
   3.7576635425425215`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"01047cc0-f16a-427d-b7ce-\
0c29435e4e64"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:0438 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:0442\:0440\:0435\:0449\:0438\:043d\:044b \:0438 \:0446\
\:0432\:0435\:0442\:043e\:0432\:0443\:044e \:0433\:0430\:043c\:043c\:0443", \
"Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660953767308*^9}, 3.7476610327454557`*^9, 
   3.748969734854912*^9, 3.7489697856364202`*^9, {3.750660427182559*^9, 
   3.750660432292466*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"21ae29e2-a91d-4224-a123-\
209e3951a365"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "LightBlue", ",", "Green", ",", "LightGreen", ",", "White", ",", 
           "Yellow", ",", "Orange", ",", "\[IndentingNewLine]", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "White", ",", "White", ",", "White", ",", "White", ",", "White", 
           ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0.6", ",", "0.6"}], "]"}], ",", "Yellow", 
           ",", "Orange", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"myRainbow", "=", 
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"0.5", ">", "x"}], ",", "White", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"\"\<Rainbow\>\"", ",", "x"}], "]"}]}], "]"}]}], "]"}]}], 
     ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myRainbow3D", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"ColorData", "[", 
        RowBox[{"\"\<Rainbow\>\"", ",", "z"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GlueMatrix", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "matrix", "}"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"TakeList", "[", 
            RowBox[{
             RowBox[{"Reverse", "[", 
              RowBox[{"Transpose", "[", "matrix", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"matrix", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}], "}"}]}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Transpose", "[", "matrix", "]"}]}], "]"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PlotMatrix", "=", " ", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"matrix", ",", "matrixName"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"GlueMatrix", "[", "matrix", "]"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "matrixName"}], ",", " ", 
           RowBox[{"FrameTicks", "\[Rule]", "ticks"}], ",", 
           RowBox[{"GridLines", "\[Rule]", "lines"}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", "myRainbow"}], ",", 
           RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "barriers"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7476531195786133`*^9, 3.747653120240994*^9}, {
   3.7476534505006332`*^9, 3.747653485458448*^9}, 3.7476535222351294`*^9, {
   3.7476535950633698`*^9, 3.7476536054617443`*^9}, {3.747653655142853*^9, 
   3.747653656807279*^9}, {3.747653688090948*^9, 3.747653739282906*^9}, {
   3.7476538118536386`*^9, 3.747653827707106*^9}, {3.747656704788455*^9, 
   3.747656729694378*^9}, 3.74765701664755*^9, {3.7476584586379547`*^9, 
   3.7476584675487127`*^9}, {3.747658699447795*^9, 3.7476587124774933`*^9}, {
   3.7476587568371267`*^9, 3.747658782431654*^9}, {3.747660465335277*^9, 
   3.747660479701996*^9}, 3.7476610327461433`*^9, {3.7489348068714037`*^9, 
   3.748934817133738*^9}, {3.74893485538281*^9, 3.7489349552592983`*^9}, {
   3.7489349950905046`*^9, 3.748935017743618*^9}, {3.748935079617112*^9, 
   3.748935148106749*^9}, {3.748935208873681*^9, 3.7489353309778967`*^9}, {
   3.74893543472754*^9, 3.7489354449637127`*^9}, {3.748935604513166*^9, 
   3.748935774112791*^9}, {3.7489358857234097`*^9, 3.748935920285569*^9}, {
   3.748937178914475*^9, 3.748937196849533*^9}, {3.748937233907132*^9, 
   3.74893723762293*^9}, {3.7489372857884893`*^9, 3.74893733649858*^9}, {
   3.74893736830401*^9, 3.748937501097311*^9}, {3.748937550591075*^9, 
   3.748937608682899*^9}, {3.748937665178151*^9, 3.748937688168676*^9}, 
   3.748969734855296*^9, 3.7489697856368*^9, {3.750658527075471*^9, 
   3.750658533734511*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"b438da06-2c58-4df8-acea-\
37ef3435337f"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:0433\:0440\:0430\:0444\:0438\:043a\:0430 \:0445\:0430\
\:0440\:0430\:043a\:0442\:0435\:0440\:0438\:0441\:0442\:0438\:043a\:0438 \
\:0442\:0440\:0435\:0449\:0438\:043d\:044b", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.750666372371853*^9, 3.750666386564352*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"f292807d-09b1-495c-8b9c-\
9b6b00df497f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotCharacteristic", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"index", ",", "valueName"}], "}"}], ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"fracture", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"fracture", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "index", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{"Length", "[", "fracture", "]"}], ",", "1"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\:0412\:0440\:0435\:043c\:044f, \:043c\:0438\:043d\>\"", ",", 
          "valueName"}], "}"}]}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7506665343051243`*^9, 3.750666577544717*^9}, {
  3.750666634387631*^9, 3.75066664314911*^9}, {3.7579216351176195`*^9, 
  3.757921637429574*^9}},ExpressionUUID->"72bf3732-c3a2-4f97-80cb-\
c1e43b95ecdf"],

Cell["\<\
\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\:0438\
\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\
\:0438\:044f \:043a\:043e\:043d\:0442\:0443\:0440\:0430 \:0444\:0440\:043e\
\:043d\:0442\:0430 \:0442\:0440\:0435\:0449\:0438\:043d\:044b \:043f\:043e \
\:0433\:0440\:0430\:043d\:0438\:0447\:043d\:044b\:043c \:044d\:043b\:0435\
\:043c\:0435\:043d\:0442\:0430\:043c\
\>", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.751040043497757*^9, 3.7510400775702553`*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"b0004f69-f221-4be9-a8c1-\
e15c829973e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotCircles", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "distances", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"step", "=", "16"}], ";", "\[IndentingNewLine]", 
      RowBox[{"margin", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"color", "=", "Orange"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"color", ",", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Circle", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"i", "*", "step"}], ",", " ", 
                RowBox[{
                 RowBox[{"-", "j"}], "*", "step"}]}], "}"}], ",", 
              RowBox[{"4", "*", 
               RowBox[{
                RowBox[{"distances", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
             "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "margin", ",", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"distances", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "margin", " ", 
               "+", " ", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "margin", ",", 
              RowBox[{
               RowBox[{"Length", "[", "distances", "]"}], "-", "margin", " ", 
               "+", " ", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7510400351290483`*^9, {3.751040082955327*^9, 3.751040201282288*^9}, {
   3.751040352870755*^9, 3.751040354389183*^9}, {3.7510404023651247`*^9, 
   3.751040408893008*^9}, 3.7510404920256357`*^9, {3.7576533191945534`*^9, 
   3.757653335925003*^9}, {3.757653431925517*^9, 3.757653449333905*^9}, {
   3.7576715103027487`*^9, 3.7576715560901613`*^9}, {3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"88e4f2ea-e727-4648-a92f-\
4e85f1dbd17f"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:044e \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:043a\:0430\:0440\:0442\:044b \:0441\:043b\:043e\:0451\
\:0432", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.7506595791866627`*^9, 3.75065959874923*^9}, {3.750660436149928*^9, 
   3.75066046023411*^9}, {3.751040040004345*^9, 3.751040041480859*^9}, {
   3.7579216351176195`*^9, 
   3.757921637429574*^9}},ExpressionUUID->"394e299f-9abe-4d8b-a9b5-\
36a2d37636ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotLayersMap", "=", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"stressLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plainModulusLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"carterLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"minY", "=", "100000"}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxY", "=", 
       RowBox[{"-", "100000"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"layers", "=", 
       RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"i", "=", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "<", " ", 
         RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"y1", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y2", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y2\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"plainModulus", "=", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"layers", "[", 
              RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
             "\"\<Young's modulus\>\"", "]"}], "*", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "9"}]], "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Power", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"layers", "[", 
                   RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                  "\"\<Poisson's ratio\>\"", "]"}], ",", "2"}], "]"}]}], 
              ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<stress\>\"", "]"}], "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "y1"}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<stress\>\"", "]"}], "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], ",", "y2"}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plainModulusLine", ",", 
           RowBox[{"{", 
            RowBox[{"plainModulus", ",", "y1"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plainModulusLine", ",", 
           RowBox[{"{", 
            RowBox[{"plainModulus", ",", "y2"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"carterLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<Carter's coefficient\>\"", "]"}], "*", 
               SuperscriptBox["10", "6"]}], "]"}], ",", "y1"}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"carterLine", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"layers", "[", 
                 RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", 
                "\"\<Carter's coefficient\>\"", "]"}], "*", 
               SuperscriptBox["10", "6"]}], "]"}], ",", "y2"}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"minY", "=", 
          RowBox[{"Min", "[", 
           RowBox[{"{", 
            RowBox[{"y1", ",", "y2", ",", "minY"}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"maxY", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"{", 
            RowBox[{"y1", ",", "y2", ",", "maxY"}], "}"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"minY", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.5"}], "*", "cellLength", "*", "size"}], ",", 
          "minY"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxY", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "minY"}], ",", "maxY"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plotStyles", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dotted"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Green", ",", "Dashed"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Purple", ",", "Dotted"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plotLegend", "=", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\:041d\:0430\:043f\:0440\:044f\:0436\:0435\:043d\:0438\:044f\
\>\"", ",", 
             "\"\<\:041f\:043b\:043e\:0441\:043a\:0438\:0439 \:043c\:043e\
\:0434\:0443\:043b\:044c \:042e\:043d\:0433\:0430\>\"", ",", 
             "\"\<\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\
\:0442 \:041a\:0430\:0440\:0442\:0435\:0440\:0430\>\""}], "}"}], ",", 
           RowBox[{
           "LegendLabel", "\[Rule]", 
            "\"\<\:041a\:0430\:0440\:0442\:0430 \
\:0441\:043b\:043e\:0451\:0432\>\""}], ",", " ", 
           RowBox[{"LegendFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Framed", "[", 
               RowBox[{"#", ",", 
                RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}], "&"}], 
             ")"}]}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}], ",", "Right"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"commonPlotParameters", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Tiny", ",", "Medium"}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         RowBox[{"AxesStyle", "\[Rule]", "Transparent"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"minY", ",", "maxY"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"False", ",", "True", ",", "False", ",", "False"}], 
           "}"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"stressLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"stressLine", ",", 
           RowBox[{"{", "None", "}"}], ",", 
           RowBox[{"{", "None", "}"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "plotStyles"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "plotLegend"}], ",", 
         "commonPlotParameters"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plainModulusLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"plainModulusLine", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"plotStyles", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "commonPlotParameters"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"carterLinePlot", "=", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"carterLine", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"plotStyles", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", "commonPlotParameters"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Overlay", "[", 
       RowBox[{"{", 
        RowBox[{
        "stressLinePlot", ",", "plainModulusLinePlot", ",", 
         "carterLinePlot"}], "}"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.750355499782115*^9, 3.750355793596572*^9}, {
   3.7503558631512537`*^9, 3.75035595668403*^9}, {3.750356028597644*^9, 
   3.7503561318033533`*^9}, {3.750356194818742*^9, 3.750356208887875*^9}, {
   3.7503563618567467`*^9, 3.750356363361658*^9}, {3.750356423863585*^9, 
   3.750356473236062*^9}, {3.750356504013914*^9, 3.750356817174099*^9}, {
   3.7503568624727697`*^9, 3.7503569686281157`*^9}, {3.750357008792891*^9, 
   3.750357226835019*^9}, {3.750357435011059*^9, 3.7503574352471*^9}, {
   3.750357508025413*^9, 3.7503575160456057`*^9}, {3.750357547885824*^9, 
   3.750357583085084*^9}, {3.750357887241557*^9, 3.750357889461896*^9}, {
   3.7503579481465197`*^9, 3.750357984969563*^9}, {3.7503580226450663`*^9, 
   3.750358024481966*^9}, 3.750361185626094*^9, {3.750658720102997*^9, 
   3.750658726408321*^9}, {3.7506587623250723`*^9, 3.750658810269313*^9}, {
   3.750658848101965*^9, 3.750658944354722*^9}, {3.750658984747673*^9, 
   3.750659069691119*^9}, {3.7506592334858294`*^9, 3.750659554818267*^9}, 
   3.7506595987503633`*^9, {3.750660239574378*^9, 3.750660403592054*^9}, 
   3.750660460234714*^9, {3.750660513265897*^9, 3.7506606132287827`*^9}, {
   3.757146186440631*^9, 3.7571462480997224`*^9}, {3.7571463308534384`*^9, 
   3.757146374077917*^9}, {3.7571464264808116`*^9, 3.757146456638303*^9}, {
   3.7571467048801203`*^9, 3.7571467219542065`*^9}, {3.7579216351176195`*^9, 
   3.7579216374451947`*^9}},ExpressionUUID->"de53eaa8-5f9f-4f21-90ff-\
43a6ff9125cd"],

Cell["\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0443\
\:0434\:0432\:043e\:0435\:043d\:043d\:043e\:0433\:043e \:0433\:0440\:0430\
\:0444\:0438\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.7579216318215137`*^9, 
   3.757921647114832*^9}},ExpressionUUID->"1a670f20-a3b6-450a-ad8b-\
342673b49f03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotDoubleMatrix", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "matrixName"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"doubleTicks", "=", 
       RowBox[{"createTicks", "[", 
        RowBox[{
         RowBox[{"0.5", "*", "cellLength"}], ",", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"middle", "-", "1"}], ")"}]}], "+", "1"}], ",", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"size", "-", "1"}], ")"}]}], "+", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"doubleLines", "=", 
       RowBox[{"createLines", "[", "doubleTicks", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"GlueMatrix", "[", "matrix", "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "matrixName"}], ",", " ", 
         RowBox[{"FrameTicks", "\[Rule]", "doubleTicks"}], ",", 
         RowBox[{"GridLines", "\[Rule]", "doubleLines"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", "myRainbow"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7579216318215137`*^9, 
  3.7579216374451947`*^9}},ExpressionUUID->"22d0e063-4a2f-4302-8b76-\
c318fb3d02c1"],

Cell["\:0417\:0430\:0433\:0440\:0443\:0436\:0430\:0435\:043c \:0434\:0430\
\:043d\:043d\:044b\:0435 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\
\:043e\:0435\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 
   3.7489697856369534`*^9},ExpressionUUID->"573585d3-2ab7-4012-9bde-\
ee091976122e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"concentration", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<concentration_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fracture", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<fracture_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opening", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<opening_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressure", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<pressure_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748933665070517*^9, 3.748933667635915*^9}, {
   3.748967897373295*^9, 3.748967952408773*^9}, 3.748968045615181*^9, 
   3.748969785637787*^9, {3.748969873450966*^9, 3.7489698881760197`*^9}, {
   3.748970008078432*^9, 3.748970029339315*^9}, {3.749002589036405*^9, 
   3.749002591800912*^9}, {3.749197428231081*^9, 3.74919743718463*^9}, {
   3.750355267359632*^9, 3.7503553082320023`*^9}, {3.750361141233561*^9, 
   3.75036114372082*^9}, {3.75036139017474*^9, 
   3.7503613910997057`*^9}},ExpressionUUID->"dbe4cd76-4469-4ba0-8820-\
019c7d484c1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"openingFilenames", "=", 
    RowBox[{"FileNames", "[", 
     RowBox[{"\"\<*_m.txt\>\"", ",", 
      RowBox[{"folder", "<>", "\"\<Opening/\>\""}]}], "]"}]}], ";"}], 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"1", " ", "<", 
       RowBox[{"Length", "[", "openingFilenames", "]"}]}], ",", 
      RowBox[{"openingFilenames", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{"openingFilenames", ",", 
         RowBox[{"ToExpression", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringSplit", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<=\>\"", ",", "\"\<_\>\""}], "}"}]}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "]"}]}], "]"}]}]}], "]"}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"openingAtCheckStep", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"openingFilenames", "[", 
        RowBox[{"[", "t", "]"}], "]"}], ",", " ", "\"\<Table\>\""}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numberOfCheckSteps", "=", 
   RowBox[{"Length", "[", "openingFilenames", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7503554730398903`*^9, {3.750657168634218*^9, 3.7506572226324253`*^9}, {
   3.750657269550213*^9, 3.75065727758918*^9}, {3.750657360637339*^9, 
   3.750657373821903*^9}, {3.7506574159365473`*^9, 3.750657416799019*^9}, {
   3.752485685149294*^9, 3.752485723856041*^9}, {3.753164422442254*^9, 
   3.75316447320899*^9}},ExpressionUUID->"a97292b3-e790-4763-b444-\
aa3c9e960ac0"],

Cell["\:0412\:044b\:0432\:043e\:0434\:0438\:043c \:0432\:0440\:0435\:043c\
\:044f \:043f\:043e\:0441\:043b\:0435\:0434\:043d\:0435\:0433\:043e \:0437\
\:0430\:043f\:0443\:0441\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}},ExpressionUUID->"5f65bd77-40eb-4e12-b562-\
42a327fbbec3"],

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
    "\"\<\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\:0434\
\:043d\:0435\:0433\:043e \:0437\:0430\:043f\:0443\:0441\:043a\:0430:\>\"", 
     " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"DateString", "[", "]"}], ",", "Orange"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.749195512564392*^9, 3.749195545569838*^9}, {
  3.749195598370927*^9, 3.749195681354604*^9}, {3.749197676357965*^9, 
  3.749197687499799*^9}, {3.7491981127205763`*^9, 
  3.749198119614801*^9}},ExpressionUUID->"38a1c404-a80a-4f37-b880-\
ecc92f0fda32"],

Cell[BoxData[
 StyleBox[
  RowBox[{"\<\"\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\
\:0434\:043d\:0435\:0433\:043e \
\:0437\:0430\:043f\:0443\:0441\:043a\:0430:\"\>", " ", 
   StyleBox["\<\"Tue 5 Mar 2019 18:27:04\"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0.5, 0],
    FrontFaceColor->RGBColor[1, 0.5, 0],
    BackFaceColor->RGBColor[1, 0.5, 0],
    GraphicsColor->RGBColor[1, 0.5, 0],
    FontColor->RGBColor[1, 0.5, 0]]}],
  StripOnInput->False,
  FontSize->24]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.749195659419508*^9, 3.749195673211211*^9}, 
   3.749195717683158*^9, 3.7491976880563498`*^9, {3.74919811272084*^9, 
   3.749198124508636*^9}, 3.749198547581563*^9, 3.74974577318449*^9, 
   3.7497458945699177`*^9, 3.749746363493379*^9, 3.749746523405265*^9, 
   3.749746676390993*^9, 3.749746717948832*^9, {3.749746796696604*^9, 
   3.749746814039156*^9}, 3.749746914039852*^9, 3.750355233686296*^9, 
   3.7503554477398863`*^9, {3.750360556216104*^9, 3.7503605666632433`*^9}, 
   3.7503607801969137`*^9, 3.7503611476314583`*^9, 3.750361263438398*^9, 
   3.7503613949006863`*^9, 3.7503614744322433`*^9, 3.750655374338236*^9, 
   3.7506554082503853`*^9, {3.750655458531261*^9, 3.750655464638625*^9}, 
   3.7506557512823467`*^9, 3.750655795952038*^9, 3.7506560265283737`*^9, 
   3.750656136604802*^9, 3.7506564375125713`*^9, {3.750656915409037*^9, 
   3.750656934849925*^9}, 3.750658504368836*^9, 3.750658566935512*^9, 
   3.750659695607489*^9, 3.750660462939427*^9, 3.750660582327619*^9, 
   3.750660616680229*^9, 3.7506663258812857`*^9, 3.750666757135747*^9, {
   3.751040182747201*^9, 3.751040192950671*^9}, 3.751040360329432*^9, 
   3.751040412204547*^9, 3.7515227620073433`*^9, 3.7515261687620907`*^9, 
   3.751615377030303*^9, {3.751615463201515*^9, 3.751615477707189*^9}, 
   3.751615682300685*^9, 3.751615917177168*^9, 3.751615995074151*^9, 
   3.751616095693368*^9, 3.7516183414337597`*^9, 3.7524855465523653`*^9, {
   3.7524855804109573`*^9, 3.7524856094127126`*^9}, 3.7524856461426153`*^9, 
   3.7524857590646477`*^9, 3.753164440016218*^9, 3.7538625516409483`*^9, 
   3.7538626010512495`*^9, 3.7538627623884706`*^9, 3.754638725719348*^9, 
   3.754638979218073*^9, 3.7546391083282213`*^9, 3.7546392253821335`*^9, 
   3.7546393299616723`*^9, 3.754639792915779*^9, 3.754640136856781*^9, 
   3.754642428063615*^9, 3.754646200280037*^9, 3.754649657661769*^9, 
   3.7546504264040556`*^9, 3.7546505727445335`*^9, 3.7546519768998513`*^9, 
   3.75465208037519*^9, 3.7546523291861*^9, 3.7546525047837963`*^9, 
   3.7546531259332304`*^9, 3.75465323619244*^9, 3.7561110952789073`*^9, 
   3.756183767554145*^9, 3.7561838191099224`*^9, 3.756188248790681*^9, 
   3.7561882858664894`*^9, 3.7561959488481665`*^9, 3.757146255714679*^9, 
   3.7571465394105883`*^9, {3.757146679426608*^9, 3.7571467254847383`*^9}, {
   3.7571468087151065`*^9, 3.757146839098605*^9}, {3.7571468791351013`*^9, 
   3.7571468881290636`*^9}, 3.757147012508487*^9, 3.757147053309069*^9, 
   3.75714709071288*^9, 3.757147139474738*^9, 3.757147282024349*^9, 
   3.757147439329136*^9, 3.757148048138564*^9, 3.757148390117943*^9, 
   3.757149543401328*^9, 3.7573124901220355`*^9, 3.757312806925419*^9, 
   3.757313095773717*^9, 3.7573132106623006`*^9, 3.75731326216355*^9, 
   3.757313384022509*^9, 3.757313518103788*^9, 3.7573136926188917`*^9, 
   3.7573137480517673`*^9, 3.7573138330349555`*^9, 3.757314482294738*^9, 
   3.7573145228180227`*^9, 3.7573145899272633`*^9, 3.757314712860545*^9, 
   3.7573147663542857`*^9, 3.757315101863775*^9, 3.757315707041792*^9, 
   3.757315973157895*^9, 3.7573165752591634`*^9, 3.757323338833152*^9, 
   3.757323657121977*^9, 3.757327845501257*^9, 3.757328738569846*^9, 
   3.7573298575505896`*^9, 3.757393788709646*^9, 3.7573950029163485`*^9, 
   3.7574076969767027`*^9, 3.7574089268359537`*^9, 3.7574114422623997`*^9, 
   3.757415015625086*^9, 3.7576527927824078`*^9, 3.757652850347029*^9, 
   3.757660420367476*^9, 3.7576630996657834`*^9, 3.757663546775882*^9, 
   3.757671560698409*^9, 3.7576720854083395`*^9, 3.7576727139398627`*^9, 
   3.7576728118433695`*^9, 3.757672846095731*^9, {3.7576728960884647`*^9, 
   3.7576729061173906`*^9}, 3.7576729476683617`*^9, 3.7579120251677094`*^9, 
   3.7579210121227283`*^9, 3.7579212537288756`*^9, 3.757921429520739*^9, 
   3.7579215247170496`*^9, 3.757925447983324*^9, 3.75792739758609*^9, 
   3.7579276460377007`*^9, 3.7584308130387497`*^9, 3.758431088071436*^9, 
   3.7584314333747234`*^9, 3.758431869639453*^9, 3.758431981983164*^9, 
   3.758432020462161*^9, 3.758432081701499*^9, 3.7584323369175463`*^9, 
   3.7584326706889896`*^9, 3.75843284677746*^9, 3.758433888144831*^9, 
   3.7584347756995645`*^9, 3.7584389799787865`*^9, {3.7584414130548944`*^9, 
   3.7584414342552605`*^9}, 3.758441881257159*^9, 3.7590590926429453`*^9, 
   3.7592211796408396`*^9, 3.759221267962756*^9, 3.7592219257789297`*^9, 
   3.759222067464307*^9, 3.7592242962870893`*^9, 3.759224783216329*^9, 
   3.7607801356086664`*^9, 3.7607819373382883`*^9, 3.76078469609286*^9, 
   3.7607864994541593`*^9, 3.7607869462270975`*^9, 
   3.760788424411932*^9},ExpressionUUID->"e9bef392-407e-432b-af11-\
9bb1f5d74f55"],

Cell["\:0421\:0442\:0440\:043e\:0438\:043c \:0433\:0440\:0430\:0444\:0438\
\:043a\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660984637878*^9}, 3.7476611498754272`*^9, 
   3.747664166427878*^9, 3.7489697348559017`*^9, {3.749746711959444*^9, 
   3.749746715762725*^9}},ExpressionUUID->"c9835767-2b4a-4bf0-9d05-\
9ee1c3d7ac31"],

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
    "\"\<\:0414\:043b\:0438\:043d\:0430, \
\:0432\:044b\:0441\:043e\:0442\:0430, \:0440\:0430\:0441\:043a\:0440\:044b\
\:0442\:0438\:0435 \:0432 \:0438\:0441\:0442\:043e\:0447\:043d\:0438\:043a\
\:0435 {\:043c,\:043c,\:043c\:043c}:\\n\\t\\t\>\"", " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"fracture", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "Orange"}], "]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotMatrix", "[", 
  RowBox[{
  "opening", ",", " ", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotCharacteristic", "[", 
  RowBox[{
  "3", ",", 
   "\"\<\:041f\:0440\:0438\:0437\:0430\:0431\:043e\:0439\:043d\:043e\:0435 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:0435, \:041c\:041f\:0430\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"0", "<", 
    RowBox[{"Max", "[", "concentration", "]"}]}], ",", 
   RowBox[{"PlotMatrix", "[", 
    RowBox[{
    "concentration", ",", " ", 
     "\"\<\:041a\:043e\:043d\:0446\:0435\:043d\:0442\:0440\:0430\:0446\:0438\
\:044f \:043f\:0440\:043e\:043f\:043f\:0430\:043d\:0442\:0430\>\""}], "]"}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotLayersMap", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"opening", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"middle", "-", "i"}], ")"}], "*", "cellLength"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "opening", "]"}], ",", "1"}], "}"}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", "All"}], "}"}]}], 
      ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">=", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              RowBox[{"opening", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"middle", "-", "i"}], ")"}], "*", "cellLength"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "opening", "]"}], ",", "1"}], "}"}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"FileExistsQ", "[", 
    RowBox[{"folder", "<>", "\"\<times_v.txt\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<\:0417\:0430\:043c\:0435\:0440\:044b \
\:0432\:0440\:0435\:043c\:0435\:043d\:0438\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"measuredTimes", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"folder", "<>", "\"\<times_v.txt\>\""}], ",", " ", 
        "\"\<Table\>\""}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"totalTime", "=", 
     RowBox[{"measuredTimes", "[", 
      RowBox[{"[", 
       RowBox[{"Length", "[", "measuredTimes", "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{"Length", "[", "measuredTimes", "]"}]}], ",", 
      RowBox[{"++", "i"}], ",", 
      RowBox[{
       RowBox[{"measuredTimes", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "/=", 
       RowBox[{"0.01", "*", "totalTime"}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Grid", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
            "\"\<\:0420\:0430\:0441\:0447\:0451\:0442 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:044f\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<\:041f\:0440\:0438\:0440\:043e\:0441\:0442 \:0440\:0430\
\:0441\:043a\:0440\:044b\:0442\:0438\:044f\\n(\:0438 \:043a\:043e\:043d\:0446\
\:0435\:043d\:0442\:0440\:0430\:0446\:0438\:0438)\>\"", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\:041f\:0435\:0440\:0435\:0441\:0447\:0451\:0442 \:0440\
\:0430\:0441\:0441\:0442\:043e\:044f\:043d\:0438\:0439\\n\:0434\:043e \:0444\
\:0440\:043e\:043d\:0442\:0430\>\"", ",", 
               RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             "\"\<\:0418\:043d\:0442\:0435\:0433\:0440\:0438\:0440\:043e\:0432\
\:0430\:043d\:0438\:0435\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:041f\:0435\:0440\:0435\:0441\:0442\:0440\:043e\:0435\:043d\
\:0438\:0435 \:0441\:043f\:0438\:0441\:043a\:043e\:0432\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<\:0421\:043e\:0445\:0440\:0430\:043d\:0435\:043d\:0438\:0435\
 \:0448\:0430\:0433\:0430\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:0418\:0437\:043c\:0435\:043d\:0435\:043d\:0438\:0435 \
\:0437\:0430\:043a\:0430\:0447\:043a\:0438\>\"", ",", "\[IndentingNewLine]", 
             "\"\<\:041c\:0430\:0441\:0448\:0442\:0430\:0431\:0438\:0440\:043e\
\:0432\:0430\:043d\:0438\:0435\>\""}], "\[IndentingNewLine]", "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"measuredTimes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{
                RowBox[{"Length", "[", "measuredTimes", "]"}], "-", "1"}], 
               ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
         "\[IndentingNewLine]", "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "All"}], ",", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"totalTime", "/", "1000000"}], 
       "\"\<\:0441\:0435\:043a\:0443\:043d\:0434 \:0432\:0441\:0435\:0433\
\:043e\>\""}], ",", "Bottom"}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.749746711959631*^9, {3.7503604496962852`*^9, 3.7503605102226467`*^9}, {
   3.750658187684452*^9, 3.7506581966759377`*^9}, 3.750658599559669*^9, {
   3.750660410623929*^9, 3.7506604108938932`*^9}, {3.750666592966673*^9, 
   3.750666609429427*^9}, {3.750666647089669*^9, 3.750666650063033*^9}, {
   3.7510398594727287`*^9, 3.751039878653421*^9}, {3.757313894301865*^9, 
   3.7573142039637947`*^9}, {3.7579135982458677`*^9, 3.757913608602586*^9}, {
   3.7579142495638924`*^9, 3.7579143338119197`*^9}, 3.75791440434883*^9, {
   3.757914587589645*^9, 3.7579145929167037`*^9}, {3.7579146284265175`*^9, 
   3.7579146349248953`*^9}, {3.7579213280693846`*^9, 
   3.7579213309280586`*^9}, {3.75922430234816*^9, 
   3.7592243128300653`*^9}},ExpressionUUID->"d92d7a12-ebcc-4f18-83e0-\
f681f54b8eec"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"\<\"\:0414\:043b\:0438\:043d\:0430, \:0432\:044b\:0441\:043e\:0442\
\:0430, \:0440\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435 \:0432 \:0438\
\:0441\:0442\:043e\:0447\:043d\:0438\:043a\:0435 \
{\:043c,\:043c,\:043c\:043c}:\\n\\t\\t\"\>", " ", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"140.285`", ",", "27.5534`", ",", "3.4537`"}], "}"}],
    StripOnInput->False,
    LineColor->RGBColor[1, 0.5, 0],
    FrontFaceColor->RGBColor[1, 0.5, 0],
    BackFaceColor->RGBColor[1, 0.5, 0],
    GraphicsColor->RGBColor[1, 0.5, 0],
    FontColor->RGBColor[1, 0.5, 0]]}],
  StripOnInput->False,
  FontSize->24]], "Print",
 CellChangeTimes->{{3.7573140571074085`*^9, 3.7573142043853965`*^9}, 
   3.757314482310359*^9, 3.7573145228180227`*^9, 3.7573145899585056`*^9, 
   3.757314712876047*^9, 3.7573147663857603`*^9, 3.7573151018793845`*^9, 
   3.757315707057434*^9, 3.757315973173514*^9, 3.757316575290423*^9, 
   3.757323338833152*^9, 3.757323657121977*^9, 3.757327845516865*^9, 
   3.7573287385855427`*^9, 3.7573298575609694`*^9, 3.7573937887252316`*^9, 
   3.757395002931969*^9, 3.7574076969767027`*^9, 3.757408926842561*^9, 
   3.757411442278022*^9, 3.757415015640706*^9, 3.757652792813685*^9, 
   3.7576528503626814`*^9, 3.7576604203831*^9, 3.7576630996657834`*^9, 
   3.757663546807126*^9, 3.757671560698409*^9, 3.7576720854241066`*^9, 
   3.7576727139554834`*^9, 3.757672811858959*^9, 3.7576728461113534`*^9, {
   3.757672896104086*^9, 3.7576729061486063`*^9}, 3.757672947699605*^9, 
   3.757912025198925*^9, 3.757913618506505*^9, 3.7579146467513285`*^9, 
   3.75792101213837*^9, 3.7579212537429314`*^9, 3.7579214295362797`*^9, 
   3.757921524732671*^9, 3.7579254479989767`*^9, 3.7579273976017113`*^9, 
   3.757927646053316*^9, 3.758430813069991*^9, 3.758431088071436*^9, 
   3.7584314333903723`*^9, 3.758431869655073*^9, 3.758431981983164*^9, 
   3.7584320204777665`*^9, 3.7584320817171535`*^9, 3.758432336933195*^9, 
   3.758432670704612*^9, 3.758432846793081*^9, 3.7584338881604366`*^9, 
   3.7584347757307854`*^9, 3.758438979994408*^9, {3.758441413070539*^9, 
   3.758441434286497*^9}, 3.7584418812727795`*^9, 3.7590590926740355`*^9, 
   3.759221179656455*^9, 3.759221267978345*^9, 3.7592219257789297`*^9, 
   3.75922206747991*^9, 3.7592242963027105`*^9, 3.7592247832319508`*^9, 
   3.76078013566068*^9, 3.7607819373562927`*^9, 3.760784696106863*^9, 
   3.7607864994661617`*^9, 3.7607869462441015`*^9, 
   3.760788424428936*^9},ExpressionUUID->"7acd5b0d-0ae8-496a-9fdf-\
ccf2282cbe51"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1:eJzs3QtUzesXL/yIJHLLNbeQW4oIXcSzSFFCFCohIUkRESISQokSqZAoKYoo
SblEJN0pSbqqVqt1DUnl9q7/u1+/n7Gf5th7jDPO+Z/3nNkYe3z2mKOxqt/v
eeb8Pqu1MsJu69INsjIyMn7S/05K//vP///10UhQFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFP0/X88Tq/TWfJNQBi3xfPdBQss/Zvjs
QgWt+b3rCcczaXMXmj79kULb6+JP4943aa1fdI0be4U2fHZXoVkgbUIPl59W
J/+90ONAXxf6PqGfC7oO0HWDrjN0X/7b6wVFURRFUfT/NPn9k3/UBkso+69J
sFwjT6vSFiK3fJuY0rmlwz2PUhFlhOrVLhl2tAm//CalSYSUGomhK+WCaD05
XSdNnkKroFnk1++zgDIq9ilH5xWtcsRE7tirtG0mr9c/cqf1D9xROm41rcmu
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
CaPMgC13HK5fIY1Vjxo+ukkYZQqnqUfeCSHuTx93fXpLwujZZ4Cl/oCTRG3n
+J33BRJGmTkFsws2bWH6n81+vyO38n/Pld8fjaRxQ+To+gC6njjhnF6yIV03
G/xrQ89edN12cNdLwgwxVbc5MbPHk8N0XebKpp8JU+l6ScqPkoRudH3Iw37H
dvNF9Oc/PlG2+QFdj7zH2X7uMl1vGRYRtcCTrl843lJZ4tDO5589kvfF9t/X
wccBvi70fUI/F3gdgOsGXWfovkD3Ebrv0DqB1tXf1yG0bqF1Du0LaB9B+w7a
p9C+hvoA1DegPgP1JaiPQX0P6pNQX4X6MNS3oT4PzQVojkBzB5pT0FyD5iA0
N6E5C81laI5Dcx/KCVCugHIIlFugnAPlIihHQbkLymlQroNyIJQboZwJ5VIo
x0K5F8rJYK4GcjiU26GcD50LoHMEdO5g+vP/5vKzXWxtN/IpTZ5dyt+py6OU
da+YzU/iUiqtXVPjObmO0qx/9ZFQ1VpKTpTh3Y0zahjDvQe41I6pIXF1E+4p
Tapl9Bg7y9nuvnRfbNIe4za+jtG2OjYjb3YVKT9/sGRaXR2jo/pet9VmFaQ8
RnZZSTiX0bHjF5ldQ8uIR8yOgZlL6xl9ZK8kXetSSmbu3D/DV5bHaBJ+eOHq
L2+JN6mL1UzkMTrPNmt1rnlDvN9e8M8ybWB03jN+UfigIiKT/bC3Q1MD66WM
rBcjX5Oq4E0ycw7yGW2npf/U3VdA2hR6B3aTFzCOeRTil5KfSzJST/ceHCJg
tA45FbRqUxaJ6ik/u+tgIaPylfw9mateEC2te7wOiULGnJxE36YX6SRdbkr5
uBEiRqe3hQUKuk/ImNEzybIAEePUOSO7dtB8KH28mlnaimLGAnsLxU1r7xGZ
cUc8Rx4Ts6o8bV0bdpvI6BpPdG8Vs0aPjPG9EE0inDbkc7dJGG0vfxtyPzKU
xK+q9M2qlTDKPNgzcIDDDmY99kopq1YJoXPFvntGSZVydJ3TvKjDAzM6zzx7
Z5268Q2doxptrxaqTqfrRR/9Q14/ENL5h/c67eZcuj6kQ4LnzkwBVT+mqzZW
uIKuy7s5WNSV86l6ZvcuTQk76Lplx8FD5EUNVF0/aPp2DW+6Lv/F0OFKN7pu
EX9Z+fU5Hp0bO/dy6jmYrqu+Dn03NaWeqk9dI+//zZqu5yRZvnv5iUvV59t+
OSM8T9c1P9l0fDG9nfryEF5IeR1V95+qcP3tEboeLlk8ccckul6SPXJWQmUt
Ve9V79gyN4Cuh68YFsQbT9f9W3U0ZcU19Od3vjk18SRd9/9SUuRkRtejx3mM
qxJ/oOo6JENB6T5d5zQOmGy0k6672Kp5+8yn61ObL7fN6EHX98n/6G3JrabP
I1cn9tkQS9d1KmqbQ87S9WcNlXKzXOl6o2zCj+xldL2XxhT7qIX/vg49DvR1
oe8T+rmg6wBdN+g6Q/cFuo/QfYfWCbiuoHUIrFtonUP7AtpH0L6D9im0r6E+
APUNqM9AfQnqY1Dfg/ok1FehPgz1bajPQ3MBmiPQ3IHmFDTXoDkIzU1ozv59
LkNzHJr7UE6AcgWUQ6DcAuUcKBdBOQrKXVBOg3IdlAOh3AjlTCiXQjkWyr1Q
ToZyNZTDodwO5XzoXACdI6BzB3RO+b0+/1ebKyjOdWvkU3pfHqP5aFc95Xf9
9Io+zbWU3ZesWLxkTg2lX66RTH1GLWNc9tkDV99UkdxB94Y6ynEZQ++URj0R
lhOOv+Ns5cH1rIvTZty+WQq+Tl4r/d0GpyENjPZJ2/NSrheR66qx6bYKfEbZ
098Sy6tekc9prwbXZPMZTd37WcXp5BPZmK67tvsKGIVdM6YtSc0ipgfXtsjN
FDJOaUnSKA7IIO6VzlaxbULGMelO9V+GPyX9I8IsmoNEjE3W/vI7hA+I3L5N
eYd1xIzxk3qYZ1jdJY6Vxt8+5YkZVXoobdMJiSVR1ts18u0kjGkyp9zH7rnI
3DcLS8Fn5V90f5tamO4Uok3Xk7N3auz0oPvksezA6ufP23me1jrGy6EfXe+0
6/79SQfpvm32qU+nygq6/+tM1x6ptIiuq9r1q0u6T8+XWMG0rvJj6Xp3RTtl
9fP0/GrZonCsXKaduabR63GAHT03L3SPK/uST89fmzNLtgeY0/W0xFE9/TPp
+X5M0zR9uTFdj78wZ0iPDDpXeHaXiH8Z0PVO+V0XFT+k88wQZ9nsgbPouqn5
Zp93z+gcdVgx7WC/mXS9Zc1kV6fbdH7TTOQM3zubrjeNELjMSKdzpmnf+6WH
jdrJn8cutFTzq+ift9Yks9mTrpel9/tpNY6tcxpiioa9lhCVF9FKC/0qmbrI
9UQn8+MSUjBije/itxVM3Tpdx8B1pnQe8xTHhQ9i6xenLW6K/yQm8nIZdimr
y5m63miD2V1ixKRX+dhRp6PKmPqoco23B2zFpCT6Uwj5+J6p/3hUZu41Qkx2
l1979dycrSt2+3B3Z6WIhA++axQl7Ue/63I79z/QviEi/qr6K7qps/Vw3QHq
ra4i0quXnlh8+R1TzzoXvFV+lojs3vujf7/BbN310Ju51xWlj5/ZL3b8lRKm
XrjXtN+ZUiHxn0ambR/J1rW6FD+qj5Tuwz4DVhlceMvU+9989bxWuj91tE6I
U+eydbXUbzMHmgkJz/xLqH5mMVO3DbIanjFNSBq/rlm01Zuta16vlHD7Ccnu
8bdWPJnO1ovXrpu/u1VAgne0JMZK3jD1mpunL4U0CIjOXXEPmUy2rqbcZBUk
7QsOsz9U7Yr95zr0ONDXhb5P6OeCrgN03aDrDN0X6D5C9x1aJ9C6gtYhtG6h
dQ7tC2gfQfsO2qfQvv7rg+4Dv+tQ34D6DNSXoD4G9T2oT0J9FerDUN+G+jw0
F6A5As0daE5Bcw2ag9DchOYsNJehOQ7NfSgnQLkCyiFQboFyDpSLoBz199wF
5TQo10E5EMqNUM6EcimUY6HcC+VkKFdDORzK7VDOh84F0DkCOndA5xToXPP7
Pv6PqjA7rFRjq4RSpsDZbsYvHuUhycyufb3rKBXz7niJ59UwirI+z1DuW0Ns
awtPmlvXMVYtPWze+WMlkS0tPC8s5TI2bzusrrf1PXFrcLS4v5zHeMHgccei
b8Xks6WJzDP/BsYxX1R+JSwsJFGTXk7ef4XPqLgt0vHIwAJyaFkHg+3RAkbh
z6/OSxWzyJiNivLh4UJG5bO38on+M+J6fY2ciXR+/Ta44+GEo8GPSMbwiv4f
Z4kZ472CRHe63yVZXnkZrp0kjCoPI2xGn71Gpn9qKNJ8IGH0nGA4Lt75OHO9
44eqie+saed1PjuCOxk70vvX1H9m8PbAdp4vmr05//nzdp6PUj9892g3uh7r
Z1czeg3dfyzU1tQrRNF97PsXPw1BUzvnlMxxGzlGdD182vWszpfofjtuSR9h
Fz7dn80e3xjQ1ZSuN00pbq2+Rff/kqX8OVnKdL2xlKOdsY+eL5ZkZXUJn55T
Omd13+QtpuvHEjvdexffzrnjeNHtW/J0Pfbm5xex3vSc1XebNHJCMz2vS7KD
daPW0vWW1S7GuhV0Hnjw5cdrORu2HnFynvodroQE197Z8jCNzSE1uXsTnx+W
kGSvaQbibDa3KIXWW9SMkhDNDgYWye/Y/KNYJbui5rG0j8cft0quZPOSueGq
gCxLMTHT2LS5rZzNV34eU9PdfolIla4sL/onm9NUCnauSb0lImbHorZYaLP1
4onOHo8tRWTgF//7FavYHFj1s+8XlS4ioumRuP51AJsnL1ZcGrf7jpAciz21
Qf0Rm0uHqt/c27xaSOZv0ZrmIGLzrZth1ZLcXkISHRdv2kGNrcuq3PpulSog
8gV3v9pasLla6dW4d9W7BCRegRuWeKOIqTdHdh93dJo0t18YXvuqM1sP57oG
mTfxiX/aiJYCu0Kmfuj0ZH6veD6ZL95rrJb8ms3ty9S3aG7jk5aiLUqtymz9
4h6P/FRtPpGPv++9zPcVU/euM6gZ9rWBFDwcr5PbUMDU48K0fOIyG0h894Pv
bu9k6/YDHpbYeEn3287bMwp889n70ur+yWlRA0mrtH+gciyPqSdsWVDHHdBA
PMfvcffalcvm5MXu8Xb1PKJyYt120eEcNg939Y7zfc4jaRPD1qW8z2bq62Zm
Lzh/kUcap7S4y/dl6+X7NAIqPHnEzKXmjeXhLPZ84ZQSvnCddP8PjRx1uPEl
U384xHKd61IeiT+V3Mi5wNZnyt/Tm7KARzTHB47+tuuf69DjQF8X+j6hnwu6
DtB1g64zdF+g+wjdd2idQOsKWofQuoXWObQvoH0E7Tton0L7GuoDUN+A+gzU
l6A+BvU9qE9CfRXqw1Df/uuD7vO/69BcgOYINHegOQXNNWgOQnMTmrPQXIbm
ODT3oZwA5Qooh0C5Bco5UC6CchSUu6CcBuU6KAf+PTdCORPKpVCOhXIvlJOh
XA3lcCi3QzkfOhdA5wjo3AGdU6BzDXgO+v+u/7+1ULXL5OVESGnEs2g5FFlP
Gbg01++9YS2lXIYSxyOGtXn5h+HPOlSTKNuO0zeGchm7V7SsytIsI3FJ0cYT
1vAY2953HrX/QzFxfRJ51qCygTEqtTeZZveaLGz+esNioIBxip5mi+yWXGJU
cq0+W0fIaC3udVrnRgbxdr9V/krab3+bODvj/Pjix8SvJmRLsYWY0WHZy4JP
nROJouwOAxsiYSxIGh5n1fMKc512l9ffDC6lz0HRay9E5ubQ69/S1ELX6HY7
56D+d/baJ9H7yz/su6O4rp3f44zUdurfj64/KzV0tTKg9zvnnWq3IZ50fzAV
jbZuutvOeefFjbt+tXRfqgr0knfXpOueGxNnBx5vpx8aWKnYvKH7Z+aKubMv
j6Pr3WO36J881k5/rlrccLuU7ucFpiGfqofRdbPuo5WstrbzuqYvfWf2qKbn
S1WQ3NvUqXTdYcjN7tti6PmVHNVhrbkyW4+qmVdwM0Lap+4nyE8bxM7H9ENk
eLC2hDi8HLbouwI7Tx8uzRtpnSkmJXmyK6qb2Lkst/BF+KMlYuLP+RRgk8PO
cdFRnWYFkYgUmPttPF/Azv2F1y38bI6LSFqM+dqNb9n8oPxrqtLDMdK6R6f4
kqo/fn9RZXp7rLSP95rCmVEjZPOJiMwRXF8vJAWXRpve+MbmmcKBPO9eHaSf
P2vukpiObF154Oj8l1cEhPOg7EhLfzYvZXDvFPVeJCCNnMeB6gZsvpo56lmr
ZxufDLR0dJmznc1pbfv7rHgbwScuM29ahYawuc59fm2hxSI+0byb0rsonc2H
xeXvCtV+NpDg6+G9N39j86Tb6e7dedcbyLgtw4fNncDWnZMlFzuuaiAqoTf7
Kb5ic2zUj54Onbo3EE7TYvn++mzunZ5Y5bsujUd6HVmX+vEJm5+Vy9Z2VXHn
EU/ThonhdmwOj1PKmPNak0ds7SoWDm7KZD8/sTTX5ks98Txs2Lkg68UfX3dy
zJjUeunXbV345FoGU0+r2mY5y6uepK3TTdH2fc7Ul0cnHIszqSfxxl431u18
xl7nU0mOJ/rWk6o8/36P7NOZeqN6nKW4kkviq9amXlvzlKmn3Fm+1/4ul4R7
3HaQ8X3C1JNMAqp+HOAS/53Fdl8OpLHnhSd7DQNMuYRz4k1S7I9HTP06503W
RHXp43hbCAvvP2Q//5e63iiF/7zv/omh7YYHbG5UrOu4TSKdd8c+DXG0TmXX
1eK96vUldYQz7NWDLntSmHr81L0vHxZI52KPgopNY/+5Dj0O9HWh7xP8uYDr
AF036DpD9wW6j9B9h9YJtK6gdQiuW2CdQ/sC2kfQvoP2KbSvoT4A9Q2oz0B9
CepjUN8D+yTQV6E+DPVtqM9DcwGaI9DcgebUXx/0XPtdh+YgNDehOQvNZWiO
Q3MfyglQroByCJRboJwD5SIoR0G5C8ppUK6DciCUG6GcCeXSv+dYKPdCORnK
1VAOh3I7lPOhcwF0joDOHdA5BTrXQOeg39ft32qbsSc6KIlP6aN+YVL2NS6l
fqTv1fwDNZS6u8nNXh51jObnZn/JPVZJHM/JFROnesZ0XaEHJ/Ud4V/yslyt
28BooLK7uda8iBgNflxf9JDPaG1zJKCjXz6JumgycXhfIaPyIg5/7tEXJDBf
2l5MRYwnRn68N2dKGvF07Ss/YqOYUSZI4ZKrWgIJyrA4YOUsYUxLV1bROXCe
uR4qw0JjPmymz02qPSfvuDK6ndfFEZeRv7rQ63nq6221S4bQ61++frtywlh6
vyT3awoav4jedzJzlmwd7djO+cjj3AxzT3pf89ILf52+TveBktQ9Rdt4dD+R
n5+emD+erj8YqNS8Ygvdl8ap+jpMvUH3t76xXI+9bXQ/rPJ1XjBEm65bJI3U
PORJ99tGxUnK81+18zqNtYUj7w+j60OWWwcF+7H9X6trxw1jmv/zfukj39fU
s3MkasXhmwN3S+fLe5PEmbHs3KmyKmgWdpFI84/8poJA9vnG/rEBrUOPiYnO
RKHExIKdXwm5EffLe4sJx2uQ2XV1dt6lPJLTVr8qnY9l/sfFQ9j5qKwxzyxQ
VzpPG2/Pb+zJzlO+W+dNcwuFZH6Mn9yEXuz87XW2vnvhJiGJbpoTfkqendfN
pXIfc5sExGFUQGnHWjYPeKwNi40PEJDkz763dIVsfuA+9ta4NklA0ioLPo74
yuYNEwvbtx9e80nyaxdl7Z5sPXDT3BXOe/mkscsE64CpbG6JaynRKVXhk3jn
YSdHLGVzTmCHYfvGpzeQRtkFSfUb2Vy0UCN3cpB9A/H80KFVLMM+D6+nPOhB
ckdp7jrkEXtekc1jaqde+gfF8khBtqSwcTWb3+xzXG4GrZCu759aDh/vsr93
kNO8tZvfhUdUGjevPDOWzYfd182SyX0izZkS7Q4dXrI502iFo82GHfXENlEp
r82QzaXC9HDvF1PrSXjhqMt1XdgcyzknY1Mrkubqpo45O6+yeTgt83jR9Ggu
SRPEj+ljzObnrIV3Zw9ZwSVVXfsFKG98zOb2kqH5VkOkedtNbYDXYDa3y1zK
y0mokO6r6X1k5BLYc0HGmdCWLVfqSFp+16RllslM3eV76NeeLtLzQpli7CXb
JKbumLFz4dV5dUQlLURuZ04iUzd//nSg60DpuePu+a/7m+6w67/WoqeupJZ4
is1C9CxvM/VDhgraex/XEs6WXNPwLzfZ9TPiu7puqHSfR905tKt7LFM3KH4x
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
oLN0Ht0c3vjQn51HnLN51++1CYnKzk4Tsrezzx8aTTnTKg4QkniPT1vfOLFz
7fOJlx+uDhUS26qvScNM2Dno+XhxgMt16fpePW/zILU/nrd01/Npnisg4yaf
tnJQZ+dsqGP/2Ce1fOKpoDOxdgY7l2V8jnttOChdT+9WZHgYsHOcUxKo+EGZ
T8IvfBwxzYCd+9xb0W5Tbkvzw72r437qsTnBVvH8IRVOA6ma0+X0FQ77up1m
s9OzvlXxSMGZ9zq89Ww+6ZV3zWaJL4+Yyc3LD0pm8wx/e1uKkhqP+M+qjbJ7
zeafsh9LXjwtrSdmX0Jqcw3Z1yM96JoYk+ZfT+I1D5ulF7L5isvxlFtLpHls
7kGVOn32eXK3sJqeyz5zidnA7Ytj0tj8pt5XrTz9PJdUrX+9pFCBfR4+JbZ0
iJkhl3Ae+6iMuMvmQ4MnT9eXyXBJ+InzkvPy7OvB9tX5Oay+X0eqmn36xc9k
86ewl77Kkl11hBNjOWdCDJtXvU9ydR7pSesBHXS3LGDzraaMaNGOX7WkqsOc
fr5t7O81zEwyIzJeSvNz3tXsw+m3mLpSVPyTW4el+bw1Z0TqqutsLnrOKWpa
Iq279jyrsjGKXf+FyxvChkjr+zL1HPWvMHVzuwMvor9I9+eq+glr7MLY6/lz
g/KhAmm9SDJ835lgNm+75U8ZFSOtezk2HnA+zdT1QuPOJx6Q1qdwolx4R5l6
rHFU5owN0np38cZVhgeYuv/GSXluC6X1lPByjqMLe47Y9X2O3X/et+85Yde1
nVZMXev//fh7H4Hr0ONAXxf6PqGfC7oO0HWDrjN0X6D7CN13aJ1A6wpah9C6
hdY5tC+gfQTtO2ifQvsa6gNQ34D6DNSXoD4G9T2oT0J9FerDUN+G+jw0F6A5
As0daE5Bcw2ag9DchOYsNJehOf7XBz33f9ehnADlCiiHQLkFyjlQLoJyFJS7
oJwG5TooB0K5EcqZUC6FciyUe/+ek6FcDeVwKLdDOR86F0DnCOjcAZ1ToHMN
dA5i7su/1aCcf1S63/+uyqkF5j6vuZQXBm4Ju3C5hjJomOX3jo51jPqRXxW+
Pqkkn0cMuqa6vZ5xTGiiwumYd0RuTM0uhSUNjCK/5cFV3YuIsuWkTWE1fEZ7
Sc0x4+t5JOlYVteDZkLGlGzO89YhGUTmg8/juedFrA4enV8kPyAZLlrPpz0S
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
MrpFQ0jkHVquirazeeCz7dPTi54JiO2nui3PHNn84BIj07bbSUCCr3XYNvEU
mzeCZtW6G40UkN0X9LTi37D5RKnbmuRtOXwSf15kOuTXH69XzNVR2XuMT1Q6
nCzQWsbWox4vLtipKa2veXFszB42FykbtXSvr24gnFtO4U8S2XzFNd5f53Km
gXhu27V3Kpd9f8TC+zLanbSk9TBZpX6/2PdTuCadT4hqkeY6fwWv2e/ZXKfS
5Z1q2R0eCR81M9l0P5sDzecbWqlK90/4JutHd/uwz5O7K3HqMkfyiO1ajrsw
jn09kt7GUdNui+qJSqfbXd0i2fwZ3sdaQ3BXWl/19MM5PzavJqxUi5t8TJpX
swrXtkSz+fbEuu0p8pb1JO3jjMgJyezz/8LY8paVI6Q52daiLDuKzck2m478
uPqDSwp6nP88s4nN1RdmZ5Cr+VzSa37lLL0ebN3/yu4jwnjp56uvPB+2g83n
BXdeDX57Qvr5+wf6aqX98X60pd8kH3dL9/8F3q37Nmw9K+/BNBdnLmnsGt99
8qg/3ndT6HE4yZ5LPEfsDPLv8M916HGgrwt9n9DPBV0H6LpB1xm6L9B9hO47
tE6gdQWtQ2jdQusc2hfQPoL2HbRPoX0N9QGob0B9BupLUB+D+h7UJ6G+CvVh
qG9DfR6aC9AcgebOXx/0nPpdh+YaNAehuQnNWWguQ3McmvtQToByBZRDoNwC
5RwoF0E5CspdUE6Dch2UA6HcCOXMv+dSKMdCuRfKyVCuhnI4lNuhnA+dC6Bz
BHTugM4p0Lnm93X7n+WPbtd3NK8QUlrvi9zOO8ajjOVm2p0qqqMsmKxwRDW2
hvLz54iZek9rGZX6+EREl1WR6Q4dtDWXcRltXnyz3ipTTla1RWXsTK9n5Pfq
Fht2t4RYv9eU56k2MH52dq6fF1BElKs5akeW8RkTbGYedPlVQK77NXyJXSdg
lLvprf8pJpuoPyk/17hWyPhpd66LTeJzUhPy/ozabBFj7PpSL5k9aSTLf9vU
OCUxo//0OJ9qpXvEdcHdEweLxYyaIpn80pobJPBx58wj5yWMtn2F+/nFp5nr
3WvlpF+dI+hzmX//n6/eJtD75fvnE7blefT+mhtsNex2C70fW9b2/jpmQTt/
N+Nw3HXZy/S+ntu8uOs2Cd0HWu523LJvBl3nGesqeUbSfaYoVq1yWSPdlzL3
6AaWabXzOsYB/OBDEe38/VLht/nf+7bz7913czhS4tXOv6vr3zPV72s7f39j
h8IanXXt/DuJW0OarQrofs5ZWTdadW47z3eNVsw6GtPO82Pf36nO7dXO+16z
l/0IOU3PF074yQ4b5Np5vfe6ky11R+j5pWLf91qH7/QcLJqz/cmiY3R9/pNm
d7VubN2lOpp7OklCgrWiOFvns/PXZ/WjTg22EmIpfO9rtJ2d1/4jn688+UtM
HIqd6mr2s/M94fS9dJVL0rkvNml45cfmgdzzPbx3zxATzyOqi+PO/JEf7Nck
dfwkIlUHxC/kytm8ofXY7/StYOk6Xm0nTvrB5hPzoTv7qS8REbOXkdPEJn/8
O1a9ziRrdxQRTbXtC32PsDmnzfinjHuykDQm7+04OZfNRbK9wtdmbJXmqHG9
mrYOYOu21zcsbBwl/fzx+5+UWLH5al3H84UhOQLSckQ2wPPAH/+erOoi40O+
AqJjY6CdWcbmN/859zRHWgiIw5isPcuWsvW2923ecxUFpHG065IJl9kc6BaR
sOtWCZ9ED5x9I2noH/++1frhcXoX+WT+3rz4Psf/eD+7Qu/yqxv5xD/0evQw
2T/OlcNPDjfWl+bSxTV5SUF/nCu7rxXtVeATTtj2V9OU2bp59BvD4tIGUqAa
dHNABJt7A7upBs5KaSCNQ0q3Xljyx+uddryP8vZtIOFGxnMu32fzc3ij3+Kv
OxqISsJzv6L5bN05yqVUsFZa52jNPd/A/h4h/RGZUb5U+nXvzxq3NOyPf49p
yDbv4zOk/eLktPBb4/+5Dj0O9HWh7xP6uaDrAF036DpD9wW6j9B9h9YJtK6g
dQitW2idQ/sC2kfQvoP2KbSvoT4A9Q2oz0B9CepjUN+D+uRfH3Rf/V2H+jDU
t6E+D80FaI5AcweaU9Bcg+YgNDehOQvNZWiOQ3MfyglQroByCJRboJwD5SIo
R0G5C8ppUK77ew6EciOUM6FcCuVYKPdCORnK1VAOh3I7lPOhcwF0joDOHdA5
BTrX/L7+/6t1X+iyIPyZiFJ26vwVCs18SnMnx+s9tvEo3c0nlozdyaXU2mad
Mj+kltLv6Ul3P6saRo2y8Zk3Wj+QPR01LFSKahmN9z04mP+kiuhN9zok+FnH
aL5qz86ZshXE7PoSzcjO9Yy9OnTbqiQpJcsLdlb0kOcxfj8Ztr6w/i3JGny5
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
mYKSaG4/3HOhzF0Tw0wQBZcbU0A0uC3U3OChMi3cUFyS9JbEFSUxNEVBUFRw
QbhYLpClVDDc7nlmnufXzHM6M83zj1Pz/us18/vj+l3X93vO55wZhsyiRTML
jELhqtKXD367uEB4d5PLc+FX84U+V6/Y3usgrVtz7WinuXnChPSjrzQqsQjj
4gOuvBYgrbY786t+dtJE1/G7zn2eK3zsVzPxlRm/a5s2//3U3BzDqXugR61b
uaY9Yt6e49clx0i6PqjRigkW04w3103tuui20cdr/tT6Votpm+kXfb22ZhvX
IjyDfN/LM33LwfOnLNtsI3SY4wnjuzxTH/t/nnR9ctOo17eL/dFm+aaZg3w2
XThww3h+t+/8I9PyTXOrH9yaeum6kT0wMuDK6XxTjy7tIwJ2ZhkzY8JTrO0K
TBMrh4X3X55pTIo6tPDzsALTu40zvvZ455ox09O+cl15gWli8sYWPTpfNZz7
HW1Rf3qhqWfvC3tTUjOM2NRxhx4fKTTNX/0wwy7lsrH5yHUj5yWrqX2qt+vE
U5eMkeGjLm6YZTWtP6LWKsf4dCMiLaz/qbNW08HL3XrEbkoz3IN/3Pz0tSJT
65KjLauHXzQCVyzrn+RdZBoxzbtHzMlUo8qhQ+WZuCLTtp1rdxt2MMWIzlqy
7XubYtMWmXZtCq3njbjX9n2UOqHY9EjrW1Eti88Zwb3bdLh3oNi02pf2tYcc
+9moGllnjPVesWnbFsdqLu9/xghsmG5zacAd07bh9aw1vZOM2NIFza5E3zFN
9nLxvd/klBHa+J3q04rvmGYu6fggZtFJo1PWqNA6jiWm966/kHkkL8GY1nxh
zxDvEtMJKTP7/1LvhOHaoLOj0w8lptW6XPk5fvVRo+Th3tKGVSWmhU4JKf8Y
csg4v9Ax68eupaYzPkw6bN14wHCrsbxy9sJS0xnJm6Yne+43ztqm14r9vtTU
/uPub3TftNdIn3744J5fSk2d5m9MujB+lxHxeGfLT53LTJ16tu8R2THKCL19
4dMArzLThLhuzbuv/9ZIGjvkRHR0mWlC0SaHYwlhRuh327KC0stMg2OMrZ3+
HWzm3KPmj7quvCP3uoFrF788JVY+f7tuUI3SefJ58qLKibP7/MHfW73GjZr4
snw+173e8o2/yD0z2Xg9JDjhD/7f+Yfc9Oit8vmDPLuQtNXyuf+U6vMOLfyD
v+d22T1r0tw//1z7HO292vfUfpd2Dtq5aees3Yt2j//33rU6UetKqUOtbrU6
1/pC6yOt77Q+1fpaywEtN7Sc0XJJyzEt97Sc1HJVy2Ett7Wc1+aCNke0uaPN
KW2uaXNQm5vqnFXmsjbHtbmv7QnaXqHtIdreou052l6k7VHa3qXtadpep+2B
2t6o7ZnaXqrtsdreq+3J2l6t7eHa3v6/uYd/DSta+7aOvl8mtHN52nuVt7RT
4KatsamlwqqgnTMqRkgjK7ys5/JLhE0y3aMvzJf2PO7/pPmjO8LMVaUTbJZJ
E4KW7VhjJ5304ZaY3ruLhelPw6vm9JAmliU0Xnq8SBg4YtfwWz2lLT9ufHDG
NqvQ91DOkOuvS+1WzDv/5Q+FQo/9Z5JPj5U6Jx/1dbCVZnuNnrx2T4FwxHbb
3/a8I30U1+9p2sN84d21IcfqfS6tW2PYkofPSx/Fu20O3ZIndOlR4Fr6hrSu
TbLjhisWYf6CbRtDwqTpy7zXxL8ldbU/93hQea4wtkkDh/xoaZNXqzXtO0K6
Ymm7ORcW/+6/jwycOCwxx4iYl3vuszO5plGXX3+n++gcwzX4ZnnIyxbTzcb+
JvEZtw2/e+PO+gRaTEeHL06d/PZto6SVawf/6xbTyIuvnBx+INuwTw9K3+GU
Zzoy8VT/Gt2zjdgrzmM2zs4zzff/yKbND7cMD78dU9P25plmb6+dtbz8ptHk
QdqJ0Ht5pseaLkuY5XDTyJzds/xMj3xTv9iRjtvH3jCcZ7crbDU339TzwIoh
UXuvG1E2iwZfjs03bXJ/zRvBliwj8rlmF8t+zTd9/cHBVU7tsozQh9c27O5W
YOpT75+O1T7INFxu5sSsXFhgOnn6+IrJ668Zwb9ssLm5t+B3Ozren15+1Uia
ve5Es+IC0z2xb/14oO9VoyQn9Ei/ToWmPcfPSu3pf8XI33e9zTXfQtMRJd5r
5sdlGPWWn/MLiSg0veYVuW3RoAyjyvVR73fPFJq+1KfO0IY7LhsDzjn/Ojy/
0NRl40cd/uF22Vj64Rr3ui9aTRdcHVOQmXbJiGlad+2GLlbT3w5ljXKadcno
tGj5+q7jrKYBazydZzxONyLqPPGpPtdqOviG7eGHe9ONSdM/nvLkX1bTuymb
LDUWphuefn12e6yzmp7fPqT6zbfSDd+Gv0SF/nd+/I+Hz7zRyKdhurFh6sCB
o3dbTZ2zujrbVdefa5+jvVf7ntrv0s5BOzftnLV70e5Ru3etTrS60upQq1ut
zrW+0PpI6zutT7W+1nJAyw0tZ7Rc0nJMyz0tJ7Vc1XJYy20t57W5oM0Rbe5o
c0qba9oc1OamNme1uazNcW3ua3uCtldoe4i2t2h7jrYXaXuUtndpe5q212l7
oLY3anumtpdqe6y292p7srZXP+t9H/H/Y3nl2HbrI8uEkSNbLs91kpZ779nj
n1gqPNutlqXjWGlV3pcTFjwuEbYc3KF9TJS0/pb5bi3cpX1G580zbKWRQRld
ahy6I6yq02p05SxpbtfglEXVpW3fGRpe+1CxMOlg17VbR0iz3RY0cy4uEsZ+
2OfivQBpdL/6nyxoJF2wdU3g/V1WoeetdZ2HD5aed/o4sLK8UDjTYcWvtXZJ
R08Ocz7tIV2c1nrVgobS6MtR301JKhC6Nhle2dVH2iLNI9ejlfTu8VmRY8/n
CzO+9c07FyD1GxdSHPOKdF/jjbbfpOQJkzo/fW7/LGny5aW777eR2n9wq/2h
QotwcvMd3fp8J/XsWO3aYG9pxd2zG3c6SqvueS1dU5UrfL3w5wC7k1K/nA6F
2z+WjuyY9P6mXtKXMgqCTs/53dy+206NuZpjlIQFnXTZmmsa2XbQ9ZhVOYbf
+yWJ+y7kmqZXvJxZMTTH6JNwIdz5fq7p9ltDt3etn2N4XonqM93BYprf+/PW
M5JvG0vHnBmW6WYx7RWSvrbHytvGrrOpFxvPsZhWTx086IOJt42A3effe7LB
Yjo0ePhn/2p627h23P9hTqzF9PDts6Edf802nG0vL/zqguV3/V1HtDqbbSSN
CDnol2Mxzah73GfUnmzDGrc2eXiZxXSLb3u3F9ZnG/u6Rpx5cs9i+sC5dXpI
mP5c+xztvdr31H6Xdg7auWnnrN2Ldo/avWt1otWVVoda3Wp1rvWF1kda32l9
qvW1lgNabmg5o+WSlmNa7mk5qeWqlsNabms5r80FbY5oc0ebU9pc0+agNje1
OavNZW2Oa3Nf2xO0vULbQ7S9RdtztL1I26PUvUvZ0571/oiIf3/H1f4wpkNR
mXDksU/efHWZ9OyS+sHx7aSxLxQ07XWiVBjhFtnRcbI0uJvf5SW20padb0TV
3V8idKu24L7NHOmREOcJn70h3RcWcGNp4R1h3L2dl8O2S/dtnZr381RpnzX+
L3avI8190ydzdEKxsP7gB5VJH0lt+p2b4lFL2nNNa0//74uE5a4NavSaIF29
d9z3lkdWYcy5sN8S90nLx268aDtFOq3z1/0820g79fv6xMWMQqHbyR+nddks
neTVKXvb+9L6ATY73FtIz3puWVh4tUBoP6ZafK0vpLFPF0V5uEvT/ZfcCXxN
6ucbb9OgIl+YOrJl15rxUvugdscmrpEOntzq0Vh3adWolX0Xu0hn2k39aVg1
6b5V0/2uWfKEkwbunTzzuDQo+cshIdHStoN7rVy+ShqXEd23Yr40u2Url/Dx
0uQjP+RXvPfn1T5He6/2PbXfpZ2Ddm7aOWv3ot2jdu9anWh1pdWhVrdanWt9
ofWR1ndan2p9reWAlhtazmi5pOWYlntaTmq5quWwlttazqtzQZkj2tzR5pQ2
17Q5qM1Nbc5qc1mb49rcf9b7CCIi/rUdfLNRyoAdZUKblXbBXYZKR6/4rt7R
m6XCar3cd9xaIh0X3OFUehvppC9qpdleKhGOTKvRzDtMmtQ+5/rS8VK71Lu3
jzpIN0R4ljW13BGudnns9MExaU+bXbMrA6UvfVO5blIHaeragfVr3y4WDkjr
t9BzozR2gUOg5yipn5v/N/MaSW0Gbh4Zn1wkLLKuy836Qhphfa9FnXelqQ72
aSn20qoe30x+mGsV1vtpT+TpJOmCp15HB/yX1NfngzbPeUnjujW8NNtNGnXg
hKX7W9L8oJnDtjeWDjj/U9+fakg9z5+Mr1tRKAwMamJ/zCp1bfruQWfLn1f7
HO292vfUfpd2Dtq5aees3Yt2j9q9a3Wi1ZVWh1rdanWu9YXWR1rfaX2q9bWW
A1puaDmj5ZKWY1ruaTmp5aqWw1puazn/rOcPIiIi/vWsd9gvKeVKmXBcz6lf
Nw2SRrZrMG2dizRqi1taTmGpcJJH09A6X0o3OB3ecHiQNDfmzL3mDaU9fXfG
1/m5ROic49tlxjfSkl1HPtkfKO2T6jZnwghpXIPUW+O6SJ9ftr/8q0bStq2O
OBZW3BGOW9vmkXeWdFhW9Rd3JUrT50zfFbdJ6tL8uudnq6XDPj2Y6D9fWlT0
9dPJ7tKkLc3tbd+TJmS4DvQZ/ufVPkd7r/Y9td+lnYN2bto5a/ei3aN271qd
aHWl1aFWt1qda32h9ZHWd1qfan2t5cCzzidERERE/HvawqZdK8NSJvR4/kJa
pwNS99OrbiwMltqffvXaOnfp3LwlQcX9pbHrTt7ycZDG9227Pq6+dLR134Sd
z0kj3s5LtT4s/dNqn6O9V/ue2u/SzkE7N+2ctXt51vWCiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIh/H/8DhFdX
sA==
      "], {{0, 0}, {142, 141}}, {0, 1}], {
      LineBox[{{1, 79}, {141, 79}}], 
      InsetBox[
       FormBox["\"+6.9289 \:041c\:041f\:0430\"", TraditionalForm], {3, 80}], 
      LineBox[{{1, 77}, {141, 77}}], 
      InsetBox[
       FormBox["\"+3.2789 \:041c\:041f\:0430\"", TraditionalForm], {3, 78}], 
      LineBox[{{1, 75}, {141, 75}}], 
      InsetBox[
       FormBox["\"+3.2089 \:041c\:041f\:0430\"", TraditionalForm], {3, 76}], 
      LineBox[{{1, 75}, {141, 75}}], 
      InsetBox[
       FormBox["\"+1.1889 \:041c\:041f\:0430\"", TraditionalForm], {3, 76}], 
      LineBox[{{1, 73}, {141, 73}}], 
      InsetBox[
       FormBox["\"+1.1789 \:041c\:041f\:0430\"", TraditionalForm], {3, 74}], 
      LineBox[{{1, 68}, {141, 68}}], 
      InsetBox[
       FormBox["\"+2.8989 \:041c\:041f\:0430\"", TraditionalForm], {3, 69}], 
      LineBox[{{1, 67}, {141, 67}}], 
      InsetBox[
       FormBox["\"+2.8889 \:041c\:041f\:0430\"", TraditionalForm], {3, 68}], 
      LineBox[{{1, 66}, {141, 66}}], 
      InsetBox[
       FormBox["\"+2.8489 \:041c\:041f\:0430\"", TraditionalForm], {3, 67}], 
      LineBox[{{1, 65}, {141, 65}}], 
      InsetBox[
       FormBox["\"+2.8289 \:041c\:041f\:0430\"", TraditionalForm], {3, 66}], 
      LineBox[{{1, 65}, {141, 65}}], 
      InsetBox[
       FormBox["\"+4.7489 \:041c\:041f\:0430\"", TraditionalForm], {3, 66}], 
      LineBox[{{1, 64}, {141, 64}}], 
      InsetBox[
       FormBox["\"+6.6489 \:041c\:041f\:0430\"", TraditionalForm], {3, 65}], 
      LineBox[{{1, 63}, {141, 63}}], 
      InsetBox[
       FormBox["\"+6.6389 \:041c\:041f\:0430\"", TraditionalForm], {3, 64}], 
      LineBox[{{1, 63}, {141, 63}}], 
      InsetBox[
       FormBox["\"+4.6789 \:041c\:041f\:0430\"", TraditionalForm], {3, 64}], 
      LineBox[{{1, 62}, {141, 62}}], 
      InsetBox[
       FormBox["\"+6.5489 \:041c\:041f\:0430\"", TraditionalForm], {3, 63}], 
      LineBox[{{1, 61}, {141, 61}}], 
      InsetBox[
       FormBox["\"+8.4889 \:041c\:041f\:0430\"", TraditionalForm], {3, 62}], 
      LineBox[{{1, 60}, {141, 60}}], 
      InsetBox[
       FormBox["\"+4.6089 \:041c\:041f\:0430\"", TraditionalForm], {3, 61}], 
      LineBox[{{1, 58}, {141, 58}}], 
      InsetBox[
       FormBox["\"+4.5389 \:041c\:041f\:0430\"", TraditionalForm], {3, 
       59}]}}, {
    Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
     Automatic, FrameTicks -> {{{{140.5, 
          FormBox[
           RowBox[{"-", "142.12800000000001`"}], TraditionalForm]}, {105.5, 
          FormBox[
           RowBox[{"-", "71.06400000000001`"}], TraditionalForm]}, {70.5, 
          FormBox["0", TraditionalForm]}, {35.5, 
          FormBox["71.06400000000001`", TraditionalForm]}, {0.5, 
          FormBox["142.12800000000001`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "142.12800000000001`"}], TraditionalForm]}, {35.5, 
          FormBox[
           RowBox[{"-", "71.06400000000001`"}], TraditionalForm]}, {70.5, 
          FormBox["0", TraditionalForm]}, {105.5, 
          FormBox["71.06400000000001`", TraditionalForm]}, {140.5, 
          FormBox["142.12800000000001`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 35.5, 70.5, 105.5, 140.5}, {0.5, 35.5, 70.5, 105.5, 
      140.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
       TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -138.26735856782807`}, 
                    Offset[{4., 0}, {7.5, -138.26735856782807`}]}, {{
                    7.5, -5.616121739230721}, 
                    Offset[{4., 0}, {7.5, -5.616121739230721}]}, {{7.5, 
                    143.6165196929411}, 
                    Offset[{4., 0}, {7.5, 143.6165196929411}]}, {{7.5, 
                    276.26775652153856`}, 
                    Offset[{4., 0}, {7.5, 276.26775652153856`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -138.26735856782807`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.7\"", 1.7000000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -5.616121739230721}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 143.6165196929411}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.4\"", 3.4000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 276.26775652153856`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6297675142888451`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.7451164158789298`", ",", "1.7000000000000002`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8748839301677749`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9902328317578596`", ",", "3.4000000000000004`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7607864997662287`*^9, 3.7607869467132072`*^9, 
  3.760788424563975*^9},ExpressionUUID->"fc81f250-65a2-4570-9f17-\
d88cba70c83b"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
9n/1yKG/5+FRT3H6EkPA1Sn/n/8PpKkRWQ==
        
        "]]}}}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\:0412\:0440\:0435\:043c\:044f, \:043c\:0438\:043d\"", 
     TraditionalForm], 
    FormBox[
    "\"\:041f\:0440\:0438\:0437\:0430\:0431\:043e\:0439\:043d\:043e\:0435 \
\:0434\:0430\:0432\:043b\:0435\:043d\:0438\:0435, \:041c\:041f\:0430\"", 
     TraditionalForm]},
  AxesOrigin->{0, 2.1697925},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.26628}, {2.23828, 3.60803}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7607864997662287`*^9, 3.7607869467132072`*^9, 
  3.7607884246029744`*^9},ExpressionUUID->"3c9b9d5c-57b4-4c61-881b-\
7d357ad7eb70"],

Cell[BoxData[
 OverlayBox[{
  TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{0, Small}]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQzXV9cYFtl5PD4a8aMf2HLB1gfEmWMD7dTYYOIC7X
dgcMfrvYzXPfg7Ud1rk/rBJZh8m/q8LWONVZGaI+3B6DX5wx8W2NvaKDCEhD
CCY/DQzEHL7khNWuU7PDxT8AptocMPjW9/17p+dJHWh9HbhDrhWTD3XPAQYQ
aMDke4C84a56wBYUILWY/E1z3y8/5q1+wBgEih0x+NDwgLgnzQmD/+mSb5JA
hC7EPamYfGBkAGNE/wA4PrIcMfjQ+DgwEwQinTD4zQdOLXTdZnwgCOjb14HO
GHwwtcPkANhbiY4YfGh6OAAWj8Dk64I9bH0AAG+Y9iU=
          
          "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {30.018460937500002`, 0}, 
      PlotRange -> {{30.1511, 38.64}, {-27.776, 25.76}}, PlotRangeClipping -> 
      True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      Full, Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {30.018460937500002`, 0}, AxesStyle -> GrayLevel[0, 0], 
      DisplayFunction :> Identity, Frame -> {{True, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {Tiny, Medium}, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{30.1511, 38.64}, {-27.776, 25.76}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{
       "\"\:041d\:0430\:043f\:0440\:044f\:0436\:0435\:043d\:0438\:044f\"", 
        "\"\:041f\:043b\:043e\:0441\:043a\:0438\:0439 \
\:043c\:043e\:0434\:0443\:043b\:044c \:042e\:043d\:0433\:0430\"", 
        "\"\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\:0442 \
\:041a\:0430\:0440\:0442\:0435\:0440\:0430\""}, "LineLegend", 
       DisplayFunction -> (FormBox[
         FrameBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"\:041a\:0430\:0440\:0442\:0430 \:0441\:043b\:043e\:0451\
\:0432\"", {FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                  False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.175], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], RoundingRadius -> 5, StripOnInput -> False], 
         TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
              "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendFunction", "\[Rule]", 
              RowBox[{"(", 
                RowBox[{
                  FrameBox["#1", RoundingRadius -> 5, StripOnInput -> False], 
                  "&"}], ")"}]}], ",", 
            
            RowBox[{"LegendLabel", "\[Rule]", 
              "\"\:041a\:0430\:0440\:0442\:0430 \
\:0441\:043b\:043e\:0451\:0432\""}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"LegendMargins", "\[Rule]", "5"}]}], "]"}]& ), Editable -> 
       True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  GraphicsBox[{{}, {{{}, {}, {
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQvdmBe4sDt6XD4a8aMf2HLB1gfEmWMD7dTYY4+e1i
N899D9bGyb+rwtY41VkZJ784Y+LbGntFnPw0MBAjxD+Ai2993793ep4UTj7U
PTj5Hg+rRNa5q+Lkb5r7fvkxb3WcfGh44OR/uuSbJBChi5MPjAxgjOjj5EPj
Aye/+cCpha7bjHHyd8i1vg7cYYKTD00POPm6YA9bHwAAw83eUw==
         
         "]]}}}}, {}, {}, {{}, {}}, {{}, {}}},
   AspectRatio->Full,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   AxesStyle->GrayLevel[0, 0],
   DisplayFunction->Identity,
   Frame->{{True, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{Tiny, Medium},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 50.08791208791208}, {-27.776, 25.76}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}], 
  GraphicsBox[{{}, {{{}, {}, {
       {RGBColor[0.5, 0, 0.5], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], Dashing[{0, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQOHv2rE9B+ydIDxJVnC+HQ3GeLkt4vdPPc9WBsn
/64KW+NUZ2Wc/OKMiW9r7BVx8tPAQIwQ/wAuvvV9/97peVI4+VD34OR7PKwS
WeeuipO/ae775ce81XHyoeGBk//pkm+SQIQuTj4wMoAxoo+TD40PnPzmA6cW
um4zxsnfIdf6OnCHCU4+ND3g5OuCPWx9AABA/oW7
         
         "]]}}}}, {}, {}, {{}, {}}, {{}, {}}},
   AspectRatio->Full,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   AxesStyle->GrayLevel[0, 0],
   DisplayFunction->Identity,
   Frame->{{True, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{Tiny, Medium},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-1., 1.}, {-27.776, 25.76}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}]}]], "Output",
 CellChangeTimes->{3.7607864997662287`*^9, 3.7607869467132072`*^9, 
  3.7607884247030067`*^9},ExpressionUUID->"ee50af8b-2fba-40f3-a164-\
485648611a22"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3arssfTGxRX2dlzXFxfY2jlUzExcvOb+GfvLvkkC
EZY2DgapDxqmrbtlnzHxbY29qZXD+UXlWg/kntj/u1LxUs3QwqH2wubIr5Zv
7KdIsITx6Zo53Jvc3hoV/NleM6b/0FcNE4f2OzzmDz7/tt83X0r/roqRw8eG
TZrhOxgcQh4vnX1EwcAhec5+zlYOZgeIfToOd2fM23DEmdUBYr6GQ4ZSTkWV
KocDxDwVh4QTr8LOn+SE6ldwiN2fYJ5zmwuqXsLhhUF8XEMtN1RewGGSvUTF
u70wPoPD0X7Dct2F3A4MUCCtdeznbAG4/IGL4RPSdKS4YPoPRJwyOrJxHQfM
/AORvy6wfl3LBrP/AO9h9yNTTjDD3HegXezmue+X/0DDR+OAVklc8vQV36Dh
qXNg+xYpoe83PtpD/X/g+v7Xxum1r2Hhc+DJLs2nW4WewMLvwNrDF0N37b4B
C98DqkH2IoX3+2HhfwAA5vDO6w==
         
         "]]}}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.01388888888888889], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxd1glIVFEUBuBBMyazEIkyCynTUFOy1WzRW2rullpu2TRmi4SkUdgkGkKI
RIgtkoVllEkFJmZWYsu7pIlKlFaQLZaV0mIpYialRTPe8/4Lb2CQj/Hdd+85
553z5m7PjN1ppdPpisxfy1/1czlrje3LilSmesarJyNxadJH1xp7212kx64N
Pov6aIQzHY7wtovSH3KmVYekSm/6VFnWNEe6qHSv+Ypt8P70Ez9yA6QT/epa
sh8YYH/z7rLWSM978/vwnntbYX3V7OQdq6T7cwOWGRpS4OdR2+0T/aTrnQv6
Yuq3wOUDV5ojfKUtpwm+nQyPb2+ZdLRlubokeMn4R3rmhPip3rWJ8L8Xpq/z
F0mPh6MmAW7NfnDBaaF0dYglgvFwiaNlQelD5tX0VZthQ0OYndUC6aBjGZ9H
r22CPVKKHw67S5s3d37gShz8869lg9KW9H+qjIUtu+tylRb1EgOL+pAW9bAR
FvmXFvneAIv8RsMin1GwyF8kLPIVAYv8hMMiH2GwiH8oLOIdAov4rodFPINh
Eb8gWMQrUBOfdZp4rNWcn7GCeaGVnR1XFXFef2Y6m1pR9f6xIs63mvns7M4/
Xf1aEedZyZ5eOujZ7dyjiP2vYHntN5OG/b4rYr/L2btThQXJcUOK2N9SVvjW
zrd7aFQR+1nMBvNrPRLqdVzc34elnVMmFeitubifF+s6U17TFGjDxfruLN0l
w5TjpudiPVdmbPkW/7R1El0/h21VjL4Zb2zp/x3ZF59thvy8yfS7PTsZ4Gjq
v69axx4VLzrofXEyV+Mwy7P5d5k9fucdCcd3eTnZqtfzxLbFTTeq9er6POlP
u83w9Ynq/fmUxpCmkhZrdX+8cLq5Up+PUXzcuecBQ1rp1V8UTy9+p87JYaRz
UKHz85dK35LdeX1qfHhPg0fvLYceNX78emPH5oa7nWp8uVtswLR974vV+OMc
lB+Y8gdTfmHKP0z1AVP9wFRfMNUfTPUJU/3CVN8w1T9Mz4fmPOEwPV+a80XC
9HxqzhsN0/OtOf9GmPqDJh4xMPUXTXxiYepPMPUvmPobTP0Ppv4IU/+Eqb/C
1H9h6s8w9W+Y+jtM/R+m+QDT/IBpvsA0f2CaTzDNL5jmG0zzD6b5CNP8hGm+
wjR/YZrPMM1vmOY7TPMfpvcDmN4fYHq/gOn9A6b3E5jeX/h/L6R+lA==
         
         "]]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
    TraditionalForm],
  PlotRange->{{-100, 100}, {-24.192, 30.240000000000002`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7607864997662287`*^9, 3.7607869467132072`*^9, 
  3.760788424765012*^9},ExpressionUUID->"9fc0bd92-05f0-41e9-bbd4-\
3ef6c377b532"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"",FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
          "", Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], StripOnInput -> False, LineIndent -> 0], 
         StripOnInput -> False, FontFamily -> "Arial", Background -> 
         Automatic], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
       InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6297544181379376`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.7450916787049933`", ",", "1.7000000000000002`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8748460968429308`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9901833574099865`", ",", "3.4000000000000004`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.7607864895849547`*^9, 
  3.7607864906261826`*^9}},ExpressionUUID->"a7769b9f-372c-4fea-9038-\
cf2a26ffc08b"],

Cell[BoxData[
 TemplateBox[{"Null",FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          GraphicsBox[{{}, {}, 
            RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
             "], {{
               Rational[-15, 2], 
               Rational[-575, 2]}, {
               Rational[15, 2], 
               Rational[575, 2]}}], {Antialiasing -> False, 
             AbsoluteThickness[0.1], 
             Directive[
              Opacity[0.3], 
              GrayLevel[0]], 
             LineBox[
              NCache[{{
                 Rational[15, 2], 
                 Rational[-575, 2]}, {
                 Rational[-15, 2], 
                 Rational[-575, 2]}, {
                 Rational[-15, 2], 
                 Rational[575, 2]}, {
                 Rational[15, 2], 
                 Rational[575, 2]}, {
                 Rational[15, 2], 
                 Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
               287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
             CapForm[None], {}}, {Antialiasing -> False, 
             StyleBox[
              LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
              Directive[
               AbsoluteThickness[0.2], 
               Opacity[0.3], 
               GrayLevel[0]], StripOnInput -> False], 
             StyleBox[
              StyleBox[{{
                 StyleBox[
                  LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -138.28241914137175`}, 
                    Offset[{4., 0}, {7.5, -138.28241914137175`}]}, {{
                    7.5, -5.644569489257719}, 
                    Offset[{4., 0}, {7.5, -5.644569489257719}]}, {{7.5, 
                    143.57301136937042`}, 
                    Offset[{4., 0}, {7.5, 143.57301136937042`}]}, {{7.5, 
                    276.21086102148456`}, 
                    Offset[{4., 0}, {7.5, 276.21086102148456`}]}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], StripOnInput -> False]}, 
                StyleBox[
                 StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -138.28241914137175`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.7\"", 1.7000000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -5.644569489257719}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 143.57301136937042`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.4\"", 3.4000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 276.21086102148456`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                   Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                 StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
               False], 
              Directive[
               AbsoluteThickness[0.2], 
               Opacity[0.3], 
               GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
           Scaled[0.02], PlotRange -> All, Frame -> True, 
           FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
           Opacity[0], FrameTicksStyle -> Opacity[0], 
           ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> Left,
           AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
          ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
         False], {FontFamily -> "Arial"}, Background -> Automatic, 
        StripOnInput -> False], TraditionalForm]}, "BarLegend", 
     DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Function", "[", 
                RowBox[{"x", ",", 
                  RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
                RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"0.6297544181379376`", ",", "0.9`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.7450916787049933`", ",", "1.7000000000000002`"}],
                   "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.8748460968429308`", ",", "2.6`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.9901833574099865`", ",", "3.4000000000000004`"}],
                   "}"}]}], "}"}]}], ",", 
          RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
          RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
          RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7607846962979064`*^9, 3.760786500171319*^9, 
  3.7607869469912696`*^9, 
  3.760788424819032*^9},ExpressionUUID->"5a580cb9-eadf-415d-9d10-\
5abecc4e0ba0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:0421\:043e\:0437\:0434\:0430\:0451\:043c GIF-\:0430\:043d\:0438\:043c\
\:0430\:0446\:0438\:044e", "Subsubtitle",
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, 
   3.750659590603606*^9, 
   3.750659634100629*^9},ExpressionUUID->"feb92d43-f673-4dd7-9b42-\
b50ab362b68f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"iterationStep", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "plotName", "=", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotDataList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"openingAtCheckStep", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "i", ",", "1", ",", "numberOfCheckSteps", ",", "iterationStep"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotList", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PlotMatrix", "[", 
      RowBox[{
       RowBox[{"plotDataList", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
       "plotName", "<>", 
        "\"\< \:043d\:0430 \:0448\:0430\:0433\:0435 \:043f\:0440\:043e\:0432\
\:0435\:0440\:043a\:0438 \:2116\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "iterationStep"}]}], 
         "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "plotDataList", "]"}], ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"folder", "<>", "\"\</opening.gif\>\""}], ",", "plotList"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.750657229716831*^9, 3.750657323541009*^9}, {
   3.750657442512285*^9, 3.7506577065181427`*^9}, 3.750657806502049*^9, {
   3.750657865720697*^9, 3.7506578660603857`*^9}, {3.750658171413033*^9, 
   3.750658171660262*^9}, 3.750659590604125*^9, 3.7506596341012383`*^9, {
   3.7592248138310814`*^9, 3.7592248170522895`*^9}, {3.7592248487311068`*^9, 
   3.7592248766307635`*^9}, {3.7592249197998433`*^9, 
   3.7592249455084496`*^9}},ExpressionUUID->"b0245563-8792-413f-a4c1-\
ff322b233949"],

Cell[BoxData[
 TemplateBox[{
  "Export","errelem",
   "\"The Export element \\!\\(\\*RowBox[{\\\"\\\\\\\"ImageList\\\\\\\"\\\"}]\
\\) contains a malformed data structure and could not be exported to \
\\!\\(\\*RowBox[{\\\"\\\\\\\"GIF\\\\\\\"\\\"}]\\) format.\"",2,150,11,
   23215205653714838992,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7607801366809754`*^9, 3.7607819378934135`*^9, 
  3.760784696636993*^9, 3.760786500282345*^9, 3.7607869470262766`*^9, 
  3.7607884248510313`*^9},ExpressionUUID->"fb0ad19e-9ca9-4cc1-a861-\
3d75f799a05a"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.750659652156084*^9, 3.750666699563397*^9, 3.750666774903749*^9, {
   3.759224797990833*^9, 3.7592248186298594`*^9}, 3.759224850386752*^9, {
   3.7592249324687567`*^9, 3.7592249472268243`*^9}, 3.7607801367149954`*^9, 
   3.760781937914418*^9, 3.760784696658987*^9, 3.7607865003113513`*^9, 
   3.760786947044281*^9, 
   3.7607884248710346`*^9},ExpressionUUID->"9ec8d9d8-1240-42dd-91fe-\
ab8cfb7424ba"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:042d\:043a\:0441\:043f\:0435\:0440\:0438\:043c\:0435\:043d\:0442\:0430\
\:043b\:044c\:043d\:0430\:044f \:0441\:0435\:043a\:0446\:0438\:044f!", \
"Subsubtitle",
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}, {3.750658025412526*^9, 3.7506580542823963`*^9}, {
   3.750659590603606*^9, 
   3.750659634101563*^9}},ExpressionUUID->"190e1697-5378-40fd-b7b7-\
68e948097639"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"openingDouble", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", "\[IndentingNewLine]", 
   RowBox[{"i", "<", 
    RowBox[{"Length", "[", "opening", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"openingDouble", ",", 
        RowBox[{"{", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"j", "<", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{"opening", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}]}],
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{
        RowBox[{"openingDouble", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], ",", 
        
        RowBox[{
         RowBox[{"opening", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", 
           RowBox[{"opening", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"openingDouble", ",", 
        RowBox[{"{", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"j", "<", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"openingDouble", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], 
           ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"opening", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}]}],
        "\[IndentingNewLine]", "]"}], ";"}], ".", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"openingDouble", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"opening", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
    ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDoubleMatrix", "[", 
  RowBox[{
  "openingDouble", ",", " ", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.750358232133493*^9, 3.750358247083275*^9}, {
   3.750358316158638*^9, 3.750358512340169*^9}, {3.7503585544026327`*^9, 
   3.750358555974053*^9}, {3.750358591934741*^9, 3.750358599614847*^9}, {
   3.750358635248437*^9, 3.750358637785039*^9}, {3.750358703052411*^9, 
   3.7503588070893993`*^9}, {3.75035885757069*^9, 3.75035888174489*^9}, {
   3.750358931136982*^9, 3.7503589382940197`*^9}, {3.750359001423706*^9, 
   3.750359052574259*^9}, {3.75035919521389*^9, 3.7503592947409153`*^9}, {
   3.7503595831699047`*^9, 3.750359627071444*^9}, {3.750359720953223*^9, 
   3.7503598303588943`*^9}, 3.750360044553823*^9, {3.7503602219784393`*^9, 
   3.750360333147932*^9}, 3.750360417313128*^9, {3.7576716605038176`*^9, 
   3.7576716619096375`*^9}, {3.757672101273732*^9, 3.757672128470461*^9}, 
   3.75844198944094*^9},ExpressionUUID->"af6ea415-d276-4505-81d8-\
a9c6f689f1a0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    RasterBox[CompressedData["
1:eJzs2XdQVuf393sUJfaGJWLDhr2iRrFc2Igae8GuGBV77MQuihV7V9SIDSuK
XbFrwIqCKCiC9JsOtliwHZ85k+0zz/Vbc2DmnPN9yjszySuz/7i52fvaa33W
ouLvE3uONDczM/s5h5mZ1fd//9v//9//vFSIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIj4f5bm
BYZOuPg1I8uWvDJ2be7MrGvx55HC/V5lXQfvnnWHJmbdfCt/abE+OuvWWXHl
Qu6wrBs28Uqr0k+ybtslOc+cfJB1NzR0LtQ24P87s/t9svv7Zvd+Zvd5Zfc8
ZPe8Zfc8Z/d9+U+/34iIiIiIiIiIiIiI/38o7cktfr4S5vJFt+TqWJ8T73Vr
2mcEf3qtW65xSc/BKbqWzpUvPIjTdXzqUyU+XHdzoX5tU4N1e02fdM7snq7l
zxNnVLmpa/u88KFlvrqDew6/ZnVGN9/UjutbntA9u6HeCCdvXRtT/2p5D+ru
TG0SFLlfN3mrR81J+3SbtP/qZrY360qfI/1c6XtKv5d0H6T7Jt1n6blIz1F6
7tI5kc6VdA6lcyudc+m94O9NiIiIiIiIiIj4P4M2Rw6lTQrMyLK9Gl75Z8L8
rFtuXmWfAtWzrsfATz1bPUvPsk4xV1xW7c26aTm61dz8Z9Ytcs+n/J2uWdd1
wvgV2+tkXauW4/ulF8y6nuPbXDz4Pi3LTrBa0PxwbNaNmhZ+oOG9rDu8q82u
BWezbpehAXa7D2bdtsXzubfcmXWt6pYaEbAi63aqkPj1+pysa1a6S9cSk7Lu
tYIPu276PevaLMtZ1L531o0o9r59mw5ZN6pxVK+5LbLurCZ52r6sn3Xdi4SO
W1ol697t/ndfs+K6AYMq+10spmuRo/+fR/Lpljw1wuOf3Lqrji0+fj8zVdN9
Q/vj497rOhWq5DcuWXdnntjNw6N0zW86Dv36RNc/oqKvfaDupJyx4ftv626e
2eTtLzd1fS68X7Dgsu6Av95bbDqvG+yYfiD2tK5DxfhcR07o+uz5mM/SRzez
2J+lNnpnXelzpJ8rfU/p95Lug3TfpPssPRfpOUrPXTon0rmSzqF0bqVzLr0X
0nuU3fcxu+97dutJdutVduthduttdut5dvtFdvtRdvtddvtpdvt1dvNAdvNG
dvNMdvNSdvNYdvNedvNkdvNqdvNwdvN2dvN8dueF//R8g4iIiIiIiP8ZpTnR
acq4NeMO63qtGhFfZKSuud/0DFVDN+plgaL9w9I1z+4L3dpruW7BTvODJ1fT
7bX0un2jq2ma5q/H+3ycr+t9cGSzdS11y32o2TMml+5at5BzbQJSNb2L9Bzq
vFc38NmpXttm6drdvvSspaPuZneHyE21dW0fFXP4qbBuWN4ZUWf+SdGcNDLg
5qU43Xf9Lj8bFaDru7retU7ndJfM6L1q4D7dgs1L3FLrdd0X5x2Ve55uuVvn
a/lM1N0bnjix0CBdty/vQl921HUekLIypqlul9iDAxtW17Uf9G3w1TK6JV0K
NO2WT/dN2/sfCnxO1qz88azD6xTd7lMu/no7TPfL7KXDX9zR9f5SobTlRV0n
9xadfzmga/XT65Nbt+guafx04OSVupm79vXov1DX84bthW8TdQcsL9S86Ehd
pyp/x4wdqDvgYZTj0i667x7mcchsrbuhQKmFc37R9ap0/32l2rpnP3tY+1bQ
NatT0X6Spa5DxevFSlnoTn0yeN2dj0maXjluHfLI0LVu9iD/gnjdta4t7GqG
6k4dPq/ckkDdLo7VAvb56fo8Pt2hvq+uZa82f188pnu2eTmPol66g6t8mDhq
p+4sz12drm3VXTV6Y6uUtbpfDl5pX2aF7tRhZ0xjlupGxdxJDVqs22nEi9fN
FmVd6XOknyt9T+n3ku6DdN+k+yw9F+k5Ss9dOifSuZLOoXRupXMuvRfSeyS9
d9J7Kr3XUh2Q6oZYZ4S6JNUxqe5JdVKqq1Idluq2VOelviD1EanvSH1K6mtS
H5T6ptRnpb4s9XGp70s5QcoVUg6RcouUc6RcJOUoKXdJOU3KdVIOlHKjlDOl
XCrlWCn3SjlZytVSDpdyu5TzpbmAvzchIiIiIuL/6lpWDSufdjUjy5Y7GlOs
+/is2+lzlE+zwlnX/+DhsI+30rPsrLYrvHNsyrpnh7iucxuXdQO+TB0c3D7r
Om64Nq5HZV3PrwHVzuXSdW2+Z8P4J2madx+Mcqu/XtetwO22a/vq2my9U88u
I1XT1yIx+fF+XbM87fIva6H7slLIoK4Wul65uzo3vJOi6el4tmPfbbo2NzaU
bDhWN7DJFp87zXUzTx1ZUbOk7iTXr447kpM1Ayz2FI6/qhtYsFuO9pt0Zy3w
SMw5Vzfq3bLcjgN0naYcXRBjr+vmmt7gZBXdtq02znMpoNtpUPlFGalJmndj
Pkz6+5muT/fn2+td1a2f3sph4iHdtGKjndRK3QBbl9sVZ+lW7pw02/d3XYvB
YT4p3XTDLjdf2LKVrvf23wtfqaXbxLbhlPdFdSfseOiVL7fu5r8azdqVkqjp
YB1Q73G47t7KO9y/3NJ1XptcZcclXbs2Edv7HtX1ahTx3tpT13WoVaEny3Xt
ww64FF+oa/tHW7M6E3Tt8n48sGS47oC/3H7O3V33Tdi63kvb667taqo23lbX
M/WB+duqutdiLp+aXVq34IoiE7oX1vU5fv6b/6cEzfBqExuMTdf17dZk1p1Y
3drB7v8sCPkvvPg5sfFtXYvkFfHDr+iOtZ04+vVJ3ZDdm0pdPKJb81PztRU9
dQNjSzr/uUX3zYznd5qt1y3wz8J961fpxt4t1XzUUl3HX6uv8VqoG9vNyeql
q27noGnW/eZnXelzxJ8rfE/p95Lug3TfpPssPRfpOUrPXTon0rmSzqF0bqVz
Lr0X0nskvXfSeyq911IdkOqGVGekuiTVManuSXVSqqtSHZbqtlTnpb4g9RGp
70h9SuprUh+U+qbUZ6W+LPVxqe9LOUHKFVIOkXKLlHOkXCTlKCl3STlNynVS
DpRyo5QzpVwq5Vgp90o5WcrVUg6XcruU86W5QJojsjuPZHfeye48ld15Lbvz
YHbnzezOs//p+RsRERER8X9npRxu/2LrioUrdCd4Nz190UF37/jJRRpa6JqK
/3H89Kl0zS8dem8r3kW3++W0Addfp2l6Nlha9o+tui2njUkPH6AbmHPbs3JW
um+WH5r4Pi5Vs5zf+NSvJ3Vr+ngHWbvrtl2xNHn+SN1rb3vPONFSt5P77iX1
yujWP1fIptLLFE2ruNl+xf10w4pOv3Bite6GFRf9rfvoOtzdV3bqz7qxqdOv
NH+UrOl7PG/hMet0vXo+9C/SX9dzVI/BNtV1VxX/wybqZZKmnV/fgktv6gZv
Krzq1Crd7iVLqF4jdQM2W7163UI35Jl3vd8tdU2Bb3p/S03U7LLw9pVh93Rv
hia2qXdCN+zCkSkn1+hanF/iePVP3YLF3h/8tb9uyYNdOkQ21/1Sov7UThV1
o36t3cMrt66XdZ6e+1ISNIcvKHXB7aHupaJ9LZr76lrWvHsheI9uyJCj+Z6t
0HU/Nejt8PG6lU+tq/Kxn+6pG3Uq9mitG1wkquD5KroFzq39dK6Y7viGtV9+
+2bSDPS+Ffdrmu7eob4DzSN0pxb1fnTlvu6A2m5lfXx1W7ipUz6HdOs/f5tx
YYOuXbcbUZ2X6vY66Jzr0hTdWa/2Dhz9u65V6SMlZvfS9V35LXFoa93gB81P
XmigGzvIb2N8ed3NVS+0vlVMt1P60fSDFroWD8JzNkyL1zRNmBR/PE43NeDY
lIVP/wvPWDs3uavbq3ly48dXdX0/b+u54KxuAasB854e0h1+3NS26y5dtzx+
A3Js093h/dJ9yRpdl089Ls5coeuwySy3WqQbvLPp2mULdQeNdX9wY37WlT5H
+rnS95R+L+k+SPdNus/Sc5Geo/TcpXMinSvpHErnVjrn0nshvUfSeye9p9J7
LdUBqW5IdUaqS1Idk+qeVCeluirVYaluS3Ve6gtSH5H6jtSnpL4m9UGpb0p9
VurLUh+X+r6UE6RcIeUQKbdIOUfKRVKOknKXlNOkXCflQCk3SjlTyqVSjpVy
r5STpVwt5XApt0s5X5oLpDlCmjukOUWaa6Q5SJqbpDlLmsukOU6a+6Q5UZor
pTlUmlv5exMiIiLi/5lu3n09//rUjCw74On7jw+2Z13LHOubNmuXdZfEzH89
/k16lvV+UuRa+7NZt+TD2zuXLs66w/t4lt3fP+s2aXDtdvHGWdfU4H6lnfl0
a7ZdvvZeVJpm5jsb28z9utbFik/PPUTXZ3jA3P5ldD2Gun3bvztVM6RcrXkb
h+qWc25/9e23FE2vYdNLr3mga7+vb8qXtbpe1R+tHDFEN6xUh5fb6ukGzx1Y
u7SZrmnfwiGdniZrTtr1dx+zPboWVQ9vueimu/nbgtejuutObeE4pFxF3bnT
ju1KT0jSrLlkTWSOg7ouO169TR2nW/N5WCdVTzfgVdSuwLeJmqf6Xcs35qJu
rwbFW71Y8V+Y2eFixSG6nnV27bpeU7e7Yx/rpd8SNHvl69H6RpBusH8L+8mH
dTtbTqluPk93wIMgs3WOurYWR7za1dTdO67h+8f5dXf4hRRumGrSvHvzxJtW
j3VXlmzwxvWs7uajS9f/vE3XrWxE1TrzdMe6X+2+dbju8EN1S5R20LVZmK9k
qdq65iOPh9ctott258vqXV7Gaw5aUsmz+XNd6/nl9zW4qVugUKPnP+3X3VEu
MHToKl27mAqN+ozVdfn77B8j+uu6Tj44cGwbXdOIIsmBDXRXbq92pnNZ3eHL
zWaWKqjrUcez0LHXcZpu19q8vhyjG9hraY2mQbr+CZVOdb+kW7Nn0ci8B3U7
VV64Y8smXa8VATXMluja/Tax5LlJuv6rbgcf+l036mGunea9dLv/caieU1td
8192hrf+Rbfz8yvFXlfSrXlrV6E2pXS9zB+ND8r9X1itpvfGD7GataeVaNM/
TXdl+9q17kTqvqmzsOn6x7qdmz/fYnNfd1b+i6kD/HQ9RmwzL3RV1z338jMb
z+sO75Ucv/S0rqtZFf8DJ3TzBUzPFXMs60qfI/1c6XtKv5d0H6T7Jt1n6blI
z1F67tI5kc6VdA6lcyudc+m9kN4j6b2T3lPpvZbqgFQ3pDoj1SWpjkl1T6qT
Ul2V6rBUt6U6L/UFqY9IfUfqU1Jfk/qg1DelPiv1ZamPS31fyglSrpByiJRb
pJwj5SIpR0m5S8ppUq6TcqCUG6WcKeVSKcdKuVfMyUKulnK4lNulnC/NBdIc
Ic0d0pwizTXSHCTOTcKcJc1l0hwnzX3SnCjNldIcKs2t0pyb3Xk5u/N4duf9
7O4TsruvyO4+JLv7luzuc/7T+ydERET8318ph9S/2O1Em+e6mfubLvFepfvO
vvzgTn10737ZkTQor65Xw8TCq6+ma5pdCr1dfYRu27TbrjW/pmm2HN92W9RR
3e4Xl3XuOlp379bqLhZ1dTOn39515U2qZpN+vXNNvqbr4uJ/puFq3bZhpW+7
jdI1D/mp4Ew73bNdo8ysi+lOPdejeq70FE3HpT/Nv3RJ165M6LKR7roBB11e
3O6gO9bm+Kgx+XU9zoeOzP93smbg15Odns/XbXLyt0m7lK5XhE+9hTl089m0
X/QsIEnTyWJa/icbdHvNSbcs5fRfOOBB0umGurH3w2ct/5qo6Xqg+7MLgbqV
baZ1Ddqn679vy83EGbrBP4f0uGOvazq/weldQV27/OE3Xj5K0NzQ5XK/6jt0
m4y46X1hmG5wq9gzzW105/wUWDY906RZOfCSm+dDXdfYdg999+mGzzNbcPZP
XZPp2LIKXXRTi/3ZdmZF3fGWQ4s1+xCv+WaF5exSQbrhtXqm2xzR9Tk+w/vo
bN3DAU1mZg7Q3Vvt+bq+zXXHnrV/cbC8bu281yKSzXQtc3QMjYqN08y8lOJ2
y0/3XanWm/oe0k3NvFPgjruu/+5lS4Im6B6d5u9q46jrO2Ho36EtdG+ebF9x
oLXuqQvVXnfLpXt02qVDU1JiNQdF9LUOfqhreeVq/Z5ndYuohjvze+hapVZ2
L+qm6zMvw66Ss+6gMRdS7/XS9Zp+pdsVpeu6tY9HbMsf2m+fv7Vm5VjVbG7E
56U9fljj71O5TueOVe9K/OwwYPQPC0U+3zwjNkZtOFLDavecWMO98673K+QX
o2x67PE9vDLW0GFJgcRvR2PUnUTHOm12xBoG7flyccemGOUyaV9wSZ9Yw659
l9+I+DNGvYn+8rnH9VhDyzpuuXIPiVFT71W+duRxrGFw17tDv9rHKIsxI2cN
iY81dIkZ1eF1tRi1zeJAo6LvYg1Lu+RuYCoUo+ybWMwrnjvO0PPYuzbDPkSr
pJEjb5UqHmdYMSGhd3h0tBqT1rnszCpxhtHbV/bpdCdaxV5b4H60QZzhkSEt
6889E62cq3cML2Ef98O26xtH7opWUaXabXTqHGdYP3xbxYmropXruMfBXv3i
DK8NaX0j9+xoZZn/ZO2rw+IMh2e8bTFsQrRKczlfxWNMnOHOLim3tw6LVtfG
vl7oODHOMGroxuZf+0WrgDs5gx5OjzPsEjTboUO3aBVR3bJCxzlxhmfaDO+x
vn20uqzevCo9L85wpLVliWdtopWnY/DfyfPjDIt8vfG0gr18Xfoc6edK31P6
vaT7IN036T5Lz0V6jtJzl86JdK6kcyidW+mcS++F9B5J7530nkrvtVQHpLoh
1RmpLkl1TKp7Up2U6qpUh6W6LdV5qS9IfUTqO1Kfkvqa1Aelvin1WakvS31c
6vtSTpByhZRDpNwi5RwpF0k5SspdUk6Tcp2UA6XcKOVMKZdKOVbKvVJOlnK1
lMOl3C7lfGkukOYIae6Q5hRprpHmIGlukuYsaS6T5jhp7pPmRGmulOZQaW6V
5lxpLpbmaGnuluZ0aa6X9gDS3kDaM0h7CWmPIe09pD2JtFeR9jDS3oa/NyEi
ImbdwQfqX80dm5FlQz7MqlF3Wdbtfr5ws8E2WTfiU4VisU/Ss6zXiUbeiTuz
bkjvxhvzT8i6/k5Pf7mism79UJdGi4roBkftLDjFXLfm1ENJr/zSNOvcaH3g
0lrd4ElrDl3oquvSulaCe2qqpkezdWfHe+gGtzJPr1hP9+z6erfDXqVo3t2/
um6zo7prJ9ZfXnCabpqZ27Y3LXSnNine4aW5rm+7CnUyniRrlhxV5N2Trbqx
q+deLDVZ17T2508zWupuzvsqvUIJ3Qhn24HLnyZpejue63TrL12L0m6Biwfr
7t18sb+Nte7L5uP9j0clatomH53xfI9ul9+2nfIcq+vr8nWKW21dmzpNl6z+
J0Fz5YmT1f65oWvrPKV5tTW6Np4W7/sP0A0utGv+AWtdl2GRf757a9L02V99
9pe7up0nbcubsF23yPx2jsXH6NpUyDmydRPd+/Njm0/OrWtdqFjKrHvxmhta
Thh1Y5Ou3dr+eYcP0l1SZ8zR9Hq6TUzpDi/y6JpOFTxc5VmcpsOK4wfrees6
d77Q6+xC3Vn7zNYMGqS740D1/bENdcseLDJtb17dQJ/Ec2WiYzUvrSw4w+6S
rtfE81XnbtBdW7VolYnjdW/e97cq0E3XlPmooUPTH3otvXlqc61Y5bqqzOeO
A3547UhI7nUfYtSG6MgyNtNiDffWqR/iHxSjLAcfMg1bH2s4/G0Omwn7vl93
X9r81NFYw1if0zZv5sSoJjtW1+l1J9bwWInDzc17xijHueZWteNiDb/ezHx6
uUaMurkhR+7ROeMMB+6Z+2H452h1oWuZg3Hl4wyT8oaaHwqKVm1Hj2s1ummc
4fbYIXuGH4lWvXZO9F3YJ87QfGO/xIvzo9XM2c1N3pPiDO/4e9l8coxWd4p5
TuyyMs4wKHbN0xV1opVXxYwRDQ/HGS7psm30abNotflz/RcFr8YZll98tuG4
6CgVfPhl2NHIOMOb3zafm+MTpWyu2dQwfx1n6B/Zvs2njVHqY+aeRjfyxRsu
X5r/RPjEKHW25qLykRXiDdOvNuvZoHuUurBsXbf3jeINk07uz7OqfpQac8H5
3oT28YbRSfFdn5eKUs7zfq6T0Dfe8P6iszM6fYhUFt2LdG05Id4wtfDDEh3O
R6oupS8c7Lkg3rD06ce588yJVF/CU7c32RxvmHdMs9qDWkYqT6cDx7wOxhta
v8j7Nr9FpLIs3/XVqbPxhv77S9SOe/5C+W55c/7S/XjD4KZVn9zZ9kI5JiX0
3xkVb/i5bYfX1Ya8UAFTpjVbkRFv6HFgT68hDV6oCTV/Spr4Od7Q1zW5nU++
F2rJ4ma/vC9mMhw/sdcAq1sRKnPfxSufy5oMLYsG3Mx7KELdPRR35HV1k+He
nD0/V1scoRwGfyxZt5HJsHai5cXpwyOUSUV6f/n+33/tbP/7Owv7CDU38pJF
yY4mQ/dhd1IuV4lQb1TrXAt7mQxt7Fu8mZk7QgUk1Ok4fpDJ0KODS5WLyeFq
VRmbgt+GmgwHeK96mjMqXG3OOfZ6/xEmwxYfrl98/ShcBffO69fG2WS4JEec
zy8B4erUuKQtlqNNhqZLbZv63ZKvS58j/Vzpe0q/l3QfpPsm3WfpuUjPUXru
0jmRzpV0DqVzK51z6b2Q3iPpvZPeU+m9luqAVDekOiPVJamOSXVPqpNSXZXq
sFS3pTov9QWpj0h9R+pTUl+T+qDUN6U+K/VlqY9LfV/KCVKukHKIlFuknCPl
IilHSblLymlSrpNyoJQbpZwp5VIpx0q5V8rJUq6WcriU26WcL80F0hwhzR3S
nCLNNdIcJM1N0pwlzWXSHCfNfdKcKM2V0hwqza3SnCvNxdIcLc3d0pwuzfXS
HkDaG0h7BmkvIe0xpL2HtCeR9irSHkba20h7nuzui7K7j8ruviu7+7Ts7uuy
uw/M7r7xP70fRUTE/3eU6rxvsdkNPv+t2+nSzR2Xp+ma/e5Y2a2J7s46O6xm
xqRr2vTZ/N58qa77jkFnFlfRDbmV7+rc82maq3amvc4zQ7fJrz28fm2o28Vx
grrxT6rm4BMhrwqd1W3Zp/jtkQt1rSeXb/q8u677kZCEdda65u5hJ069T9F0
SfWpnuKvawrxzZ1ro6774jx5cvTUtauS0bJ5cd2xBdLtB/gna+48uKvmgdm6
LoGdF1k2022bZ9jhNq+TNDNfBe7ccULXq9rqw7cn6Not/+tZUTvdU453fU9m
JmrWLOgZ1PqO7t7mbRZmbNP1PnNo4MTR/4Xn2m0PbKT7bmWv3f0yEzQ79fwU
Vu5vXa/bM3/Nt0TXwrzYqAQH3c713zXrmVv32qZ80wNDTJpRf9zseNpT982G
O7+MHaXr/PVMg722uoGnM9od+xyvOfVVzJXr/rpWdUOaPlmre/dp70IN++lu
7vXXPIfauv4HunYt8jVO08znRK48wbo3rwzq0dhTd07EH2OrjtG1jdk+8JrS
vd8z7uvJfLoOmflLlA6N1fRNc23Xw1M3s1ItqwUTdB1TL7Ts76Dby7VQ+1md
fuimxm7tUCRW7T2ZEW0764f5p/1c5+TtGDXVz/ms065Yw+DQkenpa2NUl5Vr
J1+8FWu4qs6BJ869Y1TlJ2emWaTHGv5mn9H9nVWMsug04MPO0nGG79bOyL/h
WbTqsuphwPtWcYYFj3b4beXuaLVt0fvl80fFGZa+UODEtRHRynuk85o6a+IM
544yHWxeI1pdWF/pmPepOMOkyvdnzX4dpbatOR80+2ncD6uPa+9wMUpNeLq9
UNnMOMPBzUsmP1kWpSzqfXUvUibe0OXCwnqj+kapzUHe1qFN4w3/av+p6+Wa
USpvxQ9j/XvEG05+sGKoY+4oterpgYVFJ8cb9nfJM+Pe0Uh14a9hAyO/n9N/
Da78PG1Yl0gV1nTHKacj8YZT+9SKj/jyQrXcnnDuj+/n/V871u349NTRF8q7
xskWd0zxhpkLkzru++2FatI2Z3BnM5PhoCYfl5T+FqEClgUlla1gMvQYuaLN
oT0RKvlkcl2rX0yGbRPU1BMDIpTVgm6rFzqaDE/NKdpnxudwlbwrd/eak0yG
ba0zCi84Hq6uZe4eEu1u+mFhq7iBQ8OV6Xa9t7n3mgw7759UOb1kuLJa6nh5
1FWT4amxn2/dvv5cxW7q1SHskcnQsVXuapOXPlfXFi20u5Vu+uHkGd0P2z5X
vnUjFp0wSzAMnjp6csqXMBXwtptb1bIJhh4Vi7isORKmIrbZdi79S4Lh2IYj
y5weEKZii23deK1zgqHjrV/aXCkdpqx9rv+xfGCCoWeG76nhac/U2FdNhl+e
nGB4s9bAkFuHnynLE6E3WixOMPRPnXGu46Rn6myj9U+ObkkwDB/Wcf7Hps+U
Y5Nx5luOJBh+HnTlH7svT9Wbq39u+f1ygqHNta3Nnt56qiZcDywy8UGCoe/F
VQEnNz5Vphs13GdHJhh2Prdw2Kph3z9nZpErW9ITDG3WP/Br2uip+jI+otXN
rwmG+S6ManvW/KkK8E6dcTt/oqHHu2abvMJDlYdLvdLHSyYa2u6YfPr1xVBl
F92hpJN1omGvQVUvR/4VqoILz/HPUSPRcEngiqOZi0JVp0ZWfw5pmGhYefgJ
j7jRocq37KOwI3aJhsGHlk/83C1Uueaau3h868Qfvl420bd5qLKfNnBzIYfE
H+5Na/G4Tqia65+57f2viYbuRws3LF39++f/7LEzqmOiYfCZBtWGVJKvS58j
/Vzpe0q/l3QfpPsm3WfpuUjPUXru0jmRzpV0DqVzK51z6b2Q3iPpvZPeU+m9
luqAVDekOiPVJamOSXVPqpNSXZXqsFi3hTov9QWpj0h9R+pTUl+T+qDUN6U+
K/VlqY9LfV/KCVKukHKIlFuknCPlIilHSblLymlSrpNyoJQbpZwp5VIpx0q5
V8rJUq6WcriU26WcL80F0hwhzR3SnCLNNdIcJM1N0pwlzWXSHCfNfdKcKM2V
0hwqza3SnCvNxdIcLc3d0pwuzfXSHkDaG0h7BmkvIe0xpL2HtCeR9irSHkba
20h7HmkvJO2RpL2TtKeS9lrSHkzam0l7NmkvJ+3xpL2ftCeU9or8vQkR/1fX
3vyr7aPdGVn28GiHy82aZt2x4/e/6f8iPcteXrjYOnpr1nWo9bp0r4FZ17nG
u7TQClnXZd7Px6NNaZpRPW6n2z7UrWPaWy99mW7I0HONR7XXnWoTsWXuy1RN
38sH8w/6U7fclZK3qlTS3RBfKNX6dormtadT/Vcs1B2eL3/UETvdJrELFtfI
TNbsdPZc0MZLuj53L+W9M1PXo5K3f5eOutaX3pfvlVd37eHfz/wSnqQ5YGar
SIvNuqd+rZ9nc3/dko3sXNeW1j079mLiH08SNZ2Cgv9+uFH3cJdzJbb01HXJ
M+bQFktd+9s+jQ/eTdBMrjz97jV3XY+gr5Pyd9QNHvNpbaWfdGdN7BsWEmbS
tLj/LNblgO6sfLFOCVN1pxZfVXmona6rxfXNX/LpepbpWj3tfrxm8stBdaev
193gdtftZQ/dIhaZoXsr6mYWv3H8WHKc5gCPfW4nT+l6tJgXX2mO7rXcgWlt
O+maPOtUtC2iOyC/VZnx4bGad1t+eZt/n66zf8tlr8bq5ru/LWh/K92dv+Xc
/6HfDzetnpNnRWaMig1atq/+0ljDWn4N8/5yJkZ5t369tO/pWMO5O4ufnjM5
Rs38+6fPU2JiDTv2f7u4V+0Y5ZPj8O1SxeIMZ3wx6xUeF63M3rRy7O8QZ+i6
YffXmZujlVO+mqU7zIwznPTSPsyyU7Q6NeJnC3U8zvDN6OcuFT9GqWaXX2Y8
jYkzrBFXcqvvkSjVst+csssLxBvun92+T8MJUSqpjWfkiybxhru3r/E5USdK
3Yk40vfE4HjDvc6fP6SYIlXBuILTyi+LN3zWK2TvvlGRynpTau7Gx+MNPe3t
0p1ev1BfgmMGHHsWb5h3Ud+Mt1NeKMsyq4dYm5sM/Y/1ifvrXYRK27Xt2Kya
JkM7a9u3a1y/Xw9dt7N4T5Oh3YxO1W7kjVBNNgQXWDXTZDjIYfGzfhvClf+Y
yHvltpsMj94YtsOrbrgK69Q16N4Nk+HUCiVW7jj3XGUee1TtdrzJ0PLN0mUH
uj5XARcflupvkWDocX/t+bepYSqthKqcXjvB0O5Km82NZ4apJQeXpr7qmmA4
3mKMXU3LMPXm58ubXMYnGNqcud1qh+8zNamsr/+GZQmGPoeDjrRzfqYuh9s0
PHMwwfDumBVjonI/U6aaxSeP8E8w7Dz/5tFHR5+qy06/lSuSkGB4N6LcwYed
niqbb3P+qGOeaLgy5/LTf74LVVMtbFt/KJto6JXq3KLUoVBlvrXbZI+miYbv
fil6tL5jqAoOPXOvVJ9EwyUzXuw4bxaqzMY2ejFpauIPb/w+0nt/iAp43K+s
/cpEw20L/jmsBoYoz3r/1HzvlWhoPdl6vlX+EFV5bXKPZlcSDTd3s8/X2++J
6lWs1oMVzxINLe7M2zRo6hO1eV9oze4vEw1bFps5v3C9J2p4rd3donMnGYbM
LVt0UPpj5dLvrzKdKyQZ7nxXxbvMnu/XZ/l9622bZLhz7XGzHM6PVdjRtPpV
fksynPqxyYQN5R8r087ylsm/Jxl2sdnn3zo0WDn3GZej8ewkw4Bvlz85rQ5W
pzZH/TN6XZKhqfmQ8n6/Bas6a0eeLH84yXBmt4eJe3MEq5BuFsX+upxkOLdI
2p2qtx6pAatqTe8WmGT4pu9cz6JrHql3JZvmLROTZFjuYt+4Y/0fKd/Y+ivf
v0kyDO49YWDpKo9U/UN7z781TzaclKtESMW3QapXoxXWe4okG1oMH/JX6QdB
yqlav90B1smGUcvfl9myM0i1/OuT15J6yYYdqxbMP35ykCoYmS96RYtkw2e/
Rw4a1On757hG+iV0SDaMmjfsWIeqQepL8ocbW3smG+ZVJc41zhOk1oY82z55
cLJh9zlTah9JCFRmbkdOHh+R/MM/vyS8DApUzhnBJx9NSDYMaLAoYenZQGWz
fWuRRVOTDVfVbfJg6v5Ada36+3aLpyf/cLFVg0m7AlXmrM0d/vgz2dByTQub
M9vk69LnSD9X+p7S7yXdB+m+SfdZei7Sc5Seu3ROpHMlnUPp3ErnXHovpPdI
eu+k91R6r6U6INUNqc5IdUmqY1Ldk+qkVFelOizVbanOS31B6iNS35H6lNjX
hD4o9U2pz0p9WerjUt+XcoKUK6QcIuUWKedIuUjKUVLuknKalOukHCjlRiln
SrlUyrFS7pVyspSrpRwu5XYp50tzgTRHSHOHNKdIc400B0lzkzRnSXOZNMdJ
c580J0pzpTSHSnOrNOdKc7E4RwtztzSnS3O9tAeQ9gbSnkHaS0h7DGnvIe1J
pL2KtIeR9jbSnkfaC0l7JGnvJO2ppL2WtAeT9mbSnk3ay0l7PGnvJ+0Jpb2i
tIfM7j4zu/vS7O5js7vvze4+Obv76v/0fh0R/5//3nRzc82g7sN02/68olCb
HLoBfmPvz/dK15zaOP70e3vdtPodEzvfStOsvzcic/QsXeek1yubVte9WzAm
l19YqmYTk9vw+Wt1HeOW/pKrj+6kus+qDCyp6z51Y+k90Smanrl2Vrt4SDet
SPucG0fq2kVbrB1srRt8oPbrqfeSNSc0HP/T7Om6ER5q7S4b3bahG7b++ShJ
s8vCYa0KzNN1+fJxXr8muk0aVs03Lj1Rs6Db6I4/+ei6Nb+w3Wua7hvV96ef
m+i6DHvi9/VNgqbF8Ue5Gp7TDWswrES9abpHT2dUrd1At0hEZHLj1yZNtwmN
526/oGu7zMy+5hzdEDvnxoOb6m7ocf/Y61fxmmObfrmhzuu+u/nukuc43bPN
g3O3baxr2a/LAWWu6xQ4u27QnTjNWLP556qs0526LaHg4yG6Ln3bnZtZXXfq
M1/LIq9iNTek/7r/20nds+ZPmmRM03Wzulaweztd29xLyk4Y+t/5oUmf8Jcx
qlnPKTXfr441PLSot/2qQzGq472I8wE3Yw2Ldjs19rcBMcpieo9J9T7EGroE
Lg49nz9G3RxwZJpnnTjD5++/dl9zMVpt/nXBgfUj4wz/Kn4l175R0WrCpJbV
Nv4VZzg4tLJfxWLR6mXR5/cPBMUZ/jzyXOdFflFqQvOjT3fkjDeM8PriW3xO
lApOyulSsmG8Ydvdn7q+aBSlbAdN9Xd1ijd0Ttl/dO6LSDWzfFSx22viDTfs
G3rrQPdI5fvyVK1HvvGGwXXi5ix/+EKtHf57cM20eMPuT54unt/0hXIu9v7W
emuT4f3bVgd//StCeW23WTajq8mwQJ2VozYXj1BvimfM3u5qMrS53nBlnXnh
yu6nGdub+JgMeyVvqTMo47ma+9HsYlCkydDd8ssDd6fnakmB/gs88ycYjg97
O7t8RJjyXFqyxL2WCYbWYy5d+8shTM01NbdfPTzB0L1zZ9XnyTPl3Djzr9Wr
EgzvDy1auXffZ8o1ZPKImPMJP5xz+FG/J0+VR3PzCJvYBEPbLu9Gr3B8qrzz
xTjMypdomBnZv9a6qFB1qmqhu7vqJhqaVj/ZbT3t+/XBFheaOSYamkypj3t+
CVFng+LexsxLNAx371Gxr1uIcogLMXPbnWhYp9fsLy5lQlRYw+P9G/olGk4d
9fr1aJ8n6k2M6x2z+ERDm75z937p/kSVdEsZXyBvkuFll5YXwuIeK5vp/xxu
XyPJcJVnhW91Fz1WdqO+Jc7rmGTY626O9m6VHyvfc84f505MMgx+es9yyYlg
VSe86/L6a5MMZ46zHPFHt2C1ZGXv6mtOJxlOGJBzac+YRyrw8duP6773h39d
u6BisU7LHilPx5lXC79MMrT+vOF6YL1HatKOUk3nFUg29Kl5oe/isCDlX8Zj
36jqyYbeRxsUu7MkSFlbJh2e6JBs6Onf7ptP7SCVaZEz1co52dAy5WPz4wGB
KjDTqo7/4mTDtYWPz/D+I1DtLf26x83dyYYlT9XId9YqUA3fOHdQn7PJhkcX
F3ry7cJD9cb6tXnco2TDzna9Eg8UeqhmLUioaZOcbGjzfv1XK7cH6toKp4p5
zVMMXS9c+uVOWoAyK19wXkDplB92PpG/3sgAVTC4pU/pBimGJwuuejHy2X1V
uUXFOxt+SzGsvaVpx+V299WceT7+VYemGBbLG9G3nN89FTXt9eH46SmG19r0
+LqzxT3lVFttq786xfDaP4tGhx++q8LevO7Vak+KoalD1zzuDe+qzs38avif
SzFseNAp98ATd9Slu3E/W99NMVyv9o5Vbe8o+zz55gSFpxi6PrhZqlTwbeV/
+dOM3a9SDAesKl3zF8fbakOrAzFHLFINVy4r7vMh9JbqvCH43pjv+ehfG67M
12zxzFvK7YZF14U1Uw1TJ4XWem12Sx1e/jinappqaOGfK2PxMX/l2tmv4t22
qYZmjZ0atx3jrwbdHF3NrWeq4aNxKyzTivirUz+/fF3g91TD++OGdj15yk9Z
+P4dOvqPVMOwvcNfuY/xUyvPFJiba3qq4ckrp4rGt/ZTVid6V/KcnWro/My8
obLyU1PrxKUvdk017Jzh5Rz++W8VMthmz7ZlqYaZ90vbOt//W41PWRTi4Z5q
OGV2zIch1/7+Xnc3v7qzJtXw5KtZju12y9elz5F+rvQ9pd9Lug/SfZPus/Rc
pOcoPXfpnEjnSjqH0rmVzrn0XkjvkfTeSe+p9F5LdUCqG1KdkeqSVMekuifV
SamuSnVYqttSnZf6gtRHpL4j9Smpr0l9UOqbUp+V+rLUx6W+L+UEKVdIOUTK
LVLOkXKRlKOk3CXlNCnXSTlQyo1SzpRyqZRjpdwr5WQpV0s5XMrtUs6X5gJp
jpDmDnFOEeYaaQ6S5iZpzpLmMmmOk+Y+aU6U5kppDpXmVnHOFeZiaY6W5m5p
TpfmemkPIO0NpD2DtJeQ9hjS3kPak0h7FWkPI+1tpD2PtBeS9kjS3knaU0l7
LWkPJu3NpD2btJeT9njS3k/aE0p7RWkPKe0tpT2ntBeV9qjS3lXa00p7XWkP
LO2NpT2ztJfm7034P4NrN3SIdU3KyLIvR5Q+sahX1p2Vcjp6elx6lo1oObPG
Stesu3nZBCf7clm3cm2LrakX07Ks2ZhDf7wboTsr0HFF9Qq6ya33vZl5KFXT
dnvzTVYNdS23FAp0DEnR9A7L23ThON2wnRuvfiuom3lr3c72J5M11/ofWGPh
qGtx7/YfBYvqbq7y6MDvl5M0PS2u3Bo8Q/fy6oLFH9f4LzT/OmF4YqLmALO4
1dt36np3mHLWbYDum1Hj7p2z0N0c07b459MJmodTn7aeNlQ33wknnzp5dV0W
fuphfcek6ZVW2//QYt3wyjeLL2uuu6Nf+i6PN/GatqcrXv/1tK7rpOofYpx1
LR+71d5UR9dnualplfdxmkWif2++75zuy3uOpb/M0jUvlcN5Vyvd4beqrHP/
EqtpZud1KOaCrkfT/ucTpug26e7iVbqJ7uADK9qXH//DfxYd2/IoIka1XVL4
15d7Yw23nx29qZR7jFrSqfRvg5/HGjYpMqDw2yYx6tnxwm22lYgzbDYjsaxH
ZLTacNy7t02POMO9Mz65OiyJVrZtR25+tyruh2VGly9UK1p5h8y+tsEvzvBL
S4ehe0Kj1IbIWJfbX+IM99Y/3KWXW5Ra8s9PXULqxhueLTxt5ZVmUSrqXtEv
p4bHGzrtuJsn7nGkOuQx/pzd1nhD8/q+z7r9EqnMilQ5X+xh/A8DN4TeWv9C
NZmce3ZgDpPhoKMZq1dnRiibRy9yjP+el/915fLhmRcdI1Tb5rE35082GTbp
6nja9Ui4Cq52bdVuL5PhkmVXHcsUCFdLyi0Y8iTUZDj+wJy4+TOeq5CMW+0O
FE4wnFP/YIN8QWHKa0RQxKz2CYYFHq1wXlMvTJka963W83uO/tfOQzKX5937
TA0fWt321/0JhiHRS5xrFnmmVvXPtSwyJMFwwJvXo4bNfqpe/jSwav/v7/G/
1k9MX/M2NVSF9RtQbGyjRMOp/7y8ff33UFUzv9P69FGJhm4vIjs0uh2iLI70
6T9/faJh2tevbxZ0CFHBY3pYHb6eaLjkRv4TOS4+UdemL39eICPxh38Nn/Cs
4RNl/u389tdlkwzf5XxSu/qhxyri0jG7a78mGY6586bb1eqPVeWUcgfGfq9/
/7q5lVe+a5uD1eFT7+xtjyYZmseXaen86ZE6m7Nx76LPkgwj3juZ35/2SFn6
HVv6x9ckQ3+fN6NP53qkvnTrZTuvRrJh3iIWzovdgtSExuPyLO+dbHhh6BXT
iJxBalXX46M+LUg27F/89e2CswKVv8XG7ZYHkw29U9rW8fspUAXEPwuq8T3v
/2vDnXHFc7d8qDbU+mWn9+tkw5WZp7und3uglvzik/9T8RTDsJMvLpRbGKA6
L9rw956mKYYNTe4j6h29r6I2Lw5sMzDF8JrLi7ITw+8pp5enBrksSDG8Nvh2
cLP3d9Wsn3s6D9+bYmgzwdLjSK27atCZj3O230gxfHS1arGBk+6oSbFJP8XF
phg6HVkUeODgbeXveNHdLH+q4YD3269+vnxLtTi3fNSN2qmG60/7rZ/8xl8N
MHkPCe6Uamjalnorv/JXR8snDLeckGr4+tdNB1dM9lOeOwqd+PB9/vhX+94H
n9Xy+FtNKr/BxeVYqqFTx1VNmyXdVJPOt//11MNUQyfvwb3vV7yprl39VHpe
Uqqh64LSI/IvvaHMTU87Ns2XZpi6PbndsRvXVUBjr0kzKqUZNrpsNahOg+sq
xKJ5+PbWaYaZITtD+rlcU4eHfehycEiaYYHxA/uVXXtVtRw/2dthbpph9bRj
L45bX1H+rqUvnt2SZnj6XYDdxNhLyqlej1yrT6QZut5qcL+v90XlubhU8bbf
56R/db0UX+j5QV8VUMlq34qoNMPRQ/y7Tpt5QUWt+HIp96c0Q9fJ5apcbH5e
Tarwocd5y3TDa0uGVB9keU4FlrBrMqNmuqF9psP0wTnPqoLuZuXHfp/D/nX0
0o9bLD6dVq7PElr175luaPagYsGgyqdVwIf5dcPGpRuOdjR75PfqpGo7q2mP
yQvTDZ+2G9DAJ+aEMpnXWvhoY7ph/aBP8RUtTqgJF8rO33Mo3TCx64F8vxfw
UZ4fdoy19E03NDvRIUfd1ceUc445dt/upxs6vRi6qNjto8rD7u+f5kekG3ou
8GhfqsUR5f+q5ssZGemGTn0+zj608pBymBLy8tbXdEOnjvHjWpc7qConzXzn
WjDD0KfK+rjEi14qufgij56lMwyt8/3l1tpzv7I722/+saoZhp7Jxwrv+3Of
mrQ07+CM+hmGrl3K/LpmzF5l/kuupPN2GYY+oR7VDs/bo6ZG7IzO3SbDsH5L
22dTHu5Wgf3rHEtxyDB03Xj1SEL/3cp1+rp5P3XMMDT7PKhS52q7lZX5y5N5
fssw9Dwzv1m9957idelzpJ8rfU/p95Lug3TfpPssPRfpOUrPXTon0rmSzqF0
bqVzLr0X0nskvXfSeyq911IdkOqGVGekuiTVManuSXVSqqtSHZbqtlTnpb4g
9RGp70h9SuprUh+U+qbUZ6W+LPVxqe9LOUHKFVIOkXKLlHOkXCTlKCl3STlN
ynVSDpRyo5QzpVwq5Vgp90o5WcrVUg6XcruU86W5QJojpLlDmlOkuUaag6S5
SZqzpLlMmuOkuU+aE6W5UppDpblVmnOluViao6W5W5rTpble2gNIewNpzyDt
JaQ9hrT3kPYk0l5F2sNIextpzyPthaQ9krR3kvZU0l5L2oNJezNpzybt5aQ9
nrT3k/aE0l5R2kNKe0tpzyntRaU9qrR3lfa00l5X2gNLe2NpzyztpaU9dnb3
4dndt2d3n5/dvxdk9+8R2f17x3/67zP/uyndZ5vnbb3rheh6rHSI8e6g67iw
5iiL8HTNuz63Ng/5Xdcy1urIyZA0zQEji/cr6qw7d5dL4DZTqqaNQ4W0mNm6
wSM27u1kqev69P30Y1dSNK23HhwW56ybfN520QgL3c3tw/q18EjWrPntyj/D
bXXP5np1ZPCdJE2np5mdOjrq2sx5uCj1e877H3Wcbd9/5gZd99dzb1Vpplt5
v4OnZVSCpv/D58UqLte1LxiwJbWWbnKmb/nkWJNmkePLU4566NoN73d+Yg/d
+7ZX+w3MoTtgZf+h1Y/Ha26eH/ymsKOuWeVO7jWK6dZeHHHe7lacZi/bK2bl
Z+qe7e51MaaxrnnYoerfTLGato/713ywXXdS5rKjSX10Bz+++du1rj+c3nrA
6si8sSrg5aC/G6z979w8rf+ZAzHKvvVpF+/7sYbWf70K+NQ5Rl3I+/TGr/nj
DMe8ujiweEa0ct7z9k2ubnE/LFB0/Yzl0argt5pPT66LM5yw4OrFqVWjlUXU
t/yDg+MM39Uz++PtjSj1ZVH66/eW8YaLm3pYFvg9SjnMW7by/W/xhpvb2HoX
KBSl1v5Zyea9W7xh921bV1lNi1RvKldIOXM13tBm455WL669UAM6JHbc8CXe
8I3Nr5UcfnqhOpXKPX9PM5NhZd+XC3/uFaHsKuXJcd3FZNhrW8LnS9vD1Yab
ce0KnDQZOpzp0eB50nMV5VNoT41kk6FTWnBpt9bPlWueqM3JVRN+aBra3H51
mLJoty20Yr8Ew1TbRjM93j9TaZ1zrHZcm2BoV/pzn89dn6mA0m7vZ99KMPQ4
6VJ65aGnqk7tqW9Hf0kwnDXbq5LfT0+Vq7tPvur1E3/olB65dGKoijpl9brO
2ERDp7jjNVyuf5/LvvSccmF7oqFbnp8OBdcOUSUrORxtH5RoeHlbnU91Vz5R
mVa+IxfnSDK0PB70YOKnx2rJPZ+YLY2TDCfsTOvbdOhjZXl+1dELY5MM/UMd
Mx9dDVZjc+6ufXhfkuHND2Vn5SgWrHwOjl5fLzTJ8GVu/w6TZz1SaTPTn1tY
JBs2W99ofEpakLK9aX/1c5NkQ+ezLW/kHRiknBoneZ8am2wYNbTdu7irgcq9
nl/OzjuSDYdP9nlfplagcu7dfmIRv2RDj9xOI3YOe6h69X/fptu7ZMMCibZ/
VLF7oGwbBztmVEwxvH+twPvhjQKUVY4Of93vkWLo/LFbp0Yl7ivzTaf8isxN
MUxdcHfw9qL31EvPlCVTD6cYOtnNCumU4666OyS6ausnKYYOt86VnWl2R/l0
cGw/MHeqYdRvmUPDI2+pmvHHh4Taphpa7I669ea2v9oR4Liu6tBUw551328p
7+en8jUqG5m2ItXQ/5aj3/jzfyvXrhst4y6mGprVWOJ+YOtNlTz/Y47rsamG
S8yqvZ156Mb3Plk09F6hNEPTri3/ND1wXW3oH973TeM0w5WmJy9/u3RNBbe0
L9BvWJrhz1ZfxkdOvKq8pjbJX3pVmmGjjVNmBv9+WTn1qJu39bE0Q9d6j9e9
eXxRVf691vRngWmG/ZzfL3jQ2Fel2Ty/tetdmmFibd/dCyedVxPaVf7p7zLp
hol3+x1+ePKsivI+P9S3Zbqh67O+bm3LnFH+N2oXKTo03dDnhaml7YpTytfc
uvXpxemG3YPnv1558YQy+21K20UH0n84Z1/I/ao+ysHqw5HGt9INnZZfjnrf
01uN/fJg+bTEdEPrVluLWzY+rFaVXXn6Rr4Mw8CeEcWufvFSrh6nchysm2Fo
tqhGqPLcq6aGv80xr0eGYf0++YPqDfJUY5cU2jX3jwxD+/sOdaZ02K7GDjpw
6c7aDEP7o3951g7bqHa+aPro58MZhp5tHDf1K7NWRdl/7hpzL8PQ7OioYZVW
uKmoQ7XSDsVlGJptta+w2nWake9G3/rjRNNv/+bmf/95qRoV6Zu59bl+3Wx1
hcpeZ/Xr93t/HNXTQ7++rEqjAkP/1K/nmR/0/m4v/fpKuwdt6zfSrxfZ3fhQ
36L6dc/Rn/+Y8Tpdu979eq6A4Y/16x+6puX7fFq/HnX5WIXrW/Trt4d1L247
U7++L6LSZs+++vWtpuAPvZR+fW2T4lMCbPTrK3tMy+9RWL+eR/nWPPAxTb+f
N5T7AJN+PfFejeXrAvXr7Z5YLrvtq19fW/6n2TmP6tfDvzQ7FrNLv97vQ9lt
Qev064GXK+yzXKxfvz1j/qr/tof/H6+ft410mTldv25d9PeTIVP0667pcWm2
k7J+Xfoc6edK31P6vaT7IN036T5Lz0V6jtJzl86JdK6kcyidW+mcS++F9B5J
7530nkrvtVQHpLoh1RmpLkl1TKp7Up38H+uqVIelui3VeakvSH1E6jtSn5L6
mtQHpb4p9VmpL0t9XOr7Uk6QcoWUQ6TcIuUcKRdJOUrKXVJOk3KdlAOl3Cjl
TCmXSjlWyr1STpZytZTDpdwu5XxpLpDmCGnukOYUaa6R5iBpbpLmLGkuk+Y4
ae6T5kRprpTmUGluleZcaS6W5mhp7pbmdGmul/YA0t5A2jNIewlpjyHtPaQ9
ibRXkfYw0t5G2vNIeyFpjyTtnaQ9lbTXkvZg0t5M2rNJezlpjyft/aQ9obRX
lPaQ0t5S2nNKe1FpjyrtXaU9rbTXlfbA0t5Y2jNLe2lpjy3tvaU9ubRXl/bw
0t5e2vNLfxeQ/o7wf7H35lE1vu3/d5QkIhKVohRCESmJnJkqKaJUhpQiSREN
kmSbUsYoGohokBRRUQm7QaJBs0Z2856LkkT89nf9vp/rbN3nPtZ9f5/1W+t5
1vM8/nmv9Vp7bbtrX9dxHsfr3Pva0L4DtE8B7Wv8//tN/9cypejdyCVref9x
apWsdK2dxSWy9vjdES1yZDZrvPg+fhuHSOvrbhNflrGJTOV/WfRnKpm1tzMK
3PxZRGa/P/xzfCOTSClf9uzsQ2SG8rKU7rR2Eblm3MLqUX5kDuqP2LL+RyeR
SY5TxzbGk+kX8szuzkIy1zw1oE3/2EGkQvGzk2aWZJZYOb6Y/7OdyNuBm3pc
rpLp/1rCN30JmamrMsac/tBGZNXkB3Z5LmSe+bZnuZYVzuVhzIQXI9pQ/svp
LTuice7o3LygP7QVaW1vUnr9tY3KTF+dKkfZVhQprf90/qp2KuW71H1W3mlB
pR8mLNsZ2Y5zk0vSd/kWlLqazu3oaqdy4NYXxTlxDOS8Y1vUVq0OKjv7j0Wc
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
ybc4fiS5YZbK37g4kvf5tk57HEByOd3qqj9bSe6WGhjnrE1ymtdXx7fSmGeL
vx21+ms3Kg9xGz+r8QvFrdN3HJxV0y34uzpCm8Mwj56RklmS040kPqaW/rXB
XLtWTWRTjGBdnLqT9lYac0PxpWUvL3SjmKvBZ2oaPlN8kGZyYpxHN/JYrbNs
RgTmPUUHL0za1o1s+ydvf7xr2OMDuU2bVwkev3lTopkq5j5jA5dPmdeNEhU/
hi1lNVN83lnZJwemdCOXDxk6UpmYN7SYj108UvB60lcrnjiHeZrLpker2XxE
P2eUnLAec5lWzie1OkF/kFE6bafisOfvvXHrRaGgn/jSL1bc04Rf518T58dp
gv7h5PO/2rmYd2qlN6bG8pGh3+pZ+pGYM44YZ3tECJ7/7rMK+ROY03knpEwv
8ZFDZbZK1i7MXbdeGH35JB8F1dRfZ6zE3LPqo9t5Hz6KCRkdskUdc83UjqZy
Nz7y0FupLimN+favPg3O+wXPv2PuzFOjMb88do6KijMfMW63VG752/hvOfQ8
0P8LvU7o74KOA3TcoOMMvS/Q+wi979B5Ap1X0HkInbfQeQ5eF8B1BF130HUK
XddQHYDqxn+/WqLO/MOhugTVMajuQXUSqqtQHYbqNlTnoXUBWkegdQdap6B1
DVoHoXUTWmehdRlax6F1H+oToL4C6kOgvgXqc6C+COqjoL4L6tOgvg7qA6G+
Eeozob4U6mOhvhfqk6G+GurDob4d6vOhuQCaI6C5A5pToLkGmoOguQmas6C5
DJrjoLkPmhOhuRKaQ6G5FZpzobkYmqOhuRua06G5HvIAkDeAPAPkJSCPAXmP
f/UkkFeBPAzkbSDPA3khyCNB3gnyVJDXgjwY5M0gzwZ5OcjjQd4P8oSQV4Q8
JOQtIc8JeVHIo0LeFfK0kNeFPDDkjSHPDHlpyGND3hvy5JBXhzw85O0hzw/t
C0D7CNC+A7RPAe1rQPsg0L4JtM/yP92v+afO/D8lodcp9fnP1ztdbCKj5yZo
WaixiDQ79ce66GAXkR4jJ8hJrOkk0j+Wd7h0fAeR46b5WWxVayeSkXbtjqhO
G5VaR2Zd99MSnCe33jemcHH6hG/W/aXYipwPtu+LzG7HuX1uuzyTgdyXW7y/
Y91BZZb5hDjV31/QBSbv2vRfHVQ6Gemaxo3/jOzW3bKNut5JJXvhgn4tkyak
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
Ie8KeVrI60IeGPLGkGeGvDTksSHvDXlyyKtDHh7y9pDnh/YFoH0EaN8B2qeA
9jWgfRBo3wTaZ4H2Zf7v2m+6kFlTn/S6+z/OwYVm8m3hXCIZ1ul2TYLz71/T
Y+P8lLIFTCKNnLvuLb/QSaRZYNztl0s7iPQ/pDDfZlI7kWfYT1sW7Gqjcrmy
d0rWt1ZU6+w1jaHfTuXrvRW1Tx60IGnbIdoB+Q4qmb/OvP68jYG0L57+1FXa
QaXzLt9jJjc/IwNG+YYpgZ1UmtpfVnzl3oQcTow2qVrQRSXjPGtOoGcDqqq5
PMe6pIvKwADr4KGoOhQ6RVXfZDuTSqOcm5vnfK1F2hOZtS87mVQ6lxgfL9lQ
g8Q7+yyynFlU8sxVpKqLq5CR78KJ57+yqNQMP1ziOr8SRZVGJ5/Yz6ZSO3z2
YGB+ObKz3NEa/YVNZeXYpqdmeWVIJHJK+DpTDk5XX+9dq0uQqLRjmXYWh0ru
3bS57xPfo3FvflTGq3CpfHZu0Xgl3XdI+XidjP11LpWGSrygt9cKkMH93b8P
feNSGbb4uazD5jwks6zN9rI1j0o5y2019l/fIMaEnd/FXvCopK16crLgwEvk
mWmpYjOFT2XEdhkPdu9zNKTrciDPhU+lupvSj9YpaYg3s/fsGTqfyvKsJcGP
elNQmv/HW0EK3VRqbbq0Z9GZeBSz4/m4u97dVIpUlkVrfotEnlbmO9LfdVNJ
txLJt1M8R103vnuLJVvbyHXTN1hd+s4pIfdDe99c76VA8nKZsl++mUK+n76v
cKOOsZD7nrWeTPf4KuTzNmL3nDwukbz6spHn18VC+o1LwctlGsi+xWN2rHP8
WZK7nXV65D9PyH3I6VXdmyqFfF+Gt78s3Y/kib984xvVSd6zJSHdulLI56xu
BYq4nyA53SDq96JFQr4vM3TdfloL2X/q2XfzP18Tcn+Gl9seP1pJcukD05c9
/ipk/6V51ROruyRnbml5N7ROyOfZLnQsUPkh5PcObv0WP5tEci2LRydn2pBc
pDQpCcmQfODGBfvy9+R8wVWNP2p9iuQhQU9uNC8Tcn8PlxVznXqF3HeL3ujR
cU/I/svY/GP77EheVCEj5Son5P4n1Up7r1eTc5xc5LL1J6+RPPHV7NQHG0ie
fkDn05IxJD97TPbUUD45h4rUzZ5RfFbI91NWfHhhuELIfo103dO9fUK+V+L+
fY5cGskL/KovSx8judbD32bOeiSPQKmKIj+E3Neo/8Dr389ITtumwAn0FHJf
pqKBxrlaJF+ivqgytp/0GBa3svbcfk7yEIPm5cd8Se6/eN9zj5Ukv0Q300kQ
xXzes20BZvXdyMWAsRzdxd7GOXYgVf5JN6JFuOvTdYZ9PjypvKP1tGAeSApe
ufQd9kL0w8XVIlbdyOH2b5mRWzBPKhtQWjyrGyWK8U2HmrCPUqr0bHD8y0cm
l1VmHg3AvCdSNmprNR/VieiOqJ00zHe59dITEvhI4qpDa0wM9mO1b8tbpP0E
6wo/eMm8RZg7j7W7zNvAR7TbLi0Vr7CXe/XxsZq8Kh/Zjs5ofG2DuVHygnei
f3go9XHf4TG/sA8sFTkuKtUoqL+n04JiYjHXtq1lHs8QrHNNUwsz1mHOqH7x
W/w6D2mFFR+dyMPe0nPtKt4SDx5Snq+6+WwE5kasF3WrzASPf1ccHbcSc8Nv
D5lf1Hkopjnx7cJO7FFp7csbLogL5qaXN1R2hGCumqyol9HGRbaPjcetW4a5
0TVrcdF8LtI6UHf1fBf2vTKvngW9juGi1LrXW5uuDfPDLS1mpwRzcuazJYZr
VmBuPX5cjsRuLqpTnV574xv21b35Pi2rDQT9IytRe04k5lKZ75OVFQV9hdnA
k81GmNNtn/SIDXIQw+75tnFfsYf3vG9TblrLQcpTGiVehmPuN/uiFyODg7QY
O1SfGmFumS9jqBHFQRYui2IOjsC8s1bBPTGAgwzl86Xjc6opHpKqZV23j4Nc
so59un0G89Aj8XoDGzjI4070Za4B5lrNH50TF3PQQOLoEfF/qihevnZzdZI8
B0loFE+aT8c81FPWde7I//qddJ3gfecwp7UqLhjLYSNDXZPeWxswv9BEK91W
zUa2c/JOMSZhbvc3xkHlNRu5BFw/bNlYiY/nCtPz+x6ykfLNZZWnH2Bu97rl
+5abbMTcke788Sjmhj9v+F87JXh8t88LzhrMZXyb8zI82Egree6+QnnM55nf
W7Zsl+B5DGWkr3IqKD570p6Sp+Zs5KA5GLAiD3PlH6fUWw3ZqJy1dq/Ofcwb
pAxs5i1ho5j7cg37T2NOFzFcO3MeGzFGxCRt3Y85Tc9jHW264PhcjkgxNMP8
8oLTayOnCv5fr3Xz/+pjLvX4uPZ3GcHfpZ0h0rEIc/202e3HJ7CRNN0hO2P2
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
TofmesgDQN4A8gyQl4A8BuQ9IE8CeRXIw0DeBvI8kBeCPBLknSBPBXktyINB
3gzybJCXgzwe5P0gTwh5RchDQt4S8pz/6kUhjwp5V8jTQl4X8sCQN4Y8M+Sl
IY8NeW/Ik0NeHfLwkLeHPD+0LwDtI0D7DtA+BbSvAe2DgPsmwD4LtC8D7eNA
+z7QPtE/5+d/mtDzMD5u0k9ayiWSdt6TXtHHIlJUu3PXYsHc8a9ZXviCNaW7
g8ha3VE/jlm1E7lN/KazulMblcf6pzuv4bSiXpf0xFUx7VSGOn49HT2hBSk8
f8x8f6eDyrTm3nX3Vb8go95VO6/e66RSY7Y+Z/O0JhQY/c5pq2Ce+ifd5jys
/nu2HtFDo87ybJg412odWTog6PsWtD5xkWXh9NnW8/ZNNVrj35Q7sZZFpe5F
1+wPJypRvov944wANpXP37b0fRb075pDbZF0RQ6V36QT9/hblqI0zprK9Gcc
KkuOuUzK//ge6d959SrSmEtlgumVy3u3FKKb9pU3ZtZzqfTLm3hCi5WHeIkK
1ZdceFQyJ9PHO8u/QfOami+ltfKolH4cufeGfRZy3XD+OsuOT6X00UQVqcg0
dMJcYkfBJz6VFjl6R8PfPkLRxyXiONbdVMZUuqysSLuLeNNe6LoVdFNpeH7r
8QM2gdT5lXnXQY2TJ+Q+csGxRnqrhfBpzH3c52QdFtkQYLpGW0g9X7fEnJdK
1n+u39XNu/VInj7R9HlZPrm+qLfJVm21JHkEK/djcAu5fjXJqcqHHCD5Esk1
qsFDQr4f/fa8948oId8bsjI3ltcW8r1pm5Hbmj+S67XXHrkPI5xJbvJiCi1M
TMj9jU2svZfcIvsHxQyPyFmLhfQhGyVXOpWRfUvmhjfq7w6SXO9LmmXFRCF9
zqQTwXOyyT7KpKNz19ldJGeKBkyWkyC5l4P1mKyHQj7X1Or1Mm8zyeNCJvHl
/pL9ZFDU1HUnU0juUv/7+PXtJO9TfRZhOVrI84g9+J79XFg/fK50shPJpRNF
13mPJblHz1zDxByyD6/Ws1je6C7kful9AbsXzCK5y9kFo3U+Cfn95WtBr5+f
JbnJ3VZvvcVC5o6iy6smdZHzi2+OrSaKFjLXePlozLcgeftM7ZLnYzDvXJ+Y
11UmmMsy45zXnMPzl8KjObKSNwV8ftsS+R/Dfu87XSf87S5BfVktPshzw9zp
1Rr5U3O6ke+2uW/yWofdb+RL2qSCHj5yeJK7gL0N8ymFBm9+ZArm2UMKuw6U
4Tk0JnjNzViaoN7VJf6IWIW5Ukfb3d5VfFSUkzWhJQ7Puby94RLXJ/JReYCf
LG8+5tkHAz5N/CKYoyfnRCWn4DnawPNgyvckwdytHLbIeT7mhfMnuo72E8zp
vHnBk57iOf3Cst/sJ6Y8VHfVp/iF/rDfgwhdcm6eHA+pe4iau+ZgD+A3f+tb
E6agf+Na8TLWYp6a7z1qXyYX6e1PuDyiFHuGqOubNbUuCtZt/obDAzsw9/n5
7ny0DRcldntWjWnEfkM8/Of7jNlcFPKz27fQAfPLNN9ZMd84yGFVil3I52H3
C7oYKt6UzUExTR7Ssy2H3V/I+djpj1c5SIu2sDCwC/uZhBb6ISdnDlJe4hg+
cBLz0vbl+XX/dT/0HFmmkgzmtY7Xt1WO5yC5H7wvUvHYF7XZZgSz29lIb9c6
W9MVmG9XmzP7dDYbMRp226+rHPa57vknJ8y9xkZBvFcJna6YaznunXnalY18
vYe2rpPE/IxbSfqVlWxkMuFv/p7b2I/1O7ZWSE1kI5cfGZfuz8PcZ/21mR+6
WChx6QHrY/nYyzllrSrUzmUh301xh0Y4YW5577Vozm0WsgjdOaZ2NOazi7SW
ZvmwEJ3ZK3NnM/aEPP2eM0Hmgv549tPQpDPYN6r++lD7fRYLpXb1Lyp9hf2k
wyFb6WsjWIihkb25ZjTmJ3blXkptYiKPusI3RzZh/xkzorl7KJuJlCU2P/me
gH1pbBvPhB7ORFpH4t1y+7F3TRjRwb/mzUSGEseS6jdgbrhsw86cTQI+3bc0
5cqw74mo7UmdrCn4fzP7Du9rwX441rMgR2e84PlX1z4ZZ4y5Q+BKf2N+F2Lc
1XPf+wD756Rlc4Y+FHchC+WCr/2Dw/x2TN4e/2TB49VKf7jvwlz6mp5o+xXB
42sUpL0+YE8++9TjexsOdyH6ORd1P13M/e9eND+4tQt5KGWfmfMI+/nydbft
jyztQtJ2Up+Xy2Ku4DY74MD0LkRTpPvIR+B9ge2fhzJ0Rwqe3+b75YljMafF
3pJqZXYi2iLJta6X8vDx17CUCxDMLcpf7h7zkcD8UgOLpZjZKehHr10LicjF
151Z1MHkmE5kGCA6d5cq5oVWklv+nO9EjAfaUT8e0CmuWGP08eDhThQy13Hc
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
8lBi/Ye3Bv14rjxx3/fkl59cpHcz5fVjj2H3289eNsWzQDDnbgl5MYOD59ZO
v+CmuyFcZJhm8+Dqfsyl88eNebydixK77k5Jax12/5PkWTKzVAV90cLPT5ps
MKcrHTlzgsVBDqbRRVnv8Ny9ps/97MIUDkpsnVTcr4U59HvlfrM89B5ZcFCq
nZxU8nrMJfW+PL+jwkFy4xa8H1c97POxcz7YS35jI5rTsW55u2H3bZuaIeGT
x0bM7ALZOZ3YV4gWXvnrHspGEt3tf657YO6TunGN9142Us9aqx4/NMyHtGgt
Z+uwUY/2YOj7QMxTajU6N41io1Q5jzfGUsN+h8IvddLJehYyXJz1+NXdYb+X
4XrKlpbEQqnBa5oN52FOa7P8uiCAhWiHY5+zfbD/yd45+0LzZhaK+fjmmWUk
9kXSpo0yDBUWsjhi4uTwEPslz7vfXVcOMJGhUskUvXrsoy50t+/UK2ei1BTf
cvmJmIduWj7teywTMS6rB73Xxr6rVDRhEc1fUK9lVg7QDmI/JlJ0dHKZhYAz
rZ3Fw7BPi67fM5Q1m4mkDQe+3csd9vlzp+m0gj9dyLAnnFb7E3u8cZeXeR2q
E/DcGes09TGvWhlU9utJF1LWfyjBOYR9YKHEqCXGF7sQY7682J5M7BXpphu1
n7p0Ibr3eRGfsZhHjfb0vvtf8+FstEFpJ/aTbmbFSoeUBc8fMBA2/z72nMrl
cjlpPztRjLR/8mkG9qKMl8VzrOo7kcOjwcK4lZhnW8vsvZolePxTh58ld4d9
f+HYFYnk8E5Ety+at7Mf+1v/fNepp307kUfF/2LtzMOper/+L1KKSikkRSmp
KBJJcZ+IJIqkZCglkoxJydRRCJmVWRkaJEqRioZThiQylUpI4QzOOYgGafrt
nu/vc27XZ591fZ8/Hv+s63pf+9rn2MNa6/1aZ997lk+kNdbtD/4Q5ZoT289t
PqanjvmwdWFo6gF1OqJWaf0RFcQ8ecfBdpqAFPF95maET6RjLt0afpq4NHuR
vdVmx4nVmGNbuJq07GzvRZS1Pynu6Zh7Uz22FU95QNQzG61xEfswJy9TFPX7
lEVsf8qj0n0T5uoWW6V0ssMIfTZrn4ke5vB9pyPrJP72qVsP/qoSx9xeMSHi
wG3zXkS9vUdUUg1zfif7nNsbtYnPrdwpXW+I5wW54uXLMhcQ3//yltsK1nju
0BXC3d49qRfRVDeaf9iH5xeRz6uW/BjsQfbD97IbDuL5CMVPqM69swdRqxeM
WBQV4fsufvaRp88Jfdef6efYN3i6sarDyXF3ehCt6tGKeSbXeXpYsMvrvZeI
7edte3mRXYCPj/WlhNx4QpdkH3lqfw3r2Q5uYicIPafmzAjnKr4+35T53/Ik
6v1ASv6n+jx8/f+kPMtzIPSbEvdWPLuCz7tNocP1nYSucObZhbeX8f2+8pK0
l2kPorAYnFdiWKfFNarPWk9sv3WzWN6sSzy9Tv/oyOg6QjfROZhecZGnt5Vp
eDatJvTUlZW2tv9dh/YDfS70PaH/CzoO0HGDjjN0XqDzCJ136DqBrivoOoSu
W+g6h+4L6D6C7jvoPoXuaygPQHkDyjNQXoLyGJT3oDwJ5VUoD0N5G8rzUF2A
6ghUd6A6BdU1qA5CdROqs1Bdhuo4VPehPgHqK6A+BOpboD4H7IuAPgrqu6A+
DerroD4Q6huhPhPqS6E+Fup7oT4Z6quhPhzq26E+H/IFkI+AfAfkUyBfA/kg
yDdBPgvyZZCPg3wf5BMhXwn5UMi3/ueP7HP/0SFfDPlo0HcDPh3y9RAHgLgB
xBkgLgFxDIh7QJwE4ioQh4G4DcR5IC4EcSSIO0GcCuJaEAeDuBnE2SAuB3E8
iPtBnBDiihCHhLglyDkBLgpxVIi7QpwW4rr/5sAQN4Y4M8SlIY4NcW+Ik0Nc
HeLwELeHOD80F4DmCNDcAZpTQHMNaA4CzU2gOQs0l4HmONDc5/9q3tQV1lLx
kbiO/x0lj29oT7DtI8VaPftpybZMUrRPGNAcb08nxYL2bG27lz2k6HLC8I+a
fjcpTmhBP0f39fDiUf2s0NOHPiDVsLgl2kQe/Cd6um05Zb78PWpptiovuEbn
xbDTX+q//3yHWmbL3S4vYvBi2K2crjouUf9l5ztuPsfEsSCjcS6lFR1l734g
7s3ixUyd7qf1l1sQ1VjM9qduH47y79iT9ZtQ4/nJ1Y8F2Lwov5Fm4/OjHtke
1neYcZ3Ni83mhwri2c9QddFCne92HF60fqcQr1RXhYa3Nfz4PIHLiyZTF87W
a32MnKYKBYxc4vLiKot3K6y17qOu/m7RDs1+XqTWm3nlut1GO7aohblX9fNi
1xX7Q7mBhUj+zsaID7sGeFEgP1qvdNEFdHl68+9VbQO8KFBx+CPFKoB3XbwR
URxNTODzvJLtm5MbPpPzVUrKyRMtW/nkscOzl9s+IOdDI6kFIWtUyXqPthC7
J4+cb+0910iqLeKjz/SrfHyJTz7/lJssKkfWxVnHCi3zyPXi86aHTMcVZL1m
xYJGsXt8fi/xUV5zjRGf9x+NExlZ20Cud3kqFqwMG7Lec9zwxRcmuZ6KSx47
oeVH1k32FUlcn0LWB190fuos4LMO8L07HyI3knXX8ZsOfu7g8x4ibstDseNk
vWf7jgAHGT7rFS9QqBB6xOc58bYlFLU9fOZHSMGII0TWS1btZnpdJfdXddY+
21tN+Ly36NaNExNY5L6O0iAqk3COrAscq/0RsJ7Pc/oSl32Xs/m8byg0Y6nm
WbJuckFpkaUWn/WxUw2FSrr5zImS1tx6EEfWR0bveInqYN1CVak29ssAavTd
f5zRi/vwagHt1tg7A2hwXHwywxjr1kd2zOz0G0BdC96sXFaM+/wK001/AtYN
IGe91UFaUli319+4wPx3P/JUuvWq1h/7BRmBcLfsx/2IIvAyXqIH+w5Kc9v5
r8GE75iiEM3cgPXSI52Hrdf1oxoFZbmPSdjXTG791l4p3I+kkw8puU7FusDc
D5uTG4i+ouaWzmgY9k3eH33aElIJn1WquGDgD/ZZhsruQ7X2XFTkLrH7h9eY
54ni9w85KXMRzfWH3bgB7OMUuPEVKp856E0jx/nwPqx7Tj82fQfRl6Rcu7rs
dRf2iQ5zlPfTozjId4P7KLLHenRsdtdUMw7qoieqLarBPlTRucC0X5qD7Mev
eGKhi3VDWpLho07CL3f5qnYWYJ9rxhhcJHyZjYz02jrF5LBedsTSmOFD1Ivc
V2ueXMY+upoR4a1myEaeFW+y/Fdg3UEyxCdgJhuNrK5dtLoY+3T7wLMMte4+
5Llm+MnP1VjnWsydLVnchxrNn+neeYQ5gNP3WWoeIUTdGigdnbUZ6woaW4YL
zPvQmxB9e9U6zBn05x985D2/Dym1hO3OthgzP5oT16AzwEKqBswwmVbMNybM
nyIR9YiF4pqzVnTuHvP73gk5n5YnshBt3tK7fe8xP1Gd8LlB2pGFBudVTgv4
jnnL8PoZKzgrie032bAzfmM+M7z3UWu0CKGz7qtVLcW64oVrC1TeMRFtjnXh
h42Y87TeU3F0ucVEqtk93yUCMC/STPZfkB/GROKfDxZsy8Z8yfS0SZMT0S9S
LwZJCrZgHrXj2n29mapMVGR1w9RxEPMrGesAZDeR2P6Jm07zQqybWK/yKGtn
IGqFsPLFrWPeS3Lmpyu1mIFoZf3yJ4MxT3Mwz1iXFsVAg0lTVgg9wvxNID3B
QO4Akd8ndthkCGG9UeBs2Nv1DCQ+vicLbRrzfpaHrtRb0gxUdFfuZIA/5oF+
JkKp/UNEHxYk/ivv4ZjngJYIDZY20hGtflpRggTWBeiLV14qJOpE0NPRNfsx
n5wgd3RAOIroT9O3FM69j3kmTSZu8cEDxH5CG6umCI9Zt03L/qb+BmJ7tSfc
i/mYow43X+kPWkhHVJ2YbV9c8fMIfSObJy4WJra/980oTH3MnKjWJqCzuxfZ
c869K6Jjrlun+UP512OiDi1sfNydiDlwrV9o2bHcXtT1XHNT4T7MjSvenw88
HEr08w9WMX01MWfWnnbzuPP+XkRJ6aPN5IyZ+zhKxRsaE/v/ysp/TMd8O0u2
cefS5X+fK5nvfqUe83Btec+73ZKErrd3VW8P5uetYknLQ370IHtqe9OSFszb
qYc0HzA+EvVPXX7/lA7M58t+OT90qe1B1Gb1rh2NmOd32+zrLSnuQTSVG+z5
kzH/l288O/VHGrG9XpZC5hw8L3CVOvtn0ilCfxn/7em6fLz9FmGRPe6ELuOS
5XoBzynEX8+amWnTgyj1JfEGSniuIXHLwIO+kdie5XVT4Dyem9xPfDleWoP4
PpHp9l2L8Jzla8+7Xb4KxH66VYQPVOXw9FNt2ePqZxD6jEvy432zsW5nuMRg
HKFvObHmwOwsns5ZsmRp72ei3ke7J73QP8/T11X5Tx9ldSNq047yGbEZ+Drc
e3L27U5ie8M9PzfXpeH6ouX34thLQm+W1r+7MhUfh50fPZJqCT3Tzj/4SjK+
LxLK0+wqCb11i0rW9aT/qkP7gT4X+p7Q/wUdB+i4QccZOi/QeYTOO3SdQNcV
eB0C1y10nUP3BXQfQfcddJ9C9zWUB6C8AeUZKC9BeQzKe1CehPIqlIehvA3l
eaguQHUEqjtQnYLqGlQHoboJ1VmoLkN1HKr7UJ8A9RVQHwL1LVCfA/VFUB8F
9V1Qnwb1dVAfCPWNUJ8J9aVQHwv1vVCfDPXVUB8O9e1Qnw/5AshHQL4D8imQ
r4F8EOSbIJ8F+TLIx0G+D/KJkK+EfCjkWyGfC/ni//yRffQ/OuS7IZ8O+XqI
A0DcAOIMEJeAOAbEPSBOAnEViMNA3AbiPBAXgjgSxJ0gTgVxLYiDQdwM4mwQ
l4M4HsT9IE4IcUWIQ0LcEuKcEBeFOCrEXSFOC3Hdf3NgiBtDnBni0hDHhrg3
xMkhrg5xeIjbQ5wfmgtAcwRo7gDNKaC5BjQHgeYm0JwFmstAcxxo7gPNif65
Tv63EdqPy157l9jJfaSo0vD0zu/pTFIcVa7RujaXTorGxfYREok9pFhfkjX0
3KYbx8GpM7d8/Yha9rdpnyL8yD+xwvnu4rXSH1CZiEO69/NeXmzpbVW5lNmJ
7GYbdLW20Xmxr1h1j7/HOzS8JubTz14GLypus1w2acsbJFNZMdG9hsmLxcUl
zNuXXyGL0t1s7ZssXpzQ0a2zldOMrN8u0pEK6OPFYe8Yo7IzjYiivODzWm02
L1K/rtyYklOHWgeGK5+x2bw4am+0z+B4DTrV0LHpw2UOL3IW1G+4K1mJsuJ3
ZO/byOVFStLI6iILGqrWd1aez+HyYlGzLNur/y4yfPMjR53az4tF7Wq2Z3/d
RNWqV+s0JQZ40d5NobF95WXkdy/aecWFAV6krHFzlF2cwDv/Ripeo1NqyXMl
1bq56vtVyLrIVdFrT8PJecno8NnwDC45v1EvdSx6vpWsi68PlTV6Rs6fcUWF
Cb46ZF3E7GLgvDvk/OwZs1bkuTJZd65waC8sIuf//SNniuJW8akLI4fPXLlD
ri9KC9/SJ1P4rCs7c3bUhqd81q/TXjN9mSlZD1G7uOB9G591cRvF1Uft+DyX
FLtHeMkPPuvxLlixUzSRT70WPLH9qxJZby/o91pFI/cD0rve70q2JutWTity
hkfIfYirw6cLgxlk3fdcYmAa4vO+zjvWZfM7+DxXrh28MyeIrHe5/dLUkCXr
1PqRpJmP+KzPHKhW0eFI1rP2GjdYiJJ1K+9nniklfPrDXc/i46zIutW59w5s
QbJe1PRFw7CQ3K9Ka75s+W1J1s/Gm8/YKYz12gdWSpnVA8i3raMn3BP3z2a/
I2x6Tw+gmh9v9j9oGdOHGzqPG29C9OFFIUKTdbGufqHQu1eUuD+nrsx+kIn7
/Mx1ZdN96vpReLJ5wcI/2Bf82js6ix7Zj0Y+f9JENli/rDtptNyA8BeyUp8s
r2Pf4bL4WZXVVGI/H4/2dyhgfXT+8zTLFi4afPlDcEcc9jVpISt1rp8n/M7m
3ynFYlgPkzpYtc2RixrLwrhbArE/8lvgypi1nItUd8Q80Rwesx5dnrGJ3VcO
ol0s02UdGLPexfIlNy8+5CCzYXpZevuY+ZHOpIOpEYTvm50c9mcn1hPzMico
mHKQ56LIuNc07BP9jLlndkpwkKp2U4e1Ktatj3gec3vNJnxQan58GvahXPFz
yToX2Mgs//Po7KlYT4xmzwv3YKPBDyamL5Owzy2UvfZ8iQ7hZ58uC2RKj5kr
XXPxfT6Z8MuFkwt/po15/siFU8Z4TeQj0a0WFXOw3patnbzgSh/KOjvDrzUb
+/QWkc2T3vj0IfGktVIZimPeI+Bh4x+9oY847/tL9l7DHEBTY4Gy65Q+JBJq
6R4zH+vFkuPiX75nIdrdky6JNzBnaPVjfr1H1D9pdQOW2TqsjzoJVVCDWahL
cHrDqdOYY5iqpt17ZMZC1E+CWQ8TMffIemDsMDCPheRLfAYL0jAnKdQ4+O7b
EBPZi03d9Poh5i3FXtkTPlUxEVVr8fzbHZjPFFk67z2VxkSeBZMYceOxfjk0
4BXjEBNRMtyXnZ4z5j3vWqnGz9YR+5/9+0j/CsyFvm6bEz1hJpPoM8Mfy+/H
HGlC7BrLcwwGkn8ul98XinmURKxX48wyBrJ/vnqGcw7mV12fuovPnCX0e96n
yuiYd+Vm5Ra9PMRAqgorvRfPwbr8k/EfXxsyUFatlMvqfZinhfkLGJ6YQ+gH
BXcHRGD+JvvKbs7TT3/fh/IqvPsu5nX3rbW9bOrpqKhKQfOZINZPbUhgU68S
2+94lxqyFfNAwyGh2ckhRH9ZLhE4nDRmnagdq1spRL9JcVyyO/wJ/v18YrlL
Yt9aOqJZLHuyZCfmk2l3m4XWzSbqiuZaRaufmHOmHd++OOgLUT9oJhHcJPx7
/tGkhTetmnsRrdeNfXQ15qXWg22n9Yp6EdUhekvqxzHPB8Vs1p6U2IsoscOG
tg8xp9UX0HE95dmLsgT3aS9wxM8p6Nv6mL3fRuhp5xbeWzdmHbC7havWahCf
u/LZVLOZmA9TdhVuMJAmPjeg6nrJEObM2ie7ylS/9yCKZJUJoxxzaSd7P63B
dqKeVT5dtS8bc+xEv1HBR497EDUxfi1nAebeyhNePNuVR+j+0pVCiwt5elm2
iN2dyL/PmxRssGjFvN1hXazWUu8eRLujesjkz3+f+2h+V+p/rU/ovurpnSaY
/9vOWVczQ5nQFW5dPOaVi++jtokWFEni+0tmBkx4gOcOQru5cbv/dCNqkeSl
avoFfF/srtUs7yf01vOxFNNMnk5XeBwr8rd+Z6gc3RGB5yOJgbKPrOoI/YJ3
ewcXz1nW7bm2PfIesZ8P1dqZv87y9Lo6naRf+X/ret7xC3cS8Pf/zYrcm05s
/zC2RGdjHE+viKHrDkX/neOI5RXbROHjbPMMJQQTehCnvzgwnKcXfGvYaHqU
0J1+eSqOhODtz7ZuFTlE6FumDqccDsb57ajVRSn7v3Mf4zvVUwN4+qmmywkG
Owl9SC/P/8zR/6pD+4E+F/yewP8FHQfouEHHGTov0HmEzjt0nUDXFXQdQtct
dJ1D9wV0H0H3HXSfQvc1lAegvAHlGSgvQXkMyntQnoTyKpSHobwN5XmoLkB1
BKo7UJ2C6hpUB6G6CdVZqC5DdRyq+1CfAPUVUB8C9S1QnwP1RVAfBfVdUJ8G
9XVQHwj1jVCfCfWlUB8L9b1Qnwz11VAfDvXtUJ8P+QLIR0C+A/IpkK+BfBDk
myCfBfkyyMdBvg/yiZCvhHwo5Fshnwv5YshH/+eP7Lv/0SGfDvl6iAOA3ADg
DBCXgDgGxD0gTgJxFYjDQNwG4jwQF4I4EsSdIE4FcS2Ig4HcDOBsEJeDOB7E
/SBOCHFFiENC3BLinBAXhTgqxF0hTgtxXYgD/5sbQ5wZ4tIgxwa4N8TJIa4O
cXiI20OcH5oLQHMEaO4AzSmguQY0B4HmJtCcBZrLQHMcaO7zfzVvyoq7k3FI
nkuKCnfibfum9pGijv6+HwGSTFKUsJzlsHMRnRQtUi75iKT0kCIt0efeU8tu
XrTPaTi4/c9HlGoeG5Sc3IOj8JInGbIfUJja72XJz3p50fWQcIB2bidS+Vpc
FthJ50W/uT0NYfvfoYo2yRNnmQxeLPUoP6ln+AYVNyh+Dqpj8iI97ozCKaKP
4P66stCmlMWLayaIJPS3N6PEPP8lHaf6eNFwQvQp5yONKOBRfOIQhc2LM06d
izTzq0PFLyJqJT+zebFucRXl2MYaZN+3K0OniMOLtOAey5jOClR8Qs7TcTuX
F+vG6e+5IExDbWpqPxS+c3mx8erNNWbb7qKjO3cdOhvdz4ue9IZvk+1uol8O
9/yrFAZ40SzrvFPApYtocm3qV4lbA7xIXbc97JRWNO/8p1yfHyF5m5xPpA9r
h4lIkPU3X5f8anYg5yUzzpl61+d85ukfEpfFaJB1pe/7D+69Qs6TReqFf3pk
yfo6uTNzLp0j5+GLCYJhvyeR9YW6k9ICIsl5Xull3AurGXyeY6JWXvZJJteR
i9RrwVEyZD1uoZTP6kt83odokbIraCFZVzVv7b57m1wHR+gfznojsk6LKlH4
0spnHTy5EJ/X7mQ9a1PY52phPuvr/trh5ZjEZ66kELGxToOspzje83jVzGed
4VOBLXo+fPSHVHHT6XyeYzpuFka5zef5cdWdQu6WZD1P0cBUdZDPesu3HqnY
ppB1syazY7/0yPqbvk0O8gw+z8VPbS78GsPnvaU127bkqJD1/WefTdN6y+f3
UcK0x+gkWc/b7Z7+fvmY55VuvNq7mEnch5pJR/ZV4n5YZduVAIerA8jTNOeO
72Ks53cuehZ4YADlFXQeLTs5Zj3tokPrDRUHkJVWdO6N97g/T6QGmhoyifv/
8b3HNzZgvXZv5teOq/3I90gEMz8P9/nyNrv9BIn7trGbrRb2DfsFh+sja+0W
E36hmDvr4D6sK3QLz68j6v2bOzHbfjdgP/JLMGZhbzEX+U50eHd/PdYTb+p1
TQsg/Ev55aLFpWPe5/tp5a+belzkaftn5L4i1h9oybqGiBH7jzacuvkC9k2J
mk9d+loJvyYyNNl4NtbtN7zVkMjkoMGlFyYUhWNfZrdc/RHbkYOYw3/s6n9j
f5cUYR93S4WDRnZ+ctY9PGbetKxoFmOY8KGuWqWPP2D/aMqtV8++SfQhTSfH
SazD+qCKrns7lY3eHE6XWPxkjG9dWWMjspXwuUFHes8ajFnf3qyEVj6XjcSf
PdlrWYv9b9gc6zJXTh9q3PChadpWrEef/3Lj+N0+ZC9GX61aP2YdflNxxZYI
wr8/UXofazVm3uS1/rvR9j4Ul6HgUdo8xr+bzROeu4jw77XPo2psse53+u4v
FoeFiraZjho1Yj4wOFhbo/6Ahaysf/iM24V1hRe3VgnEENtPCJo4rhrzB+OV
aWm9e1jI84egcMB7zCvst15zHljGQl1RVqKF7zDfoIm8Szj0h4loyzZ2zv6F
echcOSo69pKJ4tKpOtsV68Zcb+xGcyKfFnmkz0zVHsNb0hRtqn2ZiCr8+Ol7
mzHvN9/mriFmxESqmYtFdZwxz1E4ap4zWZbYz5bkZRpRmP+0xLX0bBxmIPmX
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
K8+eIecfrReWcos45DyWVSe9Vc6UrMvXsLXNHpPz5H2K7FvZ1WT95aGKS7dv
kPOw2bmPAqfkyXrPyeClCbnkfG6fYvT74HyyLnL5nebf97L+W794v+HFV2U+
eogF9U4xuR5RnQSKPTTJOu1lh6lHNbkOxonbSd3Zyue5pyuarF0MPr/3OMna
GR5I1sVWrbRGUnzqcrqP9LrL5PpedL5VwW8Dn/c0VYqMdnXzec760Y+ERaFk
XSzAPilVgc+6wcEruJ5PyP3Mdq/3etMdyfrCKofPEwTIOnOjqty0i+T+KmWG
fH60KVmPSvcqDv9C7utEhPMOncvk0x+qxc+q0yXrnr5JCw1Y5D7T9Ti36nQi
WQ9QXTnRhoJ1a5NiU8bQAOrSpejpvcd9r/dPW8ru2wNI/hgz65AB1g0X73vs
f2QAqe7zcdDIxf3zlK/SBve1iO0PPCxonYJ16hlfT5+v/Yhmq5K6yBn3537y
aqtmlfYj1SY/QY2nuJ/PetVka3+4H4kniTEH545Zl9vw2pO76v2IsqKAbhqM
/YL9q2VNC75zkec57uTX/WPmTTcM1h95zEX2q5fn5jiM8SMb0zqvRXKRSHFw
QWEb9i/WZcxxl7YTvqapKiTDAuuRo2/mbST6IavD8+rVKse8j6lAVut2NwdZ
Xd8oZrAG66NuH1iihRw0mFBck1mE/Vex6MtojjfRb8xN2NcwH+uF9zbW3l7L
QapmxccNz41ZN+9PTeaK8RxkH3R08rHJWFf9VSfy/QnhQ30FktwPYP/Y1uaD
NsWzkXzu5Xmr2dhv+uXO7nLczUZF0pSi34ewnik68mqZMhuJzOUkufVjP+vN
/cVt+E7U7abR5tOeWJc4WxmxprYPqR4+9Cb2O/bR8s9nOB1J7UONP5b/yTmB
ddUQvcUaBwj/bqz4cbzgmPc09ezaWLaSyGvl9reagrB/V3/la9v/h8hfs5Yz
Wv5gDsBlb7iv0chCjaYFO8LCx/xOdTzHSiabhVRFt3Q+noH1/IMTl9V4sJCZ
+KLXzOWYP1w+K8UV0mUhCsMnW0IT84ra7Mf9xlNZaFCp5urRjZhvJLoqNlt+
JPqaeTSZwkOYh3ANe9W2lTJR1j6/72mxmJ9wlxZE9UQSeqvto6OlmLccdZEJ
1LZlIrOZIV4L6zGfySqOc1ZczkTyJ1sm0+iY5yi89n61UJCJitT1l92djPXa
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
fl60d5N4xNqXh+qHqEFfYwZ4Met488Yann8l8pJOzZr1n8nzJtch08qbpmTd
edJ3bt51PvPx1J1K9Cl81uXzPRFtGMjnec/OGWua+sn5U1bWbv95F7KuNWOh
eWQPOT+HX71QmmlH1uWTdbsKusj535fyM/jeIT7rr26JLWv4TK4vWqmW7yIC
ybqRla9K32Q+73va9j1JP4lc1+6qj5j9kiXrldqBosY3yXVTVjxFdpRC1vN8
hoMvtvP5fcgnm4vXj5F15+vyYdEz+Dy/bLZArbmA3CdQNTadvWnM5/cq1f5u
Gf3k/uSujcFB80Q+6wNHJ1J8VpP1LjntJnYbuS+qeX7/lB+Vz/NQsl5RDAWy
Xjnw+Gh1NblPU1W/9vjKET7PoWd8OF4iy2edZImK7WJV5L5R6buzUNQhPuvy
tR9feEaKrA/u7gy9WUXuY+Wb8+pvuJB1E5mAX+IKWKf3CHkXdA0gyv0IuRs3
cV99eW2/7YucASR/zoIpJIX1tLpnw98cBxD1hO8HdhDu25NmaZyvUhpAI7dD
RPt7cZ+f1H5RIJdL+IjFGcFS27Aubhrk9IO4n/Noa6lHbo95Hspmbr2UO+FH
HJ5R10pg3aW+yWOKaj8KD45Knu87Zm4V+0DHZpSLaIxdMj2fxsynBMX2bq8k
fNCE80PNLlgPSzNMnx/DRWYnVcdv78a+SVFAJ/3BLsJPUaXHW9tjXZUmViim
wEW+XReKLrzGvmzYNCVkKZFHup4EbHaxGPO+3XDNCOVywidaiuwcaMG+T+XF
HdvLpzjI89RzhtwmrLd90bLq3sxBWU4xtncfYF8ZeGXfVMZMDrqb8zV3/Sqs
0ye02CW3sxElPtbF7wr2p6MTTMLGXWQjz+kPG4RkxvjWA4GHC46wUdHJNfNu
5GL/KzN1w1RJA2I/CvkKd5TH/A5z3cNKXUk2kk95x864g/31oFuZ3Dw64d9n
bNu6GWHdKUWnI/82kdd+zV6yrHqMf7/97vCycKLvMlh0wXU71ke9Hhcq7uxD
gxkOt7rejlmXL9LZWFSJ6D+shbVl92Od4txRFvaNhbJClrQ09mH+YChaJvnh
KdGnyTbdveWNdaGTkTt+pLKQiIG11WcBrFekrLN448L6+7vWrDWSY9ZvEZVM
27GWheS13AVvKmF+on3gaszEGYQ+fuuzRdaYt6jXzd23k0nk019n+0oiMJ9x
iLZn7L3PRINPPoawCjHPkVlaOXVRAtEvNr/cdK8N8x/azQVZJU5MRPMtlD89
Dut0+wHOizXE9j0FWZPnY44UJnJ1o+QMom9YaurkYT1mfb+VG053MxmocXT7
Ra8ozK+KLafEH3vAQNQCvVeWxZh3iQ1tEv6TzECUMi+ZH98wH0ss1D588DAD
dTksWjtt3dj3ngtLRm75+97zue63wjFni3x1xvqoEtH3Liuv3FqLed1w9JqB
PgEGolXJFSSNx3qt6cShsA46GgxZWJZjgblfWsxJt65yok48i1LYd23M+zXy
z7fOTCW2t5yt5vwL88YC+o91747QkX0wW9XICOucX9/jArbSEYVdcbVDBnNL
xaadugtU6Yi6zN1jxwf8+3m/5owNl6bREU1L/vqRDMxFv7bs/SM81IuyNjZ/
X3sEc9QJ7kwRwYZeRDGZuWumJP7dvufaI6wlxb3IflvkvNw/mNPS/EZVVif/
Xbeq5vliJua6kc8or7m+xPbvTzsb38McOGD12uOnrXtR11Kz+8YRmBu39Xt/
NlpP7Gf76ai3Ufg5he5u7oa3isT2dOObASGYP6vXoHMHphB1tDnwpWgY5tUC
Q398HwwRdfHIn3tO/phv+12/bx36vofwb7vPaJRjHu59c866jqfE9h1Lbhll
Yn6etSVyit+tHkRd+GJqxCfM2wtCXn5/nUHodmkh7yl4fTAXmym2oad7EGWh
qNqhpDHrBLKyHaf+Xcd/9eVBuUWY89de+1mq7Uh8n0MPNicx8Vyg2iS7dMCC
2P+f1A1lMXgds7KXm+LiDAj9fKXBZg88X/DTjxu6qknoBgbDhgZ4PbQWvUr6
xKWErmU58bwRnlN8FVo6jilHfM+tRlLyQXiuIbOsbnYU4ccEdg8LDbXi9wEl
XVNZGzqN+J4H4i84a2LdRGH0EFOU2P5JpIdSP56bKD9Q2NE+8e/zOLVlmpn/
XYf2A30u9D2h/ws6DtBxg44zdF6g8widd+g6ga4r6DqErlvoOofuC+g+gu47
6D6F7msoD0B5A8ozUF6C8hiU96A8CeVVKA9DeRvM80BdgOoIVHegOgXVNagO
QnUTqrNQXYbqOFT3oT4B6iugPgTqW6A+B+qLoD4K6rugPg3q66A+EOoboT4T
6kuhPhbqe6E+GeqroT4c6tuhPh/yBZCPgHwH5FMgXwP5IMg3QT4L8mWQj4N8
H+QTIV8J+VDIt0I+9z9/ZF/8jw75aMh3Qz4d8vUQB4C4AcQZIC4BcQyIe0Cc
BOIqEIeBuA3EeSAuBHEkiDtBnAriWhAHg7gZxNkgLgdxPIj7QZwQ4ooQh4S4
JcQ5IS4KcVSIu0KcFuK6/+bAEDeGODPEpSGODXFviJNDXB3i8BC3hzg/NBeA
5gjQ3AGaU0BzDWgOAs1NoDkLNJeB5jjQ3AeaE/1znfxvI7Qf7jWhcbOYHFJc
aho+EOPeR4qeOY8qNUcYpKhQHzr7EqKTIn3PzbUe0T2kKDY9J193VTcpivd4
BDn49fAic4nVExejD+iBXMLGlVG9vPgsa9OSgzbvkZPci4pPGXRerMs+V7J0
STuqGBDdyTrD4MVS1fZRfdu3SMYo0OyJL5MXixeHT713rhVVZGy0c1/P4sXS
JUuYJWtfImqTftPZGX04nlkVtb6mCclfGlhbWNfHi5T5+1IG1RtQwcutUdYn
2Lw4JDS/tEvoOZJoj/U1UOTwYtTrLOU9Mk/Rqc0aK6NaOLzI0aY1l06uQHPv
C1G1jnB5MW95y59d0Q9Rkvx8+tyJ/bw46HtYMzX/DtIe75riG9vPi2b1A21W
hjcRXULzudzcAV60X9A/NN7gEioVVXGVzh7gRVp99J1Dz+N510vGj4Qb+U3k
vFQiECDzAZH1vGCG0Mrz5PxmIlAkkjqJrI/MvGt6+Rg5fzbOXZBa/Zmcb4sU
o3roXnzm/pITNid+Iedz+2BBVeuDZL1kT9ZNiWE+6+zl/R5S9CPrqtTcz4pi
fNZffSJSSk0n16msTwf/hC0i6z99n21SLOPzHqjFZkJt+mT95/fPHcffkuuv
b2b8STU3sj5eq/5p+EQ+zxfLT19acoVc9wVeHilYuYmsi4eUr3BkkvsNaR2H
GSNUsl7n7LrFQolP35LZypr6jNznSNv+HG3yIus0mQVi52T4vDdK8+sqy0d8
nh+/teThVGey3t78mSE0mU+fRj0/pHub3AdusHqvEreXrBupyh/8MIWsC+R7
1obd59OXflt/7b0jnznU3muJgdPJOqWiWLa8gtwnf0556Kbnyqd/Dg+jWi7G
uvbEp4FF3QNIPMFLe8093Ldrh681kro2gOJenl1VtmzM+6Red4q3uhH3rYzK
0uQE7As0JedMaV41gMLvVMhPGY9145kWV5aN9KO7t7YucHPF/sJ+i1fM2ftE
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
ZnatxYfpT1HVt2UKNpYcQqP8opWtjkciTcH1PuLZHELzmOHxTquvE8ej9rMV
xh5N+DqsfXs4OvIv3BdrbQ7d2o2v5/TYjCv1+yn82u3GF4bxeeHq0StR5kEx
Xzwst0qL4X6OXuCK8qf4nCq6Wyj9TR/3FW2jpi9ow+dgpsyGKZtP4b7ujmWM
52IU+1l5zcoz0vC5PDjnk3S5Fe4XJZm4vxijyAkzF6qOPaT4nElXg8xiA4r8
cHtmai8dzyEbUgwPMP1x375Np0dAFfe1daNf2dXj+cfkq0z8tku4H1QkEPlV
CfdVHr0z2fgBz2NRFfetBK9SfJ7HY9M065W4P1/noOKnHor7YC43TDh/g+Jz
R2bHVdbo4z4z9dv5iG94XvWNWfZy6CnuP1PTbS0+hPsSl7/FPJTC/dhlReqt
NRSfv3r3PaXRB/dVbg7OXrYa981uai/c1Yvn/OTVtxoSoimuK3g0/9JpK9xX
0cpJrZKi+LzZiVcfd9bhPcXXNlZg/w2K62y3+YmY6ON+j0NMnOkfvDdJpK33
UM/G/V9HAh+0nsD9nI0CxwSWk/5Kn4sbU79zkO/7rOV5LLL3ibJEp/gXcdep
mpgAa0fSDzoxOfjSbQ6iS/qc0GWTvTKpI/9IN3c9Sn55yCvzBOlfDwv9cXYZ
B1l6jp94/pPsrcrTA4N1xtmoY0G384xzpN/qMFdBo5qNVPzrTc/yTrjfrmD9
M4cwNkoImZ4s7DnhuoWzK7Jl/2Kjwayfde9YZL9W3vt7ocIyNrKl/eyucid9
r7FGHRE+NjI+JR0sL0z6ph23VzxuYqE8DY53ZATZ613iF+qKPGOhqHkH78qr
k77XvRlbNT1ZqNRd3cCjeMLnS515FyvsZqGa+4L9VXsm7IuprEsLXsxCmYce
6J9kkLyiZKpNvMgkFnKWc4yJ9CT9sFudP383cNdNZurpixITrn8y/dbi9idM
1BTnwFjydMJ19dd+lNG8yEQdMjKFf7Qn7KNNCk96sZOJbPn4l69qJDlM8I3d
isGLmNxZ31zDOUL6HVGRt9aNDyCNGdOPyf4gOY+t68v5lpUDaDDmtXXLJdIf
rpo2FhkzgDomL/hyU5L0b8g8L6y7MIBs9TX7p2WSfGlJvvS2Pkvu4xzIM9S3
mfB9MbHXJ59rDaCoBHPZNN4J+2sX9YWMxbmPs1p5ttbTCfdB8K8794DFQHnW
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
h0ONj6H9DkXtija1HJz0V7dCoYblkLpf1wVFm/o/75u1yewXhn3JD5t6WcSY
jtxdqObnsBDDL/6nWzsbxXy3+YrtRdqHGF2Pd/+cMjHGNH9Y9lz2R58bnveX
WhT1jDEtvbR/2MlSz43kwy9u1QiIMW2QMGzr2JXPjLBqA+qvzBxrOtg5zqH7
m2Aj7LFjhfqNYk0HT3+5uEeHYCM5dcaYRqNjTRuUX3O5/bWnRoZGRass2xT7
3Y4nZ/Wzf2rYp7itvX4z1nRk7V+ae/3+xBjp+fJzls+xprdL1sj5V64nxpKK
v+7eWSHOdJibU76iix8bfms6HvftF/fdNtZh95KCjKMnat75ujjONObZqI2Z
hwYZXttrbrQ/GWeap/zouiOCHxnZ3laaeDoizjTZZt7xwN6PDKcZO68stYw3
9fEoeqT/1YeGrWXYqU4N402X+w96ZNX5oZH8ZGvV/qPjTetPrTgt0T/QcF54
+bz1xnhTrynHLx+qG2hkGB+wNe56/HfPrqjYevcDY87RicsvpsSbLo4+2vuM
/QMjw6ELw68XSfhuqt99r1P3Dcu+RXOeaZ5g6v/6RNTduvcNu5Pl1j5zSjB1
Cl7bYoJ3wD/18tWEDZsSTDu9rXqivn2AsaRRn5nvziSY+q9NKWO/8Z4R/LbG
yQexCaYxdR4ey7f6rlHu4hQ/p3yJplVmdJnTb9cdI3ehvB1jayeaHvltf921
Z28bH3euLD9hQKKpbbWd5Sffu2X43ji1P/GfvvEfvVrt/zAj4Kbh0qh6x0aH
Ek0brIuqsz7qhpHa7ND9Qg8TTTv+ElXYLfsNwzVx5uQ+GZJMM8wq2Tv5yzXD
6ZcrlZMrJJkObjXig1P+f+buX5t1HNYpyTQm1KXOger+hr9Fz2ZbXJJMHS9k
nN6/3lWjTo7aAX/tSDL1vXuxZM9aVwzHXJ0Kzb2WZBpzpoZ7LofLhsv6jecT
E5JMG8wYv2jG3EtGtnCPhPIFk02DTy9yLetx0XC/XLFdJvtk0+CxWdv9fcfP
SOhZ2Pt072TT3B++RXSIvGD0KuS6+tz8ZNPXub5VtUk8ZwwLeOb5xDPZtE/D
I1OfTD1ruDRNWF/mcrLpLx+zJI8P9jV8J61onj8q2bTr5e7hjbqcNrJl33jG
MVeKqc/+0FoXpp00qq4dseNyhRTTuDyNJz0se8JwfBQ9wbFNimnAt/pPL/15
zHDr+abNwVEppk++zPN8WO6ocXTxyRx2S1NMNy4dseHCjMPG0axjM9odSDG1
m5bvxbxnhwzvO2MsM91MMQ04Waja3Xzehqezl9vShBTTDBVH7EnMtM/w6Hmj
afncL03tPpZK3vTcyxgW6PS0ctWXpj7Vxm+LvLzLsF/+9XzzLi9N7S6XLXp+
tacxrHOpiM5jXpoO7lRmc+1mW43N357U2/jbS9Omll17T/VYb+yqW/BRiT9e
mg5evS73xgarDS/7EeXXXHhp6rojt2PNiouM5ZEJu3s/e2nq2uvRyhZzZxkj
dz1ODf37pWmGmCWNCvoMM3PcxpWbPfb//YN/r058i96fb//gv18wxDJDVx/5
uU+WoRVfbfzBv4en5c/FR86Rny8st/JAxAD5eccPDca7t5Gf59g1an9IZfn5
+ACnfPet5OfXazo6TM7wg+9luWhg9YQf/HPDxW/2egTJz0c3vFtqyRX5eUCZ
36ZWPSw//2w149bTP+Tn5V0qh4eu+8Hee1HPwSNX/uD/zzgxwyBPN/l5WNQa
tyqz5OdnV2VdNGKy/Lx/t/Xtsk76wfdtnT2x27i0f679HO33an+n9r2056A9
N+05a+9Fe4/ae9fOiXautHOonVvtnGv3QrtH2r3T7ql2r/9nHdDqhlZntLqk
1TGt7ml1Uq2rSh3W6rZW57W+oPURre9ofUrra1of1Pqm1me1vqz1ca3vazlB
yxVaDtFyi5ZztFyk5Sgtd2k5Tct1Wg7UcqOWM7VcquVYLfdqOVnL1VoO13K7
lvO1uUCdI5S5Q5tTtLlGm4O0uUmbs7S5TJvjtLlPmxO1uVKbQ7W5VZtztblY
m6O1uVub07W5XtsDaHsDbc+g7SW0PYa299D2JNpeRdvDaHsbbc+j7YW0PZK2
d9L2VNpeS9uDaXszbc+m7eW0PZ6299P2hNpeUdtDantLbc+p7UW1Paq2d9X2
tNpeV9sDa3tjbc+s7aW1Pba299b25NpeXdvDmzkQ8b9Y7fxr9hp+6HOjB8nC
oFZhQ4reldqUOnNuWlnpkq+9R/f5O0no8OVUvM1EaUxex5xz80vHBmyeN+9g
otDtYZEpkxylrbeXG+uVmiD02lf2qpen1Hmg5aB5baS+ZxfU9c8irdSiZY7y
3vFCm1K9Ss2bJL3z20Enu3LSbMs9Jy1KiBO63Wr8+P5e6c1M2571nCV1rfan
t2NNqUf5Ob8d+hIrnPlrrpajT0mXHalwvNRsqf3nx2UW1ZT2unLp5m/vY4T7
DrbIvvWs1Pf1/UqxrtID056+DGosXT/adVmXLNLSfkutvvlFC7c+G2B1eK50
/KQlJRJbSM8uTp7rYCV1rdWg5p0XUcLWM1t6dfCR7vM69NtSF+nIpZenFuss
bbGm+PJ2xaTji0Re3B8fKbz951iX14ekWxs2Gv/UVdp6XNdpCzpKZxSsFLei
1XfbRfnt2lsk0pjzLk+5tvO+ezX3uFuWFyMMP9s6/ZbtjTQNu1ptmvf8CCOw
ZkrA7aeRppePbvbvWD/CqH8mj8+RnFGmFUclvnP+K9yYU+BqTcfmUaZXRzw5
On1ruBEyr27q+8lRprX9qnhY9Aw3Shee6zZgf5Rp17BLvqlfw4xsjm0/dngW
Zfp2ukeOvCfDjA9zqhVclTPaNGcL36g/J//z+cy/DnSyjzZdfG3d7Fz2YUav
B/ELAgdGm35e1Hzar5Ghhm3L/KOPu0ebLrO/dy10XKgRszpDi92Ho007tv9a
J3/iC8PG6mzTjqHRpvvO3WpcfOgLw7OdVb2k3DGmpcud693waYjhkFpt0zG7
GNNsts61IiaEGAlrbi2xHRJj2qLNtkHLnj83vL5YtCq9OMY0d/ZQu9+H/zOP
9LMKaHoy5rtJZ1c2Dn5mjDwX7OEQEmN6+9qklllHPzNKj3bs0ThnrKnntVeZ
2kYFGx7dDx1/XTvWtHWOv1+UGRhsBI1u/GS4Y6zp7Kttpt1/9dQIzBj1e7GF
sabuHx1KH3V+avi3LDrozsFY0wM1TkZsSH1iLBl7uOvEJ7Gmw/wS8xx3eWK0
7/l6SUjGONNyGcoNGvXxsTG2abkj18vHmV5usj5+9+rHxsf4lG65u8WZWja3
t3iW+7Hhur3Pg73T4r5b/u2iTJuCjAkVdi5r8nuc6enFxRxblg0ySh+s8qr0
5ThTzzczqm878chwb/Hn4eJxcaYTalskHmjzyGg/K7TAmFzxpuVWDLl5JeSh
MTJb5bNB1eJN7yTNvTXL+aHx5cyAA496xJvmvB3zcW7Gh4b7imVNXs2IN53Q
w7Fl9TWBRvDfCe67PONNnSsY4wqXDDSaftm5cMa1+O/mKDLFY+8Dw31mcucZ
0fGmE1bVtVzb5YHhaRux+n6OBNPSy/q2Xxp933BLrrnhgG2CqUvdUQ0+Lr1v
3Mnt5PKkQ4LppqeHtrqUuG+4zog4n3tKwnc9+lx+ujfA8KlZ/adLHgmmr0ZN
WXW6ZYARfPpKUn2fBNOYP4Y5//HinpHNxddy2/0E0+CGOxZ3s7pnDHbaOC3u
ZYKp34AJNZcPvms41tu42DdPommM90R/T+87xvrqnabPrJhoOjPCrlqZ7HeM
VYsb3avRKdHU039t+Ud2t41dYSs7dhuVaFrlrGetomtvGWP3Lfxa6ddEU/eM
UTm+ht00fKv4VL7kmWjqlfriw5SGN43UHW61P59LNO1YK+G81bIbRunBhT9d
eZxo2vTCPJuhf103bB/WiurzJtHUOvtlrwTjutH6U2i10fmSTB1L+MWs2HXN
sBtUdEO/akmmYVcmTA2O9zdcvWvUatAsyTTDy0f+O6f7G0FRA4rU7J9k+nHn
befAoKvG27aN57o5J5k2aL/KIrH9VcPaa/07nxVJpiOLT68Z/OcV4+an+BFl
dieZti62cGvdMleMFsFFcrU9l2Q6PsLpXJdVlw3LZp43lt5NMl02o0nr0z9f
Npw+t7ObFJZkOrhwyxfDz10yPtYttHP3yyRTWx93+5JDLxk+S3OX2pIp2TTs
9LFWA15dNHYte+LxvlCyaZVjSYuqLLhouFvElRtXOtk02G/lz3MaXzScj1/J
PKBqsmnHC8Pi77/0M9wqROW61TDZNKngn6cab/Izwvxyze3aKtnUb+bpXDaD
/Qy/el+6N+qabOq6P3/e9SX9jDkxJXaO7pts+nPN3SOL3rtgDHau6vS///vr
/9F1w4tzO1teMAakLis2Z2yy6Z4Nw++UzXTBCPlrQ4SdU7Lpnr1hg4+fO294
O6wemmtKsmmcpd2QaX+eN+xvnVib3yXZdOOMidnrT9M/136O9nu1v1P7Xtpz
0J6b9py196K9R+29a+dEO1faOdTOrXbOtXuh3SPt3mn3VLvXWh3Q6oZWZ7S6
pNUxre5pdVKrq1od1uq2Vue1vqD1Ea3vaH1K62taH9T6ptZntb6s9XGt72s5
QcsVWg7RcouWc7RcpOUoLXdpOU3LdVoO1HKjljO1XKrlWC33ajlZy9VaDtdy
u5bztblAmyO0uUObU7S5RpuDtLlJm7O0uUyb47S5T5sTtblSm0O1uVWbc7W5
WJujtblbm9O1uV7bA2h7A23PoO0ltD2GtvfQ9iTaXkXbw2h7G23Po+2FtD2S
tnfS9lTaXkvbg2l7M23Ppu3ltD2etvfT9oTaXlHbQ2p7S23Pqe1FtT2qtnfV
9rTaXlfbA2t7Y23PrO2ltT22uvdO5/783973I/436BpuN+LZp5fCzN/aFPF/
L+3kOKrpxVPSExfrdnNzlzp5NDKe1Jc2nt83/MTbFKFzzx0TBx6SetxP+Dh+
gDTbx4wW7yylzvs6zht6PVl4p/zDXPYrpdbOz4uc7Cq1vOZ73a6wNNuu26FL
HycJm0b9UTn1d6nb0+oDF42TnrAb8Gl1LenHykFHsmWVlsv0IvXRk0Rh0wMj
j/X5UzqsWdzf4yZLXSZmGV6utnTVgka2b94lCLdVy1d83DGpR9ipV3kmSD1t
2xTqW0PqVqHnnLWp8ULHz5Ej3HykYdm7bJoyRTrzZNbY2w2lPo0XflqWSZo8
7fjbmbfjhCc+7D6Z43fpzGuRq0dPlNrmODBiaRNpsF/TwNv5panFFv8W8SxW
WOJZnZw9vKXPb56NuuMi3TXxjdfUFlK7bxEHauSRBsXePeoeHiNcdj1P26xH
pY1quDYfsUB689S16s07Sx2W9a/zl5U0oWq35oUjo4VuuapsaesjnT335ku3
yVLPipsOPGgl3frq5ZWsxaWbjZktrFOihP49f7tS7Io06WT4wMT10hOTch90
GCv1yD5meJ3W0tuns8RnKi61GO854d7LSGHTR+E1F1+SOi1xKlB4jfRogHfH
MUOklrHHy05tLD3d2L18/67fHbOrzo2p2SMNu+EXH5Sd+91T8SGXb12KMErf
jyu2dGekaVf/sn2rL4swbKrtXWt3K9L0UYNMZep2iTDCHJq7338daWq3YOuJ
q/kjDK+qKwZ6lokydT9TacrKO+HGU9eyDrHto0xPN+mYeffKcCPPojHV+k+L
Mk0+OsT3Tcdww+uPerN7/hFlmi3n/qvzcoYbdvcnri9wJ8q0nn/f7SNuhxnJ
bdZUrfEmytRm7R8N66wKM/YuuDetWYlo04xn297e1jPMGJmt51+DG0V/1yXD
+ok/hRm2S4LHuvaPNl02xOnC3IRQ4+hSx1+6zYs2jen/ameuBaFG+2bLh3fd
HW1arlGfB3nzhxrLM3qu2Xgl2rTvp1Jt6xx5YQRXLLqiUUK0qfOCkz3bN3th
NLg8M7d/gRhThxMrg71vhhiuWUIXn6gW892/hw597hxizNw/5G2unjGmHl+C
SzzPEGKM3V5jtv30GNPL5cctHbHhuZFnV5N3uTbGmAZbtbR+Xve5cS7fYaPp
+RjTmwFJTY2rz4zUr/sfWv5TJ/6jbebP86/0f2ZYuzfbuvRLjOnRCQ0rD8j+
zFgyuNuobuVjTYe9yHUzl0ewkep+sEN8m1hT23GvS7T8OdiwvenjMGtwrOmy
HclZVrx4akw4/HXqdNdYU9/EzNvXz31qLHc66ZfqGWvqePDpufI2Tw2vk7sm
d70Qa5r7aaH9eS89MTIc2VIvW0jsdxOq9Eoe/cToWuvaiG3vY03zD9t3t4LV
E8N17E9XFxaK+67fSp/Jlx4b3kkBjZtUjTP9WH9561bTHxuBmQufXdIhztT9
td+tQTaPjdSRXg57R8aZ2t7KnTXL7SCj/e4+5a/OiTMtl//tGh/3IMPzz/J7
7nvEmZbOuSb70pZBhl+bhH41D8R99+dmSaM/PTKC31k97+kXZ+pc9My4r+cf
GcsXd93w6HGcad9heRvMm/7IsH9p8SDHP/PrfxxZM3RxdLNHRuY1M0L6fY4z
fdvOY1SSxSMjJG7zvecF4k3HtKq+eszNh8bI8iOaWZaJN72zJqCh/9aHRvKg
6kfb2cWb1g+bHFN20kMj+EDbZjOMeFPnDz81WtvsoXGzdtsSp7rEm+4aWGH/
4/wPDd8SudqdHhBvGrj3RfmHMYGG19KMz7eMiTfNM+DTuCqXAw2LbW9ijanx
ppE/l2rb1DPQmDAl858P58Wbnt7zxmKBa6BRbk+v/hHu8abrs39O6DMu0Agr
tmrgtxXxpoOPdInK6BBohDx61GPTunjTMXPnZqxlBBrBxbocLrQ53tT5SMGk
izUCjX2z2tZ4uSXeNPNy2/E1qwQaM0OaHb6xLd7UY1SDpJ22+ufaz9F+r/Z3
at9Lew7ac9Oes/ZetPeovXftnGjnSjuH2rnVzrl2L7R7pN077Z5q91qrA1rd
0OqMVpe0OqbVPa1OanVVq8Na3dbqvNYXtD6i9R2tT2l9TeuDWt/U+qzWl7U+
rvV9LSdouULLIVpu0XKOlou0HKXlLi2nablOy4FabtRyppZLtRyr5V4tJ2u5
WsvhWm7Xcr42F2hzhDZ3aHOKNtdoc5A2N2lzljaXaXOcNvdpc6I2V2pzqDa3
anOuNhdrc7Q2d2tzujbXa3sAbW+g7Rm0vYS2x9D2HtqeRNuraHsYbW+j7Xm0
vZC2R9L2TtqeSttraXswbW+m7dm0vZy2x9P2ftqeUNsrantIbW+p7Tm1vai2
R9X2rtqeVtvrantgbW+s7Zm1vbS2x/639+uI+H/+z6E0bzbquiLoTNod2WRJ
uPPQtOtRtn7DF1Zp167N5hHjQ1PS7OYRE3Lv8U67XpvmlN86M+0mNz/TeFC7
tFup85aL6wtL6zy37D/mY7KwqdfY45P9pIELHEb/tk76tsgjr82DpB59a6zx
LyLdvLxuss2DJOG+v+1erFwo9c7ddP6KFtKjCcaOizmkXis3lR/9IFFo8e5F
u+o7pV4lh9bYM0FaziX3lcfNpSOHv9qdmk/qeOzk7HfRCUKLkSE77+yXWvfa
Ftx6sfRyyU2FOvSWBs5JuDG2jjR5c8cakzNIxz6J3hMSHC+sdH3cwt5/SP3y
na0R7Cx1vP3zqYjm0iWPl29JzCW16zpqaN7HcUKHVfPvVvGSRha5cSbnFOnM
aiMzODWW5ln7y4WFOaS2WeoOPPo4VtiojWcnr91Sf8sMGao5SX0PPt5QqKnU
s83GVyMLSW+XuVC+d3yM8EC/JrZ5rktdrxXvv2u7tHRRv+PLZkodb/Zr0LeL
1Ppe2JVnttKu9couWfchWvixR9fe7R9IG21Zvmb7Dql7XJ0+ByZIy+2sWmBw
W+n6yPcvxpf+gXnH39zzJkro0LLAQM+70mVe+x+E7ZS6d7cKSPxFOvildb6I
LlKf+pEWtSpJrcOrOlX+HCm8XcWjW5VAqUWTXaVT9vzAD9N//bRQam/zxqKF
ozRb81VPrRtIYybvOpTS4bu2j5a8L5Y30vDIVHXpp0nfLTe70aFsTyKMkCNP
klw9Ik2Pp/puPb8zwgibcP7Gz4cjTe36Db3f3CXCsH+249qIf76Had3lPWKb
Rxg33ti8a58aadotn8PyfJYRhv8Td59D1lGmQb61p71/HG7sXXyu0p76Uabz
D0decNsbbvR9W935+aAo0xl56znUdgo31n96ur7ywijT7dlObztfP9wIHLrj
qs3eKNPLict7O2T653/fs8qACreiTLfPa/y65b0wI8Psxc0upER91/+wTfim
MCOybu2RPfNFm1au4hPzbXSYUeykzZm3P0eb9p3gELu8eZixeOLy9w9aR5vW
CK689HLhMMPr+Iy91UdEm+YOXZN5ckCoEdY/909550abDo4PXvXo11CjaZtt
pTJ6Rn+30s87PpcKNSz+rNw15Fi0aaTFnHyjw18Yre+Ujcz4KNq0ysYNvT66
vjBsX9lN6ZwSbbqs+oS9hWq/MNrfWrFraa4Y03LbHQoPCAkx/BueGRxfNsb0
QMe7IS02hBilTzjMLdQwxtQzJMuvlzqHGK6n4yYv6Brz3cBW+6bnDTG81q2d
8veYGNPcRvM9P196bnhNfLt5/twY09zHSlSftfC50WvRsLMRHjGmn0c+utm7
5XOj01bPT7/sjjG1rlwyz458zw3b1IvJb3xjTJfZ+tYpee+ZUXVlNwu3GzGm
M7vnCnfZ9cw4N/fu0NhnMaY33dY+bjf+mdG6+ZAmGxNjTKvUf96ybuNnhp3D
2nmnPsSYOmVrMT+o4DPDeuHuLz9ljTU96pwv+4pXwUb+yFpXWhWONQ3oNeRo
Nb9go+qoic9WlI41nXnz2ASH7cHGqkazN5erHGvatf1Su3Vzg408t/60+loz
1jR4e46zWUcFG/6NwosWbxhreqBd/+MHOwcbDmVT7s39p2/8x2ybaq9yaxJs
dKo0PzShRayp9fzZQ4xawcaEF/WCr7WONfUd3nPynsrBRtPZRf883C72u0tP
WCSW1T/Xfo72e7W/U/te2nPQnpv2nLX3or1H7b1r50Q7V9o51M6tds61e6Hd
I+3eafdUu9daHdDqhlZntLqk1TGt7ml1UqurWh3W6rZW57W+oPURte8ofUrr
a1of1Pqm1me1vqz1ca3vazlByxVaDtFyi5ZztFyk5Sgtd2k5Tct1Wg7UcqOW
M7VcquVYLfdqOVnL1VoO13K7lvO1uUCbI7S5Q5tTtLlGm4O0uUmbs7S5TJvj
tLlPmxO1uVKbQ7W5VZtztblYm6O1uVub07W5XtsDaHsDbc+g7SW0PYa299D2
JNpeRd3DKHsbbc+j7YW0PZK2d9L2VNpeS9uDaXszbc+m7eXSu99L7/4wvfvJ
9O4/07tfTe/+Nr374fTun//tfTki4n+bkT3b1rxw/6UweOmlW+/3Sx0XzSiy
dro02bNtkdOdpd6VGtU9U1jq1rbQ7hFxKcKjp8/P2b5HGpmyIOf1UT+waEDz
OxV/YHOb2Q8Sk4V1mn8JbHxc6vXo4oxuS6SVbLI2PT9M6uWzrtSX+tLNV1z2
/pVXuvxJb/uYyCTh5q4d7je98AO3XkjpvE7qXffdqzlTpb4lZ+ee111adfzs
rgd/lu7bW/i6dWZprzxzK1Z4nij8ctb+j6xHpA3svvYYO1/qPCri1IUu0vXj
rJ7ctZHuu/X1+ZSoBGHVJl2zT9wj9euR3OGhszSs0eyFZVpJ39aasrhGQanH
bpte5aPihZW2f170/qg0c64mQ74ukCaHRmUb3Efqv2PDxHe1pB4Xvp4pZyG1
3xg0KyUyThjgdLDh6XPSVcnfBjlukA5eH5ClrYs087cOiXc7SPft8i45oqz0
Y9jLIj5/xwod3Te86HVD6jfoy4vsW6RWeaIGjh8lvd391XnbRlJnuw3dfrWQ
ur4vltk6Jkbo3jbAetUFacDObxF/rJOWTr724u0kabDPh75W7aTLPg9sWKS0
dMmszg6FP0UL3c73LpnlkdShetNsBw9L839+HpjkLu1/0rPAkUHSE8E3SgQ2
+YEbfJ62Kyf18Yw6tCaLNP/6ex2dwqKEM40JAbMuSJds31a29Vbp5ouxFTJO
l44fvLikTT9pg3xrwj/Vl44f3WPYlULSfYcPFb2ZGin0vbHQOfaO9HZf29Hl
9kl7pWRuWWyxNLDX0N8vDZVuTTzulNpearlkTxPvBt+NtMtc9nOFSCN5+YLF
r3t916by2Rqrv0QY/sVWNbCZHGna62mFn3sERRi7Mpya7fjP7/+Pub4ltnx/
OMJw3f9h8iLPSFO/uTl72q+MMD4Ut60eczLSNGdQ69O24yMM52Xdk1rcizR1
qLrQxrpdhPE0+7EZATGRpvVfT2537acIo2mb6r6dvkSali58enSuLBFG/fEv
Ph3MG2W6d0BN9w/x4Ubr2k97z6oQZWpl1+Cz/5Vwo/79dl9S6kSZVmxdYOEm
73CjcYFs5+50ijL9KcZleIel4Ua7n4Y6zxgYZVrgetKDdlPCDYcvj58Xnhhl
mjnL2VqhjuFGjE/mpMwLoky9XD7afGwUbjj7zC50ZU2UqcO7luFPy4Ubg9c1
nTFoR5Tpq1Klbr7KE250ylSv5XPvKNPln/dvqv0pzBj54Pwv745HffdKeEDu
l2GGq3VBo4ZflGnTJ8PLnAgNMzLsbXwm1/UoU9cF5UalBP7zv687pm7MvShT
vyoRB2yvhxk5bVxS2j2KMp38sLN1Ab8wY9PMLsbt51Gmxa7n2HHnWJhx4u/S
yZteRJmmeHQuUexImPHU60msS3iU6emsDf+4461/rv0c7fdqf6f2vdTnoDw3
7Tlr70V7j9p7186Jdq60c6idW+2cq/dCuUfavdPuqXavtTqg1Q2tzmh1Satj
Wt3T6qRWV7U6rNVtrc5rfUHrI2rfUfqU1te0Pqj1Ta3Pan1Z6+Na39dygpYr
tByi5RYt52i5SMtRWu7ScpqW67QcqOVGLWdquVTLsVru1XKylqu1HK7ldi3n
a3OBNkdoc4c2p2hzjTYHaXOTNmdpc5k2x2lznzYnanOlNodqc6s252pzsTZH
a3O3Nqdrc722B9D2BtqeQd1LKHsMbe+h7kmUvYq2h9H2NuqeR9kLaXskbe+k
7am0vZa2B9P2Ztqe7d/e/yEiIv6bav1R0+Hg0WEv16fdbG3zdj3WN+3WOX3q
5+RiaXdwaJc5b5NT0mzAwY+Til1JuwNigsZc3pF2hwXHO9acl3ZnNnepcnOg
tM7AuBZ5+0g71c7m0bG+NKDel5VTikg7NfDxvfcqWThg5KI/Lp2TWtx8lfXe
+h9Y6mXlHP2lLayTm3euKG16tVOt5CdJwk7eY36fsk1qN65CnmJDpefuFBjX
rZJ0fcM1Rr3PiUL/a+PXvHooTbgZNLGsj3RV5eKTurtLS7/3/6PMaGmeVg2i
dhhS2+2Os86Ukb61XzE024cE4foLvTYteiq1HX/oSbaD0nNbGxUvtULqWmyF
4TdKanfkz03HWkiDeuW8095aGjMiawm7xHhh63v+6675ScPskjd0WixtYeGw
8aujNLhecT+fqtKZQ/OND38fJ7Q/EjPnr7vSxpm2rRu1R+p3avLTmW7SzFse
Zp/cW5phXpefMtSQ+s4dlVwtl9T2QLSNbVyssMS0sl3eXpBW2WLTKWq7NLW3
Q+fB06XOG8/F+/aW+hXZEuxUXdqxwaBno/JJW2T3Hr7jZYywv/+GL1UCpTdj
MxbvfUxaOiixYsQqqf3kTDfOTJSW6PrXgZAO0jD3qkHbfpYGZj+6OyiHNIP3
paaTw6KFMw3bYw/OSj1yHXxjs1l6eUOlWfcmSh3+ePgqsou0ztO8Hu51pKnN
IiPHFpPmT349r3wmqX28de2Q6Cjh56K1Ns+4I7Wa23dy3iPSjnetb+7cLA3c
9LBvj4XSOp2D8vuOkwZfynNybB9p5nJj7lm3lX6+3yDPhBrSzZGTHx0sKfX0
6NwuT25phizr3+b+GClMPeqQ2i1O2t+306HmT6UBvg/dF1yXVumTO3DNOWmd
T7MePjkgtfaoOPbzTunnvK+6H90g7ZUyckKxVdLnj7MvHbBEapl3bvHq7tIl
SUuKnJ0n9WtZ2jlxttRz1ejpeWemXe3naL9X+zu176U9B+25ac9Zey/ae9Te
u3ZOtHOlnUPt3GrnXLsX2j3S7p12T7V7rdUBrW5odUarS1od0+qeVie1uqrV
Ya1ua3Ve6wtaH9H6jtantL6m9UGtb2p9VuvLWh/X+r6WE7RcoeUQLbdoOUfL
RVqO0nKXltO0XKflQC03ajlTy6VajtVyr5aTtVyt5XAtt2s5X5sLtDlCmzu0
OUWba7Q5SJubtDlLm8u0OU6b+7Q5UZsrtTlUm1u1OVebi7U5Wpu71Tldmeu1
PYC2N0jv/iG9+4307k/Su59J7/4nvful9O6v0rsf+7f3eYiIiIhp9cSoC3ZW
b18Knd1qtHV8KQ35u8W7xxelvW6ecT68WeqyOXRavklSz4h7hZe1knr/bp+z
TAFp4LF1XzrHpggz5E99VeqAtFKqW/sHE6V5Djc7Nd1eGuPb0fjrdbLwRL1a
YZsvSbc9sK99d5P03KaTV145S4PL98yepZN05Ixau45VkSYUG9Knbk5phk/H
etaMTxLmH97odN5rUu+XWV6t+lPqUN01T7Ol0tQuXm7rJ0ndW3aa8XtnqX3F
Y0kjKkiTD4+cuSG71KrYkJuFIxOF9j2eb2pzWhrTLjZ+6nLp5sy5k9cOllby
zT7r5xpSX6fMOc9mlA4rsTLDkIAEoUXXzgNjt0qX3GzUM9FFmu3OwCMBnaUW
Fb3GzK0k/Ri2I9vFr/FC56+nxr4JlYa97No55Iw0ZtCmEds2SFPbHLSaPVXq
1LHmiGsO0i+nis+fWE/qPswyrrWVNM+D8pnyp8YJbXa4jBr4QNpg8JAMCcel
ywuOuDRitfRVlbvdGjtLAz1ebWnaWXr0fJVNtX6Wbu5SrLZdFqlbiSSbhuGx
ws9TxrRcflbqkvXOyZSN0qPzI5xCJks/Vpy2r2hX6c3mmzbWqCr1uly6h1d+
6VnfeTlrvo0RBo9YvTvxhdRz3T6LRf5Sp8arcrbwkXoW/vX6qfXS5z1Deyxx
kza1CM/1aqzUx7btqsN9pAHrLaaWbyl9dTMm96Jq0iWedRf5WkvtXyQHtM0j
XVL2xJdPb6KFqa19VleMlY5s3GJ+7+dSf4c/cua6IS3917Oexc9LZ6+w3Fn5
qNRxSt5uZbykjSzOxrTcKvXw7nhsi4c0odC7WpGLpdb9Hq6eNl/aMWRDw+Iz
pe61q25oP016dvmlv2f8kna1n6P9Xu3v1L6X9hy056Y9Z+29aO9Re+/aOdHO
lXYO1XOrnHPtXmj3SLt32j3V7rVWB9S6odQZrS5pdUyre1qd1OqqVoe1uq3V
ea0vaH1E6ztan9L6mtYHtb6p9VmtL2t9XOv7Wk7QcoWWQ7TcouUcLRdpOUrL
XVpO03KdlgO13KjlTC2XajlWy71aTtZytZbDtdyu5XxtLtDmCG3u0OYUba7R
5iBtbtLmLG0u0+Y4be7T5kRtrtTmUG1u1eZcbS7W5mht7tbmdG2u1/YA//Z+
AhERERH/O9Xyp2Y5y1NVdt1Iu5UsC6xvtzrtVg171nNHn7Tb61v3z0NLpN0B
zVYkprxKSbOti/yyvMaNtOuyoEXdC/vSbp7MOx3Orky7dvmn3s88Ne3e2dI4
h3tPqWun4rt+aiK1zPa8Q6kS0nLzZ2Sb9DZZGNxzhveUQKnnpiYvC/8uPffw
9Pk2U6VNW90IblVLGrl+Uf6cGaXDKl8+EXc6SZjw108FDHfpvpMbMh5ykPb6
PWfrYeWkjn12l+jwNVEY87Xg2i0hUqcjO5pm9JO6uB9ffWebdGRwpemDF0qD
501t7jJM2j524MLxHaSOuRwXOFaS7mrWfvPmYtLSFnFbgt4mCK19s+/t91y6
LammS+FTUqc/a8f38pC6uvzWefcU6ZzmlUPXd5cG2hVOKVNdmv/U3JQ+2aWp
JXfU6x8RL/Qt2eKXXKelHm4+K31XSu3zWW1rNEbqEzJogHdrqUfKEuPFT9JA
L/dWz7/FCS0XlH16OUIa0/mdt8Vlqb2//aNL3tLGqy0tMq2QunQt0abyHGmd
VVunLxksTe3/6uq09tLSH77WfVFdOnb4prbFS0kDb3eKOZhTmjSigPept7FC
yyXu0/tGS8P8Jq4+FCB1d+/TtNRF6dgeIQ1sDksDGv01v+EOaYv+FSslekj3
2TbedNtN+jzD8QNfpkjtEuoXDBsujQwPHzR9gNS/8d49y7pLHe+fmVixg9Q3
qWjQ9pZS/8dByyc1kX6+P/J+jfrSciPsJ8yoK+1/7vr1PbXSrvZztN+r/Z3a
99Keg/bctOesvRftPWrvXTsn2rnSzqF2brVzrt0L7R5p9067p9q91uqAVje0
OqPVJa2OaXVPq5NaXdXqsFa3tTqv9QWtj2h9R+tTWl/T+qDWN7U+q/VlrY9r
fV/LCVqu0HKIllu0nKPlIi1HablLy2lartNyoJYbtZyp5VItx2q5V8vJWq7W
criW27Wcr80F6Z0v0ju/pHc+Su/8ld75Lr3zY3rn0/TOv+mdr9M7v//b+wZE
RERERPzvd/lfM27ve/xSaB2ZurHnoR84d1BSpflSO+9Dy/cMlGa2ed1lY3Vp
SNPE98czS+e0Ch3a/26K0Mb9dLGCm6XnbHf/eWqwtNOWAscLlpXmGeK2e8HL
ZKH/lOaHrpyWBnu0cMixRRq0sUqLS1Okjg9TeuZ0kMZ8a7d1eV2p/yHn0cet
pCcyx3du+yVJaHXN3SUwROpWzenUjavSy58/Zjp4UPplxe8Z3Nb/wL8nv649
T5o6cv+x/cOkdzbNvJirmdQrh13xWaV+YEfPVkszSn1aXu51IyZRmDovtHG1
S9IG9tfPH/5dahFbInzFDGnQ5smZxztIXYaeG/ClqrS09c7EW7mlX1ysY+/G
JQiD+vm3PXpJmtnD6lL17dJOAzss7vGr1PX0pM8LRkr9slTdldJBmtwvoODZ
WlKractrzywhvbOy2tb6maVLNo6uUyclXhiUOXMb5xCpzbuAc6tvSu2KXk+Y
fVzaeuru4dN2SEs/yf212BrpK/eLPivmSYNWVXm/xUl6bvMGY+8QaaXmmTs3
6C7dVTjleZG20oR7G3pfNqSlyz7PYllDGrDj5KllFaQz9/o/iC0uzd/46caF
haS7AhIHlskjPfpu5bCMOaT+jtbHX2WWJh/OkKViRmn+Oxmydf8Sl2a1n6P9
Xu3v1L6X9hy056Y9Z+29aO9Re+/aOdHOlXYOtXOrnXPtXmj3SLt32j3V7rVW
B7S6odUZrS5pdUyre1qd1OqqVoe1uq3Vea0vaH1E6ztan9L6mtYHtb6p9Vmt
L2t9XOv7Wk7QcoWWQ7TcouUcLRdpOUrLXVpO03KdlgO13KjlTC2XajlWy71a
TtZytZbDtdyu5fx/e/5ARERERETE/7/U5lNNF6c7497+nnYbTD8weMnYtBuY
5aFdQfu063q/iZH1W0qa7fXyoF3ex2nX6crQM/POpN0vL89lzOKZdj9OOjI6
cmnaHft4y76nzlKHQq+f1BwjXeW1MSh7N6nb0Spvf6ondTm0qcQca+nb5PKB
wZ+ShYEb/Wb0fSb1KBBuHbTvB/bs1ipmmdTb6dSibn2lqbG+Z6/Wln4pU9D/
86ckoW+N4ncn3pVO2Ntta62tUsv4MauipksdXzjNHt1bWvW3Oqsb20knLPi7
gk1hqfemX3IU+pAoDLCecfpgnNTyRaaP9QKkq6r+XrbgGanf57xVvu7+gZeG
9OixXjpn5fEdzVylDcJjE/K7SOdsvFeo9FBpyMKB03/pLf24LuXJ1tZSrx23
OpZoIp3Z1fXbqspSvzbzPgSWlXoVzvL6fkGpq8XSHBmzSpMPv7Va8yZBaLum
oNXqFOmAqF6Xw0Klr/yS5nYMlG7LEhF94ro0wz2Pln0uSj2Gelm8OS1d3q7N
mbDj0s21sjofPiQNfjJ0UfgB6Zfq7R4X25d2tZ+j/V7t79S+l/YctOemPWft
vWjvUXvv2jnRzpV2DrVzq51z7V5o90i7d+o9Ve61Vge0uqHVGa0uaXVMq3ta
ndTqqlaHtbqt1XmtL2h9ROs7Wp/S+prWB7W+qfVZrS9rfVzr+1pO0HJFevNJ
evNPevNVevNbevNhevNnevNtevNzevP5vz1PICIiIiIiIuJ/j8EbcxdKSX4p
9N0bffFjiHT5xIgDzU9IJwwaWPSxhzQmvk5ctinSYT5vsrTuJm0wv9Cf/SpL
rW5+i1iZXdrpeI2LR8JShHN+3pD15Enprpqn9+5eIj1a+vImix7SOccKlHCs
LG0a4JFlaQap++Jju76FJAtPDN317MMRabYmq586eEob/7p5cdYFUkerbNmH
TZCOTT2/bU1PacLcZpazmknHLlhVdkF16cgAq8OnbaSDS24z/soltTxbYuea
r0lCv93xNtlSpNY7QzvZhErnrJh4ePJDabmy85Y+uCG9nDFkbtaz0i89Vg0M
2S9t0P9t+cjtUqvlw9zLrJG+rb1t/tzfpJWGZtvcZY7UsfviEQWmSFMj7mff
P1q6vG6tAbUHSlNnHOn5po+0fY9brn07SVs0HF+jVTtp44Gp1Zq2ls70H/tu
cHPpibHXc6820q72c7Tfq/2d2vfSnoP63JTnrL0X7T1q7107J9q50s6hdm61
c67dC+0eafdOu6favdbqgFY31Dqj1CWtjml1T6uTWl3V6rBWt7U6r/UFrY9o
fUfrU1pf0/qg1je1Pqv1Za2Pa31fywn/dn5BRERERERERMT/N9T2S5o+A3J+
q+2fdvP0+OJ6bmPaDX6/daf7hLT7xXAb2cRIu7buS3s3sky72aY8CS7/JiXN
dhoV6r8nMO16Nr9zJdPFtHv58v2p23zSbtMuPRJ/3Zp222dt2qbY6rT7ZeeF
vb5u0mHn9q0vP1vqH12qzaIpUo98l87OHiG1P1p/mGcv6bYvRXrcbSMNm93+
2N+NpMvHTFjpWkU6duDrXYdKSgPXHBthl09qUTehSOns0o+nbqYmv08Wrrrf
+vPoZOnm11OqrI+WZvhk8aR1qDRg2PDz9Z5I/dZ3X/Q2QFp6bcDMhbelA+pV
W3XsRtrVfo72e7W/U/te2nPQnpv2nLX3or1H7b1r50Q7V9o51M6tds61e6Hd
I+3epff+prc+pLf+pLe+pbd+prc+p7f+p7e/pLd/pbc/prf/pre//9t5BBER
EREREREREfF/OqBS99NVXr8UHi16/qf2sVKn7YXmBz6QVopbuLLTOemSbFHf
qu2VJpRv4ZR/ndTj0byvK9yk7V16+rV3kZ6I+XQ3eJS00r2J0xb3k1p36+LQ
u5M0/28RhR2aS21iXq9Z2VBabnWPittrSD9Onrn3YBWp//bk5qvLS6sWqnev
cVnpqsUL+iWUSrvaz9F+r/Z3at9Lew7ac9Oes/ZetPeovXftnGjnSjuH2rnV
zrl2L7R79G/fb0RERERERERERETEf1Ntf65p5bOn0InQtDvhxcRujtfSruWz
9+/3HUm7TpH1G4RuS7uDR1hbea9Mu8Meegw6sDDt1mmc3Gr7nLS7+UjdB+1n
pd30/vz0/v3pfT7pff7pfb/pPT/pPZ/pPf//9n1FRERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERE/L/h/wLDXMWA
     "], {{0, 0}, {282, 280}}, {
     0, 1}], {Axes -> False, Frame -> True, FrameLabel -> {None, None}, 
     FrameStyle -> Automatic, FrameTicks -> {{{{279.5, 
          FormBox[
           RowBox[{"-", "141.624`"}], TraditionalForm]}, {209.5, 
          FormBox[
           RowBox[{"-", "70.812`"}], TraditionalForm]}, {139.5, 
          FormBox["0", TraditionalForm]}, {69.5, 
          FormBox["70.812`", TraditionalForm]}, {-0.5, 
          FormBox["141.624`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "141.624`"}], TraditionalForm]}, {70.5, 
          FormBox[
           RowBox[{"-", "70.812`"}], TraditionalForm]}, {140.5, 
          FormBox["0", TraditionalForm]}, {210.5, 
          FormBox["70.812`", TraditionalForm]}, {280.5, 
          FormBox["141.624`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 70.5, 140.5, 210.5, 280.5}, {0.5, 70.5, 140.5, 210.5,
       280.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
       TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -138.26735856782807`}, 
                    Offset[{4., 0}, {7.5, -138.26735856782807`}]}, {{
                    7.5, -5.616121739230721}, 
                    Offset[{4., 0}, {7.5, -5.616121739230721}]}, {{7.5, 
                    143.6165196929411}, 
                    Offset[{4., 0}, {7.5, 143.6165196929411}]}, {{7.5, 
                    276.26775652153856`}, 
                    Offset[{4., 0}, {7.5, 276.26775652153856`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -138.26735856782807`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"1.7\"", 1.7000000000000002`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -5.616121739230721}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.6\"", 2.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 143.6165196929411}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"3.4\"", 3.4000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 276.26775652153856`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6297675142888451`", ",", "0.9`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.7451164158789298`", ",", "1.7000000000000002`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8748839301677749`", ",", "2.6`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9902328317578596`", ",", "3.4000000000000004`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7576720557274957`*^9, 3.7576721292201605`*^9, {3.7576723141476855`*^9, 
   3.7576723329134703`*^9}, 3.7576724505142345`*^9, 3.7576727564265985`*^9, {
   3.757672861560854*^9, 3.7576728788581305`*^9}, {3.757672915316574*^9, 
   3.757672918643919*^9}, 3.7576729659824295`*^9, {3.757912154515978*^9, 
   3.75791218511029*^9}, {3.757921480602399*^9, 3.757921493958638*^9}, 
   3.75792154140067*^9, 3.7579215938773108`*^9, 3.7584308403021417`*^9, 
   3.7584389878143835`*^9, 3.7584419896438413`*^9, 3.7607801371630836`*^9, 
   3.7607865007714543`*^9, 3.7607869511232123`*^9, 
   3.760788425323146*^9},ExpressionUUID->"ab403e28-f83e-4ada-9789-\
bb7f246f57f0"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 457, 7, 101, "Title", "ExpressionUUID" -> \
"5040d5b2-880b-45cc-a231-0e6954975e21",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1040, 31, 932, 17, 47, "Input", "ExpressionUUID" -> \
"9e617440-68c8-4c7d-87fe-cd9d2efca97f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1975, 50, 450, 7, 56, "Subtitle", "ExpressionUUID" -> \
"e25394e1-9c35-4f6a-8495-86623345b352",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2428, 59, 557, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"0fcc0597-25c9-4843-be60-e01aeb713b6b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2988, 70, 1773, 36, 66, "Input", "ExpressionUUID" -> \
"100d6a29-6bda-47fc-8ee9-d0d4d8524fab",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4764, 108, 491, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"a26e5cb8-621f-473e-9817-1af4aa08599c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[5258, 118, 2909, 66, 200, "Input", "ExpressionUUID" -> \
"10ceb89e-20df-48f1-a321-ff7ea6718edd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8170, 186, 542, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"d7ba3c85-2ecc-4633-b74f-86fb15d632b7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8715, 196, 1586, 32, 87, "Input", "ExpressionUUID" -> \
"2132100d-0f03-4edf-8750-0a4cfeec3cf8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10304, 230, 499, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"a1f5bcd3-ad1c-4608-8d2e-184dd5d3b14f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10806, 240, 6861, 183, 632, "Input", "ExpressionUUID" -> \
"064c7d03-91ae-4e2d-a5a1-1e6c1a61dace",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[17670, 425, 541, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"ba1976cb-53a4-4ebe-af03-95fcd4651050",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[18214, 435, 3041, 74, 497, "Input", "ExpressionUUID" -> \
"98de9a1d-6124-4724-8226-daf84a86a835",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21258, 511, 604, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"36014964-da04-4894-82b2-12a8ee0727f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21865, 522, 5582, 133, 794, "Input", "ExpressionUUID" -> \
"01047cc0-f16a-427d-b7ce-0c29435e4e64",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[27450, 657, 726, 11, 33, "Subsubtitle", "ExpressionUUID" -> \
"21ae29e2-a91d-4224-a123-209e3951a365",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[28179, 670, 5232, 118, 366, "Input", "ExpressionUUID" -> \
"b438da06-2c58-4df8-acea-37ef3435337f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[33414, 790, 965, 14, 33, "Subsubtitle", "ExpressionUUID" -> \
"f292807d-09b1-495c-8b9c-9b6b00df497f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[34382, 806, 1367, 35, 47, "Input", "ExpressionUUID" -> \
"72bf3732-c3a2-4f97-80cb-c1e43b95ecdf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[35752, 843, 1052, 17, 33, "Subsubtitle", "ExpressionUUID" -> \
"b0004f69-f221-4be9-a8c1-e15c829973e9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[36807, 862, 2409, 52, 385, "Input", "ExpressionUUID" -> \
"88e4f2ea-e727-4648-a92f-4e85f1dbd17f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[39219, 916, 854, 13, 33, "Subsubtitle", "ExpressionUUID" -> \
"394e299f-9abe-4d8b-a9b5-36a2d37636ef",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[40076, 931, 10499, 241, 1075, "Input", "ExpressionUUID" -> \
"de53eaa8-5f9f-4f21-90ff-43a6ff9125cd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[50578, 1174, 547, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"1a670f20-a3b6-450a-ad8b-342673b49f03",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[51128, 1184, 1737, 41, 236, "Input", "ExpressionUUID" -> \
"22d0e063-4a2f-4302-8b76-c318fb3d02c1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[52868, 1227, 506, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"573585d3-2ab7-4012-9bde-ee091976122e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[53377, 1237, 1470, 34, 158, "Input", "ExpressionUUID" -> \
"dbe4cd76-4469-4ba0-8820-019c7d484c1a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[54850, 1273, 1773, 44, 140, "Input", "ExpressionUUID" -> \
"a97292b3-e790-4763-b444-aa3c9e960ac0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[56626, 1319, 558, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"5f65bd77-40eb-4e12-b562-42a327fbbec3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[57187, 1329, 1256, 31, 84, "Input", "ExpressionUUID" -> \
"38a1c404-a80a-4f37-b880-ecc92f0fda32",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[58446, 1362, 5214, 79, 36, "Print", "ExpressionUUID" -> \
"e9bef392-407e-432b-af11-9bb1f5d74f55",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[63663, 1443, 458, 7, 33, "Subsubtitle", "ExpressionUUID" -> \
"c9835767-2b4a-4bf0-9d05-9ee1c3d7ac31",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[64124, 1452, 9440, 225, 1150, "Input", "ExpressionUUID" -> \
"d92d7a12-ebcc-4f18-83e0-f681f54b8eec",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[73579, 1680, 2526, 43, 72, "Print", "ExpressionUUID" -> \
"7acd5b0d-0ae8-496a-9fdf-ccf2282cbe51"],
Cell[76108, 1725, 49819, 894, 602, "Output", "ExpressionUUID" -> \
"fc81f250-65a2-4570-9f17-d88cba70c83b"],
Cell[125930, 2621, 21123, 366, 327, "Output", "ExpressionUUID" -> \
"3c9b9d5c-57b4-4c61-881b-7d357ad7eb70"],
Cell[147056, 2989, 19675, 425, 449, "Output", "ExpressionUUID" -> \
"ee50af8b-2fba-40f3-a164-485648611a22"],
Cell[166734, 3416, 3393, 74, 374, "Output", "ExpressionUUID" -> \
"9fc0bd92-05f0-41e9-bbd4-3ef6c377b532"],
Cell[CellGroupData[{
Cell[170152, 3494, 7175, 147, 43, InheritFromParent, "ExpressionUUID" -> \
"a7769b9f-372c-4fea-9038-cf2a26ffc08b"],
Cell[177330, 3643, 13500, 277, 602, "Output", "ExpressionUUID" -> \
"5a580cb9-eadf-415d-9d10-5abecc4e0ba0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190867, 3925, 519, 8, 33, "Subsubtitle", "ExpressionUUID" -> \
"feb92d43-f673-4dd7-9b42-b50ab362b68f"],
Cell[CellGroupData[{
Cell[191411, 3937, 2002, 50, 252, "Input", "ExpressionUUID" -> \
"b0245563-8792-413f-a4c1-ff322b233949"],
Cell[193416, 3989, 569, 11, 21, "Message", "ExpressionUUID" -> \
"fb0ad19e-9ca9-4cc1-a861-3d75f799a05a"],
Cell[193988, 4002, 458, 8, 30, "Output", "ExpressionUUID" -> \
"9ec8d9d8-1240-42dd-91fe-ab8cfb7424ba"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194495, 4016, 568, 9, 33, "Subsubtitle", "ExpressionUUID" -> \
"190e1697-5378-40fd-b7b7-68e948097639"],
Cell[CellGroupData[{
Cell[195088, 4029, 6756, 170, 758, "Input", "ExpressionUUID" -> \
"af6ea415-d276-4505-81d8-a9c6f689f1a0"],
Cell[201847, 4201, 141682, 2385, 602, "Output", "ExpressionUUID" -> \
"ab403e28-f83e-4ada-9789-bb7f246f57f0"]
}, Open  ]]
}, Open  ]]
}
]
*)

